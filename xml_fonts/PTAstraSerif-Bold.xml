<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.10">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name=".null"/>
    <GlyphID id="2" name="nonmarkingreturn"/>
    <GlyphID id="3" name="space"/>
    <GlyphID id="4" name="exclam"/>
    <GlyphID id="5" name="quotedbl"/>
    <GlyphID id="6" name="numbersign"/>
    <GlyphID id="7" name="dollar"/>
    <GlyphID id="8" name="percent"/>
    <GlyphID id="9" name="ampersand"/>
    <GlyphID id="10" name="quotesingle"/>
    <GlyphID id="11" name="parenleft"/>
    <GlyphID id="12" name="parenright"/>
    <GlyphID id="13" name="asterisk"/>
    <GlyphID id="14" name="plus"/>
    <GlyphID id="15" name="comma"/>
    <GlyphID id="16" name="hyphen"/>
    <GlyphID id="17" name="period"/>
    <GlyphID id="18" name="slash"/>
    <GlyphID id="19" name="zero"/>
    <GlyphID id="20" name="one"/>
    <GlyphID id="21" name="two"/>
    <GlyphID id="22" name="three"/>
    <GlyphID id="23" name="four"/>
    <GlyphID id="24" name="five"/>
    <GlyphID id="25" name="six"/>
    <GlyphID id="26" name="seven"/>
    <GlyphID id="27" name="eight"/>
    <GlyphID id="28" name="nine"/>
    <GlyphID id="29" name="colon"/>
    <GlyphID id="30" name="semicolon"/>
    <GlyphID id="31" name="less"/>
    <GlyphID id="32" name="equal"/>
    <GlyphID id="33" name="greater"/>
    <GlyphID id="34" name="question"/>
    <GlyphID id="35" name="at"/>
    <GlyphID id="36" name="A"/>
    <GlyphID id="37" name="B"/>
    <GlyphID id="38" name="C"/>
    <GlyphID id="39" name="D"/>
    <GlyphID id="40" name="E"/>
    <GlyphID id="41" name="F"/>
    <GlyphID id="42" name="G"/>
    <GlyphID id="43" name="H"/>
    <GlyphID id="44" name="I"/>
    <GlyphID id="45" name="J"/>
    <GlyphID id="46" name="K"/>
    <GlyphID id="47" name="L"/>
    <GlyphID id="48" name="M"/>
    <GlyphID id="49" name="N"/>
    <GlyphID id="50" name="O"/>
    <GlyphID id="51" name="P"/>
    <GlyphID id="52" name="Q"/>
    <GlyphID id="53" name="R"/>
    <GlyphID id="54" name="S"/>
    <GlyphID id="55" name="T"/>
    <GlyphID id="56" name="U"/>
    <GlyphID id="57" name="V"/>
    <GlyphID id="58" name="W"/>
    <GlyphID id="59" name="X"/>
    <GlyphID id="60" name="Y"/>
    <GlyphID id="61" name="Z"/>
    <GlyphID id="62" name="bracketleft"/>
    <GlyphID id="63" name="backslash"/>
    <GlyphID id="64" name="bracketright"/>
    <GlyphID id="65" name="asciicircum"/>
    <GlyphID id="66" name="underscore"/>
    <GlyphID id="67" name="grave"/>
    <GlyphID id="68" name="a"/>
    <GlyphID id="69" name="b"/>
    <GlyphID id="70" name="c"/>
    <GlyphID id="71" name="d"/>
    <GlyphID id="72" name="e"/>
    <GlyphID id="73" name="f"/>
    <GlyphID id="74" name="g"/>
    <GlyphID id="75" name="h"/>
    <GlyphID id="76" name="i"/>
    <GlyphID id="77" name="j"/>
    <GlyphID id="78" name="k"/>
    <GlyphID id="79" name="l"/>
    <GlyphID id="80" name="m"/>
    <GlyphID id="81" name="n"/>
    <GlyphID id="82" name="o"/>
    <GlyphID id="83" name="p"/>
    <GlyphID id="84" name="q"/>
    <GlyphID id="85" name="r"/>
    <GlyphID id="86" name="s"/>
    <GlyphID id="87" name="t"/>
    <GlyphID id="88" name="u"/>
    <GlyphID id="89" name="v"/>
    <GlyphID id="90" name="w"/>
    <GlyphID id="91" name="x"/>
    <GlyphID id="92" name="y"/>
    <GlyphID id="93" name="z"/>
    <GlyphID id="94" name="braceleft"/>
    <GlyphID id="95" name="bar"/>
    <GlyphID id="96" name="braceright"/>
    <GlyphID id="97" name="asciitilde"/>
    <GlyphID id="98" name="exclamdown"/>
    <GlyphID id="99" name="cent"/>
    <GlyphID id="100" name="sterling"/>
    <GlyphID id="101" name="currency"/>
    <GlyphID id="102" name="yen"/>
    <GlyphID id="103" name="brokenbar"/>
    <GlyphID id="104" name="section"/>
    <GlyphID id="105" name="dieresis"/>
    <GlyphID id="106" name="copyright"/>
    <GlyphID id="107" name="ordfeminine"/>
    <GlyphID id="108" name="guillemotleft"/>
    <GlyphID id="109" name="logicalnot"/>
    <GlyphID id="110" name="registered"/>
    <GlyphID id="111" name="macron"/>
    <GlyphID id="112" name="degree"/>
    <GlyphID id="113" name="plusminus"/>
    <GlyphID id="114" name="twosuperior"/>
    <GlyphID id="115" name="threesuperior"/>
    <GlyphID id="116" name="acute"/>
    <GlyphID id="117" name="mu"/>
    <GlyphID id="118" name="paragraph"/>
    <GlyphID id="119" name="periodcentered"/>
    <GlyphID id="120" name="cedilla"/>
    <GlyphID id="121" name="onesuperior"/>
    <GlyphID id="122" name="ordmasculine"/>
    <GlyphID id="123" name="guillemotright"/>
    <GlyphID id="124" name="onequarter"/>
    <GlyphID id="125" name="onehalf"/>
    <GlyphID id="126" name="threequarters"/>
    <GlyphID id="127" name="questiondown"/>
    <GlyphID id="128" name="Agrave"/>
    <GlyphID id="129" name="Aacute"/>
    <GlyphID id="130" name="Acircumflex"/>
    <GlyphID id="131" name="Atilde"/>
    <GlyphID id="132" name="Adieresis"/>
    <GlyphID id="133" name="Aring"/>
    <GlyphID id="134" name="AE"/>
    <GlyphID id="135" name="Ccedilla"/>
    <GlyphID id="136" name="Egrave"/>
    <GlyphID id="137" name="Eacute"/>
    <GlyphID id="138" name="Ecircumflex"/>
    <GlyphID id="139" name="Edieresis"/>
    <GlyphID id="140" name="Igrave"/>
    <GlyphID id="141" name="Iacute"/>
    <GlyphID id="142" name="Icircumflex"/>
    <GlyphID id="143" name="Idieresis"/>
    <GlyphID id="144" name="Eth"/>
    <GlyphID id="145" name="Ntilde"/>
    <GlyphID id="146" name="Ograve"/>
    <GlyphID id="147" name="Oacute"/>
    <GlyphID id="148" name="Ocircumflex"/>
    <GlyphID id="149" name="Otilde"/>
    <GlyphID id="150" name="Odieresis"/>
    <GlyphID id="151" name="multiply"/>
    <GlyphID id="152" name="Oslash"/>
    <GlyphID id="153" name="Ugrave"/>
    <GlyphID id="154" name="Uacute"/>
    <GlyphID id="155" name="Ucircumflex"/>
    <GlyphID id="156" name="Udieresis"/>
    <GlyphID id="157" name="Yacute"/>
    <GlyphID id="158" name="Thorn"/>
    <GlyphID id="159" name="germandbls"/>
    <GlyphID id="160" name="agrave"/>
    <GlyphID id="161" name="aacute"/>
    <GlyphID id="162" name="acircumflex"/>
    <GlyphID id="163" name="atilde"/>
    <GlyphID id="164" name="adieresis"/>
    <GlyphID id="165" name="aring"/>
    <GlyphID id="166" name="ae"/>
    <GlyphID id="167" name="ccedilla"/>
    <GlyphID id="168" name="egrave"/>
    <GlyphID id="169" name="eacute"/>
    <GlyphID id="170" name="ecircumflex"/>
    <GlyphID id="171" name="edieresis"/>
    <GlyphID id="172" name="igrave"/>
    <GlyphID id="173" name="iacute"/>
    <GlyphID id="174" name="icircumflex"/>
    <GlyphID id="175" name="idieresis"/>
    <GlyphID id="176" name="eth"/>
    <GlyphID id="177" name="ntilde"/>
    <GlyphID id="178" name="ograve"/>
    <GlyphID id="179" name="oacute"/>
    <GlyphID id="180" name="ocircumflex"/>
    <GlyphID id="181" name="otilde"/>
    <GlyphID id="182" name="odieresis"/>
    <GlyphID id="183" name="divide"/>
    <GlyphID id="184" name="oslash"/>
    <GlyphID id="185" name="ugrave"/>
    <GlyphID id="186" name="uacute"/>
    <GlyphID id="187" name="ucircumflex"/>
    <GlyphID id="188" name="udieresis"/>
    <GlyphID id="189" name="yacute"/>
    <GlyphID id="190" name="thorn"/>
    <GlyphID id="191" name="ydieresis"/>
    <GlyphID id="192" name="Amacron"/>
    <GlyphID id="193" name="amacron"/>
    <GlyphID id="194" name="Abreve"/>
    <GlyphID id="195" name="abreve"/>
    <GlyphID id="196" name="Aogonek"/>
    <GlyphID id="197" name="aogonek"/>
    <GlyphID id="198" name="Cacute"/>
    <GlyphID id="199" name="cacute"/>
    <GlyphID id="200" name="Ccircumflex"/>
    <GlyphID id="201" name="ccircumflex"/>
    <GlyphID id="202" name="Ccaron"/>
    <GlyphID id="203" name="ccaron"/>
    <GlyphID id="204" name="Dcaron"/>
    <GlyphID id="205" name="dcaron"/>
    <GlyphID id="206" name="Dcroat"/>
    <GlyphID id="207" name="dcroat"/>
    <GlyphID id="208" name="Emacron"/>
    <GlyphID id="209" name="emacron"/>
    <GlyphID id="210" name="Edotaccent"/>
    <GlyphID id="211" name="edotaccent"/>
    <GlyphID id="212" name="Eogonek"/>
    <GlyphID id="213" name="eogonek"/>
    <GlyphID id="214" name="Ecaron"/>
    <GlyphID id="215" name="ecaron"/>
    <GlyphID id="216" name="Gcircumflex"/>
    <GlyphID id="217" name="gcircumflex"/>
    <GlyphID id="218" name="Gbreve"/>
    <GlyphID id="219" name="gbreve"/>
    <GlyphID id="220" name="Gcommaaccent"/>
    <GlyphID id="221" name="gcommaaccent"/>
    <GlyphID id="222" name="Hcircumflex"/>
    <GlyphID id="223" name="hcircumflex"/>
    <GlyphID id="224" name="Hbar"/>
    <GlyphID id="225" name="hbar"/>
    <GlyphID id="226" name="Imacron"/>
    <GlyphID id="227" name="imacron"/>
    <GlyphID id="228" name="Iogonek"/>
    <GlyphID id="229" name="iogonek"/>
    <GlyphID id="230" name="Idotaccent"/>
    <GlyphID id="231" name="dotlessi"/>
    <GlyphID id="232" name="Jcircumflex"/>
    <GlyphID id="233" name="jcircumflex"/>
    <GlyphID id="234" name="Kcommaaccent"/>
    <GlyphID id="235" name="kcommaaccent"/>
    <GlyphID id="236" name="Lacute"/>
    <GlyphID id="237" name="lacute"/>
    <GlyphID id="238" name="Lcommaaccent"/>
    <GlyphID id="239" name="lcommaaccent"/>
    <GlyphID id="240" name="Lcaron"/>
    <GlyphID id="241" name="lcaron"/>
    <GlyphID id="242" name="Lslash"/>
    <GlyphID id="243" name="lslash"/>
    <GlyphID id="244" name="Nacute"/>
    <GlyphID id="245" name="nacute"/>
    <GlyphID id="246" name="Ncommaaccent"/>
    <GlyphID id="247" name="ncommaaccent"/>
    <GlyphID id="248" name="Ncaron"/>
    <GlyphID id="249" name="ncaron"/>
    <GlyphID id="250" name="Omacron"/>
    <GlyphID id="251" name="omacron"/>
    <GlyphID id="252" name="Ohungarumlaut"/>
    <GlyphID id="253" name="ohungarumlaut"/>
    <GlyphID id="254" name="OE"/>
    <GlyphID id="255" name="oe"/>
    <GlyphID id="256" name="Racute"/>
    <GlyphID id="257" name="racute"/>
    <GlyphID id="258" name="Rcommaaccent"/>
    <GlyphID id="259" name="rcommaaccent"/>
    <GlyphID id="260" name="Rcaron"/>
    <GlyphID id="261" name="rcaron"/>
    <GlyphID id="262" name="Sacute"/>
    <GlyphID id="263" name="sacute"/>
    <GlyphID id="264" name="Scircumflex"/>
    <GlyphID id="265" name="scircumflex"/>
    <GlyphID id="266" name="Scedilla"/>
    <GlyphID id="267" name="scedilla"/>
    <GlyphID id="268" name="Scaron"/>
    <GlyphID id="269" name="scaron"/>
    <GlyphID id="270" name="Tcedilla"/>
    <GlyphID id="271" name="tcedilla"/>
    <GlyphID id="272" name="Tcaron"/>
    <GlyphID id="273" name="tcaron"/>
    <GlyphID id="274" name="Umacron"/>
    <GlyphID id="275" name="umacron"/>
    <GlyphID id="276" name="Ubreve"/>
    <GlyphID id="277" name="ubreve"/>
    <GlyphID id="278" name="Uring"/>
    <GlyphID id="279" name="uring"/>
    <GlyphID id="280" name="Uhungarumlaut"/>
    <GlyphID id="281" name="uhungarumlaut"/>
    <GlyphID id="282" name="Uogonek"/>
    <GlyphID id="283" name="uogonek"/>
    <GlyphID id="284" name="Ydieresis"/>
    <GlyphID id="285" name="Zacute"/>
    <GlyphID id="286" name="zacute"/>
    <GlyphID id="287" name="Zdotaccent"/>
    <GlyphID id="288" name="zdotaccent"/>
    <GlyphID id="289" name="Zcaron"/>
    <GlyphID id="290" name="zcaron"/>
    <GlyphID id="291" name="longs"/>
    <GlyphID id="292" name="florin"/>
    <GlyphID id="293" name="uni01F4"/>
    <GlyphID id="294" name="uni01F5"/>
    <GlyphID id="295" name="Scommaaccent"/>
    <GlyphID id="296" name="scommaaccent"/>
    <GlyphID id="297" name="Tcommaaccent"/>
    <GlyphID id="298" name="tcommaaccent"/>
    <GlyphID id="299" name="dotlessj"/>
    <GlyphID id="300" name="afii57929"/>
    <GlyphID id="301" name="circumflex"/>
    <GlyphID id="302" name="caron"/>
    <GlyphID id="303" name="breve"/>
    <GlyphID id="304" name="dotaccent"/>
    <GlyphID id="305" name="ring"/>
    <GlyphID id="306" name="ogonek"/>
    <GlyphID id="307" name="tilde"/>
    <GlyphID id="308" name="hungarumlaut"/>
    <GlyphID id="309" name="acutecomb"/>
    <GlyphID id="310" name="uni2206"/>
    <GlyphID id="311" name="Omega"/>
    <GlyphID id="312" name="uni03BC"/>
    <GlyphID id="313" name="pi"/>
    <GlyphID id="314" name="afii10023"/>
    <GlyphID id="315" name="afii10051"/>
    <GlyphID id="316" name="afii10052"/>
    <GlyphID id="317" name="afii10053"/>
    <GlyphID id="318" name="afii10054"/>
    <GlyphID id="319" name="afii10055"/>
    <GlyphID id="320" name="afii10056"/>
    <GlyphID id="321" name="afii10057"/>
    <GlyphID id="322" name="afii10058"/>
    <GlyphID id="323" name="afii10059"/>
    <GlyphID id="324" name="afii10060"/>
    <GlyphID id="325" name="afii10061"/>
    <GlyphID id="326" name="afii10062"/>
    <GlyphID id="327" name="afii10145"/>
    <GlyphID id="328" name="afii10017"/>
    <GlyphID id="329" name="afii10018"/>
    <GlyphID id="330" name="afii10019"/>
    <GlyphID id="331" name="afii10020"/>
    <GlyphID id="332" name="afii10021"/>
    <GlyphID id="333" name="afii10022"/>
    <GlyphID id="334" name="afii10024"/>
    <GlyphID id="335" name="afii10025"/>
    <GlyphID id="336" name="afii10026"/>
    <GlyphID id="337" name="afii10027"/>
    <GlyphID id="338" name="afii10028"/>
    <GlyphID id="339" name="afii10029"/>
    <GlyphID id="340" name="afii10030"/>
    <GlyphID id="341" name="afii10031"/>
    <GlyphID id="342" name="afii10032"/>
    <GlyphID id="343" name="afii10033"/>
    <GlyphID id="344" name="afii10034"/>
    <GlyphID id="345" name="afii10035"/>
    <GlyphID id="346" name="afii10036"/>
    <GlyphID id="347" name="afii10037"/>
    <GlyphID id="348" name="afii10038"/>
    <GlyphID id="349" name="afii10039"/>
    <GlyphID id="350" name="afii10040"/>
    <GlyphID id="351" name="afii10041"/>
    <GlyphID id="352" name="afii10042"/>
    <GlyphID id="353" name="afii10043"/>
    <GlyphID id="354" name="afii10044"/>
    <GlyphID id="355" name="afii10045"/>
    <GlyphID id="356" name="afii10046"/>
    <GlyphID id="357" name="afii10047"/>
    <GlyphID id="358" name="afii10048"/>
    <GlyphID id="359" name="afii10049"/>
    <GlyphID id="360" name="afii10065"/>
    <GlyphID id="361" name="afii10066"/>
    <GlyphID id="362" name="afii10067"/>
    <GlyphID id="363" name="afii10068"/>
    <GlyphID id="364" name="afii10069"/>
    <GlyphID id="365" name="afii10070"/>
    <GlyphID id="366" name="afii10072"/>
    <GlyphID id="367" name="afii10073"/>
    <GlyphID id="368" name="afii10074"/>
    <GlyphID id="369" name="afii10075"/>
    <GlyphID id="370" name="afii10076"/>
    <GlyphID id="371" name="afii10077"/>
    <GlyphID id="372" name="afii10078"/>
    <GlyphID id="373" name="afii10079"/>
    <GlyphID id="374" name="afii10080"/>
    <GlyphID id="375" name="afii10081"/>
    <GlyphID id="376" name="afii10082"/>
    <GlyphID id="377" name="afii10083"/>
    <GlyphID id="378" name="afii10084"/>
    <GlyphID id="379" name="afii10085"/>
    <GlyphID id="380" name="afii10086"/>
    <GlyphID id="381" name="afii10087"/>
    <GlyphID id="382" name="afii10088"/>
    <GlyphID id="383" name="afii10089"/>
    <GlyphID id="384" name="afii10090"/>
    <GlyphID id="385" name="afii10091"/>
    <GlyphID id="386" name="afii10092"/>
    <GlyphID id="387" name="afii10093"/>
    <GlyphID id="388" name="afii10094"/>
    <GlyphID id="389" name="afii10095"/>
    <GlyphID id="390" name="afii10096"/>
    <GlyphID id="391" name="afii10097"/>
    <GlyphID id="392" name="afii10071"/>
    <GlyphID id="393" name="afii10099"/>
    <GlyphID id="394" name="afii10100"/>
    <GlyphID id="395" name="afii10101"/>
    <GlyphID id="396" name="afii10102"/>
    <GlyphID id="397" name="afii10103"/>
    <GlyphID id="398" name="afii10104"/>
    <GlyphID id="399" name="afii10105"/>
    <GlyphID id="400" name="afii10106"/>
    <GlyphID id="401" name="afii10107"/>
    <GlyphID id="402" name="afii10108"/>
    <GlyphID id="403" name="afii10109"/>
    <GlyphID id="404" name="afii10110"/>
    <GlyphID id="405" name="afii10193"/>
    <GlyphID id="406" name="afii10146"/>
    <GlyphID id="407" name="afii10194"/>
    <GlyphID id="408" name="afii10147"/>
    <GlyphID id="409" name="afii10195"/>
    <GlyphID id="410" name="afii10148"/>
    <GlyphID id="411" name="afii10196"/>
    <GlyphID id="412" name="uni048A"/>
    <GlyphID id="413" name="uni048B"/>
    <GlyphID id="414" name="uni048C"/>
    <GlyphID id="415" name="uni048D"/>
    <GlyphID id="416" name="cyrErcrossed"/>
    <GlyphID id="417" name="cyrercrossed"/>
    <GlyphID id="418" name="afii10050"/>
    <GlyphID id="419" name="afii10098"/>
    <GlyphID id="420" name="cyrGebar"/>
    <GlyphID id="421" name="cyrgebar"/>
    <GlyphID id="422" name="cyrGehook"/>
    <GlyphID id="423" name="cyrgehook"/>
    <GlyphID id="424" name="cyrZhedesc"/>
    <GlyphID id="425" name="cyrzhedesc"/>
    <GlyphID id="426" name="cyrZetail"/>
    <GlyphID id="427" name="cyrzetail"/>
    <GlyphID id="428" name="cyrKadesc"/>
    <GlyphID id="429" name="cyrkadesc"/>
    <GlyphID id="430" name="cyrKavertbar"/>
    <GlyphID id="431" name="cyrkavertbar"/>
    <GlyphID id="432" name="cyrKabar"/>
    <GlyphID id="433" name="cyrkabar"/>
    <GlyphID id="434" name="cyrKaback"/>
    <GlyphID id="435" name="cyrkaback"/>
    <GlyphID id="436" name="cyrEndesc"/>
    <GlyphID id="437" name="cyrendesc"/>
    <GlyphID id="438" name="cyrEnGe"/>
    <GlyphID id="439" name="cyrenge"/>
    <GlyphID id="440" name="cyrPehook"/>
    <GlyphID id="441" name="cyrpehook"/>
    <GlyphID id="442" name="cyrOhook"/>
    <GlyphID id="443" name="cyrohook"/>
    <GlyphID id="444" name="cyrEstail"/>
    <GlyphID id="445" name="cyrestail"/>
    <GlyphID id="446" name="cyrTedesc"/>
    <GlyphID id="447" name="cyrtedesc"/>
    <GlyphID id="448" name="cyrstraightU"/>
    <GlyphID id="449" name="cyrstraightu"/>
    <GlyphID id="450" name="cyrstraightUbar"/>
    <GlyphID id="451" name="cyrstraightubar"/>
    <GlyphID id="452" name="cyrHadesc"/>
    <GlyphID id="453" name="cyrhadesc"/>
    <GlyphID id="454" name="cyrTeTse"/>
    <GlyphID id="455" name="cyrtetse"/>
    <GlyphID id="456" name="cyrChedesc"/>
    <GlyphID id="457" name="cyrchedesc"/>
    <GlyphID id="458" name="cyrChevertbar"/>
    <GlyphID id="459" name="cyrchevertbar"/>
    <GlyphID id="460" name="cyrH"/>
    <GlyphID id="461" name="cyrh"/>
    <GlyphID id="462" name="cyrIehook"/>
    <GlyphID id="463" name="cyriehook"/>
    <GlyphID id="464" name="cyrIehookogonek"/>
    <GlyphID id="465" name="cyriehookogonek"/>
    <GlyphID id="466" name="cyrI"/>
    <GlyphID id="467" name="cyrKahook"/>
    <GlyphID id="468" name="cyrkahook"/>
    <GlyphID id="469" name="cyrEltail"/>
    <GlyphID id="470" name="cyreltail"/>
    <GlyphID id="471" name="cyrEnhook"/>
    <GlyphID id="472" name="cyrenhook"/>
    <GlyphID id="473" name="cyrEntail"/>
    <GlyphID id="474" name="cyrentail"/>
    <GlyphID id="475" name="cyrChedescleft"/>
    <GlyphID id="476" name="cyrchedescleft"/>
    <GlyphID id="477" name="cyrEmtail"/>
    <GlyphID id="478" name="cyremtail"/>
    <GlyphID id="479" name="uni04CF"/>
    <GlyphID id="480" name="cyrAcyrbreve"/>
    <GlyphID id="481" name="cyracyrbreve"/>
    <GlyphID id="482" name="cyrAdieresis"/>
    <GlyphID id="483" name="cyradieresis"/>
    <GlyphID id="484" name="cyrAE"/>
    <GlyphID id="485" name="cyrae"/>
    <GlyphID id="486" name="cyrIecyrbreve"/>
    <GlyphID id="487" name="cyriecyrbreve"/>
    <GlyphID id="488" name="cyrinvE"/>
    <GlyphID id="489" name="cyrinve"/>
    <GlyphID id="490" name="cyrinvEdieresis"/>
    <GlyphID id="491" name="cyrinvedieresis"/>
    <GlyphID id="492" name="cyrZhedieresis"/>
    <GlyphID id="493" name="cyrzhedieresis"/>
    <GlyphID id="494" name="cyrZedieresis"/>
    <GlyphID id="495" name="cyrzedieresis"/>
    <GlyphID id="496" name="cyrDze"/>
    <GlyphID id="497" name="cyrdze"/>
    <GlyphID id="498" name="cyrImacron"/>
    <GlyphID id="499" name="cyrimacron"/>
    <GlyphID id="500" name="cyrIdieresis"/>
    <GlyphID id="501" name="cyridieresis"/>
    <GlyphID id="502" name="cyrOdieresis"/>
    <GlyphID id="503" name="cyrodieresis"/>
    <GlyphID id="504" name="cyrObar"/>
    <GlyphID id="505" name="cyrobar"/>
    <GlyphID id="506" name="cyrObardieresis"/>
    <GlyphID id="507" name="cyrobardieresis"/>
    <GlyphID id="508" name="cyrEdieresis"/>
    <GlyphID id="509" name="cyredieresis"/>
    <GlyphID id="510" name="cyrUmacron"/>
    <GlyphID id="511" name="cyrumacron"/>
    <GlyphID id="512" name="cyrUdieresis"/>
    <GlyphID id="513" name="cyrudieresis"/>
    <GlyphID id="514" name="cyrUdblacute"/>
    <GlyphID id="515" name="cyrudblacute"/>
    <GlyphID id="516" name="cyrChedieresis"/>
    <GlyphID id="517" name="cyrchedieresis"/>
    <GlyphID id="518" name="uni04F6"/>
    <GlyphID id="519" name="uni04F7"/>
    <GlyphID id="520" name="cyrYerudieresis"/>
    <GlyphID id="521" name="cyryerudieresis"/>
    <GlyphID id="522" name="cyrHahook"/>
    <GlyphID id="523" name="cyrhahook"/>
    <GlyphID id="524" name="cyrEpsilon"/>
    <GlyphID id="525" name="cyrepsilon"/>
    <GlyphID id="526" name="uni0512"/>
    <GlyphID id="527" name="uni0513"/>
    <GlyphID id="528" name="uni051C"/>
    <GlyphID id="529" name="uni051D"/>
    <GlyphID id="530" name="uni0524"/>
    <GlyphID id="531" name="uni0525"/>
    <GlyphID id="532" name="uni0526"/>
    <GlyphID id="533" name="uni0527"/>
    <GlyphID id="534" name="cyrEldesc"/>
    <GlyphID id="535" name="cyreldesc"/>
    <GlyphID id="536" name="uni1E30"/>
    <GlyphID id="537" name="uni1E31"/>
    <GlyphID id="538" name="Macute"/>
    <GlyphID id="539" name="macute"/>
    <GlyphID id="540" name="uni1E54"/>
    <GlyphID id="541" name="uni1E55"/>
    <GlyphID id="542" name="Germandbls"/>
    <GlyphID id="543" name="uni2011"/>
    <GlyphID id="544" name="endash"/>
    <GlyphID id="545" name="emdash"/>
    <GlyphID id="546" name="quoteleft"/>
    <GlyphID id="547" name="quoteright"/>
    <GlyphID id="548" name="quotesinglbase"/>
    <GlyphID id="549" name="quotedblleft"/>
    <GlyphID id="550" name="quotedblright"/>
    <GlyphID id="551" name="quotedblbase"/>
    <GlyphID id="552" name="dagger"/>
    <GlyphID id="553" name="daggerdbl"/>
    <GlyphID id="554" name="bullet"/>
    <GlyphID id="555" name="ellipsis"/>
    <GlyphID id="556" name="perthousand"/>
    <GlyphID id="557" name="guilsinglleft"/>
    <GlyphID id="558" name="guilsinglright"/>
    <GlyphID id="559" name="fraction"/>
    <GlyphID id="560" name="oneinferior"/>
    <GlyphID id="561" name="twoinferior"/>
    <GlyphID id="562" name="threeinferior"/>
    <GlyphID id="563" name="fourinferior"/>
    <GlyphID id="564" name="Euro"/>
    <GlyphID id="565" name="uni20B4"/>
    <GlyphID id="566" name="uni20BD"/>
    <GlyphID id="567" name="afii61289"/>
    <GlyphID id="568" name="afii61352"/>
    <GlyphID id="569" name="trademark"/>
    <GlyphID id="570" name="uni2126"/>
    <GlyphID id="571" name="estimated"/>
    <GlyphID id="572" name="partialdiff"/>
    <GlyphID id="573" name="Delta"/>
    <GlyphID id="574" name="product"/>
    <GlyphID id="575" name="summation"/>
    <GlyphID id="576" name="minus"/>
    <GlyphID id="577" name="division"/>
    <GlyphID id="578" name="radical"/>
    <GlyphID id="579" name="infinity"/>
    <GlyphID id="580" name="integral"/>
    <GlyphID id="581" name="approxequal"/>
    <GlyphID id="582" name="notequal"/>
    <GlyphID id="583" name="lessequal"/>
    <GlyphID id="584" name="greaterequal"/>
    <GlyphID id="585" name="lozenge"/>
    <GlyphID id="586" name="Hdesc"/>
    <GlyphID id="587" name="hdesc"/>
    <GlyphID id="588" name="Accent"/>
    <GlyphID id="589" name="Breve"/>
    <GlyphID id="590" name="Cedilla"/>
    <GlyphID id="591" name="Circumflex"/>
    <GlyphID id="592" name="Commaaccent"/>
    <GlyphID id="593" name="Apostrophe"/>
    <GlyphID id="594" name="Dotaccent"/>
    <GlyphID id="595" name="Ring"/>
    <GlyphID id="596" name="Tilde"/>
    <GlyphID id="597" name="Ogonek"/>
    <GlyphID id="598" name="Bacute"/>
    <GlyphID id="599" name="bacute"/>
    <GlyphID id="600" name="Facute"/>
    <GlyphID id="601" name="facute"/>
    <GlyphID id="602" name="cyrHcrossed"/>
    <GlyphID id="603" name="cyrhcrossed"/>
    <GlyphID id="604" name="cyrChehook"/>
    <GlyphID id="605" name="cyrchehook"/>
    <GlyphID id="606" name="cyrUacute"/>
    <GlyphID id="607" name="cyruacute"/>
    <GlyphID id="608" name="cyrEdotaccent"/>
    <GlyphID id="609" name="cyredotaccent"/>
    <GlyphID id="610" name="cyrZetail.alt"/>
    <GlyphID id="611" name="cyrzetail.alt"/>
    <GlyphID id="612" name="cyrEstail.alt02"/>
    <GlyphID id="613" name="cyrestail.alt02"/>
    <GlyphID id="614" name="cyrAmacron"/>
    <GlyphID id="615" name="cyramacron"/>
    <GlyphID id="616" name="cyrIemacron"/>
    <GlyphID id="617" name="cyriemacron"/>
    <GlyphID id="618" name="cyrIedieresismacron"/>
    <GlyphID id="619" name="cyriedieresismacron"/>
    <GlyphID id="620" name="cyrIedieresiscyrbreve"/>
    <GlyphID id="621" name="cyriedieresiscyrbreve"/>
    <GlyphID id="622" name="cyrZecaron"/>
    <GlyphID id="623" name="cyrzecaron"/>
    <GlyphID id="624" name="cyrOmacron"/>
    <GlyphID id="625" name="cyromacron"/>
    <GlyphID id="626" name="cyrOcyrbreve"/>
    <GlyphID id="627" name="cyrocyrbreve"/>
    <GlyphID id="628" name="cyrObarcyrbreve"/>
    <GlyphID id="629" name="cyrobarcyrbreve"/>
    <GlyphID id="630" name="cyrObardieresiscyrbreve"/>
    <GlyphID id="631" name="cyrobardieresiscyrbreve"/>
    <GlyphID id="632" name="cyrYerumacron"/>
    <GlyphID id="633" name="cyryerumacron"/>
    <GlyphID id="634" name="cyrEmacron"/>
    <GlyphID id="635" name="cyremacron"/>
    <GlyphID id="636" name="cyrEcyrbreve"/>
    <GlyphID id="637" name="cyrecyrbreve"/>
    <GlyphID id="638" name="afii10053dieresis"/>
    <GlyphID id="639" name="afii10101dieresis"/>
    <GlyphID id="640" name="cyrYamacron"/>
    <GlyphID id="641" name="cyryamacron"/>
    <GlyphID id="642" name="cyrYacyrbreve"/>
    <GlyphID id="643" name="cyryacyrbreve"/>
    <GlyphID id="644" name="cyrYumacron"/>
    <GlyphID id="645" name="cyryumacron"/>
    <GlyphID id="646" name="cyrYucyrbreve"/>
    <GlyphID id="647" name="cyryucyrbreve"/>
    <GlyphID id="648" name="afii10027hook"/>
    <GlyphID id="649" name="afii10075hook"/>
    <GlyphID id="650" name="cyrOdotaccent"/>
    <GlyphID id="651" name="cyrodotaccent"/>
    <GlyphID id="652" name="cyrYerucyrbreve"/>
    <GlyphID id="653" name="cyryerucyrbreve"/>
    <GlyphID id="654" name="cyrEpsilondieresis"/>
    <GlyphID id="655" name="cyrepsilondieresis"/>
    <GlyphID id="656" name="afii10055.alt"/>
    <GlyphID id="657" name="afii10103.alt"/>
    <GlyphID id="658" name="cyrGebar.alt"/>
    <GlyphID id="659" name="cyrgebar.alt"/>
    <GlyphID id="660" name="cyrEstail.alt"/>
    <GlyphID id="661" name="cyrestail.alt"/>
    <GlyphID id="662" name="Dacute"/>
    <GlyphID id="663" name="dacute"/>
    <GlyphID id="664" name="Hacute"/>
    <GlyphID id="665" name="hacute"/>
    <GlyphID id="666" name="Lacutecarel"/>
    <GlyphID id="667" name="lacutecarel"/>
    <GlyphID id="668" name="Tacute"/>
    <GlyphID id="669" name="tacute"/>
    <GlyphID id="670" name="Vacute"/>
    <GlyphID id="671" name="vacute"/>
    <GlyphID id="672" name="Ezhcarel"/>
    <GlyphID id="673" name="ezhcarel"/>
    <GlyphID id="674" name="Ezhcarelcaron"/>
    <GlyphID id="675" name="ezhcarelcaron"/>
    <GlyphID id="676" name="quoteleftsmall"/>
    <GlyphID id="677" name="quoterightsmall"/>
    <GlyphID id="678" name="quotedblleftsmall"/>
    <GlyphID id="679" name="quotedblrightsmall"/>
    <GlyphID id="680" name="quotesinglesmall"/>
    <GlyphID id="681" name="quotedblsmall"/>
    <GlyphID id="682" name="one.numerator"/>
    <GlyphID id="683" name="commaaccent"/>
    <GlyphID id="684" name="Acute"/>
    <GlyphID id="685" name="Caron"/>
    <GlyphID id="686" name="Dieresis"/>
    <GlyphID id="687" name="Grave"/>
    <GlyphID id="688" name="Hungarumlaut"/>
    <GlyphID id="689" name="Macron"/>
    <GlyphID id="690" name="cyrBreve"/>
    <GlyphID id="691" name="cyrbreve"/>
    <GlyphID id="692" name="fi"/>
    <GlyphID id="693" name="fl"/>
    <GlyphID id="694" name="uniFEFF"/>
    <GlyphID id="695" name="DieresisCyrBreve"/>
    <GlyphID id="696" name="caron.l"/>
    <GlyphID id="697" name="caron.L"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.001"/>
    <checkSumAdjustment value="0x14e2467d"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011001"/>
    <unitsPerEm value="2048"/>
    <created value="Tue May 13 05:33:54 2014"/>
    <modified value="Thu Jul 21 11:00:34 2016"/>
    <xMin value="-729"/>
    <yMin value="-529"/>
    <xMax value="2223"/>
    <yMax value="1954"/>
    <macStyle value="00000000 00000001"/>
    <lowestRecPPEM value="9"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="1825"/>
    <descent value="-443"/>
    <lineGap value="87"/>
    <advanceWidthMax value="2306"/>
    <minLeftSideBearing value="-729"/>
    <minRightSideBearing value="-441"/>
    <xMaxExtent value="2223"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="698"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="698"/>
    <maxPoints value="120"/>
    <maxContours value="7"/>
    <maxCompositePoints value="142"/>
    <maxCompositeContours value="6"/>
    <maxZones value="1"/>
    <maxTwilightPoints value="0"/>
    <maxStorage value="0"/>
    <maxFunctionDefs value="14"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="512"/>
    <maxSizeOfInstructions value="1271"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="3"/>
    <xAvgCharWidth value="1191"/>
    <usWeightClass value="700"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="293"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="928"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="530"/>
    <sFamilyClass value="1807"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="10"/>
      <bWeight value="7"/>
      <bProportion value="3"/>
      <bContrast value="4"/>
      <bStrokeVariation value="5"/>
      <bArmStyle value="5"/>
      <bLetterForm value="2"/>
      <bMidline value="2"/>
      <bXHeight value="4"/>
    </panose>
    <ulUnicodeRange1 value="10100000 00000000 00000010 11101111"/>
    <ulUnicodeRange2 value="01010000 00000000 00100000 01001011"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00100000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="PARA"/>
    <fsSelection value="00000000 00100000"/>
    <usFirstCharIndex value="0"/>
    <usLastCharIndex value="65279"/>
    <sTypoAscender value="1387"/>
    <sTypoDescender value="-442"/>
    <sTypoLineGap value="307"/>
    <usWinAscent value="1825"/>
    <usWinDescent value="443"/>
    <ulCodePageRange1 value="00100000 00000000 00000000 10010111"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="935"/>
    <sCapHeight value="1356"/>
    <usDefaultChar value="32"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1593" lsb="269"/>
    <mtx name=".null" width="0" lsb="0"/>
    <mtx name="A" width="1479" lsb="24"/>
    <mtx name="AE" width="2048" lsb="24"/>
    <mtx name="Aacute" width="1479" lsb="24"/>
    <mtx name="Abreve" width="1479" lsb="24"/>
    <mtx name="Accent" width="0" lsb="-729"/>
    <mtx name="Acircumflex" width="1479" lsb="24"/>
    <mtx name="Acute" width="831" lsb="116"/>
    <mtx name="Adieresis" width="1479" lsb="24"/>
    <mtx name="Agrave" width="1479" lsb="24"/>
    <mtx name="Amacron" width="1479" lsb="24"/>
    <mtx name="Aogonek" width="1479" lsb="24"/>
    <mtx name="Apostrophe" width="682" lsb="169"/>
    <mtx name="Aring" width="1479" lsb="24"/>
    <mtx name="Atilde" width="1479" lsb="24"/>
    <mtx name="B" width="1366" lsb="76"/>
    <mtx name="Bacute" width="1366" lsb="76"/>
    <mtx name="Breve" width="1094" lsb="141"/>
    <mtx name="C" width="1479" lsb="130"/>
    <mtx name="Cacute" width="1479" lsb="130"/>
    <mtx name="Caron" width="1034" lsb="141"/>
    <mtx name="Ccaron" width="1479" lsb="130"/>
    <mtx name="Ccedilla" width="1479" lsb="130"/>
    <mtx name="Ccircumflex" width="1479" lsb="130"/>
    <mtx name="Cedilla" width="752" lsb="96"/>
    <mtx name="Circumflex" width="1040" lsb="141"/>
    <mtx name="Commaaccent" width="569" lsb="116"/>
    <mtx name="D" width="1479" lsb="65"/>
    <mtx name="Dacute" width="1479" lsb="65"/>
    <mtx name="Dcaron" width="1479" lsb="65"/>
    <mtx name="Dcroat" width="1479" lsb="59"/>
    <mtx name="Delta" width="1284" lsb="40"/>
    <mtx name="Dieresis" width="1059" lsb="146"/>
    <mtx name="DieresisCyrBreve" width="1081" lsb="116"/>
    <mtx name="Dotaccent" width="635" lsb="133"/>
    <mtx name="E" width="1366" lsb="100"/>
    <mtx name="Eacute" width="1366" lsb="100"/>
    <mtx name="Ecaron" width="1366" lsb="100"/>
    <mtx name="Ecircumflex" width="1366" lsb="100"/>
    <mtx name="Edieresis" width="1366" lsb="100"/>
    <mtx name="Edotaccent" width="1366" lsb="100"/>
    <mtx name="Egrave" width="1366" lsb="100"/>
    <mtx name="Emacron" width="1366" lsb="100"/>
    <mtx name="Eogonek" width="1366" lsb="100"/>
    <mtx name="Eth" width="1479" lsb="59"/>
    <mtx name="Euro" width="1024" lsb="-61"/>
    <mtx name="Ezhcarel" width="1081" lsb="52"/>
    <mtx name="Ezhcarelcaron" width="1081" lsb="52"/>
    <mtx name="F" width="1251" lsb="95"/>
    <mtx name="Facute" width="1251" lsb="95"/>
    <mtx name="G" width="1593" lsb="130"/>
    <mtx name="Gbreve" width="1593" lsb="130"/>
    <mtx name="Gcircumflex" width="1593" lsb="130"/>
    <mtx name="Gcommaaccent" width="1593" lsb="130"/>
    <mtx name="Germandbls" width="1552" lsb="98"/>
    <mtx name="Grave" width="831" lsb="116"/>
    <mtx name="H" width="1593" lsb="70"/>
    <mtx name="Hacute" width="1593" lsb="70"/>
    <mtx name="Hbar" width="1593" lsb="70"/>
    <mtx name="Hcircumflex" width="1593" lsb="70"/>
    <mtx name="Hdesc" width="1593" lsb="70"/>
    <mtx name="Hungarumlaut" width="1128" lsb="136"/>
    <mtx name="I" width="797" lsb="96"/>
    <mtx name="Iacute" width="797" lsb="96"/>
    <mtx name="Icircumflex" width="797" lsb="96"/>
    <mtx name="Idieresis" width="797" lsb="4"/>
    <mtx name="Idotaccent" width="797" lsb="96"/>
    <mtx name="Igrave" width="797" lsb="96"/>
    <mtx name="Imacron" width="797" lsb="86"/>
    <mtx name="Iogonek" width="797" lsb="96"/>
    <mtx name="J" width="1024" lsb="193"/>
    <mtx name="Jcircumflex" width="1024" lsb="193"/>
    <mtx name="K" width="1593" lsb="70"/>
    <mtx name="Kcommaaccent" width="1593" lsb="70"/>
    <mtx name="L" width="1366" lsb="95"/>
    <mtx name="Lacute" width="1366" lsb="95"/>
    <mtx name="Lacutecarel" width="1366" lsb="95"/>
    <mtx name="Lcaron" width="1366" lsb="95"/>
    <mtx name="Lcommaaccent" width="1366" lsb="95"/>
    <mtx name="Lslash" width="1366" lsb="95"/>
    <mtx name="M" width="1933" lsb="80"/>
    <mtx name="Macron" width="1010" lsb="141"/>
    <mtx name="Macute" width="1933" lsb="80"/>
    <mtx name="N" width="1479" lsb="44"/>
    <mtx name="Nacute" width="1479" lsb="44"/>
    <mtx name="Ncaron" width="1479" lsb="44"/>
    <mtx name="Ncommaaccent" width="1479" lsb="44"/>
    <mtx name="Ntilde" width="1479" lsb="44"/>
    <mtx name="O" width="1593" lsb="88"/>
    <mtx name="OE" width="2048" lsb="88"/>
    <mtx name="Oacute" width="1593" lsb="88"/>
    <mtx name="Ocircumflex" width="1593" lsb="88"/>
    <mtx name="Odieresis" width="1593" lsb="88"/>
    <mtx name="Ogonek" width="793" lsb="116"/>
    <mtx name="Ograve" width="1593" lsb="88"/>
    <mtx name="Ohungarumlaut" width="1593" lsb="77"/>
    <mtx name="Omacron" width="1593" lsb="88"/>
    <mtx name="Omega" width="1640" lsb="96"/>
    <mtx name="Oslash" width="1593" lsb="88"/>
    <mtx name="Otilde" width="1593" lsb="88"/>
    <mtx name="P" width="1251" lsb="65"/>
    <mtx name="Q" width="1593" lsb="88"/>
    <mtx name="R" width="1479" lsb="80"/>
    <mtx name="Racute" width="1479" lsb="80"/>
    <mtx name="Rcaron" width="1479" lsb="80"/>
    <mtx name="Rcommaaccent" width="1479" lsb="80"/>
    <mtx name="Ring" width="813" lsb="138"/>
    <mtx name="S" width="1139" lsb="106"/>
    <mtx name="Sacute" width="1139" lsb="106"/>
    <mtx name="Scaron" width="1139" lsb="106"/>
    <mtx name="Scedilla" width="1139" lsb="106"/>
    <mtx name="Scircumflex" width="1139" lsb="106"/>
    <mtx name="Scommaaccent" width="1139" lsb="106"/>
    <mtx name="T" width="1366" lsb="65"/>
    <mtx name="Tacute" width="1366" lsb="65"/>
    <mtx name="Tcaron" width="1366" lsb="65"/>
    <mtx name="Tcedilla" width="1366" lsb="65"/>
    <mtx name="Tcommaaccent" width="1366" lsb="65"/>
    <mtx name="Thorn" width="1251" lsb="65"/>
    <mtx name="Tilde" width="1057" lsb="142"/>
    <mtx name="U" width="1479" lsb="55"/>
    <mtx name="Uacute" width="1479" lsb="55"/>
    <mtx name="Ubreve" width="1479" lsb="55"/>
    <mtx name="Ucircumflex" width="1479" lsb="55"/>
    <mtx name="Udieresis" width="1479" lsb="55"/>
    <mtx name="Ugrave" width="1479" lsb="55"/>
    <mtx name="Uhungarumlaut" width="1479" lsb="55"/>
    <mtx name="Umacron" width="1479" lsb="55"/>
    <mtx name="Uogonek" width="1479" lsb="55"/>
    <mtx name="Uring" width="1479" lsb="55"/>
    <mtx name="V" width="1479" lsb="29"/>
    <mtx name="Vacute" width="1479" lsb="29"/>
    <mtx name="W" width="2048" lsb="24"/>
    <mtx name="X" width="1479" lsb="42"/>
    <mtx name="Y" width="1479" lsb="33"/>
    <mtx name="Yacute" width="1479" lsb="33"/>
    <mtx name="Ydieresis" width="1479" lsb="33"/>
    <mtx name="Z" width="1366" lsb="130"/>
    <mtx name="Zacute" width="1366" lsb="130"/>
    <mtx name="Zcaron" width="1366" lsb="130"/>
    <mtx name="Zdotaccent" width="1366" lsb="130"/>
    <mtx name="a" width="1024" lsb="44"/>
    <mtx name="aacute" width="1024" lsb="44"/>
    <mtx name="abreve" width="1024" lsb="44"/>
    <mtx name="acircumflex" width="1024" lsb="44"/>
    <mtx name="acute" width="682" lsb="98"/>
    <mtx name="acutecomb" width="0" lsb="-574"/>
    <mtx name="adieresis" width="1024" lsb="44"/>
    <mtx name="ae" width="1479" lsb="44"/>
    <mtx name="afii10017" width="1479" lsb="24"/>
    <mtx name="afii10018" width="1354" lsb="76"/>
    <mtx name="afii10019" width="1366" lsb="76"/>
    <mtx name="afii10020" width="1303" lsb="100"/>
    <mtx name="afii10021" width="1409" lsb="7"/>
    <mtx name="afii10022" width="1366" lsb="100"/>
    <mtx name="afii10023" width="1366" lsb="100"/>
    <mtx name="afii10024" width="2025" lsb="26"/>
    <mtx name="afii10025" width="1081" lsb="52"/>
    <mtx name="afii10026" width="1593" lsb="81"/>
    <mtx name="afii10027" width="1593" lsb="81"/>
    <mtx name="afii10027hook" width="1593" lsb="82"/>
    <mtx name="afii10028" width="1485" lsb="70"/>
    <mtx name="afii10029" width="1526" lsb="74"/>
    <mtx name="afii10030" width="1933" lsb="80"/>
    <mtx name="afii10031" width="1593" lsb="70"/>
    <mtx name="afii10032" width="1593" lsb="88"/>
    <mtx name="afii10033" width="1593" lsb="75"/>
    <mtx name="afii10034" width="1251" lsb="65"/>
    <mtx name="afii10035" width="1479" lsb="130"/>
    <mtx name="afii10036" width="1366" lsb="65"/>
    <mtx name="afii10037" width="1503" lsb="58"/>
    <mtx name="afii10038" width="1759" lsb="72"/>
    <mtx name="afii10039" width="1479" lsb="42"/>
    <mtx name="afii10040" width="1593" lsb="70"/>
    <mtx name="afii10041" width="1503" lsb="60"/>
    <mtx name="afii10042" width="2249" lsb="110"/>
    <mtx name="afii10043" width="2249" lsb="88"/>
    <mtx name="afii10044" width="1567" lsb="30"/>
    <mtx name="afii10045" width="2011" lsb="80"/>
    <mtx name="afii10046" width="1354" lsb="70"/>
    <mtx name="afii10047" width="1389" lsb="94"/>
    <mtx name="afii10048" width="2306" lsb="88"/>
    <mtx name="afii10049" width="1479" lsb="50"/>
    <mtx name="afii10050" width="1065" lsb="70"/>
    <mtx name="afii10051" width="1638" lsb="54"/>
    <mtx name="afii10052" width="1303" lsb="100"/>
    <mtx name="afii10053" width="1389" lsb="88"/>
    <mtx name="afii10053dieresis" width="1389" lsb="88"/>
    <mtx name="afii10054" width="1139" lsb="106"/>
    <mtx name="afii10055" width="797" lsb="96"/>
    <mtx name="afii10055.alt" width="797" lsb="96"/>
    <mtx name="afii10056" width="797" lsb="4"/>
    <mtx name="afii10057" width="1024" lsb="193"/>
    <mtx name="afii10058" width="2054" lsb="51"/>
    <mtx name="afii10059" width="2052" lsb="60"/>
    <mtx name="afii10060" width="1638" lsb="20"/>
    <mtx name="afii10061" width="1485" lsb="70"/>
    <mtx name="afii10062" width="1503" lsb="58"/>
    <mtx name="afii10065" width="1024" lsb="44"/>
    <mtx name="afii10066" width="1024" lsb="51"/>
    <mtx name="afii10067" width="1106" lsb="64"/>
    <mtx name="afii10068" width="930" lsb="54"/>
    <mtx name="afii10069" width="1036" lsb="10"/>
    <mtx name="afii10070" width="909" lsb="45"/>
    <mtx name="afii10071" width="909" lsb="45"/>
    <mtx name="afii10072" width="1485" lsb="21"/>
    <mtx name="afii10073" width="823" lsb="16"/>
    <mtx name="afii10074" width="1180" lsb="44"/>
    <mtx name="afii10075" width="1180" lsb="44"/>
    <mtx name="afii10075hook" width="1180" lsb="44"/>
    <mtx name="afii10076" width="1180" lsb="56"/>
    <mtx name="afii10077" width="1149" lsb="16"/>
    <mtx name="afii10078" width="1395" lsb="22"/>
    <mtx name="afii10079" width="1180" lsb="44"/>
    <mtx name="afii10080" width="1024" lsb="48"/>
    <mtx name="afii10081" width="1180" lsb="44"/>
    <mtx name="afii10082" width="1139" lsb="50"/>
    <mtx name="afii10083" width="909" lsb="69"/>
    <mtx name="afii10084" width="1006" lsb="28"/>
    <mtx name="afii10085" width="1024" lsb="15"/>
    <mtx name="afii10086" width="1417" lsb="44"/>
    <mtx name="afii10087" width="1024" lsb="13"/>
    <mtx name="afii10088" width="1180" lsb="44"/>
    <mtx name="afii10089" width="1155" lsb="37"/>
    <mtx name="afii10090" width="1729" lsb="55"/>
    <mtx name="afii10091" width="1729" lsb="50"/>
    <mtx name="afii10092" width="1194" lsb="20"/>
    <mtx name="afii10093" width="1599" lsb="50"/>
    <mtx name="afii10094" width="1083" lsb="70"/>
    <mtx name="afii10095" width="885" lsb="30"/>
    <mtx name="afii10096" width="1565" lsb="48"/>
    <mtx name="afii10097" width="1108" lsb="24"/>
    <mtx name="afii10098" width="797" lsb="44"/>
    <mtx name="afii10099" width="1100" lsb="20"/>
    <mtx name="afii10100" width="930" lsb="54"/>
    <mtx name="afii10101" width="885" lsb="50"/>
    <mtx name="afii10101dieresis" width="885" lsb="50"/>
    <mtx name="afii10102" width="797" lsb="42"/>
    <mtx name="afii10103" width="569" lsb="38"/>
    <mtx name="afii10103.alt" width="569" lsb="38"/>
    <mtx name="afii10104" width="569" lsb="-58"/>
    <mtx name="afii10105" width="682" lsb="82"/>
    <mtx name="afii10106" width="1597" lsb="26"/>
    <mtx name="afii10107" width="1632" lsb="44"/>
    <mtx name="afii10108" width="1139" lsb="20"/>
    <mtx name="afii10109" width="1180" lsb="56"/>
    <mtx name="afii10110" width="1024" lsb="15"/>
    <mtx name="afii10145" width="1593" lsb="81"/>
    <mtx name="afii10146" width="1564" lsb="20"/>
    <mtx name="afii10147" width="1593" lsb="88"/>
    <mtx name="afii10148" width="1670" lsb="50"/>
    <mtx name="afii10193" width="1180" lsb="44"/>
    <mtx name="afii10194" width="1229" lsb="22"/>
    <mtx name="afii10195" width="1024" lsb="44"/>
    <mtx name="afii10196" width="1239" lsb="42"/>
    <mtx name="afii57929" width="682" lsb="169"/>
    <mtx name="afii61289" width="768" lsb="-7"/>
    <mtx name="afii61352" width="2058" lsb="40"/>
    <mtx name="agrave" width="1024" lsb="44"/>
    <mtx name="amacron" width="1024" lsb="44"/>
    <mtx name="ampersand" width="1706" lsb="142"/>
    <mtx name="aogonek" width="1024" lsb="44"/>
    <mtx name="approxequal" width="1124" lsb="141"/>
    <mtx name="aring" width="1024" lsb="44"/>
    <mtx name="asciicircum" width="1190" lsb="196"/>
    <mtx name="asciitilde" width="1065" lsb="111"/>
    <mtx name="asterisk" width="1024" lsb="164"/>
    <mtx name="at" width="1905" lsb="105"/>
    <mtx name="atilde" width="1024" lsb="44"/>
    <mtx name="b" width="1139" lsb="10"/>
    <mtx name="backslash" width="569" lsb="-161"/>
    <mtx name="bacute" width="1139" lsb="10"/>
    <mtx name="bar" width="451" lsb="158"/>
    <mtx name="braceleft" width="807" lsb="142"/>
    <mtx name="braceright" width="807" lsb="91"/>
    <mtx name="bracketleft" width="682" lsb="158"/>
    <mtx name="bracketright" width="682" lsb="71"/>
    <mtx name="breve" width="682" lsb="43"/>
    <mtx name="brokenbar" width="451" lsb="158"/>
    <mtx name="bullet" width="717" lsb="58"/>
    <mtx name="c" width="909" lsb="69"/>
    <mtx name="cacute" width="909" lsb="69"/>
    <mtx name="caron" width="682" lsb="45"/>
    <mtx name="caron.L" width="776" lsb="635"/>
    <mtx name="caron.l" width="694" lsb="442"/>
    <mtx name="ccaron" width="909" lsb="69"/>
    <mtx name="ccedilla" width="909" lsb="69"/>
    <mtx name="ccircumflex" width="909" lsb="69"/>
    <mtx name="cedilla" width="682" lsb="130"/>
    <mtx name="cent" width="1024" lsb="73"/>
    <mtx name="circumflex" width="682" lsb="52"/>
    <mtx name="colon" width="682" lsb="177"/>
    <mtx name="comma" width="512" lsb="64"/>
    <mtx name="commaaccent" width="569" lsb="116"/>
    <mtx name="copyright" width="1530" lsb="79"/>
    <mtx name="currency" width="1024" lsb="36"/>
    <mtx name="cyrAE" width="2048" lsb="24"/>
    <mtx name="cyrAcyrbreve" width="1479" lsb="24"/>
    <mtx name="cyrAdieresis" width="1479" lsb="24"/>
    <mtx name="cyrAmacron" width="1479" lsb="24"/>
    <mtx name="cyrBreve" width="1100" lsb="146"/>
    <mtx name="cyrChedesc" width="1503" lsb="46"/>
    <mtx name="cyrChedescleft" width="1503" lsb="60"/>
    <mtx name="cyrChedieresis" width="1503" lsb="60"/>
    <mtx name="cyrChehook" width="1503" lsb="60"/>
    <mtx name="cyrChevertbar" width="1503" lsb="59"/>
    <mtx name="cyrDze" width="1081" lsb="41"/>
    <mtx name="cyrEcyrbreve" width="1389" lsb="94"/>
    <mtx name="cyrEdieresis" width="1389" lsb="94"/>
    <mtx name="cyrEdotaccent" width="1389" lsb="94"/>
    <mtx name="cyrEldesc" width="1526" lsb="56"/>
    <mtx name="cyrEltail" width="1526" lsb="62"/>
    <mtx name="cyrEmacron" width="1389" lsb="94"/>
    <mtx name="cyrEmtail" width="1933" lsb="70"/>
    <mtx name="cyrEnGe" width="1887" lsb="70"/>
    <mtx name="cyrEndesc" width="1593" lsb="70"/>
    <mtx name="cyrEnhook" width="1593" lsb="70"/>
    <mtx name="cyrEntail" width="1593" lsb="70"/>
    <mtx name="cyrEpsilon" width="1081" lsb="70"/>
    <mtx name="cyrEpsilondieresis" width="1081" lsb="70"/>
    <mtx name="cyrErcrossed" width="1251" lsb="65"/>
    <mtx name="cyrEstail" width="1479" lsb="130"/>
    <mtx name="cyrEstail.alt" width="1479" lsb="130"/>
    <mtx name="cyrEstail.alt02" width="1479" lsb="130"/>
    <mtx name="cyrGebar" width="1303" lsb="100"/>
    <mtx name="cyrGebar.alt" width="1251" lsb="95"/>
    <mtx name="cyrGehook" width="1478" lsb="90"/>
    <mtx name="cyrH" width="1503" lsb="90"/>
    <mtx name="cyrHadesc" width="1479" lsb="38"/>
    <mtx name="cyrHahook" width="1479" lsb="42"/>
    <mtx name="cyrHcrossed" width="1503" lsb="73"/>
    <mtx name="cyrI" width="797" lsb="96"/>
    <mtx name="cyrIdieresis" width="1593" lsb="81"/>
    <mtx name="cyrIecyrbreve" width="1366" lsb="100"/>
    <mtx name="cyrIedieresiscyrbreve" width="1366" lsb="100"/>
    <mtx name="cyrIedieresismacron" width="1366" lsb="100"/>
    <mtx name="cyrIehook" width="1803" lsb="4"/>
    <mtx name="cyrIehookogonek" width="1803" lsb="4"/>
    <mtx name="cyrIemacron" width="1366" lsb="100"/>
    <mtx name="cyrImacron" width="1593" lsb="81"/>
    <mtx name="cyrKaback" width="1697" lsb="30"/>
    <mtx name="cyrKabar" width="1485" lsb="20"/>
    <mtx name="cyrKadesc" width="1485" lsb="70"/>
    <mtx name="cyrKahook" width="1510" lsb="80"/>
    <mtx name="cyrKavertbar" width="1485" lsb="65"/>
    <mtx name="cyrObar" width="1593" lsb="88"/>
    <mtx name="cyrObarcyrbreve" width="1593" lsb="88"/>
    <mtx name="cyrObardieresis" width="1593" lsb="88"/>
    <mtx name="cyrObardieresiscyrbreve" width="1593" lsb="88"/>
    <mtx name="cyrOcyrbreve" width="1593" lsb="88"/>
    <mtx name="cyrOdieresis" width="1593" lsb="88"/>
    <mtx name="cyrOdotaccent" width="1593" lsb="88"/>
    <mtx name="cyrOhook" width="1494" lsb="60"/>
    <mtx name="cyrOmacron" width="1593" lsb="88"/>
    <mtx name="cyrPehook" width="2283" lsb="80"/>
    <mtx name="cyrTeTse" width="1776" lsb="30"/>
    <mtx name="cyrTedesc" width="1366" lsb="65"/>
    <mtx name="cyrUacute" width="1503" lsb="58"/>
    <mtx name="cyrUdblacute" width="1503" lsb="58"/>
    <mtx name="cyrUdieresis" width="1503" lsb="58"/>
    <mtx name="cyrUmacron" width="1503" lsb="58"/>
    <mtx name="cyrYacyrbreve" width="1479" lsb="50"/>
    <mtx name="cyrYamacron" width="1479" lsb="50"/>
    <mtx name="cyrYerucyrbreve" width="2011" lsb="80"/>
    <mtx name="cyrYerudieresis" width="2011" lsb="80"/>
    <mtx name="cyrYerumacron" width="2011" lsb="80"/>
    <mtx name="cyrYucyrbreve" width="2306" lsb="88"/>
    <mtx name="cyrYumacron" width="2306" lsb="88"/>
    <mtx name="cyrZecaron" width="1081" lsb="52"/>
    <mtx name="cyrZedieresis" width="1081" lsb="52"/>
    <mtx name="cyrZetail" width="1081" lsb="52"/>
    <mtx name="cyrZetail.alt" width="1081" lsb="52"/>
    <mtx name="cyrZhedesc" width="2025" lsb="20"/>
    <mtx name="cyrZhedieresis" width="2025" lsb="26"/>
    <mtx name="cyracyrbreve" width="1024" lsb="44"/>
    <mtx name="cyradieresis" width="1024" lsb="44"/>
    <mtx name="cyrae" width="1479" lsb="44"/>
    <mtx name="cyramacron" width="1024" lsb="44"/>
    <mtx name="cyrbreve" width="1053" lsb="144"/>
    <mtx name="cyrchedesc" width="1155" lsb="30"/>
    <mtx name="cyrchedescleft" width="1155" lsb="37"/>
    <mtx name="cyrchedieresis" width="1155" lsb="37"/>
    <mtx name="cyrchehook" width="1155" lsb="10"/>
    <mtx name="cyrchevertbar" width="1155" lsb="25"/>
    <mtx name="cyrdze" width="939" lsb="44"/>
    <mtx name="cyrecyrbreve" width="885" lsb="30"/>
    <mtx name="cyredieresis" width="885" lsb="30"/>
    <mtx name="cyredotaccent" width="885" lsb="30"/>
    <mtx name="cyreldesc" width="1149" lsb="16"/>
    <mtx name="cyreltail" width="1149" lsb="16"/>
    <mtx name="cyremacron" width="885" lsb="30"/>
    <mtx name="cyremtail" width="1395" lsb="22"/>
    <mtx name="cyrendesc" width="1180" lsb="44"/>
    <mtx name="cyrenge" width="1366" lsb="44"/>
    <mtx name="cyrenhook" width="1180" lsb="44"/>
    <mtx name="cyrentail" width="1180" lsb="42"/>
    <mtx name="cyrepsilon" width="823" lsb="48"/>
    <mtx name="cyrepsilondieresis" width="823" lsb="48"/>
    <mtx name="cyrercrossed" width="1139" lsb="44"/>
    <mtx name="cyrestail" width="909" lsb="69"/>
    <mtx name="cyrestail.alt" width="909" lsb="69"/>
    <mtx name="cyrestail.alt02" width="909" lsb="69"/>
    <mtx name="cyrgebar" width="930" lsb="48"/>
    <mtx name="cyrgebar.alt" width="979" lsb="64"/>
    <mtx name="cyrgehook" width="1181" lsb="56"/>
    <mtx name="cyrh" width="1139" lsb="25"/>
    <mtx name="cyrhadesc" width="1024" lsb="14"/>
    <mtx name="cyrhahook" width="1024" lsb="15"/>
    <mtx name="cyrhcrossed" width="1139" lsb="25"/>
    <mtx name="cyridieresis" width="1180" lsb="44"/>
    <mtx name="cyriecyrbreve" width="909" lsb="45"/>
    <mtx name="cyriedieresiscyrbreve" width="909" lsb="45"/>
    <mtx name="cyriedieresismacron" width="909" lsb="45"/>
    <mtx name="cyriehook" width="1155" lsb="6"/>
    <mtx name="cyriehookogonek" width="1155" lsb="6"/>
    <mtx name="cyriemacron" width="909" lsb="45"/>
    <mtx name="cyrimacron" width="1180" lsb="44"/>
    <mtx name="cyrinvE" width="1513" lsb="88"/>
    <mtx name="cyrinvEdieresis" width="1513" lsb="88"/>
    <mtx name="cyrinve" width="909" lsb="45"/>
    <mtx name="cyrinvedieresis" width="909" lsb="45"/>
    <mtx name="cyrkaback" width="1291" lsb="16"/>
    <mtx name="cyrkabar" width="1180" lsb="26"/>
    <mtx name="cyrkadesc" width="1180" lsb="54"/>
    <mtx name="cyrkahook" width="1215" lsb="60"/>
    <mtx name="cyrkavertbar" width="1180" lsb="44"/>
    <mtx name="cyrobar" width="1024" lsb="44"/>
    <mtx name="cyrobarcyrbreve" width="1024" lsb="44"/>
    <mtx name="cyrobardieresis" width="1024" lsb="44"/>
    <mtx name="cyrobardieresiscyrbreve" width="1024" lsb="44"/>
    <mtx name="cyrocyrbreve" width="1024" lsb="48"/>
    <mtx name="cyrodieresis" width="1024" lsb="48"/>
    <mtx name="cyrodotaccent" width="1024" lsb="48"/>
    <mtx name="cyrohook" width="1093" lsb="50"/>
    <mtx name="cyromacron" width="1024" lsb="48"/>
    <mtx name="cyrpehook" width="1728" lsb="50"/>
    <mtx name="cyrstraightU" width="1479" lsb="33"/>
    <mtx name="cyrstraightUbar" width="1479" lsb="33"/>
    <mtx name="cyrstraightu" width="1024" lsb="10"/>
    <mtx name="cyrstraightubar" width="1024" lsb="10"/>
    <mtx name="cyrtedesc" width="1006" lsb="28"/>
    <mtx name="cyrtetse" width="1247" lsb="14"/>
    <mtx name="cyruacute" width="1024" lsb="15"/>
    <mtx name="cyrudblacute" width="1024" lsb="15"/>
    <mtx name="cyrudieresis" width="1024" lsb="15"/>
    <mtx name="cyrumacron" width="1024" lsb="15"/>
    <mtx name="cyryacyrbreve" width="1108" lsb="24"/>
    <mtx name="cyryamacron" width="1108" lsb="24"/>
    <mtx name="cyryerucyrbreve" width="1599" lsb="50"/>
    <mtx name="cyryerudieresis" width="1599" lsb="50"/>
    <mtx name="cyryerumacron" width="1599" lsb="50"/>
    <mtx name="cyryucyrbreve" width="1565" lsb="48"/>
    <mtx name="cyryumacron" width="1565" lsb="48"/>
    <mtx name="cyrzecaron" width="823" lsb="16"/>
    <mtx name="cyrzedieresis" width="823" lsb="16"/>
    <mtx name="cyrzetail" width="823" lsb="16"/>
    <mtx name="cyrzetail.alt" width="823" lsb="16"/>
    <mtx name="cyrzhedesc" width="1485" lsb="15"/>
    <mtx name="cyrzhedieresis" width="1485" lsb="21"/>
    <mtx name="d" width="1139" lsb="76"/>
    <mtx name="dacute" width="1222" lsb="76"/>
    <mtx name="dagger" width="1024" lsb="80"/>
    <mtx name="daggerdbl" width="1024" lsb="79"/>
    <mtx name="dcaron" width="1502" lsb="80"/>
    <mtx name="dcroat" width="1139" lsb="76"/>
    <mtx name="degree" width="819" lsb="130"/>
    <mtx name="dieresis" width="682" lsb="0"/>
    <mtx name="divide" width="1124" lsb="127"/>
    <mtx name="division" width="342" lsb="-225"/>
    <mtx name="dollar" width="1024" lsb="70"/>
    <mtx name="dotaccent" width="682" lsb="175"/>
    <mtx name="dotlessi" width="569" lsb="38"/>
    <mtx name="dotlessj" width="682" lsb="82"/>
    <mtx name="e" width="909" lsb="45"/>
    <mtx name="eacute" width="909" lsb="45"/>
    <mtx name="ecaron" width="909" lsb="45"/>
    <mtx name="ecircumflex" width="909" lsb="45"/>
    <mtx name="edieresis" width="909" lsb="45"/>
    <mtx name="edotaccent" width="909" lsb="45"/>
    <mtx name="egrave" width="909" lsb="45"/>
    <mtx name="eight" width="1024" lsb="50"/>
    <mtx name="ellipsis" width="2048" lsb="230"/>
    <mtx name="emacron" width="909" lsb="45"/>
    <mtx name="emdash" width="2048" lsb="306"/>
    <mtx name="endash" width="1024" lsb="45"/>
    <mtx name="eogonek" width="909" lsb="45"/>
    <mtx name="equal" width="1167" lsb="148"/>
    <mtx name="estimated" width="1229" lsb="84"/>
    <mtx name="eth" width="1024" lsb="44"/>
    <mtx name="exclam" width="682" lsb="176"/>
    <mtx name="exclamdown" width="682" lsb="177"/>
    <mtx name="ezhcarel" width="1014" lsb="50"/>
    <mtx name="ezhcarelcaron" width="1014" lsb="84"/>
    <mtx name="f" width="682" lsb="52"/>
    <mtx name="facute" width="682" lsb="52"/>
    <mtx name="fi" width="1139" lsb="30"/>
    <mtx name="five" width="1024" lsb="54"/>
    <mtx name="fl" width="1139" lsb="34"/>
    <mtx name="florin" width="1024" lsb="-54"/>
    <mtx name="four" width="1024" lsb="17"/>
    <mtx name="fourinferior" width="800" lsb="14"/>
    <mtx name="fraction" width="342" lsb="-441"/>
    <mtx name="g" width="1024" lsb="26"/>
    <mtx name="gbreve" width="1024" lsb="26"/>
    <mtx name="gcircumflex" width="1024" lsb="26"/>
    <mtx name="gcommaaccent" width="1024" lsb="26"/>
    <mtx name="germandbls" width="1139" lsb="24"/>
    <mtx name="grave" width="682" lsb="98"/>
    <mtx name="greater" width="1167" lsb="175"/>
    <mtx name="greaterequal" width="1124" lsb="142"/>
    <mtx name="guillemotleft" width="1024" lsb="54"/>
    <mtx name="guillemotright" width="1024" lsb="118"/>
    <mtx name="guilsinglleft" width="682" lsb="84"/>
    <mtx name="guilsinglright" width="682" lsb="120"/>
    <mtx name="h" width="1139" lsb="25"/>
    <mtx name="hacute" width="1139" lsb="25"/>
    <mtx name="hbar" width="1139" lsb="14"/>
    <mtx name="hcircumflex" width="1139" lsb="13"/>
    <mtx name="hdesc" width="1139" lsb="25"/>
    <mtx name="hungarumlaut" width="682" lsb="-23"/>
    <mtx name="hyphen" width="682" lsb="67"/>
    <mtx name="i" width="569" lsb="38"/>
    <mtx name="iacute" width="569" lsb="38"/>
    <mtx name="icircumflex" width="569" lsb="-15"/>
    <mtx name="idieresis" width="569" lsb="-58"/>
    <mtx name="igrave" width="569" lsb="-25"/>
    <mtx name="imacron" width="569" lsb="-29"/>
    <mtx name="infinity" width="1460" lsb="80"/>
    <mtx name="integral" width="561" lsb="-100"/>
    <mtx name="iogonek" width="569" lsb="38"/>
    <mtx name="j" width="682" lsb="82"/>
    <mtx name="jcircumflex" width="682" lsb="4"/>
    <mtx name="k" width="1139" lsb="30"/>
    <mtx name="kcommaaccent" width="1139" lsb="30"/>
    <mtx name="l" width="569" lsb="20"/>
    <mtx name="lacute" width="569" lsb="20"/>
    <mtx name="lacutecarel" width="760" lsb="20"/>
    <mtx name="lcaron" width="960" lsb="30"/>
    <mtx name="lcommaaccent" width="569" lsb="20"/>
    <mtx name="less" width="1167" lsb="140"/>
    <mtx name="lessequal" width="1124" lsb="130"/>
    <mtx name="logicalnot" width="1167" lsb="163"/>
    <mtx name="longs" width="569" lsb="4"/>
    <mtx name="lozenge" width="1012" lsb="54"/>
    <mtx name="lslash" width="569" lsb="20"/>
    <mtx name="m" width="1706" lsb="50"/>
    <mtx name="macron" width="1024" lsb="228"/>
    <mtx name="macute" width="1706" lsb="50"/>
    <mtx name="minus" width="1167" lsb="148"/>
    <mtx name="mu" width="1180" lsb="31"/>
    <mtx name="multiply" width="1167" lsb="218"/>
    <mtx name="n" width="1139" lsb="50"/>
    <mtx name="nacute" width="1139" lsb="50"/>
    <mtx name="ncaron" width="1139" lsb="50"/>
    <mtx name="ncommaaccent" width="1139" lsb="50"/>
    <mtx name="nine" width="1024" lsb="50"/>
    <mtx name="nonmarkingreturn" width="512" lsb="0"/>
    <mtx name="notequal" width="1124" lsb="125"/>
    <mtx name="ntilde" width="1139" lsb="50"/>
    <mtx name="numbersign" width="1024" lsb="40"/>
    <mtx name="o" width="1024" lsb="48"/>
    <mtx name="oacute" width="1024" lsb="48"/>
    <mtx name="ocircumflex" width="1024" lsb="48"/>
    <mtx name="odieresis" width="1024" lsb="48"/>
    <mtx name="oe" width="1479" lsb="44"/>
    <mtx name="ogonek" width="682" lsb="104"/>
    <mtx name="ograve" width="1024" lsb="48"/>
    <mtx name="ohungarumlaut" width="1024" lsb="48"/>
    <mtx name="omacron" width="1024" lsb="48"/>
    <mtx name="one" width="1024" lsb="157"/>
    <mtx name="one.numerator" width="614" lsb="55"/>
    <mtx name="onehalf" width="1536" lsb="11"/>
    <mtx name="oneinferior" width="614" lsb="55"/>
    <mtx name="onequarter" width="1536" lsb="31"/>
    <mtx name="onesuperior" width="614" lsb="55"/>
    <mtx name="ordfeminine" width="614" lsb="5"/>
    <mtx name="ordmasculine" width="676" lsb="32"/>
    <mtx name="oslash" width="1024" lsb="44"/>
    <mtx name="otilde" width="1024" lsb="48"/>
    <mtx name="p" width="1139" lsb="50"/>
    <mtx name="paragraph" width="1106" lsb="140"/>
    <mtx name="parenleft" width="682" lsb="66"/>
    <mtx name="parenright" width="682" lsb="26"/>
    <mtx name="partialdiff" width="1012" lsb="52"/>
    <mtx name="percent" width="2048" lsb="197"/>
    <mtx name="period" width="512" lsb="92"/>
    <mtx name="periodcentered" width="683" lsb="177"/>
    <mtx name="perthousand" width="2048" lsb="20"/>
    <mtx name="pi" width="1122" lsb="16"/>
    <mtx name="plus" width="1167" lsb="148"/>
    <mtx name="plusminus" width="1124" lsb="127"/>
    <mtx name="product" width="1686" lsb="90"/>
    <mtx name="q" width="1139" lsb="74"/>
    <mtx name="question" width="1024" lsb="122"/>
    <mtx name="questiondown" width="1024" lsb="121"/>
    <mtx name="quotedbl" width="1137" lsb="195"/>
    <mtx name="quotedblbase" width="1024" lsb="140"/>
    <mtx name="quotedblleft" width="1024" lsb="142"/>
    <mtx name="quotedblleftsmall" width="1051" lsb="146"/>
    <mtx name="quotedblright" width="1024" lsb="138"/>
    <mtx name="quotedblrightsmall" width="1051" lsb="142"/>
    <mtx name="quotedblsmall" width="1032" lsb="130"/>
    <mtx name="quoteleft" width="682" lsb="169"/>
    <mtx name="quoteleftsmall" width="631" lsb="146"/>
    <mtx name="quoteright" width="682" lsb="165"/>
    <mtx name="quoterightsmall" width="631" lsb="142"/>
    <mtx name="quotesinglbase" width="682" lsb="164"/>
    <mtx name="quotesingle" width="569" lsb="120"/>
    <mtx name="quotesinglesmall" width="590" lsb="130"/>
    <mtx name="r" width="909" lsb="80"/>
    <mtx name="racute" width="909" lsb="80"/>
    <mtx name="radical" width="1124" lsb="2"/>
    <mtx name="rcaron" width="909" lsb="80"/>
    <mtx name="rcommaaccent" width="909" lsb="80"/>
    <mtx name="registered" width="1530" lsb="219"/>
    <mtx name="ring" width="682" lsb="118"/>
    <mtx name="s" width="797" lsb="42"/>
    <mtx name="sacute" width="797" lsb="42"/>
    <mtx name="scaron" width="797" lsb="42"/>
    <mtx name="scedilla" width="797" lsb="42"/>
    <mtx name="scircumflex" width="797" lsb="42"/>
    <mtx name="scommaaccent" width="797" lsb="42"/>
    <mtx name="section" width="1024" lsb="68"/>
    <mtx name="semicolon" width="682" lsb="158"/>
    <mtx name="seven" width="1024" lsb="70"/>
    <mtx name="six" width="1024" lsb="50"/>
    <mtx name="slash" width="569" lsb="-110"/>
    <mtx name="space" width="512" lsb="0"/>
    <mtx name="sterling" width="1024" lsb="44"/>
    <mtx name="summation" width="1460" lsb="95"/>
    <mtx name="t" width="682" lsb="14"/>
    <mtx name="tacute" width="682" lsb="14"/>
    <mtx name="tcaron" width="1067" lsb="40"/>
    <mtx name="tcedilla" width="682" lsb="14"/>
    <mtx name="tcommaaccent" width="682" lsb="14"/>
    <mtx name="thorn" width="1139" lsb="31"/>
    <mtx name="three" width="1024" lsb="63"/>
    <mtx name="threeinferior" width="614" lsb="13"/>
    <mtx name="threequarters" width="1536" lsb="20"/>
    <mtx name="threesuperior" width="614" lsb="13"/>
    <mtx name="tilde" width="682" lsb="27"/>
    <mtx name="trademark" width="2048" lsb="35"/>
    <mtx name="two" width="1024" lsb="50"/>
    <mtx name="twoinferior" width="614" lsb="5"/>
    <mtx name="twosuperior" width="614" lsb="5"/>
    <mtx name="u" width="1139" lsb="37"/>
    <mtx name="uacute" width="1139" lsb="37"/>
    <mtx name="ubreve" width="1139" lsb="37"/>
    <mtx name="ucircumflex" width="1139" lsb="37"/>
    <mtx name="udieresis" width="1139" lsb="37"/>
    <mtx name="ugrave" width="1139" lsb="37"/>
    <mtx name="uhungarumlaut" width="1139" lsb="37"/>
    <mtx name="umacron" width="1139" lsb="37"/>
    <mtx name="underscore" width="1024" lsb="-19"/>
    <mtx name="uni01F4" width="1593" lsb="130"/>
    <mtx name="uni01F5" width="1024" lsb="26"/>
    <mtx name="uni03BC" width="1161" lsb="31"/>
    <mtx name="uni048A" width="1593" lsb="70"/>
    <mtx name="uni048B" width="1180" lsb="44"/>
    <mtx name="uni048C" width="1354" lsb="20"/>
    <mtx name="uni048D" width="1083" lsb="20"/>
    <mtx name="uni04CF" width="569" lsb="32"/>
    <mtx name="uni04F6" width="1303" lsb="100"/>
    <mtx name="uni04F7" width="930" lsb="44"/>
    <mtx name="uni0512" width="1526" lsb="66"/>
    <mtx name="uni0513" width="1149" lsb="21"/>
    <mtx name="uni051C" width="2048" lsb="24"/>
    <mtx name="uni051D" width="1479" lsb="4"/>
    <mtx name="uni0524" width="1593" lsb="70"/>
    <mtx name="uni0525" width="1180" lsb="44"/>
    <mtx name="uni0526" width="1503" lsb="70"/>
    <mtx name="uni0527" width="1139" lsb="25"/>
    <mtx name="uni1E30" width="1593" lsb="70"/>
    <mtx name="uni1E31" width="1139" lsb="30"/>
    <mtx name="uni1E54" width="1251" lsb="65"/>
    <mtx name="uni1E55" width="1139" lsb="50"/>
    <mtx name="uni2011" width="801" lsb="122"/>
    <mtx name="uni20B4" width="1139" lsb="85"/>
    <mtx name="uni20BD" width="1024" lsb="60"/>
    <mtx name="uni2126" width="1573" lsb="63"/>
    <mtx name="uni2206" width="1253" lsb="24"/>
    <mtx name="uniFEFF" width="0" lsb="0"/>
    <mtx name="uogonek" width="1139" lsb="37"/>
    <mtx name="uring" width="1139" lsb="37"/>
    <mtx name="v" width="1024" lsb="4"/>
    <mtx name="vacute" width="1024" lsb="4"/>
    <mtx name="w" width="1479" lsb="4"/>
    <mtx name="x" width="1024" lsb="13"/>
    <mtx name="y" width="1024" lsb="15"/>
    <mtx name="yacute" width="1024" lsb="15"/>
    <mtx name="ydieresis" width="1024" lsb="15"/>
    <mtx name="yen" width="1024" lsb="-110"/>
    <mtx name="z" width="909" lsb="44"/>
    <mtx name="zacute" width="909" lsb="44"/>
    <mtx name="zcaron" width="909" lsb="44"/>
    <mtx name="zdotaccent" width="909" lsb="44"/>
    <mtx name="zero" width="1024" lsb="65"/>
  </hmtx>

  <LTSH>
    <yPel name=".notdef" value="1"/>
    <yPel name=".null" value="1"/>
    <yPel name="A" value="46"/>
    <yPel name="AE" value="1"/>
    <yPel name="Aacute" value="46"/>
    <yPel name="Abreve" value="46"/>
    <yPel name="Accent" value="1"/>
    <yPel name="Acircumflex" value="46"/>
    <yPel name="Acute" value="17"/>
    <yPel name="Adieresis" value="46"/>
    <yPel name="Agrave" value="46"/>
    <yPel name="Amacron" value="46"/>
    <yPel name="Aogonek" value="46"/>
    <yPel name="Apostrophe" value="1"/>
    <yPel name="Aring" value="46"/>
    <yPel name="Atilde" value="46"/>
    <yPel name="B" value="1"/>
    <yPel name="Bacute" value="1"/>
    <yPel name="Breve" value="1"/>
    <yPel name="C" value="46"/>
    <yPel name="Cacute" value="46"/>
    <yPel name="Caron" value="1"/>
    <yPel name="Ccaron" value="46"/>
    <yPel name="Ccedilla" value="46"/>
    <yPel name="Ccircumflex" value="46"/>
    <yPel name="Cedilla" value="1"/>
    <yPel name="Circumflex" value="1"/>
    <yPel name="Commaaccent" value="1"/>
    <yPel name="D" value="46"/>
    <yPel name="Dacute" value="46"/>
    <yPel name="Dcaron" value="46"/>
    <yPel name="Dcroat" value="46"/>
    <yPel name="Delta" value="1"/>
    <yPel name="Dieresis" value="1"/>
    <yPel name="DieresisCyrBreve" value="1"/>
    <yPel name="Dotaccent" value="1"/>
    <yPel name="E" value="1"/>
    <yPel name="Eacute" value="1"/>
    <yPel name="Ecaron" value="1"/>
    <yPel name="Ecircumflex" value="1"/>
    <yPel name="Edieresis" value="1"/>
    <yPel name="Edotaccent" value="1"/>
    <yPel name="Egrave" value="1"/>
    <yPel name="Emacron" value="1"/>
    <yPel name="Eogonek" value="1"/>
    <yPel name="Eth" value="46"/>
    <yPel name="Euro" value="1"/>
    <yPel name="Ezhcarel" value="1"/>
    <yPel name="Ezhcarelcaron" value="1"/>
    <yPel name="F" value="28"/>
    <yPel name="Facute" value="28"/>
    <yPel name="G" value="1"/>
    <yPel name="Gbreve" value="1"/>
    <yPel name="Gcircumflex" value="1"/>
    <yPel name="Gcommaaccent" value="1"/>
    <yPel name="Germandbls" value="32"/>
    <yPel name="Grave" value="17"/>
    <yPel name="H" value="1"/>
    <yPel name="Hacute" value="1"/>
    <yPel name="Hbar" value="1"/>
    <yPel name="Hcircumflex" value="1"/>
    <yPel name="Hdesc" value="1"/>
    <yPel name="Hungarumlaut" value="1"/>
    <yPel name="I" value="1"/>
    <yPel name="Iacute" value="1"/>
    <yPel name="Icircumflex" value="1"/>
    <yPel name="Idieresis" value="1"/>
    <yPel name="Idotaccent" value="1"/>
    <yPel name="Igrave" value="1"/>
    <yPel name="Imacron" value="1"/>
    <yPel name="Iogonek" value="1"/>
    <yPel name="J" value="1"/>
    <yPel name="Jcircumflex" value="1"/>
    <yPel name="K" value="1"/>
    <yPel name="Kcommaaccent" value="1"/>
    <yPel name="L" value="1"/>
    <yPel name="Lacute" value="1"/>
    <yPel name="Lacutecarel" value="1"/>
    <yPel name="Lcaron" value="1"/>
    <yPel name="Lcommaaccent" value="1"/>
    <yPel name="Lslash" value="1"/>
    <yPel name="M" value="10"/>
    <yPel name="Macron" value="2"/>
    <yPel name="Macute" value="10"/>
    <yPel name="N" value="46"/>
    <yPel name="Nacute" value="46"/>
    <yPel name="Ncaron" value="46"/>
    <yPel name="Ncommaaccent" value="46"/>
    <yPel name="Ntilde" value="46"/>
    <yPel name="O" value="1"/>
    <yPel name="OE" value="1"/>
    <yPel name="Oacute" value="1"/>
    <yPel name="Ocircumflex" value="1"/>
    <yPel name="Odieresis" value="1"/>
    <yPel name="Ogonek" value="1"/>
    <yPel name="Ograve" value="1"/>
    <yPel name="Ohungarumlaut" value="1"/>
    <yPel name="Omacron" value="1"/>
    <yPel name="Omega" value="1"/>
    <yPel name="Oslash" value="1"/>
    <yPel name="Otilde" value="1"/>
    <yPel name="P" value="28"/>
    <yPel name="Q" value="1"/>
    <yPel name="R" value="46"/>
    <yPel name="Racute" value="46"/>
    <yPel name="Rcaron" value="46"/>
    <yPel name="Rcommaaccent" value="46"/>
    <yPel name="Ring" value="35"/>
    <yPel name="S" value="1"/>
    <yPel name="Sacute" value="1"/>
    <yPel name="Scaron" value="1"/>
    <yPel name="Scedilla" value="1"/>
    <yPel name="Scircumflex" value="1"/>
    <yPel name="Scommaaccent" value="1"/>
    <yPel name="T" value="1"/>
    <yPel name="Tacute" value="1"/>
    <yPel name="Tcaron" value="1"/>
    <yPel name="Tcedilla" value="1"/>
    <yPel name="Tcommaaccent" value="1"/>
    <yPel name="Thorn" value="28"/>
    <yPel name="Tilde" value="1"/>
    <yPel name="U" value="46"/>
    <yPel name="Uacute" value="46"/>
    <yPel name="Ubreve" value="46"/>
    <yPel name="Ucircumflex" value="46"/>
    <yPel name="Udieresis" value="46"/>
    <yPel name="Ugrave" value="46"/>
    <yPel name="Uhungarumlaut" value="46"/>
    <yPel name="Umacron" value="46"/>
    <yPel name="Uogonek" value="46"/>
    <yPel name="Uring" value="46"/>
    <yPel name="V" value="46"/>
    <yPel name="Vacute" value="46"/>
    <yPel name="W" value="1"/>
    <yPel name="X" value="46"/>
    <yPel name="Y" value="46"/>
    <yPel name="Yacute" value="46"/>
    <yPel name="Ydieresis" value="46"/>
    <yPel name="Z" value="1"/>
    <yPel name="Zacute" value="1"/>
    <yPel name="Zcaron" value="1"/>
    <yPel name="Zdotaccent" value="1"/>
    <yPel name="a" value="1"/>
    <yPel name="aacute" value="1"/>
    <yPel name="abreve" value="1"/>
    <yPel name="acircumflex" value="1"/>
    <yPel name="acute" value="1"/>
    <yPel name="acutecomb" value="1"/>
    <yPel name="adieresis" value="1"/>
    <yPel name="ae" value="46"/>
    <yPel name="afii10017" value="46"/>
    <yPel name="afii10018" value="32"/>
    <yPel name="afii10019" value="1"/>
    <yPel name="afii10020" value="1"/>
    <yPel name="afii10021" value="1"/>
    <yPel name="afii10022" value="1"/>
    <yPel name="afii10023" value="1"/>
    <yPel name="afii10024" value="46"/>
    <yPel name="afii10025" value="1"/>
    <yPel name="afii10026" value="1"/>
    <yPel name="afii10027" value="1"/>
    <yPel name="afii10027hook" value="1"/>
    <yPel name="afii10028" value="1"/>
    <yPel name="afii10029" value="1"/>
    <yPel name="afii10030" value="10"/>
    <yPel name="afii10031" value="1"/>
    <yPel name="afii10032" value="1"/>
    <yPel name="afii10033" value="1"/>
    <yPel name="afii10034" value="28"/>
    <yPel name="afii10035" value="46"/>
    <yPel name="afii10036" value="1"/>
    <yPel name="afii10037" value="48"/>
    <yPel name="afii10038" value="40"/>
    <yPel name="afii10039" value="46"/>
    <yPel name="afii10040" value="1"/>
    <yPel name="afii10041" value="48"/>
    <yPel name="afii10042" value="1"/>
    <yPel name="afii10043" value="1"/>
    <yPel name="afii10044" value="1"/>
    <yPel name="afii10045" value="29"/>
    <yPel name="afii10046" value="32"/>
    <yPel name="afii10047" value="15"/>
    <yPel name="afii10048" value="1"/>
    <yPel name="afii10049" value="46"/>
    <yPel name="afii10050" value="1"/>
    <yPel name="afii10051" value="1"/>
    <yPel name="afii10052" value="1"/>
    <yPel name="afii10053" value="15"/>
    <yPel name="afii10053dieresis" value="15"/>
    <yPel name="afii10054" value="1"/>
    <yPel name="afii10055" value="1"/>
    <yPel name="afii10055.alt" value="1"/>
    <yPel name="afii10056" value="1"/>
    <yPel name="afii10057" value="1"/>
    <yPel name="afii10058" value="1"/>
    <yPel name="afii10059" value="1"/>
    <yPel name="afii10060" value="1"/>
    <yPel name="afii10061" value="1"/>
    <yPel name="afii10062" value="48"/>
    <yPel name="afii10065" value="1"/>
    <yPel name="afii10066" value="1"/>
    <yPel name="afii10067" value="1"/>
    <yPel name="afii10068" value="1"/>
    <yPel name="afii10069" value="1"/>
    <yPel name="afii10070" value="1"/>
    <yPel name="afii10071" value="1"/>
    <yPel name="afii10072" value="1"/>
    <yPel name="afii10073" value="1"/>
    <yPel name="afii10074" value="1"/>
    <yPel name="afii10075" value="1"/>
    <yPel name="afii10075hook" value="1"/>
    <yPel name="afii10076" value="1"/>
    <yPel name="afii10077" value="1"/>
    <yPel name="afii10078" value="12"/>
    <yPel name="afii10079" value="1"/>
    <yPel name="afii10080" value="1"/>
    <yPel name="afii10081" value="1"/>
    <yPel name="afii10082" value="1"/>
    <yPel name="afii10083" value="1"/>
    <yPel name="afii10084" value="1"/>
    <yPel name="afii10085" value="1"/>
    <yPel name="afii10086" value="1"/>
    <yPel name="afii10087" value="1"/>
    <yPel name="afii10088" value="1"/>
    <yPel name="afii10089" value="1"/>
    <yPel name="afii10090" value="1"/>
    <yPel name="afii10091" value="1"/>
    <yPel name="afii10092" value="19"/>
    <yPel name="afii10093" value="17"/>
    <yPel name="afii10094" value="1"/>
    <yPel name="afii10095" value="1"/>
    <yPel name="afii10096" value="1"/>
    <yPel name="afii10097" value="13"/>
    <yPel name="afii10098" value="1"/>
    <yPel name="afii10099" value="1"/>
    <yPel name="afii10100" value="1"/>
    <yPel name="afii10101" value="1"/>
    <yPel name="afii10101dieresis" value="1"/>
    <yPel name="afii10102" value="1"/>
    <yPel name="afii10103" value="1"/>
    <yPel name="afii10103.alt" value="1"/>
    <yPel name="afii10104" value="1"/>
    <yPel name="afii10105" value="1"/>
    <yPel name="afii10106" value="26"/>
    <yPel name="afii10107" value="1"/>
    <yPel name="afii10108" value="1"/>
    <yPel name="afii10109" value="1"/>
    <yPel name="afii10110" value="1"/>
    <yPel name="afii10145" value="1"/>
    <yPel name="afii10146" value="37"/>
    <yPel name="afii10147" value="1"/>
    <yPel name="afii10148" value="20"/>
    <yPel name="afii10193" value="1"/>
    <yPel name="afii10194" value="1"/>
    <yPel name="afii10195" value="1"/>
    <yPel name="afii10196" value="20"/>
    <yPel name="afii57929" value="1"/>
    <yPel name="afii61289" value="1"/>
    <yPel name="afii61352" value="1"/>
    <yPel name="agrave" value="1"/>
    <yPel name="amacron" value="1"/>
    <yPel name="ampersand" value="22"/>
    <yPel name="aogonek" value="1"/>
    <yPel name="approxequal" value="1"/>
    <yPel name="aring" value="1"/>
    <yPel name="asciicircum" value="38"/>
    <yPel name="asciitilde" value="1"/>
    <yPel name="asterisk" value="1"/>
    <yPel name="at" value="1"/>
    <yPel name="atilde" value="1"/>
    <yPel name="b" value="1"/>
    <yPel name="backslash" value="1"/>
    <yPel name="bacute" value="1"/>
    <yPel name="bar" value="1"/>
    <yPel name="braceleft" value="1"/>
    <yPel name="braceright" value="1"/>
    <yPel name="bracketleft" value="1"/>
    <yPel name="bracketright" value="1"/>
    <yPel name="breve" value="1"/>
    <yPel name="brokenbar" value="1"/>
    <yPel name="bullet" value="1"/>
    <yPel name="c" value="1"/>
    <yPel name="cacute" value="1"/>
    <yPel name="caron" value="1"/>
    <yPel name="caron.L" value="1"/>
    <yPel name="caron.l" value="1"/>
    <yPel name="ccaron" value="1"/>
    <yPel name="ccedilla" value="1"/>
    <yPel name="ccircumflex" value="1"/>
    <yPel name="cedilla" value="1"/>
    <yPel name="cent" value="1"/>
    <yPel name="circumflex" value="1"/>
    <yPel name="colon" value="1"/>
    <yPel name="comma" value="1"/>
    <yPel name="commaaccent" value="1"/>
    <yPel name="copyright" value="3"/>
    <yPel name="currency" value="1"/>
    <yPel name="cyrAE" value="1"/>
    <yPel name="cyrAcyrbreve" value="46"/>
    <yPel name="cyrAdieresis" value="46"/>
    <yPel name="cyrAmacron" value="46"/>
    <yPel name="cyrBreve" value="1"/>
    <yPel name="cyrChedesc" value="48"/>
    <yPel name="cyrChedescleft" value="48"/>
    <yPel name="cyrChedieresis" value="48"/>
    <yPel name="cyrChehook" value="48"/>
    <yPel name="cyrChevertbar" value="48"/>
    <yPel name="cyrDze" value="1"/>
    <yPel name="cyrEcyrbreve" value="15"/>
    <yPel name="cyrEdieresis" value="15"/>
    <yPel name="cyrEdotaccent" value="15"/>
    <yPel name="cyrEldesc" value="1"/>
    <yPel name="cyrEltail" value="1"/>
    <yPel name="cyrEmacron" value="15"/>
    <yPel name="cyrEmtail" value="10"/>
    <yPel name="cyrEnGe" value="1"/>
    <yPel name="cyrEndesc" value="1"/>
    <yPel name="cyrEnhook" value="1"/>
    <yPel name="cyrEntail" value="1"/>
    <yPel name="cyrEpsilon" value="1"/>
    <yPel name="cyrEpsilondieresis" value="1"/>
    <yPel name="cyrErcrossed" value="28"/>
    <yPel name="cyrEstail" value="46"/>
    <yPel name="cyrEstail.alt" value="46"/>
    <yPel name="cyrEstail.alt02" value="46"/>
    <yPel name="cyrGebar" value="1"/>
    <yPel name="cyrGebar.alt" value="28"/>
    <yPel name="cyrGehook" value="10"/>
    <yPel name="cyrH" value="48"/>
    <yPel name="cyrHadesc" value="46"/>
    <yPel name="cyrHahook" value="46"/>
    <yPel name="cyrHcrossed" value="48"/>
    <yPel name="cyrI" value="1"/>
    <yPel name="cyrIdieresis" value="1"/>
    <yPel name="cyrIecyrbreve" value="1"/>
    <yPel name="cyrIedieresiscyrbreve" value="1"/>
    <yPel name="cyrIedieresismacron" value="1"/>
    <yPel name="cyrIehook" value="47"/>
    <yPel name="cyrIehookogonek" value="47"/>
    <yPel name="cyrIemacron" value="1"/>
    <yPel name="cyrImacron" value="1"/>
    <yPel name="cyrKaback" value="1"/>
    <yPel name="cyrKabar" value="1"/>
    <yPel name="cyrKadesc" value="1"/>
    <yPel name="cyrKahook" value="41"/>
    <yPel name="cyrKavertbar" value="1"/>
    <yPel name="cyrObar" value="1"/>
    <yPel name="cyrObarcyrbreve" value="1"/>
    <yPel name="cyrObardieresis" value="1"/>
    <yPel name="cyrObardieresiscyrbreve" value="1"/>
    <yPel name="cyrOcyrbreve" value="1"/>
    <yPel name="cyrOdieresis" value="1"/>
    <yPel name="cyrOdotaccent" value="1"/>
    <yPel name="cyrOhook" value="1"/>
    <yPel name="cyrOmacron" value="1"/>
    <yPel name="cyrPehook" value="1"/>
    <yPel name="cyrTeTse" value="50"/>
    <yPel name="cyrTedesc" value="1"/>
    <yPel name="cyrUacute" value="48"/>
    <yPel name="cyrUdblacute" value="48"/>
    <yPel name="cyrUdieresis" value="48"/>
    <yPel name="cyrUmacron" value="48"/>
    <yPel name="cyrYacyrbreve" value="46"/>
    <yPel name="cyrYamacron" value="46"/>
    <yPel name="cyrYerucyrbreve" value="29"/>
    <yPel name="cyrYerudieresis" value="29"/>
    <yPel name="cyrYerumacron" value="29"/>
    <yPel name="cyrYucyrbreve" value="1"/>
    <yPel name="cyrYumacron" value="1"/>
    <yPel name="cyrZecaron" value="1"/>
    <yPel name="cyrZedieresis" value="1"/>
    <yPel name="cyrZetail" value="1"/>
    <yPel name="cyrZetail.alt" value="1"/>
    <yPel name="cyrZhedesc" value="46"/>
    <yPel name="cyrZhedieresis" value="46"/>
    <yPel name="cyracyrbreve" value="1"/>
    <yPel name="cyradieresis" value="1"/>
    <yPel name="cyrae" value="46"/>
    <yPel name="cyramacron" value="1"/>
    <yPel name="cyrbreve" value="1"/>
    <yPel name="cyrchedesc" value="1"/>
    <yPel name="cyrchedescleft" value="1"/>
    <yPel name="cyrchedieresis" value="1"/>
    <yPel name="cyrchehook" value="1"/>
    <yPel name="cyrchevertbar" value="1"/>
    <yPel name="cyrdze" value="1"/>
    <yPel name="cyrecyrbreve" value="1"/>
    <yPel name="cyredieresis" value="1"/>
    <yPel name="cyredotaccent" value="1"/>
    <yPel name="cyreldesc" value="1"/>
    <yPel name="cyreltail" value="1"/>
    <yPel name="cyremacron" value="1"/>
    <yPel name="cyremtail" value="12"/>
    <yPel name="cyrendesc" value="1"/>
    <yPel name="cyrenge" value="1"/>
    <yPel name="cyrenhook" value="1"/>
    <yPel name="cyrentail" value="1"/>
    <yPel name="cyrepsilon" value="1"/>
    <yPel name="cyrepsilondieresis" value="1"/>
    <yPel name="cyrercrossed" value="1"/>
    <yPel name="cyrestail" value="1"/>
    <yPel name="cyrestail.alt" value="1"/>
    <yPel name="cyrestail.alt02" value="1"/>
    <yPel name="cyrgebar" value="1"/>
    <yPel name="cyrgebar.alt" value="1"/>
    <yPel name="cyrgehook" value="14"/>
    <yPel name="cyrh" value="1"/>
    <yPel name="cyrhadesc" value="1"/>
    <yPel name="cyrhahook" value="1"/>
    <yPel name="cyrhcrossed" value="1"/>
    <yPel name="cyridieresis" value="1"/>
    <yPel name="cyriecyrbreve" value="1"/>
    <yPel name="cyriedieresiscyrbreve" value="1"/>
    <yPel name="cyriedieresismacron" value="1"/>
    <yPel name="cyriehook" value="1"/>
    <yPel name="cyriehookogonek" value="1"/>
    <yPel name="cyriemacron" value="1"/>
    <yPel name="cyrimacron" value="1"/>
    <yPel name="cyrinvE" value="1"/>
    <yPel name="cyrinvEdieresis" value="1"/>
    <yPel name="cyrinve" value="1"/>
    <yPel name="cyrinvedieresis" value="1"/>
    <yPel name="cyrkaback" value="24"/>
    <yPel name="cyrkabar" value="1"/>
    <yPel name="cyrkadesc" value="1"/>
    <yPel name="cyrkahook" value="17"/>
    <yPel name="cyrkavertbar" value="1"/>
    <yPel name="cyrobar" value="1"/>
    <yPel name="cyrobarcyrbreve" value="1"/>
    <yPel name="cyrobardieresis" value="1"/>
    <yPel name="cyrobardieresiscyrbreve" value="1"/>
    <yPel name="cyrocyrbreve" value="1"/>
    <yPel name="cyrodieresis" value="1"/>
    <yPel name="cyrodotaccent" value="1"/>
    <yPel name="cyrohook" value="1"/>
    <yPel name="cyromacron" value="1"/>
    <yPel name="cyrpehook" value="1"/>
    <yPel name="cyrstraightU" value="46"/>
    <yPel name="cyrstraightUbar" value="46"/>
    <yPel name="cyrstraightu" value="1"/>
    <yPel name="cyrstraightubar" value="1"/>
    <yPel name="cyrtedesc" value="1"/>
    <yPel name="cyrtetse" value="1"/>
    <yPel name="cyruacute" value="1"/>
    <yPel name="cyrudblacute" value="1"/>
    <yPel name="cyrudieresis" value="1"/>
    <yPel name="cyrumacron" value="1"/>
    <yPel name="cyryacyrbreve" value="13"/>
    <yPel name="cyryamacron" value="13"/>
    <yPel name="cyryerucyrbreve" value="17"/>
    <yPel name="cyryerudieresis" value="17"/>
    <yPel name="cyryerumacron" value="17"/>
    <yPel name="cyryucyrbreve" value="1"/>
    <yPel name="cyryumacron" value="1"/>
    <yPel name="cyrzecaron" value="1"/>
    <yPel name="cyrzedieresis" value="1"/>
    <yPel name="cyrzetail" value="1"/>
    <yPel name="cyrzetail.alt" value="1"/>
    <yPel name="cyrzhedesc" value="1"/>
    <yPel name="cyrzhedieresis" value="1"/>
    <yPel name="d" value="1"/>
    <yPel name="dacute" value="32"/>
    <yPel name="dagger" value="1"/>
    <yPel name="daggerdbl" value="1"/>
    <yPel name="dcaron" value="1"/>
    <yPel name="dcroat" value="1"/>
    <yPel name="degree" value="1"/>
    <yPel name="dieresis" value="1"/>
    <yPel name="divide" value="1"/>
    <yPel name="division" value="1"/>
    <yPel name="dollar" value="1"/>
    <yPel name="dotaccent" value="1"/>
    <yPel name="dotlessi" value="1"/>
    <yPel name="dotlessj" value="1"/>
    <yPel name="e" value="1"/>
    <yPel name="eacute" value="1"/>
    <yPel name="ecaron" value="1"/>
    <yPel name="ecircumflex" value="1"/>
    <yPel name="edieresis" value="1"/>
    <yPel name="edotaccent" value="1"/>
    <yPel name="egrave" value="1"/>
    <yPel name="eight" value="1"/>
    <yPel name="ellipsis" value="1"/>
    <yPel name="emacron" value="1"/>
    <yPel name="emdash" value="1"/>
    <yPel name="endash" value="1"/>
    <yPel name="eogonek" value="1"/>
    <yPel name="equal" value="1"/>
    <yPel name="estimated" value="1"/>
    <yPel name="eth" value="1"/>
    <yPel name="exclam" value="1"/>
    <yPel name="exclamdown" value="1"/>
    <yPel name="ezhcarel" value="2"/>
    <yPel name="ezhcarelcaron" value="2"/>
    <yPel name="f" value="1"/>
    <yPel name="facute" value="1"/>
    <yPel name="fi" value="1"/>
    <yPel name="five" value="1"/>
    <yPel name="fl" value="1"/>
    <yPel name="florin" value="1"/>
    <yPel name="four" value="1"/>
    <yPel name="fourinferior" value="1"/>
    <yPel name="fraction" value="1"/>
    <yPel name="g" value="1"/>
    <yPel name="gbreve" value="1"/>
    <yPel name="gcircumflex" value="1"/>
    <yPel name="gcommaaccent" value="1"/>
    <yPel name="germandbls" value="1"/>
    <yPel name="grave" value="1"/>
    <yPel name="greater" value="1"/>
    <yPel name="greaterequal" value="1"/>
    <yPel name="guillemotleft" value="1"/>
    <yPel name="guillemotright" value="1"/>
    <yPel name="guilsinglleft" value="1"/>
    <yPel name="guilsinglright" value="1"/>
    <yPel name="h" value="1"/>
    <yPel name="hacute" value="1"/>
    <yPel name="hbar" value="1"/>
    <yPel name="hcircumflex" value="1"/>
    <yPel name="hdesc" value="1"/>
    <yPel name="hungarumlaut" value="1"/>
    <yPel name="hyphen" value="1"/>
    <yPel name="i" value="1"/>
    <yPel name="iacute" value="1"/>
    <yPel name="icircumflex" value="1"/>
    <yPel name="idieresis" value="1"/>
    <yPel name="igrave" value="1"/>
    <yPel name="imacron" value="1"/>
    <yPel name="infinity" value="1"/>
    <yPel name="integral" value="1"/>
    <yPel name="iogonek" value="1"/>
    <yPel name="j" value="1"/>
    <yPel name="jcircumflex" value="1"/>
    <yPel name="k" value="1"/>
    <yPel name="kcommaaccent" value="1"/>
    <yPel name="l" value="1"/>
    <yPel name="lacute" value="1"/>
    <yPel name="lacutecarel" value="1"/>
    <yPel name="lcaron" value="1"/>
    <yPel name="lcommaaccent" value="1"/>
    <yPel name="less" value="1"/>
    <yPel name="lessequal" value="1"/>
    <yPel name="logicalnot" value="1"/>
    <yPel name="longs" value="1"/>
    <yPel name="lozenge" value="2"/>
    <yPel name="lslash" value="1"/>
    <yPel name="m" value="22"/>
    <yPel name="macron" value="1"/>
    <yPel name="macute" value="22"/>
    <yPel name="minus" value="1"/>
    <yPel name="mu" value="1"/>
    <yPel name="multiply" value="1"/>
    <yPel name="n" value="1"/>
    <yPel name="nacute" value="1"/>
    <yPel name="ncaron" value="1"/>
    <yPel name="ncommaaccent" value="1"/>
    <yPel name="nine" value="1"/>
    <yPel name="nonmarkingreturn" value="1"/>
    <yPel name="notequal" value="1"/>
    <yPel name="ntilde" value="1"/>
    <yPel name="numbersign" value="1"/>
    <yPel name="o" value="1"/>
    <yPel name="oacute" value="1"/>
    <yPel name="ocircumflex" value="1"/>
    <yPel name="odieresis" value="1"/>
    <yPel name="oe" value="46"/>
    <yPel name="ogonek" value="1"/>
    <yPel name="ograve" value="1"/>
    <yPel name="ohungarumlaut" value="1"/>
    <yPel name="omacron" value="1"/>
    <yPel name="one" value="1"/>
    <yPel name="one.numerator" value="36"/>
    <yPel name="onehalf" value="1"/>
    <yPel name="oneinferior" value="36"/>
    <yPel name="onequarter" value="1"/>
    <yPel name="onesuperior" value="36"/>
    <yPel name="ordfeminine" value="36"/>
    <yPel name="ordmasculine" value="1"/>
    <yPel name="oslash" value="1"/>
    <yPel name="otilde" value="1"/>
    <yPel name="p" value="1"/>
    <yPel name="paragraph" value="1"/>
    <yPel name="parenleft" value="1"/>
    <yPel name="parenright" value="1"/>
    <yPel name="partialdiff" value="2"/>
    <yPel name="percent" value="1"/>
    <yPel name="period" value="1"/>
    <yPel name="periodcentered" value="1"/>
    <yPel name="perthousand" value="1"/>
    <yPel name="pi" value="1"/>
    <yPel name="plus" value="1"/>
    <yPel name="plusminus" value="1"/>
    <yPel name="product" value="1"/>
    <yPel name="q" value="1"/>
    <yPel name="question" value="1"/>
    <yPel name="questiondown" value="1"/>
    <yPel name="quotedbl" value="1"/>
    <yPel name="quotedblbase" value="1"/>
    <yPel name="quotedblleft" value="1"/>
    <yPel name="quotedblleftsmall" value="1"/>
    <yPel name="quotedblright" value="1"/>
    <yPel name="quotedblrightsmall" value="1"/>
    <yPel name="quotedblsmall" value="1"/>
    <yPel name="quoteleft" value="1"/>
    <yPel name="quoteleftsmall" value="1"/>
    <yPel name="quoteright" value="1"/>
    <yPel name="quoterightsmall" value="1"/>
    <yPel name="quotesinglbase" value="1"/>
    <yPel name="quotesingle" value="1"/>
    <yPel name="quotesinglesmall" value="1"/>
    <yPel name="r" value="1"/>
    <yPel name="racute" value="1"/>
    <yPel name="radical" value="1"/>
    <yPel name="rcaron" value="1"/>
    <yPel name="rcommaaccent" value="1"/>
    <yPel name="registered" value="3"/>
    <yPel name="ring" value="1"/>
    <yPel name="s" value="1"/>
    <yPel name="sacute" value="1"/>
    <yPel name="scaron" value="1"/>
    <yPel name="scedilla" value="1"/>
    <yPel name="scircumflex" value="1"/>
    <yPel name="scommaaccent" value="1"/>
    <yPel name="section" value="1"/>
    <yPel name="semicolon" value="1"/>
    <yPel name="seven" value="1"/>
    <yPel name="six" value="1"/>
    <yPel name="slash" value="1"/>
    <yPel name="space" value="1"/>
    <yPel name="sterling" value="1"/>
    <yPel name="summation" value="1"/>
    <yPel name="t" value="1"/>
    <yPel name="tacute" value="1"/>
    <yPel name="tcaron" value="1"/>
    <yPel name="tcedilla" value="1"/>
    <yPel name="tcommaaccent" value="1"/>
    <yPel name="thorn" value="1"/>
    <yPel name="three" value="1"/>
    <yPel name="threeinferior" value="36"/>
    <yPel name="threequarters" value="1"/>
    <yPel name="threesuperior" value="36"/>
    <yPel name="tilde" value="1"/>
    <yPel name="trademark" value="1"/>
    <yPel name="two" value="1"/>
    <yPel name="twoinferior" value="36"/>
    <yPel name="twosuperior" value="36"/>
    <yPel name="u" value="1"/>
    <yPel name="uacute" value="1"/>
    <yPel name="ubreve" value="1"/>
    <yPel name="ucircumflex" value="1"/>
    <yPel name="udieresis" value="1"/>
    <yPel name="ugrave" value="1"/>
    <yPel name="uhungarumlaut" value="1"/>
    <yPel name="umacron" value="1"/>
    <yPel name="underscore" value="1"/>
    <yPel name="uni01F4" value="1"/>
    <yPel name="uni01F5" value="1"/>
    <yPel name="uni03BC" value="1"/>
    <yPel name="uni048A" value="1"/>
    <yPel name="uni048B" value="1"/>
    <yPel name="uni048C" value="32"/>
    <yPel name="uni048D" value="1"/>
    <yPel name="uni04CF" value="1"/>
    <yPel name="uni04F6" value="1"/>
    <yPel name="uni04F7" value="1"/>
    <yPel name="uni0512" value="1"/>
    <yPel name="uni0513" value="1"/>
    <yPel name="uni051C" value="1"/>
    <yPel name="uni051D" value="46"/>
    <yPel name="uni0524" value="1"/>
    <yPel name="uni0525" value="1"/>
    <yPel name="uni0526" value="48"/>
    <yPel name="uni0527" value="1"/>
    <yPel name="uni1E30" value="1"/>
    <yPel name="uni1E31" value="1"/>
    <yPel name="uni1E54" value="28"/>
    <yPel name="uni1E55" value="1"/>
    <yPel name="uni2011" value="1"/>
    <yPel name="uni20B4" value="1"/>
    <yPel name="uni20BD" value="1"/>
    <yPel name="uni2126" value="1"/>
    <yPel name="uni2206" value="1"/>
    <yPel name="uniFEFF" value="1"/>
    <yPel name="uogonek" value="1"/>
    <yPel name="uring" value="1"/>
    <yPel name="v" value="1"/>
    <yPel name="vacute" value="1"/>
    <yPel name="w" value="46"/>
    <yPel name="x" value="1"/>
    <yPel name="y" value="1"/>
    <yPel name="yacute" value="1"/>
    <yPel name="ydieresis" value="1"/>
    <yPel name="yen" value="1"/>
    <yPel name="z" value="1"/>
    <yPel name="zacute" value="1"/>
    <yPel name="zcaron" value="1"/>
    <yPel name="zdotaccent" value="1"/>
    <yPel name="zero" value="1"/>
  </LTSH>

  <VDMX>
    <version value="0"/>
    <ratRanges>
      <ratRange bCharSet="1" groupIndex="0" xRatio="1" yEndRatio="1" yStartRatio="1"/>
      <ratRange bCharSet="1" groupIndex="1" xRatio="5" yEndRatio="3" yStartRatio="3"/>
      <ratRange bCharSet="1" groupIndex="2" xRatio="2" yEndRatio="1" yStartRatio="1"/>
    </ratRanges>
    <groups>
      <group index="0">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="9" yMin="-2"/>
        <record yPelHeight="9" yMax="10" yMin="-2"/>
        <record yPelHeight="10" yMax="10" yMin="-2"/>
        <record yPelHeight="11" yMax="11" yMin="-2"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="12" yMin="-3"/>
        <record yPelHeight="14" yMax="14" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-4"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="16" yMin="-4"/>
        <record yPelHeight="19" yMax="17" yMin="-5"/>
        <record yPelHeight="20" yMax="18" yMin="-5"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="20" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-5"/>
        <record yPelHeight="25" yMax="24" yMin="-5"/>
        <record yPelHeight="26" yMax="24" yMin="-6"/>
        <record yPelHeight="27" yMax="25" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="26" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="29" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="30" yMin="-7"/>
        <record yPelHeight="34" yMax="31" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="35" yMin="-8"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="39" yMin="-9"/>
        <record yPelHeight="43" yMax="40" yMin="-9"/>
        <record yPelHeight="44" yMax="41" yMin="-10"/>
        <record yPelHeight="45" yMax="42" yMin="-10"/>
        <record yPelHeight="46" yMax="43" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="44" yMin="-11"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="49" yMin="-12"/>
        <record yPelHeight="54" yMax="50" yMin="-12"/>
        <record yPelHeight="55" yMax="50" yMin="-12"/>
        <record yPelHeight="56" yMax="51" yMin="-12"/>
        <record yPelHeight="57" yMax="53" yMin="-12"/>
        <record yPelHeight="58" yMax="54" yMin="-13"/>
        <record yPelHeight="59" yMax="54" yMin="-13"/>
        <record yPelHeight="60" yMax="55" yMin="-13"/>
        <record yPelHeight="61" yMax="56" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="58" yMin="-14"/>
        <record yPelHeight="64" yMax="59" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-14"/>
        <record yPelHeight="67" yMax="61" yMin="-15"/>
        <record yPelHeight="68" yMax="62" yMin="-15"/>
        <record yPelHeight="69" yMax="63" yMin="-15"/>
        <record yPelHeight="70" yMax="64" yMin="-15"/>
        <record yPelHeight="71" yMax="65" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="67" yMin="-16"/>
        <record yPelHeight="74" yMax="68" yMin="-16"/>
        <record yPelHeight="75" yMax="69" yMin="-16"/>
        <record yPelHeight="76" yMax="69" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="71" yMin="-17"/>
        <record yPelHeight="79" yMax="73" yMin="-18"/>
        <record yPelHeight="80" yMax="73" yMin="-17"/>
        <record yPelHeight="81" yMax="74" yMin="-18"/>
        <record yPelHeight="82" yMax="75" yMin="-18"/>
        <record yPelHeight="83" yMax="75" yMin="-18"/>
        <record yPelHeight="84" yMax="77" yMin="-18"/>
        <record yPelHeight="85" yMax="78" yMin="-18"/>
        <record yPelHeight="86" yMax="79" yMin="-19"/>
        <record yPelHeight="87" yMax="79" yMin="-19"/>
        <record yPelHeight="88" yMax="80" yMin="-19"/>
        <record yPelHeight="89" yMax="81" yMin="-19"/>
        <record yPelHeight="90" yMax="83" yMin="-19"/>
        <record yPelHeight="91" yMax="83" yMin="-20"/>
        <record yPelHeight="92" yMax="84" yMin="-20"/>
        <record yPelHeight="93" yMax="85" yMin="-20"/>
        <record yPelHeight="94" yMax="85" yMin="-20"/>
        <record yPelHeight="95" yMax="87" yMin="-21"/>
        <record yPelHeight="96" yMax="88" yMin="-21"/>
        <record yPelHeight="97" yMax="89" yMin="-21"/>
        <record yPelHeight="98" yMax="89" yMin="-21"/>
        <record yPelHeight="99" yMax="90" yMin="-21"/>
        <record yPelHeight="100" yMax="92" yMin="-22"/>
        <record yPelHeight="101" yMax="93" yMin="-22"/>
        <record yPelHeight="102" yMax="93" yMin="-22"/>
        <record yPelHeight="103" yMax="94" yMin="-22"/>
        <record yPelHeight="104" yMax="95" yMin="-22"/>
        <record yPelHeight="105" yMax="95" yMin="-23"/>
        <record yPelHeight="106" yMax="97" yMin="-23"/>
        <record yPelHeight="107" yMax="98" yMin="-23"/>
        <record yPelHeight="108" yMax="99" yMin="-23"/>
        <record yPelHeight="109" yMax="99" yMin="-24"/>
        <record yPelHeight="110" yMax="100" yMin="-24"/>
        <record yPelHeight="111" yMax="102" yMin="-24"/>
        <record yPelHeight="112" yMax="103" yMin="-25"/>
        <record yPelHeight="113" yMax="103" yMin="-24"/>
        <record yPelHeight="114" yMax="104" yMin="-25"/>
        <record yPelHeight="115" yMax="105" yMin="-25"/>
        <record yPelHeight="116" yMax="105" yMin="-25"/>
        <record yPelHeight="117" yMax="107" yMin="-26"/>
        <record yPelHeight="118" yMax="108" yMin="-25"/>
        <record yPelHeight="119" yMax="109" yMin="-26"/>
        <record yPelHeight="120" yMax="109" yMin="-26"/>
        <record yPelHeight="121" yMax="110" yMin="-26"/>
        <record yPelHeight="122" yMax="112" yMin="-26"/>
        <record yPelHeight="123" yMax="113" yMin="-27"/>
        <record yPelHeight="124" yMax="113" yMin="-27"/>
        <record yPelHeight="125" yMax="114" yMin="-27"/>
        <record yPelHeight="126" yMax="115" yMin="-27"/>
        <record yPelHeight="127" yMax="116" yMin="-27"/>
        <record yPelHeight="128" yMax="117" yMin="-28"/>
        <record yPelHeight="129" yMax="118" yMin="-28"/>
        <record yPelHeight="130" yMax="119" yMin="-28"/>
        <record yPelHeight="131" yMax="119" yMin="-28"/>
        <record yPelHeight="132" yMax="120" yMin="-28"/>
        <record yPelHeight="133" yMax="122" yMin="-29"/>
        <record yPelHeight="134" yMax="123" yMin="-29"/>
        <record yPelHeight="135" yMax="123" yMin="-29"/>
        <record yPelHeight="136" yMax="124" yMin="-29"/>
        <record yPelHeight="137" yMax="125" yMin="-30"/>
        <record yPelHeight="138" yMax="126" yMin="-30"/>
        <record yPelHeight="139" yMax="127" yMin="-30"/>
        <record yPelHeight="140" yMax="128" yMin="-30"/>
        <record yPelHeight="141" yMax="129" yMin="-31"/>
        <record yPelHeight="142" yMax="129" yMin="-31"/>
        <record yPelHeight="143" yMax="130" yMin="-31"/>
        <record yPelHeight="144" yMax="132" yMin="-31"/>
        <record yPelHeight="145" yMax="133" yMin="-32"/>
        <record yPelHeight="146" yMax="133" yMin="-32"/>
        <record yPelHeight="147" yMax="134" yMin="-33"/>
        <record yPelHeight="148" yMax="135" yMin="-32"/>
        <record yPelHeight="149" yMax="136" yMin="-32"/>
        <record yPelHeight="150" yMax="137" yMin="-33"/>
        <record yPelHeight="151" yMax="138" yMin="-33"/>
        <record yPelHeight="152" yMax="139" yMin="-33"/>
        <record yPelHeight="153" yMax="139" yMin="-33"/>
        <record yPelHeight="154" yMax="141" yMin="-34"/>
        <record yPelHeight="155" yMax="142" yMin="-33"/>
        <record yPelHeight="156" yMax="143" yMin="-34"/>
        <record yPelHeight="157" yMax="143" yMin="-34"/>
        <record yPelHeight="158" yMax="144" yMin="-34"/>
        <record yPelHeight="159" yMax="145" yMin="-34"/>
        <record yPelHeight="160" yMax="146" yMin="-35"/>
        <record yPelHeight="161" yMax="147" yMin="-35"/>
        <record yPelHeight="162" yMax="148" yMin="-35"/>
        <record yPelHeight="163" yMax="149" yMin="-35"/>
        <record yPelHeight="164" yMax="149" yMin="-35"/>
        <record yPelHeight="165" yMax="151" yMin="-36"/>
        <record yPelHeight="166" yMax="152" yMin="-36"/>
        <record yPelHeight="167" yMax="153" yMin="-36"/>
        <record yPelHeight="168" yMax="153" yMin="-36"/>
        <record yPelHeight="169" yMax="154" yMin="-36"/>
        <record yPelHeight="170" yMax="155" yMin="-37"/>
        <record yPelHeight="171" yMax="157" yMin="-37"/>
        <record yPelHeight="172" yMax="157" yMin="-37"/>
        <record yPelHeight="173" yMax="158" yMin="-38"/>
        <record yPelHeight="174" yMax="159" yMin="-38"/>
        <record yPelHeight="175" yMax="159" yMin="-38"/>
        <record yPelHeight="176" yMax="161" yMin="-39"/>
        <record yPelHeight="177" yMax="162" yMin="-38"/>
        <record yPelHeight="178" yMax="163" yMin="-39"/>
        <record yPelHeight="179" yMax="163" yMin="-39"/>
        <record yPelHeight="180" yMax="164" yMin="-39"/>
        <record yPelHeight="181" yMax="166" yMin="-39"/>
        <record yPelHeight="182" yMax="167" yMin="-39"/>
        <record yPelHeight="183" yMax="167" yMin="-40"/>
        <record yPelHeight="184" yMax="168" yMin="-40"/>
        <record yPelHeight="185" yMax="169" yMin="-40"/>
        <record yPelHeight="186" yMax="169" yMin="-40"/>
        <record yPelHeight="187" yMax="171" yMin="-41"/>
        <record yPelHeight="188" yMax="172" yMin="-41"/>
        <record yPelHeight="189" yMax="173" yMin="-41"/>
        <record yPelHeight="190" yMax="173" yMin="-41"/>
        <record yPelHeight="191" yMax="174" yMin="-41"/>
        <record yPelHeight="192" yMax="176" yMin="-41"/>
        <record yPelHeight="193" yMax="177" yMin="-42"/>
        <record yPelHeight="194" yMax="177" yMin="-42"/>
        <record yPelHeight="195" yMax="178" yMin="-42"/>
        <record yPelHeight="196" yMax="179" yMin="-42"/>
        <record yPelHeight="197" yMax="179" yMin="-43"/>
        <record yPelHeight="198" yMax="181" yMin="-43"/>
        <record yPelHeight="199" yMax="182" yMin="-43"/>
        <record yPelHeight="200" yMax="183" yMin="-43"/>
        <record yPelHeight="201" yMax="183" yMin="-43"/>
        <record yPelHeight="202" yMax="184" yMin="-44"/>
        <record yPelHeight="203" yMax="186" yMin="-44"/>
        <record yPelHeight="204" yMax="187" yMin="-44"/>
        <record yPelHeight="205" yMax="187" yMin="-44"/>
        <record yPelHeight="206" yMax="188" yMin="-45"/>
        <record yPelHeight="207" yMax="189" yMin="-45"/>
        <record yPelHeight="208" yMax="190" yMin="-45"/>
        <record yPelHeight="209" yMax="191" yMin="-46"/>
        <record yPelHeight="210" yMax="192" yMin="-45"/>
        <record yPelHeight="211" yMax="193" yMin="-46"/>
        <record yPelHeight="212" yMax="193" yMin="-46"/>
        <record yPelHeight="213" yMax="194" yMin="-46"/>
        <record yPelHeight="214" yMax="196" yMin="-46"/>
        <record yPelHeight="215" yMax="197" yMin="-46"/>
        <record yPelHeight="216" yMax="197" yMin="-47"/>
        <record yPelHeight="217" yMax="198" yMin="-47"/>
        <record yPelHeight="218" yMax="199" yMin="-47"/>
        <record yPelHeight="219" yMax="200" yMin="-47"/>
        <record yPelHeight="220" yMax="201" yMin="-48"/>
        <record yPelHeight="221" yMax="202" yMin="-48"/>
        <record yPelHeight="222" yMax="203" yMin="-48"/>
        <record yPelHeight="223" yMax="203" yMin="-48"/>
        <record yPelHeight="224" yMax="204" yMin="-48"/>
        <record yPelHeight="225" yMax="206" yMin="-49"/>
        <record yPelHeight="226" yMax="207" yMin="-49"/>
        <record yPelHeight="227" yMax="207" yMin="-49"/>
        <record yPelHeight="228" yMax="208" yMin="-49"/>
        <record yPelHeight="229" yMax="209" yMin="-49"/>
        <record yPelHeight="230" yMax="210" yMin="-50"/>
        <record yPelHeight="231" yMax="211" yMin="-50"/>
        <record yPelHeight="232" yMax="212" yMin="-50"/>
        <record yPelHeight="233" yMax="213" yMin="-50"/>
        <record yPelHeight="234" yMax="213" yMin="-51"/>
        <record yPelHeight="235" yMax="214" yMin="-51"/>
        <record yPelHeight="236" yMax="216" yMin="-51"/>
        <record yPelHeight="237" yMax="217" yMin="-51"/>
        <record yPelHeight="238" yMax="217" yMin="-51"/>
        <record yPelHeight="239" yMax="218" yMin="-52"/>
        <record yPelHeight="240" yMax="219" yMin="-52"/>
        <record yPelHeight="241" yMax="220" yMin="-52"/>
        <record yPelHeight="242" yMax="221" yMin="-53"/>
        <record yPelHeight="243" yMax="222" yMin="-52"/>
        <record yPelHeight="244" yMax="223" yMin="-53"/>
        <record yPelHeight="245" yMax="223" yMin="-53"/>
        <record yPelHeight="246" yMax="225" yMin="-53"/>
        <record yPelHeight="247" yMax="226" yMin="-53"/>
        <record yPelHeight="248" yMax="227" yMin="-54"/>
        <record yPelHeight="249" yMax="227" yMin="-54"/>
        <record yPelHeight="250" yMax="228" yMin="-54"/>
        <record yPelHeight="251" yMax="229" yMin="-54"/>
        <record yPelHeight="252" yMax="230" yMin="-54"/>
        <record yPelHeight="253" yMax="231" yMin="-55"/>
        <record yPelHeight="254" yMax="232" yMin="-55"/>
        <record yPelHeight="255" yMax="233" yMin="-55"/>
      </group>
      <group index="1">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="9" yMin="-2"/>
        <record yPelHeight="9" yMax="10" yMin="-2"/>
        <record yPelHeight="10" yMax="10" yMin="-2"/>
        <record yPelHeight="11" yMax="11" yMin="-2"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="12" yMin="-3"/>
        <record yPelHeight="14" yMax="14" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-4"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="16" yMin="-4"/>
        <record yPelHeight="19" yMax="17" yMin="-5"/>
        <record yPelHeight="20" yMax="18" yMin="-5"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="20" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-5"/>
        <record yPelHeight="25" yMax="24" yMin="-5"/>
        <record yPelHeight="26" yMax="24" yMin="-6"/>
        <record yPelHeight="27" yMax="25" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="26" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="29" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="30" yMin="-7"/>
        <record yPelHeight="34" yMax="31" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="35" yMin="-8"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="39" yMin="-9"/>
        <record yPelHeight="43" yMax="40" yMin="-9"/>
        <record yPelHeight="44" yMax="41" yMin="-10"/>
        <record yPelHeight="45" yMax="42" yMin="-10"/>
        <record yPelHeight="46" yMax="43" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="44" yMin="-11"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="49" yMin="-12"/>
        <record yPelHeight="54" yMax="50" yMin="-12"/>
        <record yPelHeight="55" yMax="50" yMin="-12"/>
        <record yPelHeight="56" yMax="51" yMin="-12"/>
        <record yPelHeight="57" yMax="53" yMin="-12"/>
        <record yPelHeight="58" yMax="54" yMin="-13"/>
        <record yPelHeight="59" yMax="54" yMin="-13"/>
        <record yPelHeight="60" yMax="55" yMin="-13"/>
        <record yPelHeight="61" yMax="56" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="58" yMin="-14"/>
        <record yPelHeight="64" yMax="59" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-14"/>
        <record yPelHeight="67" yMax="61" yMin="-15"/>
        <record yPelHeight="68" yMax="62" yMin="-15"/>
        <record yPelHeight="69" yMax="63" yMin="-15"/>
        <record yPelHeight="70" yMax="64" yMin="-15"/>
        <record yPelHeight="71" yMax="65" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="67" yMin="-16"/>
        <record yPelHeight="74" yMax="68" yMin="-16"/>
        <record yPelHeight="75" yMax="69" yMin="-16"/>
        <record yPelHeight="76" yMax="69" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="71" yMin="-17"/>
        <record yPelHeight="79" yMax="73" yMin="-18"/>
        <record yPelHeight="80" yMax="73" yMin="-17"/>
        <record yPelHeight="81" yMax="74" yMin="-18"/>
        <record yPelHeight="82" yMax="75" yMin="-18"/>
        <record yPelHeight="83" yMax="75" yMin="-18"/>
        <record yPelHeight="84" yMax="77" yMin="-18"/>
        <record yPelHeight="85" yMax="78" yMin="-18"/>
        <record yPelHeight="86" yMax="79" yMin="-19"/>
        <record yPelHeight="87" yMax="79" yMin="-19"/>
        <record yPelHeight="88" yMax="80" yMin="-19"/>
        <record yPelHeight="89" yMax="81" yMin="-19"/>
        <record yPelHeight="90" yMax="83" yMin="-19"/>
        <record yPelHeight="91" yMax="83" yMin="-20"/>
        <record yPelHeight="92" yMax="84" yMin="-20"/>
        <record yPelHeight="93" yMax="85" yMin="-20"/>
        <record yPelHeight="94" yMax="85" yMin="-20"/>
        <record yPelHeight="95" yMax="87" yMin="-21"/>
        <record yPelHeight="96" yMax="88" yMin="-21"/>
        <record yPelHeight="97" yMax="89" yMin="-21"/>
        <record yPelHeight="98" yMax="89" yMin="-21"/>
        <record yPelHeight="99" yMax="90" yMin="-21"/>
        <record yPelHeight="100" yMax="92" yMin="-22"/>
        <record yPelHeight="101" yMax="93" yMin="-22"/>
        <record yPelHeight="102" yMax="93" yMin="-22"/>
        <record yPelHeight="103" yMax="94" yMin="-22"/>
        <record yPelHeight="104" yMax="95" yMin="-22"/>
        <record yPelHeight="105" yMax="95" yMin="-23"/>
        <record yPelHeight="106" yMax="97" yMin="-23"/>
        <record yPelHeight="107" yMax="98" yMin="-23"/>
        <record yPelHeight="108" yMax="99" yMin="-23"/>
        <record yPelHeight="109" yMax="99" yMin="-24"/>
        <record yPelHeight="110" yMax="100" yMin="-24"/>
        <record yPelHeight="111" yMax="102" yMin="-24"/>
        <record yPelHeight="112" yMax="103" yMin="-25"/>
        <record yPelHeight="113" yMax="103" yMin="-24"/>
        <record yPelHeight="114" yMax="104" yMin="-25"/>
        <record yPelHeight="115" yMax="105" yMin="-25"/>
        <record yPelHeight="116" yMax="105" yMin="-25"/>
        <record yPelHeight="117" yMax="107" yMin="-26"/>
        <record yPelHeight="118" yMax="108" yMin="-25"/>
        <record yPelHeight="119" yMax="109" yMin="-26"/>
        <record yPelHeight="120" yMax="109" yMin="-26"/>
        <record yPelHeight="121" yMax="110" yMin="-26"/>
        <record yPelHeight="122" yMax="112" yMin="-26"/>
        <record yPelHeight="123" yMax="113" yMin="-27"/>
        <record yPelHeight="124" yMax="113" yMin="-27"/>
        <record yPelHeight="125" yMax="114" yMin="-27"/>
        <record yPelHeight="126" yMax="115" yMin="-27"/>
        <record yPelHeight="127" yMax="116" yMin="-27"/>
        <record yPelHeight="128" yMax="117" yMin="-28"/>
        <record yPelHeight="129" yMax="118" yMin="-28"/>
        <record yPelHeight="130" yMax="119" yMin="-28"/>
        <record yPelHeight="131" yMax="119" yMin="-28"/>
        <record yPelHeight="132" yMax="120" yMin="-28"/>
        <record yPelHeight="133" yMax="122" yMin="-29"/>
        <record yPelHeight="134" yMax="123" yMin="-29"/>
        <record yPelHeight="135" yMax="123" yMin="-29"/>
        <record yPelHeight="136" yMax="124" yMin="-29"/>
        <record yPelHeight="137" yMax="125" yMin="-30"/>
        <record yPelHeight="138" yMax="126" yMin="-30"/>
        <record yPelHeight="139" yMax="127" yMin="-30"/>
        <record yPelHeight="140" yMax="128" yMin="-30"/>
        <record yPelHeight="141" yMax="129" yMin="-31"/>
        <record yPelHeight="142" yMax="129" yMin="-31"/>
        <record yPelHeight="143" yMax="130" yMin="-31"/>
        <record yPelHeight="144" yMax="132" yMin="-31"/>
        <record yPelHeight="145" yMax="133" yMin="-32"/>
        <record yPelHeight="146" yMax="133" yMin="-32"/>
        <record yPelHeight="147" yMax="134" yMin="-33"/>
        <record yPelHeight="148" yMax="135" yMin="-32"/>
        <record yPelHeight="149" yMax="136" yMin="-32"/>
        <record yPelHeight="150" yMax="137" yMin="-33"/>
        <record yPelHeight="151" yMax="138" yMin="-33"/>
        <record yPelHeight="152" yMax="139" yMin="-33"/>
        <record yPelHeight="153" yMax="139" yMin="-33"/>
        <record yPelHeight="154" yMax="141" yMin="-34"/>
        <record yPelHeight="155" yMax="142" yMin="-33"/>
        <record yPelHeight="156" yMax="143" yMin="-34"/>
        <record yPelHeight="157" yMax="143" yMin="-34"/>
        <record yPelHeight="158" yMax="144" yMin="-34"/>
        <record yPelHeight="159" yMax="145" yMin="-34"/>
        <record yPelHeight="160" yMax="146" yMin="-35"/>
        <record yPelHeight="161" yMax="147" yMin="-35"/>
        <record yPelHeight="162" yMax="148" yMin="-35"/>
        <record yPelHeight="163" yMax="149" yMin="-35"/>
        <record yPelHeight="164" yMax="149" yMin="-35"/>
        <record yPelHeight="165" yMax="151" yMin="-36"/>
        <record yPelHeight="166" yMax="152" yMin="-36"/>
        <record yPelHeight="167" yMax="153" yMin="-36"/>
        <record yPelHeight="168" yMax="153" yMin="-36"/>
        <record yPelHeight="169" yMax="154" yMin="-36"/>
        <record yPelHeight="170" yMax="155" yMin="-37"/>
        <record yPelHeight="171" yMax="156" yMin="-37"/>
        <record yPelHeight="172" yMax="157" yMin="-37"/>
        <record yPelHeight="173" yMax="158" yMin="-38"/>
        <record yPelHeight="174" yMax="159" yMin="-38"/>
        <record yPelHeight="175" yMax="159" yMin="-38"/>
        <record yPelHeight="176" yMax="161" yMin="-39"/>
        <record yPelHeight="177" yMax="162" yMin="-38"/>
        <record yPelHeight="178" yMax="163" yMin="-39"/>
        <record yPelHeight="179" yMax="163" yMin="-39"/>
        <record yPelHeight="180" yMax="164" yMin="-39"/>
        <record yPelHeight="181" yMax="166" yMin="-39"/>
        <record yPelHeight="182" yMax="167" yMin="-39"/>
        <record yPelHeight="183" yMax="167" yMin="-40"/>
        <record yPelHeight="184" yMax="168" yMin="-40"/>
        <record yPelHeight="185" yMax="169" yMin="-40"/>
        <record yPelHeight="186" yMax="169" yMin="-40"/>
        <record yPelHeight="187" yMax="171" yMin="-41"/>
        <record yPelHeight="188" yMax="172" yMin="-41"/>
        <record yPelHeight="189" yMax="173" yMin="-41"/>
        <record yPelHeight="190" yMax="173" yMin="-41"/>
        <record yPelHeight="191" yMax="174" yMin="-41"/>
        <record yPelHeight="192" yMax="176" yMin="-41"/>
        <record yPelHeight="193" yMax="177" yMin="-42"/>
        <record yPelHeight="194" yMax="177" yMin="-42"/>
        <record yPelHeight="195" yMax="178" yMin="-42"/>
        <record yPelHeight="196" yMax="179" yMin="-42"/>
        <record yPelHeight="197" yMax="179" yMin="-43"/>
        <record yPelHeight="198" yMax="181" yMin="-43"/>
        <record yPelHeight="199" yMax="182" yMin="-43"/>
        <record yPelHeight="200" yMax="183" yMin="-43"/>
        <record yPelHeight="201" yMax="183" yMin="-43"/>
        <record yPelHeight="202" yMax="184" yMin="-44"/>
        <record yPelHeight="203" yMax="186" yMin="-44"/>
        <record yPelHeight="204" yMax="187" yMin="-44"/>
        <record yPelHeight="205" yMax="187" yMin="-44"/>
        <record yPelHeight="206" yMax="188" yMin="-45"/>
        <record yPelHeight="207" yMax="189" yMin="-45"/>
        <record yPelHeight="208" yMax="190" yMin="-45"/>
        <record yPelHeight="209" yMax="191" yMin="-46"/>
        <record yPelHeight="210" yMax="192" yMin="-45"/>
        <record yPelHeight="211" yMax="193" yMin="-46"/>
        <record yPelHeight="212" yMax="193" yMin="-46"/>
        <record yPelHeight="213" yMax="194" yMin="-46"/>
        <record yPelHeight="214" yMax="196" yMin="-46"/>
        <record yPelHeight="215" yMax="197" yMin="-46"/>
        <record yPelHeight="216" yMax="197" yMin="-47"/>
        <record yPelHeight="217" yMax="198" yMin="-47"/>
        <record yPelHeight="218" yMax="199" yMin="-47"/>
        <record yPelHeight="219" yMax="200" yMin="-47"/>
        <record yPelHeight="220" yMax="201" yMin="-48"/>
        <record yPelHeight="221" yMax="202" yMin="-48"/>
        <record yPelHeight="222" yMax="203" yMin="-48"/>
        <record yPelHeight="223" yMax="203" yMin="-48"/>
        <record yPelHeight="224" yMax="204" yMin="-48"/>
        <record yPelHeight="225" yMax="206" yMin="-49"/>
        <record yPelHeight="226" yMax="207" yMin="-49"/>
        <record yPelHeight="227" yMax="207" yMin="-49"/>
        <record yPelHeight="228" yMax="208" yMin="-49"/>
        <record yPelHeight="229" yMax="209" yMin="-49"/>
        <record yPelHeight="230" yMax="210" yMin="-50"/>
        <record yPelHeight="231" yMax="211" yMin="-50"/>
        <record yPelHeight="232" yMax="212" yMin="-50"/>
        <record yPelHeight="233" yMax="213" yMin="-50"/>
        <record yPelHeight="234" yMax="213" yMin="-51"/>
        <record yPelHeight="235" yMax="214" yMin="-51"/>
        <record yPelHeight="236" yMax="216" yMin="-51"/>
        <record yPelHeight="237" yMax="217" yMin="-51"/>
        <record yPelHeight="238" yMax="217" yMin="-51"/>
        <record yPelHeight="239" yMax="218" yMin="-52"/>
        <record yPelHeight="240" yMax="219" yMin="-52"/>
        <record yPelHeight="241" yMax="220" yMin="-52"/>
        <record yPelHeight="242" yMax="221" yMin="-53"/>
        <record yPelHeight="243" yMax="222" yMin="-52"/>
        <record yPelHeight="244" yMax="223" yMin="-53"/>
        <record yPelHeight="245" yMax="223" yMin="-53"/>
        <record yPelHeight="246" yMax="225" yMin="-53"/>
        <record yPelHeight="247" yMax="226" yMin="-53"/>
        <record yPelHeight="248" yMax="227" yMin="-54"/>
        <record yPelHeight="249" yMax="227" yMin="-54"/>
        <record yPelHeight="250" yMax="228" yMin="-54"/>
        <record yPelHeight="251" yMax="229" yMin="-54"/>
        <record yPelHeight="252" yMax="230" yMin="-54"/>
        <record yPelHeight="253" yMax="231" yMin="-55"/>
        <record yPelHeight="254" yMax="232" yMin="-55"/>
        <record yPelHeight="255" yMax="233" yMin="-55"/>
      </group>
      <group index="2">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="9" yMin="-2"/>
        <record yPelHeight="9" yMax="10" yMin="-2"/>
        <record yPelHeight="10" yMax="10" yMin="-2"/>
        <record yPelHeight="11" yMax="11" yMin="-2"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="12" yMin="-3"/>
        <record yPelHeight="14" yMax="14" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-4"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="16" yMin="-4"/>
        <record yPelHeight="19" yMax="17" yMin="-5"/>
        <record yPelHeight="20" yMax="18" yMin="-5"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="20" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-5"/>
        <record yPelHeight="25" yMax="24" yMin="-5"/>
        <record yPelHeight="26" yMax="24" yMin="-6"/>
        <record yPelHeight="27" yMax="25" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="26" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="29" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="30" yMin="-7"/>
        <record yPelHeight="34" yMax="31" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="35" yMin="-8"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="39" yMin="-9"/>
        <record yPelHeight="43" yMax="40" yMin="-9"/>
        <record yPelHeight="44" yMax="41" yMin="-10"/>
        <record yPelHeight="45" yMax="42" yMin="-10"/>
        <record yPelHeight="46" yMax="44" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="44" yMin="-11"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="49" yMin="-12"/>
        <record yPelHeight="54" yMax="50" yMin="-12"/>
        <record yPelHeight="55" yMax="50" yMin="-12"/>
        <record yPelHeight="56" yMax="51" yMin="-12"/>
        <record yPelHeight="57" yMax="53" yMin="-12"/>
        <record yPelHeight="58" yMax="54" yMin="-13"/>
        <record yPelHeight="59" yMax="54" yMin="-13"/>
        <record yPelHeight="60" yMax="55" yMin="-13"/>
        <record yPelHeight="61" yMax="56" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="58" yMin="-14"/>
        <record yPelHeight="64" yMax="59" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-14"/>
        <record yPelHeight="67" yMax="61" yMin="-15"/>
        <record yPelHeight="68" yMax="62" yMin="-15"/>
        <record yPelHeight="69" yMax="63" yMin="-15"/>
        <record yPelHeight="70" yMax="64" yMin="-15"/>
        <record yPelHeight="71" yMax="65" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="67" yMin="-16"/>
        <record yPelHeight="74" yMax="68" yMin="-16"/>
        <record yPelHeight="75" yMax="69" yMin="-16"/>
        <record yPelHeight="76" yMax="69" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="71" yMin="-17"/>
        <record yPelHeight="79" yMax="73" yMin="-18"/>
        <record yPelHeight="80" yMax="73" yMin="-17"/>
        <record yPelHeight="81" yMax="74" yMin="-17"/>
        <record yPelHeight="82" yMax="75" yMin="-18"/>
        <record yPelHeight="83" yMax="75" yMin="-18"/>
        <record yPelHeight="84" yMax="77" yMin="-18"/>
        <record yPelHeight="85" yMax="78" yMin="-18"/>
        <record yPelHeight="86" yMax="79" yMin="-19"/>
        <record yPelHeight="87" yMax="79" yMin="-19"/>
        <record yPelHeight="88" yMax="80" yMin="-19"/>
        <record yPelHeight="89" yMax="81" yMin="-19"/>
        <record yPelHeight="90" yMax="83" yMin="-19"/>
        <record yPelHeight="91" yMax="83" yMin="-20"/>
        <record yPelHeight="92" yMax="84" yMin="-20"/>
        <record yPelHeight="93" yMax="85" yMin="-20"/>
        <record yPelHeight="94" yMax="85" yMin="-20"/>
        <record yPelHeight="95" yMax="87" yMin="-21"/>
        <record yPelHeight="96" yMax="88" yMin="-21"/>
        <record yPelHeight="97" yMax="89" yMin="-21"/>
        <record yPelHeight="98" yMax="89" yMin="-21"/>
        <record yPelHeight="99" yMax="90" yMin="-21"/>
        <record yPelHeight="100" yMax="92" yMin="-22"/>
        <record yPelHeight="101" yMax="93" yMin="-22"/>
        <record yPelHeight="102" yMax="93" yMin="-22"/>
        <record yPelHeight="103" yMax="94" yMin="-22"/>
        <record yPelHeight="104" yMax="95" yMin="-22"/>
        <record yPelHeight="105" yMax="95" yMin="-23"/>
        <record yPelHeight="106" yMax="97" yMin="-23"/>
        <record yPelHeight="107" yMax="98" yMin="-23"/>
        <record yPelHeight="108" yMax="99" yMin="-23"/>
        <record yPelHeight="109" yMax="99" yMin="-24"/>
        <record yPelHeight="110" yMax="100" yMin="-24"/>
        <record yPelHeight="111" yMax="102" yMin="-24"/>
        <record yPelHeight="112" yMax="103" yMin="-25"/>
        <record yPelHeight="113" yMax="103" yMin="-24"/>
        <record yPelHeight="114" yMax="104" yMin="-25"/>
        <record yPelHeight="115" yMax="105" yMin="-25"/>
        <record yPelHeight="116" yMax="105" yMin="-25"/>
        <record yPelHeight="117" yMax="107" yMin="-26"/>
        <record yPelHeight="118" yMax="108" yMin="-25"/>
        <record yPelHeight="119" yMax="109" yMin="-26"/>
        <record yPelHeight="120" yMax="109" yMin="-26"/>
        <record yPelHeight="121" yMax="110" yMin="-26"/>
        <record yPelHeight="122" yMax="112" yMin="-26"/>
        <record yPelHeight="123" yMax="113" yMin="-27"/>
        <record yPelHeight="124" yMax="113" yMin="-27"/>
        <record yPelHeight="125" yMax="114" yMin="-27"/>
        <record yPelHeight="126" yMax="115" yMin="-27"/>
        <record yPelHeight="127" yMax="116" yMin="-27"/>
        <record yPelHeight="128" yMax="117" yMin="-28"/>
        <record yPelHeight="129" yMax="118" yMin="-28"/>
        <record yPelHeight="130" yMax="119" yMin="-28"/>
        <record yPelHeight="131" yMax="119" yMin="-28"/>
        <record yPelHeight="132" yMax="120" yMin="-28"/>
        <record yPelHeight="133" yMax="122" yMin="-29"/>
        <record yPelHeight="134" yMax="123" yMin="-29"/>
        <record yPelHeight="135" yMax="123" yMin="-29"/>
        <record yPelHeight="136" yMax="124" yMin="-29"/>
        <record yPelHeight="137" yMax="125" yMin="-30"/>
        <record yPelHeight="138" yMax="126" yMin="-30"/>
        <record yPelHeight="139" yMax="127" yMin="-30"/>
        <record yPelHeight="140" yMax="128" yMin="-30"/>
        <record yPelHeight="141" yMax="129" yMin="-31"/>
        <record yPelHeight="142" yMax="129" yMin="-31"/>
        <record yPelHeight="143" yMax="130" yMin="-31"/>
        <record yPelHeight="144" yMax="132" yMin="-31"/>
        <record yPelHeight="145" yMax="133" yMin="-32"/>
        <record yPelHeight="146" yMax="133" yMin="-32"/>
        <record yPelHeight="147" yMax="134" yMin="-33"/>
        <record yPelHeight="148" yMax="135" yMin="-32"/>
        <record yPelHeight="149" yMax="136" yMin="-32"/>
        <record yPelHeight="150" yMax="137" yMin="-33"/>
        <record yPelHeight="151" yMax="138" yMin="-33"/>
        <record yPelHeight="152" yMax="139" yMin="-33"/>
        <record yPelHeight="153" yMax="139" yMin="-33"/>
        <record yPelHeight="154" yMax="141" yMin="-34"/>
        <record yPelHeight="155" yMax="142" yMin="-33"/>
        <record yPelHeight="156" yMax="143" yMin="-34"/>
        <record yPelHeight="157" yMax="143" yMin="-34"/>
        <record yPelHeight="158" yMax="144" yMin="-34"/>
        <record yPelHeight="159" yMax="145" yMin="-34"/>
        <record yPelHeight="160" yMax="146" yMin="-35"/>
        <record yPelHeight="161" yMax="147" yMin="-35"/>
        <record yPelHeight="162" yMax="148" yMin="-35"/>
        <record yPelHeight="163" yMax="149" yMin="-35"/>
        <record yPelHeight="164" yMax="149" yMin="-35"/>
        <record yPelHeight="165" yMax="151" yMin="-36"/>
        <record yPelHeight="166" yMax="152" yMin="-36"/>
        <record yPelHeight="167" yMax="153" yMin="-36"/>
        <record yPelHeight="168" yMax="153" yMin="-36"/>
        <record yPelHeight="169" yMax="154" yMin="-36"/>
        <record yPelHeight="170" yMax="155" yMin="-37"/>
        <record yPelHeight="171" yMax="157" yMin="-37"/>
        <record yPelHeight="172" yMax="157" yMin="-37"/>
        <record yPelHeight="173" yMax="158" yMin="-38"/>
        <record yPelHeight="174" yMax="159" yMin="-38"/>
        <record yPelHeight="175" yMax="159" yMin="-38"/>
        <record yPelHeight="176" yMax="161" yMin="-39"/>
        <record yPelHeight="177" yMax="162" yMin="-38"/>
        <record yPelHeight="178" yMax="163" yMin="-39"/>
        <record yPelHeight="179" yMax="163" yMin="-39"/>
        <record yPelHeight="180" yMax="164" yMin="-39"/>
        <record yPelHeight="181" yMax="166" yMin="-39"/>
        <record yPelHeight="182" yMax="167" yMin="-39"/>
        <record yPelHeight="183" yMax="167" yMin="-40"/>
        <record yPelHeight="184" yMax="168" yMin="-40"/>
        <record yPelHeight="185" yMax="169" yMin="-40"/>
        <record yPelHeight="186" yMax="169" yMin="-40"/>
        <record yPelHeight="187" yMax="171" yMin="-41"/>
        <record yPelHeight="188" yMax="172" yMin="-41"/>
        <record yPelHeight="189" yMax="173" yMin="-41"/>
        <record yPelHeight="190" yMax="173" yMin="-41"/>
        <record yPelHeight="191" yMax="174" yMin="-41"/>
        <record yPelHeight="192" yMax="176" yMin="-41"/>
        <record yPelHeight="193" yMax="177" yMin="-42"/>
        <record yPelHeight="194" yMax="177" yMin="-42"/>
        <record yPelHeight="195" yMax="178" yMin="-42"/>
        <record yPelHeight="196" yMax="179" yMin="-42"/>
        <record yPelHeight="197" yMax="179" yMin="-43"/>
        <record yPelHeight="198" yMax="181" yMin="-43"/>
        <record yPelHeight="199" yMax="182" yMin="-43"/>
        <record yPelHeight="200" yMax="183" yMin="-43"/>
        <record yPelHeight="201" yMax="183" yMin="-43"/>
        <record yPelHeight="202" yMax="184" yMin="-44"/>
        <record yPelHeight="203" yMax="186" yMin="-44"/>
        <record yPelHeight="204" yMax="187" yMin="-44"/>
        <record yPelHeight="205" yMax="187" yMin="-44"/>
        <record yPelHeight="206" yMax="188" yMin="-45"/>
        <record yPelHeight="207" yMax="189" yMin="-45"/>
        <record yPelHeight="208" yMax="190" yMin="-45"/>
        <record yPelHeight="209" yMax="191" yMin="-46"/>
        <record yPelHeight="210" yMax="192" yMin="-45"/>
        <record yPelHeight="211" yMax="193" yMin="-46"/>
        <record yPelHeight="212" yMax="193" yMin="-46"/>
        <record yPelHeight="213" yMax="194" yMin="-46"/>
        <record yPelHeight="214" yMax="196" yMin="-46"/>
        <record yPelHeight="215" yMax="197" yMin="-46"/>
        <record yPelHeight="216" yMax="197" yMin="-47"/>
        <record yPelHeight="217" yMax="198" yMin="-47"/>
        <record yPelHeight="218" yMax="199" yMin="-47"/>
        <record yPelHeight="219" yMax="200" yMin="-47"/>
        <record yPelHeight="220" yMax="201" yMin="-48"/>
        <record yPelHeight="221" yMax="202" yMin="-48"/>
        <record yPelHeight="222" yMax="203" yMin="-48"/>
        <record yPelHeight="223" yMax="203" yMin="-48"/>
        <record yPelHeight="224" yMax="204" yMin="-48"/>
        <record yPelHeight="225" yMax="206" yMin="-49"/>
        <record yPelHeight="226" yMax="207" yMin="-49"/>
        <record yPelHeight="227" yMax="207" yMin="-49"/>
        <record yPelHeight="228" yMax="208" yMin="-49"/>
        <record yPelHeight="229" yMax="209" yMin="-49"/>
        <record yPelHeight="230" yMax="210" yMin="-50"/>
        <record yPelHeight="231" yMax="211" yMin="-50"/>
        <record yPelHeight="232" yMax="212" yMin="-50"/>
        <record yPelHeight="233" yMax="213" yMin="-50"/>
        <record yPelHeight="234" yMax="213" yMin="-51"/>
        <record yPelHeight="235" yMax="215" yMin="-51"/>
        <record yPelHeight="236" yMax="216" yMin="-51"/>
        <record yPelHeight="237" yMax="217" yMin="-51"/>
        <record yPelHeight="238" yMax="217" yMin="-51"/>
        <record yPelHeight="239" yMax="218" yMin="-52"/>
        <record yPelHeight="240" yMax="219" yMin="-52"/>
        <record yPelHeight="241" yMax="220" yMin="-52"/>
        <record yPelHeight="242" yMax="221" yMin="-53"/>
        <record yPelHeight="243" yMax="222" yMin="-52"/>
        <record yPelHeight="244" yMax="223" yMin="-53"/>
        <record yPelHeight="245" yMax="223" yMin="-53"/>
        <record yPelHeight="246" yMax="225" yMin="-53"/>
        <record yPelHeight="247" yMax="226" yMin="-53"/>
        <record yPelHeight="248" yMax="227" yMin="-54"/>
        <record yPelHeight="249" yMax="227" yMin="-54"/>
        <record yPelHeight="250" yMax="228" yMin="-54"/>
        <record yPelHeight="251" yMax="229" yMin="-54"/>
        <record yPelHeight="252" yMax="230" yMin="-54"/>
        <record yPelHeight="253" yMax="231" yMin="-55"/>
        <record yPelHeight="254" yMax="232" yMin="-55"/>
        <record yPelHeight="255" yMax="233" yMin="-55"/>
      </group>
    </groups>
  </VDMX>

  <hdmx>
    <hdmxData>
                         ppem:   9 ;

                      .notdef:   7 ;
                        .null:   0 ;
                            A:   7 ;
                           AE:   9 ;
                       Aacute:   7 ;
                       Abreve:   7 ;
                       Accent:   0 ;
                  Acircumflex:   7 ;
                        Acute:   4 ;
                    Adieresis:   7 ;
                       Agrave:   7 ;
                      Amacron:   7 ;
                      Aogonek:   7 ;
                   Apostrophe:   3 ;
                        Aring:   7 ;
                       Atilde:   7 ;
                            B:   6 ;
                       Bacute:   6 ;
                        Breve:   5 ;
                            C:   7 ;
                       Cacute:   7 ;
                        Caron:   5 ;
                       Ccaron:   7 ;
                     Ccedilla:   7 ;
                  Ccircumflex:   7 ;
                      Cedilla:   3 ;
                   Circumflex:   5 ;
                  Commaaccent:   3 ;
                            D:   7 ;
                       Dacute:   7 ;
                       Dcaron:   7 ;
                       Dcroat:   7 ;
                        Delta:   6 ;
                     Dieresis:   5 ;
             DieresisCyrBreve:   5 ;
                    Dotaccent:   3 ;
                            E:   6 ;
                       Eacute:   6 ;
                       Ecaron:   6 ;
                  Ecircumflex:   6 ;
                    Edieresis:   6 ;
                   Edotaccent:   6 ;
                       Egrave:   6 ;
                      Emacron:   6 ;
                      Eogonek:   6 ;
                          Eth:   7 ;
                         Euro:   5 ;
                     Ezhcarel:   5 ;
                Ezhcarelcaron:   5 ;
                            F:   6 ;
                       Facute:   6 ;
                            G:   7 ;
                       Gbreve:   7 ;
                  Gcircumflex:   7 ;
                 Gcommaaccent:   7 ;
                   Germandbls:   7 ;
                        Grave:   4 ;
                            H:   7 ;
                       Hacute:   7 ;
                         Hbar:   7 ;
                  Hcircumflex:   7 ;
                        Hdesc:   7 ;
                 Hungarumlaut:   5 ;
                            I:   4 ;
                       Iacute:   4 ;
                  Icircumflex:   4 ;
                    Idieresis:   4 ;
                   Idotaccent:   4 ;
                       Igrave:   4 ;
                      Imacron:   4 ;
                      Iogonek:   4 ;
                            J:   5 ;
                  Jcircumflex:   5 ;
                            K:   7 ;
                 Kcommaaccent:   7 ;
                            L:   6 ;
                       Lacute:   6 ;
                  Lacutecarel:   6 ;
                       Lcaron:   6 ;
                 Lcommaaccent:   6 ;
                       Lslash:   6 ;
                            M:   9 ;
                       Macron:   4 ;
                       Macute:   9 ;
                            N:   7 ;
                       Nacute:   7 ;
                       Ncaron:   7 ;
                 Ncommaaccent:   7 ;
                       Ntilde:   7 ;
                            O:   7 ;
                           OE:   9 ;
                       Oacute:   7 ;
                  Ocircumflex:   7 ;
                    Odieresis:   7 ;
                       Ogonek:   3 ;
                       Ograve:   7 ;
                Ohungarumlaut:   7 ;
                      Omacron:   7 ;
                        Omega:   7 ;
                       Oslash:   7 ;
                       Otilde:   7 ;
                            P:   6 ;
                            Q:   7 ;
                            R:   7 ;
                       Racute:   7 ;
                       Rcaron:   7 ;
                 Rcommaaccent:   7 ;
                         Ring:   4 ;
                            S:   5 ;
                       Sacute:   5 ;
                       Scaron:   5 ;
                     Scedilla:   5 ;
                  Scircumflex:   5 ;
                 Scommaaccent:   5 ;
                            T:   6 ;
                       Tacute:   6 ;
                       Tcaron:   6 ;
                     Tcedilla:   6 ;
                 Tcommaaccent:   6 ;
                        Thorn:   6 ;
                        Tilde:   5 ;
                            U:   7 ;
                       Uacute:   7 ;
                       Ubreve:   7 ;
                  Ucircumflex:   7 ;
                    Udieresis:   7 ;
                       Ugrave:   7 ;
                Uhungarumlaut:   7 ;
                      Umacron:   7 ;
                      Uogonek:   7 ;
                        Uring:   7 ;
                            V:   7 ;
                       Vacute:   7 ;
                            W:   9 ;
                            X:   7 ;
                            Y:   7 ;
                       Yacute:   7 ;
                    Ydieresis:   7 ;
                            Z:   6 ;
                       Zacute:   6 ;
                       Zcaron:   6 ;
                   Zdotaccent:   6 ;
                            a:   5 ;
                       aacute:   5 ;
                       abreve:   5 ;
                  acircumflex:   5 ;
                        acute:   3 ;
                    acutecomb:   0 ;
                    adieresis:   5 ;
                           ae:   7 ;
                    afii10017:   7 ;
                    afii10018:   6 ;
                    afii10019:   6 ;
                    afii10020:   6 ;
                    afii10021:   6 ;
                    afii10022:   6 ;
                    afii10023:   6 ;
                    afii10024:   9 ;
                    afii10025:   5 ;
                    afii10026:   7 ;
                    afii10027:   7 ;
                afii10027hook:   7 ;
                    afii10028:   7 ;
                    afii10029:   7 ;
                    afii10030:   9 ;
                    afii10031:   7 ;
                    afii10032:   7 ;
                    afii10033:   7 ;
                    afii10034:   6 ;
                    afii10035:   7 ;
                    afii10036:   6 ;
                    afii10037:   7 ;
                    afii10038:   8 ;
                    afii10039:   7 ;
                    afii10040:   7 ;
                    afii10041:   7 ;
                    afii10042:  10 ;
                    afii10043:  10 ;
                    afii10044:   7 ;
                    afii10045:   9 ;
                    afii10046:   6 ;
                    afii10047:   6 ;
                    afii10048:  10 ;
                    afii10049:   7 ;
                    afii10050:   5 ;
                    afii10051:   7 ;
                    afii10052:   6 ;
                    afii10053:   6 ;
            afii10053dieresis:   6 ;
                    afii10054:   5 ;
                    afii10055:   4 ;
                afii10055.alt:   4 ;
                    afii10056:   4 ;
                    afii10057:   5 ;
                    afii10058:   9 ;
                    afii10059:   9 ;
                    afii10060:   7 ;
                    afii10061:   7 ;
                    afii10062:   7 ;
                    afii10065:   5 ;
                    afii10066:   5 ;
                    afii10067:   5 ;
                    afii10068:   4 ;
                    afii10069:   5 ;
                    afii10070:   4 ;
                    afii10071:   4 ;
                    afii10072:   7 ;
                    afii10073:   4 ;
                    afii10074:   5 ;
                    afii10075:   5 ;
                afii10075hook:   5 ;
                    afii10076:   5 ;
                    afii10077:   5 ;
                    afii10078:   6 ;
                    afii10079:   5 ;
                    afii10080:   5 ;
                    afii10081:   5 ;
                    afii10082:   5 ;
                    afii10083:   4 ;
                    afii10084:   4 ;
                    afii10085:   5 ;
                    afii10086:   6 ;
                    afii10087:   5 ;
                    afii10088:   5 ;
                    afii10089:   5 ;
                    afii10090:   8 ;
                    afii10091:   8 ;
                    afii10092:   5 ;
                    afii10093:   7 ;
                    afii10094:   5 ;
                    afii10095:   4 ;
                    afii10096:   7 ;
                    afii10097:   5 ;
                    afii10098:   4 ;
                    afii10099:   5 ;
                    afii10100:   4 ;
                    afii10101:   4 ;
            afii10101dieresis:   4 ;
                    afii10102:   4 ;
                    afii10103:   3 ;
                afii10103.alt:   3 ;
                    afii10104:   3 ;
                    afii10105:   3 ;
                    afii10106:   7 ;
                    afii10107:   7 ;
                    afii10108:   5 ;
                    afii10109:   5 ;
                    afii10110:   5 ;
                    afii10145:   7 ;
                    afii10146:   7 ;
                    afii10147:   7 ;
                    afii10148:   7 ;
                    afii10193:   5 ;
                    afii10194:   5 ;
                    afii10195:   5 ;
                    afii10196:   5 ;
                    afii57929:   3 ;
                    afii61289:   3 ;
                    afii61352:   9 ;
                       agrave:   5 ;
                      amacron:   5 ;
                    ampersand:   8 ;
                      aogonek:   5 ;
                  approxequal:   5 ;
                        aring:   5 ;
                  asciicircum:   5 ;
                   asciitilde:   5 ;
                     asterisk:   5 ;
                           at:   8 ;
                       atilde:   5 ;
                            b:   5 ;
                    backslash:   3 ;
                       bacute:   5 ;
                          bar:   2 ;
                    braceleft:   4 ;
                   braceright:   4 ;
                  bracketleft:   3 ;
                 bracketright:   3 ;
                        breve:   3 ;
                    brokenbar:   2 ;
                       bullet:   3 ;
                            c:   4 ;
                       cacute:   4 ;
                        caron:   3 ;
                      caron.L:   3 ;
                      caron.l:   3 ;
                       ccaron:   4 ;
                     ccedilla:   4 ;
                  ccircumflex:   4 ;
                      cedilla:   3 ;
                         cent:   5 ;
                   circumflex:   3 ;
                        colon:   3 ;
                        comma:   2 ;
                  commaaccent:   3 ;
                    copyright:   7 ;
                     currency:   5 ;
                        cyrAE:   9 ;
                 cyrAcyrbreve:   7 ;
                 cyrAdieresis:   7 ;
                   cyrAmacron:   7 ;
                     cyrBreve:   5 ;
                   cyrChedesc:   7 ;
               cyrChedescleft:   7 ;
               cyrChedieresis:   7 ;
                   cyrChehook:   7 ;
                cyrChevertbar:   7 ;
                       cyrDze:   5 ;
                 cyrEcyrbreve:   6 ;
                 cyrEdieresis:   6 ;
                cyrEdotaccent:   6 ;
                    cyrEldesc:   7 ;
                    cyrEltail:   7 ;
                   cyrEmacron:   6 ;
                    cyrEmtail:   9 ;
                      cyrEnGe:   8 ;
                    cyrEndesc:   7 ;
                    cyrEnhook:   7 ;
                    cyrEntail:   7 ;
                   cyrEpsilon:   5 ;
           cyrEpsilondieresis:   5 ;
                 cyrErcrossed:   6 ;
                    cyrEstail:   7 ;
                cyrEstail.alt:   7 ;
              cyrEstail.alt02:   7 ;
                     cyrGebar:   6 ;
                 cyrGebar.alt:   6 ;
                    cyrGehook:   7 ;
                         cyrH:   7 ;
                    cyrHadesc:   7 ;
                    cyrHahook:   7 ;
                  cyrHcrossed:   7 ;
                         cyrI:   4 ;
                 cyrIdieresis:   7 ;
                cyrIecyrbreve:   6 ;
        cyrIedieresiscyrbreve:   6 ;
          cyrIedieresismacron:   6 ;
                    cyrIehook:   8 ;
              cyrIehookogonek:   8 ;
                  cyrIemacron:   6 ;
                   cyrImacron:   7 ;
                    cyrKaback:   7 ;
                     cyrKabar:   7 ;
                    cyrKadesc:   7 ;
                    cyrKahook:   7 ;
                 cyrKavertbar:   7 ;
                      cyrObar:   7 ;
              cyrObarcyrbreve:   7 ;
              cyrObardieresis:   7 ;
      cyrObardieresiscyrbreve:   7 ;
                 cyrOcyrbreve:   7 ;
                 cyrOdieresis:   7 ;
                cyrOdotaccent:   7 ;
                     cyrOhook:   7 ;
                   cyrOmacron:   7 ;
                    cyrPehook:  10 ;
                     cyrTeTse:   8 ;
                    cyrTedesc:   6 ;
                    cyrUacute:   7 ;
                 cyrUdblacute:   7 ;
                 cyrUdieresis:   7 ;
                   cyrUmacron:   7 ;
                cyrYacyrbreve:   7 ;
                  cyrYamacron:   7 ;
              cyrYerucyrbreve:   9 ;
              cyrYerudieresis:   9 ;
                cyrYerumacron:   9 ;
                cyrYucyrbreve:  10 ;
                  cyrYumacron:  10 ;
                   cyrZecaron:   5 ;
                cyrZedieresis:   5 ;
                    cyrZetail:   5 ;
                cyrZetail.alt:   5 ;
                   cyrZhedesc:   9 ;
               cyrZhedieresis:   9 ;
                 cyracyrbreve:   5 ;
                 cyradieresis:   5 ;
                        cyrae:   7 ;
                   cyramacron:   5 ;
                     cyrbreve:   5 ;
                   cyrchedesc:   5 ;
               cyrchedescleft:   5 ;
               cyrchedieresis:   5 ;
                   cyrchehook:   5 ;
                cyrchevertbar:   5 ;
                       cyrdze:   4 ;
                 cyrecyrbreve:   4 ;
                 cyredieresis:   4 ;
                cyredotaccent:   4 ;
                    cyreldesc:   5 ;
                    cyreltail:   5 ;
                   cyremacron:   4 ;
                    cyremtail:   6 ;
                    cyrendesc:   5 ;
                      cyrenge:   6 ;
                    cyrenhook:   5 ;
                    cyrentail:   5 ;
                   cyrepsilon:   4 ;
           cyrepsilondieresis:   4 ;
                 cyrercrossed:   5 ;
                    cyrestail:   4 ;
                cyrestail.alt:   4 ;
              cyrestail.alt02:   4 ;
                     cyrgebar:   4 ;
                 cyrgebar.alt:   4 ;
                    cyrgehook:   5 ;
                         cyrh:   5 ;
                    cyrhadesc:   5 ;
                    cyrhahook:   5 ;
                  cyrhcrossed:   5 ;
                 cyridieresis:   5 ;
                cyriecyrbreve:   4 ;
        cyriedieresiscyrbreve:   4 ;
          cyriedieresismacron:   4 ;
                    cyriehook:   5 ;
              cyriehookogonek:   5 ;
                  cyriemacron:   4 ;
                   cyrimacron:   5 ;
                      cyrinvE:   7 ;
              cyrinvEdieresis:   7 ;
                      cyrinve:   4 ;
              cyrinvedieresis:   4 ;
                    cyrkaback:   6 ;
                     cyrkabar:   5 ;
                    cyrkadesc:   5 ;
                    cyrkahook:   5 ;
                 cyrkavertbar:   5 ;
                      cyrobar:   5 ;
              cyrobarcyrbreve:   5 ;
              cyrobardieresis:   5 ;
      cyrobardieresiscyrbreve:   5 ;
                 cyrocyrbreve:   5 ;
                 cyrodieresis:   5 ;
                cyrodotaccent:   5 ;
                     cyrohook:   5 ;
                   cyromacron:   5 ;
                    cyrpehook:   8 ;
                 cyrstraightU:   7 ;
              cyrstraightUbar:   7 ;
                 cyrstraightu:   5 ;
              cyrstraightubar:   5 ;
                    cyrtedesc:   4 ;
                     cyrtetse:   5 ;
                    cyruacute:   5 ;
                 cyrudblacute:   5 ;
                 cyrudieresis:   5 ;
                   cyrumacron:   5 ;
                cyryacyrbreve:   5 ;
                  cyryamacron:   5 ;
              cyryerucyrbreve:   7 ;
              cyryerudieresis:   7 ;
                cyryerumacron:   7 ;
                cyryucyrbreve:   7 ;
                  cyryumacron:   7 ;
                   cyrzecaron:   4 ;
                cyrzedieresis:   4 ;
                    cyrzetail:   4 ;
                cyrzetail.alt:   4 ;
                   cyrzhedesc:   7 ;
               cyrzhedieresis:   7 ;
                            d:   5 ;
                       dacute:   5 ;
                       dagger:   5 ;
                    daggerdbl:   5 ;
                       dcaron:   7 ;
                       dcroat:   5 ;
                       degree:   4 ;
                     dieresis:   3 ;
                       divide:   5 ;
                     division:   2 ;
                       dollar:   5 ;
                    dotaccent:   3 ;
                     dotlessi:   3 ;
                     dotlessj:   3 ;
                            e:   4 ;
                       eacute:   4 ;
                       ecaron:   4 ;
                  ecircumflex:   4 ;
                    edieresis:   4 ;
                   edotaccent:   4 ;
                       egrave:   4 ;
                        eight:   5 ;
                     ellipsis:   9 ;
                      emacron:   4 ;
                       emdash:   9 ;
                       endash:   5 ;
                      eogonek:   4 ;
                        equal:   5 ;
                    estimated:   5 ;
                          eth:   5 ;
                       exclam:   3 ;
                   exclamdown:   3 ;
                     ezhcarel:   4 ;
                ezhcarelcaron:   4 ;
                            f:   3 ;
                       facute:   3 ;
                           fi:   5 ;
                         five:   5 ;
                           fl:   5 ;
                       florin:   5 ;
                         four:   5 ;
                 fourinferior:   4 ;
                     fraction:   2 ;
                            g:   5 ;
                       gbreve:   5 ;
                  gcircumflex:   5 ;
                 gcommaaccent:   5 ;
                   germandbls:   5 ;
                        grave:   3 ;
                      greater:   5 ;
                 greaterequal:   5 ;
                guillemotleft:   5 ;
               guillemotright:   5 ;
                guilsinglleft:   3 ;
               guilsinglright:   3 ;
                            h:   5 ;
                       hacute:   5 ;
                         hbar:   5 ;
                  hcircumflex:   5 ;
                        hdesc:   5 ;
                 hungarumlaut:   3 ;
                       hyphen:   3 ;
                            i:   3 ;
                       iacute:   3 ;
                  icircumflex:   3 ;
                    idieresis:   3 ;
                       igrave:   3 ;
                      imacron:   3 ;
                     infinity:   6 ;
                     integral:   2 ;
                      iogonek:   3 ;
                            j:   3 ;
                  jcircumflex:   3 ;
                            k:   5 ;
                 kcommaaccent:   5 ;
                            l:   3 ;
                       lacute:   3 ;
                  lacutecarel:   3 ;
                       lcaron:   4 ;
                 lcommaaccent:   3 ;
                         less:   5 ;
                    lessequal:   5 ;
                   logicalnot:   5 ;
                        longs:   3 ;
                      lozenge:   4 ;
                       lslash:   3 ;
                            m:   8 ;
                       macron:   5 ;
                       macute:   8 ;
                        minus:   5 ;
                           mu:   5 ;
                     multiply:   5 ;
                            n:   5 ;
                       nacute:   5 ;
                       ncaron:   5 ;
                 ncommaaccent:   5 ;
                         nine:   5 ;
             nonmarkingreturn:   2 ;
                     notequal:   5 ;
                       ntilde:   5 ;
                   numbersign:   5 ;
                            o:   5 ;
                       oacute:   5 ;
                  ocircumflex:   5 ;
                    odieresis:   5 ;
                           oe:   7 ;
                       ogonek:   3 ;
                       ograve:   5 ;
                ohungarumlaut:   5 ;
                      omacron:   5 ;
                          one:   5 ;
                one.numerator:   3 ;
                      onehalf:   7 ;
                  oneinferior:   3 ;
                   onequarter:   7 ;
                  onesuperior:   3 ;
                  ordfeminine:   3 ;
                 ordmasculine:   3 ;
                       oslash:   5 ;
                       otilde:   5 ;
                            p:   5 ;
                    paragraph:   5 ;
                    parenleft:   3 ;
                   parenright:   3 ;
                  partialdiff:   4 ;
                      percent:   9 ;
                       period:   2 ;
               periodcentered:   3 ;
                  perthousand:   9 ;
                           pi:   5 ;
                         plus:   5 ;
                    plusminus:   5 ;
                      product:   7 ;
                            q:   5 ;
                     question:   5 ;
                 questiondown:   5 ;
                     quotedbl:   5 ;
                 quotedblbase:   5 ;
                 quotedblleft:   5 ;
            quotedblleftsmall:   5 ;
                quotedblright:   5 ;
           quotedblrightsmall:   5 ;
                quotedblsmall:   5 ;
                    quoteleft:   3 ;
               quoteleftsmall:   3 ;
                   quoteright:   3 ;
              quoterightsmall:   3 ;
               quotesinglbase:   3 ;
                  quotesingle:   3 ;
             quotesinglesmall:   3 ;
                            r:   4 ;
                       racute:   4 ;
                      radical:   5 ;
                       rcaron:   4 ;
                 rcommaaccent:   4 ;
                   registered:   7 ;
                         ring:   3 ;
                            s:   4 ;
                       sacute:   4 ;
                       scaron:   4 ;
                     scedilla:   4 ;
                  scircumflex:   4 ;
                 scommaaccent:   4 ;
                      section:   5 ;
                    semicolon:   3 ;
                        seven:   5 ;
                          six:   5 ;
                        slash:   3 ;
                        space:   2 ;
                     sterling:   5 ;
                    summation:   6 ;
                            t:   3 ;
                       tacute:   3 ;
                       tcaron:   5 ;
                     tcedilla:   3 ;
                 tcommaaccent:   3 ;
                        thorn:   5 ;
                        three:   5 ;
                threeinferior:   3 ;
                threequarters:   7 ;
                threesuperior:   3 ;
                        tilde:   3 ;
                    trademark:   9 ;
                          two:   5 ;
                  twoinferior:   3 ;
                  twosuperior:   3 ;
                            u:   5 ;
                       uacute:   5 ;
                       ubreve:   5 ;
                  ucircumflex:   5 ;
                    udieresis:   5 ;
                       ugrave:   5 ;
                uhungarumlaut:   5 ;
                      umacron:   5 ;
                   underscore:   5 ;
                      uni01F4:   7 ;
                      uni01F5:   5 ;
                      uni03BC:   5 ;
                      uni048A:   7 ;
                      uni048B:   5 ;
                      uni048C:   6 ;
                      uni048D:   5 ;
                      uni04CF:   3 ;
                      uni04F6:   6 ;
                      uni04F7:   4 ;
                      uni0512:   7 ;
                      uni0513:   5 ;
                      uni051C:   9 ;
                      uni051D:   7 ;
                      uni0524:   7 ;
                      uni0525:   5 ;
                      uni0526:   7 ;
                      uni0527:   5 ;
                      uni1E30:   7 ;
                      uni1E31:   5 ;
                      uni1E54:   6 ;
                      uni1E55:   5 ;
                      uni2011:   4 ;
                      uni20B4:   5 ;
                      uni20BD:   5 ;
                      uni2126:   7 ;
                      uni2206:   6 ;
                      uniFEFF:   0 ;
                      uogonek:   5 ;
                        uring:   5 ;
                            v:   5 ;
                       vacute:   5 ;
                            w:   7 ;
                            x:   5 ;
                            y:   5 ;
                       yacute:   5 ;
                    ydieresis:   5 ;
                          yen:   5 ;
                            z:   4 ;
                       zacute:   4 ;
                       zcaron:   4 ;
                   zdotaccent:   4 ;
                         zero:   5 ;
    </hdmxData>
  </hdmx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x0" name=".null"/><!-- ???? -->
      <map code="0xd" name="nonmarkingreturn"/><!-- ???? -->
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="hyphen"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="twosuperior"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="threesuperior"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="onesuperior"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x122" name="Gcommaaccent"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="gcommaaccent"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="Kcommaaccent"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="kcommaaccent"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="Lcommaaccent"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="lcommaaccent"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="Ncommaaccent"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="ncommaaccent"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="Rcommaaccent"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="rcommaaccent"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="Scedilla"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="scedilla"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="Tcedilla"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="tcedilla"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x17f" name="longs"/><!-- LATIN SMALL LETTER LONG S -->
      <map code="0x192" name="florin"/><!-- LATIN SMALL LETTER F WITH HOOK -->
      <map code="0x1f4" name="uni01F4"/><!-- LATIN CAPITAL LETTER G WITH ACUTE -->
      <map code="0x1f5" name="uni01F5"/><!-- LATIN SMALL LETTER G WITH ACUTE -->
      <map code="0x218" name="Scommaaccent"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="scommaaccent"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="Tcommaaccent"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="tcommaaccent"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x237" name="dotlessj"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x2bc" name="afii57929"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x37e" name="semicolon"/><!-- GREEK QUESTION MARK -->
      <map code="0x394" name="Delta"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x3a9" name="Omega"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x3bc" name="uni03BC"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x3c0" name="pi"/><!-- GREEK SMALL LETTER PI -->
      <map code="0x401" name="afii10023"/><!-- CYRILLIC CAPITAL LETTER IO -->
      <map code="0x402" name="afii10051"/><!-- CYRILLIC CAPITAL LETTER DJE -->
      <map code="0x403" name="afii10052"/><!-- CYRILLIC CAPITAL LETTER GJE -->
      <map code="0x404" name="afii10053"/><!-- CYRILLIC CAPITAL LETTER UKRAINIAN IE -->
      <map code="0x405" name="afii10054"/><!-- CYRILLIC CAPITAL LETTER DZE -->
      <map code="0x406" name="afii10055"/><!-- CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x407" name="afii10056"/><!-- CYRILLIC CAPITAL LETTER YI -->
      <map code="0x408" name="afii10057"/><!-- CYRILLIC CAPITAL LETTER JE -->
      <map code="0x409" name="afii10058"/><!-- CYRILLIC CAPITAL LETTER LJE -->
      <map code="0x40a" name="afii10059"/><!-- CYRILLIC CAPITAL LETTER NJE -->
      <map code="0x40b" name="afii10060"/><!-- CYRILLIC CAPITAL LETTER TSHE -->
      <map code="0x40c" name="afii10061"/><!-- CYRILLIC CAPITAL LETTER KJE -->
      <map code="0x40e" name="afii10062"/><!-- CYRILLIC CAPITAL LETTER SHORT U -->
      <map code="0x40f" name="afii10145"/><!-- CYRILLIC CAPITAL LETTER DZHE -->
      <map code="0x410" name="afii10017"/><!-- CYRILLIC CAPITAL LETTER A -->
      <map code="0x411" name="afii10018"/><!-- CYRILLIC CAPITAL LETTER BE -->
      <map code="0x412" name="afii10019"/><!-- CYRILLIC CAPITAL LETTER VE -->
      <map code="0x413" name="afii10020"/><!-- CYRILLIC CAPITAL LETTER GHE -->
      <map code="0x414" name="afii10021"/><!-- CYRILLIC CAPITAL LETTER DE -->
      <map code="0x415" name="afii10022"/><!-- CYRILLIC CAPITAL LETTER IE -->
      <map code="0x416" name="afii10024"/><!-- CYRILLIC CAPITAL LETTER ZHE -->
      <map code="0x417" name="afii10025"/><!-- CYRILLIC CAPITAL LETTER ZE -->
      <map code="0x418" name="afii10026"/><!-- CYRILLIC CAPITAL LETTER I -->
      <map code="0x419" name="afii10027"/><!-- CYRILLIC CAPITAL LETTER SHORT I -->
      <map code="0x41a" name="afii10028"/><!-- CYRILLIC CAPITAL LETTER KA -->
      <map code="0x41b" name="afii10029"/><!-- CYRILLIC CAPITAL LETTER EL -->
      <map code="0x41c" name="afii10030"/><!-- CYRILLIC CAPITAL LETTER EM -->
      <map code="0x41d" name="afii10031"/><!-- CYRILLIC CAPITAL LETTER EN -->
      <map code="0x41e" name="afii10032"/><!-- CYRILLIC CAPITAL LETTER O -->
      <map code="0x41f" name="afii10033"/><!-- CYRILLIC CAPITAL LETTER PE -->
      <map code="0x420" name="afii10034"/><!-- CYRILLIC CAPITAL LETTER ER -->
      <map code="0x421" name="afii10035"/><!-- CYRILLIC CAPITAL LETTER ES -->
      <map code="0x422" name="afii10036"/><!-- CYRILLIC CAPITAL LETTER TE -->
      <map code="0x423" name="afii10037"/><!-- CYRILLIC CAPITAL LETTER U -->
      <map code="0x424" name="afii10038"/><!-- CYRILLIC CAPITAL LETTER EF -->
      <map code="0x425" name="afii10039"/><!-- CYRILLIC CAPITAL LETTER HA -->
      <map code="0x426" name="afii10040"/><!-- CYRILLIC CAPITAL LETTER TSE -->
      <map code="0x427" name="afii10041"/><!-- CYRILLIC CAPITAL LETTER CHE -->
      <map code="0x428" name="afii10042"/><!-- CYRILLIC CAPITAL LETTER SHA -->
      <map code="0x429" name="afii10043"/><!-- CYRILLIC CAPITAL LETTER SHCHA -->
      <map code="0x42a" name="afii10044"/><!-- CYRILLIC CAPITAL LETTER HARD SIGN -->
      <map code="0x42b" name="afii10045"/><!-- CYRILLIC CAPITAL LETTER YERU -->
      <map code="0x42c" name="afii10046"/><!-- CYRILLIC CAPITAL LETTER SOFT SIGN -->
      <map code="0x42d" name="afii10047"/><!-- CYRILLIC CAPITAL LETTER E -->
      <map code="0x42e" name="afii10048"/><!-- CYRILLIC CAPITAL LETTER YU -->
      <map code="0x42f" name="afii10049"/><!-- CYRILLIC CAPITAL LETTER YA -->
      <map code="0x430" name="afii10065"/><!-- CYRILLIC SMALL LETTER A -->
      <map code="0x431" name="afii10066"/><!-- CYRILLIC SMALL LETTER BE -->
      <map code="0x432" name="afii10067"/><!-- CYRILLIC SMALL LETTER VE -->
      <map code="0x433" name="afii10068"/><!-- CYRILLIC SMALL LETTER GHE -->
      <map code="0x434" name="afii10069"/><!-- CYRILLIC SMALL LETTER DE -->
      <map code="0x435" name="afii10070"/><!-- CYRILLIC SMALL LETTER IE -->
      <map code="0x436" name="afii10072"/><!-- CYRILLIC SMALL LETTER ZHE -->
      <map code="0x437" name="afii10073"/><!-- CYRILLIC SMALL LETTER ZE -->
      <map code="0x438" name="afii10074"/><!-- CYRILLIC SMALL LETTER I -->
      <map code="0x439" name="afii10075"/><!-- CYRILLIC SMALL LETTER SHORT I -->
      <map code="0x43a" name="afii10076"/><!-- CYRILLIC SMALL LETTER KA -->
      <map code="0x43b" name="afii10077"/><!-- CYRILLIC SMALL LETTER EL -->
      <map code="0x43c" name="afii10078"/><!-- CYRILLIC SMALL LETTER EM -->
      <map code="0x43d" name="afii10079"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="afii10080"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x43f" name="afii10081"/><!-- CYRILLIC SMALL LETTER PE -->
      <map code="0x440" name="afii10082"/><!-- CYRILLIC SMALL LETTER ER -->
      <map code="0x441" name="afii10083"/><!-- CYRILLIC SMALL LETTER ES -->
      <map code="0x442" name="afii10084"/><!-- CYRILLIC SMALL LETTER TE -->
      <map code="0x443" name="afii10085"/><!-- CYRILLIC SMALL LETTER U -->
      <map code="0x444" name="afii10086"/><!-- CYRILLIC SMALL LETTER EF -->
      <map code="0x445" name="afii10087"/><!-- CYRILLIC SMALL LETTER HA -->
      <map code="0x446" name="afii10088"/><!-- CYRILLIC SMALL LETTER TSE -->
      <map code="0x447" name="afii10089"/><!-- CYRILLIC SMALL LETTER CHE -->
      <map code="0x448" name="afii10090"/><!-- CYRILLIC SMALL LETTER SHA -->
      <map code="0x449" name="afii10091"/><!-- CYRILLIC SMALL LETTER SHCHA -->
      <map code="0x44a" name="afii10092"/><!-- CYRILLIC SMALL LETTER HARD SIGN -->
      <map code="0x44b" name="afii10093"/><!-- CYRILLIC SMALL LETTER YERU -->
      <map code="0x44c" name="afii10094"/><!-- CYRILLIC SMALL LETTER SOFT SIGN -->
      <map code="0x44d" name="afii10095"/><!-- CYRILLIC SMALL LETTER E -->
      <map code="0x44e" name="afii10096"/><!-- CYRILLIC SMALL LETTER YU -->
      <map code="0x44f" name="afii10097"/><!-- CYRILLIC SMALL LETTER YA -->
      <map code="0x451" name="afii10071"/><!-- CYRILLIC SMALL LETTER IO -->
      <map code="0x452" name="afii10099"/><!-- CYRILLIC SMALL LETTER DJE -->
      <map code="0x453" name="afii10100"/><!-- CYRILLIC SMALL LETTER GJE -->
      <map code="0x454" name="afii10101"/><!-- CYRILLIC SMALL LETTER UKRAINIAN IE -->
      <map code="0x455" name="afii10102"/><!-- CYRILLIC SMALL LETTER DZE -->
      <map code="0x456" name="afii10103"/><!-- CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x457" name="afii10104"/><!-- CYRILLIC SMALL LETTER YI -->
      <map code="0x458" name="afii10105"/><!-- CYRILLIC SMALL LETTER JE -->
      <map code="0x459" name="afii10106"/><!-- CYRILLIC SMALL LETTER LJE -->
      <map code="0x45a" name="afii10107"/><!-- CYRILLIC SMALL LETTER NJE -->
      <map code="0x45b" name="afii10108"/><!-- CYRILLIC SMALL LETTER TSHE -->
      <map code="0x45c" name="afii10109"/><!-- CYRILLIC SMALL LETTER KJE -->
      <map code="0x45e" name="afii10110"/><!-- CYRILLIC SMALL LETTER SHORT U -->
      <map code="0x45f" name="afii10193"/><!-- CYRILLIC SMALL LETTER DZHE -->
      <map code="0x462" name="afii10146"/><!-- CYRILLIC CAPITAL LETTER YAT -->
      <map code="0x463" name="afii10194"/><!-- CYRILLIC SMALL LETTER YAT -->
      <map code="0x472" name="afii10147"/><!-- CYRILLIC CAPITAL LETTER FITA -->
      <map code="0x473" name="afii10195"/><!-- CYRILLIC SMALL LETTER FITA -->
      <map code="0x474" name="afii10148"/><!-- CYRILLIC CAPITAL LETTER IZHITSA -->
      <map code="0x475" name="afii10196"/><!-- CYRILLIC SMALL LETTER IZHITSA -->
      <map code="0x48a" name="uni048A"/><!-- CYRILLIC CAPITAL LETTER SHORT I WITH TAIL -->
      <map code="0x48b" name="uni048B"/><!-- CYRILLIC SMALL LETTER SHORT I WITH TAIL -->
      <map code="0x48c" name="uni048C"/><!-- CYRILLIC CAPITAL LETTER SEMISOFT SIGN -->
      <map code="0x48d" name="uni048D"/><!-- CYRILLIC SMALL LETTER SEMISOFT SIGN -->
      <map code="0x48e" name="cyrErcrossed"/><!-- CYRILLIC CAPITAL LETTER ER WITH TICK -->
      <map code="0x48f" name="cyrercrossed"/><!-- CYRILLIC SMALL LETTER ER WITH TICK -->
      <map code="0x490" name="afii10050"/><!-- CYRILLIC CAPITAL LETTER GHE WITH UPTURN -->
      <map code="0x491" name="afii10098"/><!-- CYRILLIC SMALL LETTER GHE WITH UPTURN -->
      <map code="0x492" name="cyrGebar"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE -->
      <map code="0x493" name="cyrgebar"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE -->
      <map code="0x494" name="cyrGehook"/><!-- CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x495" name="cyrgehook"/><!-- CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x496" name="cyrZhedesc"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER -->
      <map code="0x497" name="cyrzhedesc"/><!-- CYRILLIC SMALL LETTER ZHE WITH DESCENDER -->
      <map code="0x498" name="cyrZetail"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DESCENDER -->
      <map code="0x499" name="cyrzetail"/><!-- CYRILLIC SMALL LETTER ZE WITH DESCENDER -->
      <map code="0x49a" name="cyrKadesc"/><!-- CYRILLIC CAPITAL LETTER KA WITH DESCENDER -->
      <map code="0x49b" name="cyrkadesc"/><!-- CYRILLIC SMALL LETTER KA WITH DESCENDER -->
      <map code="0x49c" name="cyrKavertbar"/><!-- CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49d" name="cyrkavertbar"/><!-- CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49e" name="cyrKabar"/><!-- CYRILLIC CAPITAL LETTER KA WITH STROKE -->
      <map code="0x49f" name="cyrkabar"/><!-- CYRILLIC SMALL LETTER KA WITH STROKE -->
      <map code="0x4a0" name="cyrKaback"/><!-- CYRILLIC CAPITAL LETTER BASHKIR KA -->
      <map code="0x4a1" name="cyrkaback"/><!-- CYRILLIC SMALL LETTER BASHKIR KA -->
      <map code="0x4a2" name="cyrEndesc"/><!-- CYRILLIC CAPITAL LETTER EN WITH DESCENDER -->
      <map code="0x4a3" name="cyrendesc"/><!-- CYRILLIC SMALL LETTER EN WITH DESCENDER -->
      <map code="0x4a4" name="cyrEnGe"/><!-- CYRILLIC CAPITAL LIGATURE EN GHE -->
      <map code="0x4a5" name="cyrenge"/><!-- CYRILLIC SMALL LIGATURE EN GHE -->
      <map code="0x4a6" name="cyrPehook"/><!-- CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a7" name="cyrpehook"/><!-- CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a8" name="cyrOhook"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN HA -->
      <map code="0x4a9" name="cyrohook"/><!-- CYRILLIC SMALL LETTER ABKHASIAN HA -->
      <map code="0x4aa" name="cyrEstail"/><!-- CYRILLIC CAPITAL LETTER ES WITH DESCENDER -->
      <map code="0x4ab" name="cyrestail"/><!-- CYRILLIC SMALL LETTER ES WITH DESCENDER -->
      <map code="0x4ac" name="cyrTedesc"/><!-- CYRILLIC CAPITAL LETTER TE WITH DESCENDER -->
      <map code="0x4ad" name="cyrtedesc"/><!-- CYRILLIC SMALL LETTER TE WITH DESCENDER -->
      <map code="0x4ae" name="cyrstraightU"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U -->
      <map code="0x4af" name="cyrstraightu"/><!-- CYRILLIC SMALL LETTER STRAIGHT U -->
      <map code="0x4b0" name="cyrstraightUbar"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b1" name="cyrstraightubar"/><!-- CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b2" name="cyrHadesc"/><!-- CYRILLIC CAPITAL LETTER HA WITH DESCENDER -->
      <map code="0x4b3" name="cyrhadesc"/><!-- CYRILLIC SMALL LETTER HA WITH DESCENDER -->
      <map code="0x4b4" name="cyrTeTse"/><!-- CYRILLIC CAPITAL LIGATURE TE TSE -->
      <map code="0x4b5" name="cyrtetse"/><!-- CYRILLIC SMALL LIGATURE TE TSE -->
      <map code="0x4b6" name="cyrChedesc"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DESCENDER -->
      <map code="0x4b7" name="cyrchedesc"/><!-- CYRILLIC SMALL LETTER CHE WITH DESCENDER -->
      <map code="0x4b8" name="cyrChevertbar"/><!-- CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4b9" name="cyrchevertbar"/><!-- CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4ba" name="cyrH"/><!-- CYRILLIC CAPITAL LETTER SHHA -->
      <map code="0x4bb" name="cyrh"/><!-- CYRILLIC SMALL LETTER SHHA -->
      <map code="0x4bc" name="cyrIehook"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE -->
      <map code="0x4bd" name="cyriehook"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE -->
      <map code="0x4be" name="cyrIehookogonek"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4bf" name="cyriehookogonek"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4c0" name="cyrI"/><!-- CYRILLIC LETTER PALOCHKA -->
      <map code="0x4c3" name="cyrKahook"/><!-- CYRILLIC CAPITAL LETTER KA WITH HOOK -->
      <map code="0x4c4" name="cyrkahook"/><!-- CYRILLIC SMALL LETTER KA WITH HOOK -->
      <map code="0x4c5" name="cyrEltail"/><!-- CYRILLIC CAPITAL LETTER EL WITH TAIL -->
      <map code="0x4c6" name="cyreltail"/><!-- CYRILLIC SMALL LETTER EL WITH TAIL -->
      <map code="0x4c7" name="cyrEnhook"/><!-- CYRILLIC CAPITAL LETTER EN WITH HOOK -->
      <map code="0x4c8" name="cyrenhook"/><!-- CYRILLIC SMALL LETTER EN WITH HOOK -->
      <map code="0x4c9" name="cyrEntail"/><!-- CYRILLIC CAPITAL LETTER EN WITH TAIL -->
      <map code="0x4ca" name="cyrentail"/><!-- CYRILLIC SMALL LETTER EN WITH TAIL -->
      <map code="0x4cb" name="cyrChedescleft"/><!-- CYRILLIC CAPITAL LETTER KHAKASSIAN CHE -->
      <map code="0x4cc" name="cyrchedescleft"/><!-- CYRILLIC SMALL LETTER KHAKASSIAN CHE -->
      <map code="0x4cd" name="cyrEmtail"/><!-- CYRILLIC CAPITAL LETTER EM WITH TAIL -->
      <map code="0x4ce" name="cyremtail"/><!-- CYRILLIC SMALL LETTER EM WITH TAIL -->
      <map code="0x4cf" name="uni04CF"/><!-- CYRILLIC SMALL LETTER PALOCHKA -->
      <map code="0x4d0" name="cyrAcyrbreve"/><!-- CYRILLIC CAPITAL LETTER A WITH BREVE -->
      <map code="0x4d1" name="cyracyrbreve"/><!-- CYRILLIC SMALL LETTER A WITH BREVE -->
      <map code="0x4d2" name="cyrAdieresis"/><!-- CYRILLIC CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0x4d3" name="cyradieresis"/><!-- CYRILLIC SMALL LETTER A WITH DIAERESIS -->
      <map code="0x4d4" name="cyrAE"/><!-- CYRILLIC CAPITAL LIGATURE A IE -->
      <map code="0x4d5" name="cyrae"/><!-- CYRILLIC SMALL LIGATURE A IE -->
      <map code="0x4d6" name="cyrIecyrbreve"/><!-- CYRILLIC CAPITAL LETTER IE WITH BREVE -->
      <map code="0x4d7" name="cyriecyrbreve"/><!-- CYRILLIC SMALL LETTER IE WITH BREVE -->
      <map code="0x4d8" name="cyrinvE"/><!-- CYRILLIC CAPITAL LETTER SCHWA -->
      <map code="0x4d9" name="cyrinve"/><!-- CYRILLIC SMALL LETTER SCHWA -->
      <map code="0x4da" name="cyrinvEdieresis"/><!-- CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4db" name="cyrinvedieresis"/><!-- CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4dc" name="cyrZhedieresis"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4dd" name="cyrzhedieresis"/><!-- CYRILLIC SMALL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4de" name="cyrZedieresis"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS -->
      <map code="0x4df" name="cyrzedieresis"/><!-- CYRILLIC SMALL LETTER ZE WITH DIAERESIS -->
      <map code="0x4e0" name="cyrDze"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN DZE -->
      <map code="0x4e1" name="cyrdze"/><!-- CYRILLIC SMALL LETTER ABKHASIAN DZE -->
      <map code="0x4e2" name="cyrImacron"/><!-- CYRILLIC CAPITAL LETTER I WITH MACRON -->
      <map code="0x4e3" name="cyrimacron"/><!-- CYRILLIC SMALL LETTER I WITH MACRON -->
      <map code="0x4e4" name="cyrIdieresis"/><!-- CYRILLIC CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0x4e5" name="cyridieresis"/><!-- CYRILLIC SMALL LETTER I WITH DIAERESIS -->
      <map code="0x4e6" name="cyrOdieresis"/><!-- CYRILLIC CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0x4e7" name="cyrodieresis"/><!-- CYRILLIC SMALL LETTER O WITH DIAERESIS -->
      <map code="0x4e8" name="cyrObar"/><!-- CYRILLIC CAPITAL LETTER BARRED O -->
      <map code="0x4e9" name="cyrobar"/><!-- CYRILLIC SMALL LETTER BARRED O -->
      <map code="0x4ea" name="cyrObardieresis"/><!-- CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4eb" name="cyrobardieresis"/><!-- CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4ec" name="cyrEdieresis"/><!-- CYRILLIC CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0x4ed" name="cyredieresis"/><!-- CYRILLIC SMALL LETTER E WITH DIAERESIS -->
      <map code="0x4ee" name="cyrUmacron"/><!-- CYRILLIC CAPITAL LETTER U WITH MACRON -->
      <map code="0x4ef" name="cyrumacron"/><!-- CYRILLIC SMALL LETTER U WITH MACRON -->
      <map code="0x4f0" name="cyrUdieresis"/><!-- CYRILLIC CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0x4f1" name="cyrudieresis"/><!-- CYRILLIC SMALL LETTER U WITH DIAERESIS -->
      <map code="0x4f2" name="cyrUdblacute"/><!-- CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f3" name="cyrudblacute"/><!-- CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f4" name="cyrChedieresis"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f5" name="cyrchedieresis"/><!-- CYRILLIC SMALL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f6" name="uni04F6"/><!-- CYRILLIC CAPITAL LETTER GHE WITH DESCENDER -->
      <map code="0x4f7" name="uni04F7"/><!-- CYRILLIC SMALL LETTER GHE WITH DESCENDER -->
      <map code="0x4f8" name="cyrYerudieresis"/><!-- CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS -->
      <map code="0x4f9" name="cyryerudieresis"/><!-- CYRILLIC SMALL LETTER YERU WITH DIAERESIS -->
      <map code="0x4fc" name="cyrHahook"/><!-- CYRILLIC CAPITAL LETTER HA WITH HOOK -->
      <map code="0x4fd" name="cyrhahook"/><!-- CYRILLIC SMALL LETTER HA WITH HOOK -->
      <map code="0x510" name="cyrEpsilon"/><!-- CYRILLIC CAPITAL LETTER REVERSED ZE -->
      <map code="0x511" name="cyrepsilon"/><!-- CYRILLIC SMALL LETTER REVERSED ZE -->
      <map code="0x512" name="uni0512"/><!-- CYRILLIC CAPITAL LETTER EL WITH HOOK -->
      <map code="0x513" name="uni0513"/><!-- CYRILLIC SMALL LETTER EL WITH HOOK -->
      <map code="0x51c" name="uni051C"/><!-- CYRILLIC CAPITAL LETTER WE -->
      <map code="0x51d" name="uni051D"/><!-- CYRILLIC SMALL LETTER WE -->
      <map code="0x524" name="uni0524"/><!-- CYRILLIC CAPITAL LETTER PE WITH DESCENDER -->
      <map code="0x525" name="uni0525"/><!-- CYRILLIC SMALL LETTER PE WITH DESCENDER -->
      <map code="0x526" name="uni0526"/><!-- CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER -->
      <map code="0x527" name="uni0527"/><!-- CYRILLIC SMALL LETTER SHHA WITH DESCENDER -->
      <map code="0x52e" name="cyrEldesc"/><!-- CYRILLIC CAPITAL LETTER EL WITH DESCENDER -->
      <map code="0x52f" name="cyreldesc"/><!-- CYRILLIC SMALL LETTER EL WITH DESCENDER -->
      <map code="0x1e30" name="uni1E30"/><!-- LATIN CAPITAL LETTER K WITH ACUTE -->
      <map code="0x1e31" name="uni1E31"/><!-- LATIN SMALL LETTER K WITH ACUTE -->
      <map code="0x1e3e" name="Macute"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="macute"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e54" name="uni1E54"/><!-- LATIN CAPITAL LETTER P WITH ACUTE -->
      <map code="0x1e55" name="uni1E55"/><!-- LATIN SMALL LETTER P WITH ACUTE -->
      <map code="0x1e9e" name="Germandbls"/><!-- LATIN CAPITAL LETTER SHARP S -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2030" name="perthousand"/><!-- PER MILLE SIGN -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2081" name="oneinferior"/><!-- SUBSCRIPT ONE -->
      <map code="0x2082" name="twoinferior"/><!-- SUBSCRIPT TWO -->
      <map code="0x2083" name="threeinferior"/><!-- SUBSCRIPT THREE -->
      <map code="0x2084" name="fourinferior"/><!-- SUBSCRIPT FOUR -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b4" name="uni20B4"/><!-- HRYVNIA SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2113" name="afii61289"/><!-- SCRIPT SMALL L -->
      <map code="0x2116" name="afii61352"/><!-- NUMERO SIGN -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2126" name="uni2126"/><!-- OHM SIGN -->
      <map code="0x212e" name="estimated"/><!-- ESTIMATED SYMBOL -->
      <map code="0x2202" name="partialdiff"/><!-- PARTIAL DIFFERENTIAL -->
      <map code="0x2206" name="uni2206"/><!-- INCREMENT -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="fraction"/><!-- DIVISION SLASH -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x221e" name="infinity"/><!-- INFINITY -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0x25ca" name="lozenge"/><!-- LOZENGE -->
      <map code="0x2c67" name="Hdesc"/><!-- LATIN CAPITAL LETTER H WITH DESCENDER -->
      <map code="0x2c68" name="hdesc"/><!-- LATIN SMALL LETTER H WITH DESCENDER -->
      <map code="0xf401" name="Accent"/><!-- ???? -->
      <map code="0xf406" name="Breve"/><!-- ???? -->
      <map code="0xf407" name="Cedilla"/><!-- ???? -->
      <map code="0xf408" name="Circumflex"/><!-- ???? -->
      <map code="0xf409" name="Commaaccent"/><!-- ???? -->
      <map code="0xf40a" name="Apostrophe"/><!-- ???? -->
      <map code="0xf40b" name="Dotaccent"/><!-- ???? -->
      <map code="0xf40c" name="Ring"/><!-- ???? -->
      <map code="0xf40d" name="Tilde"/><!-- ???? -->
      <map code="0xf40e" name="Ogonek"/><!-- ???? -->
      <map code="0xf486" name="Bacute"/><!-- ???? -->
      <map code="0xf487" name="bacute"/><!-- ???? -->
      <map code="0xf488" name="Facute"/><!-- ???? -->
      <map code="0xf489" name="facute"/><!-- ???? -->
      <map code="0xf49e" name="cyrHcrossed"/><!-- ???? -->
      <map code="0xf49f" name="cyrhcrossed"/><!-- ???? -->
      <map code="0xf4c6" name="cyrChehook"/><!-- ???? -->
      <map code="0xf4c7" name="cyrchehook"/><!-- ???? -->
      <map code="0xf4cc" name="cyrUacute"/><!-- ???? -->
      <map code="0xf4cd" name="cyruacute"/><!-- ???? -->
      <map code="0xf4d6" name="cyrEdotaccent"/><!-- ???? -->
      <map code="0xf4d7" name="cyredotaccent"/><!-- ???? -->
      <map code="0xf50a" name="cyrZetail.alt"/><!-- ???? -->
      <map code="0xf50b" name="cyrzetail.alt"/><!-- ???? -->
      <map code="0xf50c" name="cyrEstail.alt02"/><!-- ???? -->
      <map code="0xf50d" name="cyrestail.alt02"/><!-- ???? -->
      <map code="0xf50e" name="cyrAmacron"/><!-- ???? -->
      <map code="0xf50f" name="cyramacron"/><!-- ???? -->
      <map code="0xf510" name="cyrIemacron"/><!-- ???? -->
      <map code="0xf511" name="cyriemacron"/><!-- ???? -->
      <map code="0xf512" name="cyrIedieresismacron"/><!-- ???? -->
      <map code="0xf513" name="cyriedieresismacron"/><!-- ???? -->
      <map code="0xf514" name="cyrIedieresiscyrbreve"/><!-- ???? -->
      <map code="0xf515" name="cyriedieresiscyrbreve"/><!-- ???? -->
      <map code="0xf516" name="cyrZecaron"/><!-- ???? -->
      <map code="0xf517" name="cyrzecaron"/><!-- ???? -->
      <map code="0xf518" name="cyrOmacron"/><!-- ???? -->
      <map code="0xf519" name="cyromacron"/><!-- ???? -->
      <map code="0xf51a" name="cyrOcyrbreve"/><!-- ???? -->
      <map code="0xf51b" name="cyrocyrbreve"/><!-- ???? -->
      <map code="0xf51c" name="cyrObarcyrbreve"/><!-- ???? -->
      <map code="0xf51d" name="cyrobarcyrbreve"/><!-- ???? -->
      <map code="0xf51e" name="cyrObardieresiscyrbreve"/><!-- ???? -->
      <map code="0xf51f" name="cyrobardieresiscyrbreve"/><!-- ???? -->
      <map code="0xf520" name="cyrYerumacron"/><!-- ???? -->
      <map code="0xf521" name="cyryerumacron"/><!-- ???? -->
      <map code="0xf522" name="cyrEmacron"/><!-- ???? -->
      <map code="0xf523" name="cyremacron"/><!-- ???? -->
      <map code="0xf524" name="cyrEcyrbreve"/><!-- ???? -->
      <map code="0xf525" name="cyrecyrbreve"/><!-- ???? -->
      <map code="0xf526" name="afii10053dieresis"/><!-- ???? -->
      <map code="0xf527" name="afii10101dieresis"/><!-- ???? -->
      <map code="0xf528" name="cyrYamacron"/><!-- ???? -->
      <map code="0xf529" name="cyryamacron"/><!-- ???? -->
      <map code="0xf52a" name="cyrYacyrbreve"/><!-- ???? -->
      <map code="0xf52b" name="cyryacyrbreve"/><!-- ???? -->
      <map code="0xf52c" name="cyrYumacron"/><!-- ???? -->
      <map code="0xf52d" name="cyryumacron"/><!-- ???? -->
      <map code="0xf52e" name="cyrYucyrbreve"/><!-- ???? -->
      <map code="0xf52f" name="cyryucyrbreve"/><!-- ???? -->
      <map code="0xf530" name="cyrEldesc"/><!-- ???? -->
      <map code="0xf531" name="cyreldesc"/><!-- ???? -->
      <map code="0xf532" name="afii10027hook"/><!-- ???? -->
      <map code="0xf533" name="afii10075hook"/><!-- ???? -->
      <map code="0xf534" name="cyrOdotaccent"/><!-- ???? -->
      <map code="0xf535" name="cyrodotaccent"/><!-- ???? -->
      <map code="0xf536" name="cyrYerucyrbreve"/><!-- ???? -->
      <map code="0xf537" name="cyryerucyrbreve"/><!-- ???? -->
      <map code="0xf538" name="cyrEpsilondieresis"/><!-- ???? -->
      <map code="0xf539" name="cyrepsilondieresis"/><!-- ???? -->
      <map code="0xf53a" name="afii10055.alt"/><!-- ???? -->
      <map code="0xf53b" name="afii10103.alt"/><!-- ???? -->
      <map code="0xf53c" name="cyrGebar.alt"/><!-- ???? -->
      <map code="0xf53d" name="cyrgebar.alt"/><!-- ???? -->
      <map code="0xf53e" name="cyrEstail.alt"/><!-- ???? -->
      <map code="0xf53f" name="cyrestail.alt"/><!-- ???? -->
      <map code="0xf540" name="Dacute"/><!-- ???? -->
      <map code="0xf541" name="dacute"/><!-- ???? -->
      <map code="0xf542" name="Hacute"/><!-- ???? -->
      <map code="0xf543" name="hacute"/><!-- ???? -->
      <map code="0xf544" name="Lacutecarel"/><!-- ???? -->
      <map code="0xf545" name="lacutecarel"/><!-- ???? -->
      <map code="0xf546" name="Tacute"/><!-- ???? -->
      <map code="0xf547" name="tacute"/><!-- ???? -->
      <map code="0xf548" name="Vacute"/><!-- ???? -->
      <map code="0xf549" name="vacute"/><!-- ???? -->
      <map code="0xf54a" name="Ezhcarel"/><!-- ???? -->
      <map code="0xf54b" name="ezhcarel"/><!-- ???? -->
      <map code="0xf54c" name="Ezhcarelcaron"/><!-- ???? -->
      <map code="0xf54d" name="ezhcarelcaron"/><!-- ???? -->
      <map code="0xf62c" name="quoteleftsmall"/><!-- ???? -->
      <map code="0xf62d" name="quoterightsmall"/><!-- ???? -->
      <map code="0xf62e" name="quotedblleftsmall"/><!-- ???? -->
      <map code="0xf62f" name="quotedblrightsmall"/><!-- ???? -->
      <map code="0xf634" name="quotesinglesmall"/><!-- ???? -->
      <map code="0xf635" name="quotedblsmall"/><!-- ???? -->
      <map code="0xf662" name="one.numerator"/><!-- ???? -->
      <map code="0xf6c3" name="commaaccent"/><!-- ???? -->
      <map code="0xf6c9" name="Acute"/><!-- ???? -->
      <map code="0xf6ca" name="Caron"/><!-- ???? -->
      <map code="0xf6cb" name="Dieresis"/><!-- ???? -->
      <map code="0xf6ce" name="Grave"/><!-- ???? -->
      <map code="0xf6cf" name="Hungarumlaut"/><!-- ???? -->
      <map code="0xf6d0" name="Macron"/><!-- ???? -->
      <map code="0xf6d1" name="cyrBreve"/><!-- ???? -->
      <map code="0xf6d4" name="cyrbreve"/><!-- ???? -->
      <map code="0xfb01" name="fi"/><!-- LATIN SMALL LIGATURE FI -->
      <map code="0xfb02" name="fl"/><!-- LATIN SMALL LIGATURE FL -->
      <map code="0xfeff" name="uniFEFF"/><!-- ZERO WIDTH NO-BREAK SPACE -->
    </cmap_format_4>
    <cmap_format_6 platformID="1" platEncID="0" language="0">
      <map code="0x0" name=".null"/>
      <map code="0xd" name="nonmarkingreturn"/>
      <map code="0x20" name="space"/>
      <map code="0x21" name="exclam"/>
      <map code="0x22" name="quotedbl"/>
      <map code="0x23" name="numbersign"/>
      <map code="0x24" name="dollar"/>
      <map code="0x25" name="percent"/>
      <map code="0x26" name="ampersand"/>
      <map code="0x27" name="quotesingle"/>
      <map code="0x28" name="parenleft"/>
      <map code="0x29" name="parenright"/>
      <map code="0x2a" name="asterisk"/>
      <map code="0x2b" name="plus"/>
      <map code="0x2c" name="comma"/>
      <map code="0x2d" name="hyphen"/>
      <map code="0x2e" name="period"/>
      <map code="0x2f" name="slash"/>
      <map code="0x30" name="zero"/>
      <map code="0x31" name="one"/>
      <map code="0x32" name="two"/>
      <map code="0x33" name="three"/>
      <map code="0x34" name="four"/>
      <map code="0x35" name="five"/>
      <map code="0x36" name="six"/>
      <map code="0x37" name="seven"/>
      <map code="0x38" name="eight"/>
      <map code="0x39" name="nine"/>
      <map code="0x3a" name="colon"/>
      <map code="0x3b" name="semicolon"/>
      <map code="0x3c" name="less"/>
      <map code="0x3d" name="equal"/>
      <map code="0x3e" name="greater"/>
      <map code="0x3f" name="question"/>
      <map code="0x40" name="at"/>
      <map code="0x41" name="A"/>
      <map code="0x42" name="B"/>
      <map code="0x43" name="C"/>
      <map code="0x44" name="D"/>
      <map code="0x45" name="E"/>
      <map code="0x46" name="F"/>
      <map code="0x47" name="G"/>
      <map code="0x48" name="H"/>
      <map code="0x49" name="I"/>
      <map code="0x4a" name="J"/>
      <map code="0x4b" name="K"/>
      <map code="0x4c" name="L"/>
      <map code="0x4d" name="M"/>
      <map code="0x4e" name="N"/>
      <map code="0x4f" name="O"/>
      <map code="0x50" name="P"/>
      <map code="0x51" name="Q"/>
      <map code="0x52" name="R"/>
      <map code="0x53" name="S"/>
      <map code="0x54" name="T"/>
      <map code="0x55" name="U"/>
      <map code="0x56" name="V"/>
      <map code="0x57" name="W"/>
      <map code="0x58" name="X"/>
      <map code="0x59" name="Y"/>
      <map code="0x5a" name="Z"/>
      <map code="0x5b" name="bracketleft"/>
      <map code="0x5c" name="backslash"/>
      <map code="0x5d" name="bracketright"/>
      <map code="0x5e" name="asciicircum"/>
      <map code="0x5f" name="underscore"/>
      <map code="0x60" name="grave"/>
      <map code="0x61" name="a"/>
      <map code="0x62" name="b"/>
      <map code="0x63" name="c"/>
      <map code="0x64" name="d"/>
      <map code="0x65" name="e"/>
      <map code="0x66" name="f"/>
      <map code="0x67" name="g"/>
      <map code="0x68" name="h"/>
      <map code="0x69" name="i"/>
      <map code="0x6a" name="j"/>
      <map code="0x6b" name="k"/>
      <map code="0x6c" name="l"/>
      <map code="0x6d" name="m"/>
      <map code="0x6e" name="n"/>
      <map code="0x6f" name="o"/>
      <map code="0x70" name="p"/>
      <map code="0x71" name="q"/>
      <map code="0x72" name="r"/>
      <map code="0x73" name="s"/>
      <map code="0x74" name="t"/>
      <map code="0x75" name="u"/>
      <map code="0x76" name="v"/>
      <map code="0x77" name="w"/>
      <map code="0x78" name="x"/>
      <map code="0x79" name="y"/>
      <map code="0x7a" name="z"/>
      <map code="0x7b" name="braceleft"/>
      <map code="0x7c" name="bar"/>
      <map code="0x7d" name="braceright"/>
      <map code="0x7e" name="asciitilde"/>
      <map code="0x80" name="Adieresis"/>
      <map code="0x81" name="Aring"/>
      <map code="0x82" name="Ccedilla"/>
      <map code="0x83" name="Eacute"/>
      <map code="0x84" name="Ntilde"/>
      <map code="0x85" name="Odieresis"/>
      <map code="0x86" name="Udieresis"/>
      <map code="0x87" name="aacute"/>
      <map code="0x88" name="agrave"/>
      <map code="0x89" name="acircumflex"/>
      <map code="0x8a" name="adieresis"/>
      <map code="0x8b" name="atilde"/>
      <map code="0x8c" name="aring"/>
      <map code="0x8d" name="ccedilla"/>
      <map code="0x8e" name="eacute"/>
      <map code="0x8f" name="egrave"/>
      <map code="0x90" name="ecircumflex"/>
      <map code="0x91" name="edieresis"/>
      <map code="0x92" name="iacute"/>
      <map code="0x93" name="igrave"/>
      <map code="0x94" name="icircumflex"/>
      <map code="0x95" name="idieresis"/>
      <map code="0x96" name="ntilde"/>
      <map code="0x97" name="oacute"/>
      <map code="0x98" name="ograve"/>
      <map code="0x99" name="ocircumflex"/>
      <map code="0x9a" name="odieresis"/>
      <map code="0x9b" name="otilde"/>
      <map code="0x9c" name="uacute"/>
      <map code="0x9d" name="ugrave"/>
      <map code="0x9e" name="ucircumflex"/>
      <map code="0x9f" name="udieresis"/>
      <map code="0xa0" name="dagger"/>
      <map code="0xa1" name="degree"/>
      <map code="0xa2" name="cent"/>
      <map code="0xa3" name="sterling"/>
      <map code="0xa4" name="section"/>
      <map code="0xa5" name="bullet"/>
      <map code="0xa6" name="paragraph"/>
      <map code="0xa7" name="germandbls"/>
      <map code="0xa8" name="registered"/>
      <map code="0xa9" name="copyright"/>
      <map code="0xaa" name="trademark"/>
      <map code="0xab" name="acute"/>
      <map code="0xac" name="dieresis"/>
      <map code="0xad" name="notequal"/>
      <map code="0xae" name="AE"/>
      <map code="0xaf" name="Oslash"/>
      <map code="0xb0" name="infinity"/>
      <map code="0xb1" name="plusminus"/>
      <map code="0xb2" name="lessequal"/>
      <map code="0xb3" name="greaterequal"/>
      <map code="0xb4" name="yen"/>
      <map code="0xb5" name="mu"/>
      <map code="0xb6" name="partialdiff"/>
      <map code="0xb7" name="summation"/>
      <map code="0xb8" name="product"/>
      <map code="0xb9" name="pi"/>
      <map code="0xba" name="integral"/>
      <map code="0xbb" name="ordfeminine"/>
      <map code="0xbc" name="ordmasculine"/>
      <map code="0xbd" name="uni2126"/>
      <map code="0xbe" name="ae"/>
      <map code="0xbf" name="oslash"/>
      <map code="0xc0" name="questiondown"/>
      <map code="0xc1" name="exclamdown"/>
      <map code="0xc2" name="logicalnot"/>
      <map code="0xc3" name="radical"/>
      <map code="0xc4" name="florin"/>
      <map code="0xc5" name="approxequal"/>
      <map code="0xc6" name="uni2206"/>
      <map code="0xc7" name="guillemotleft"/>
      <map code="0xc8" name="guillemotright"/>
      <map code="0xc9" name="ellipsis"/>
      <map code="0xca" name="space"/>
      <map code="0xcb" name="Agrave"/>
      <map code="0xcc" name="Atilde"/>
      <map code="0xcd" name="Otilde"/>
      <map code="0xce" name="OE"/>
      <map code="0xcf" name="oe"/>
      <map code="0xd0" name="endash"/>
      <map code="0xd1" name="emdash"/>
      <map code="0xd2" name="quotedblleft"/>
      <map code="0xd3" name="quotedblright"/>
      <map code="0xd4" name="quoteleft"/>
      <map code="0xd5" name="quoteright"/>
      <map code="0xd6" name="divide"/>
      <map code="0xd7" name="lozenge"/>
      <map code="0xd8" name="ydieresis"/>
      <map code="0xd9" name="Ydieresis"/>
      <map code="0xda" name="fraction"/>
      <map code="0xdb" name="Euro"/>
      <map code="0xdc" name="guilsinglleft"/>
      <map code="0xdd" name="guilsinglright"/>
      <map code="0xde" name="fi"/>
      <map code="0xdf" name="fl"/>
      <map code="0xe0" name="daggerdbl"/>
      <map code="0xe1" name="periodcentered"/>
      <map code="0xe2" name="quotesinglbase"/>
      <map code="0xe3" name="quotedblbase"/>
      <map code="0xe4" name="perthousand"/>
      <map code="0xe5" name="Acircumflex"/>
      <map code="0xe6" name="Ecircumflex"/>
      <map code="0xe7" name="Aacute"/>
      <map code="0xe8" name="Edieresis"/>
      <map code="0xe9" name="Egrave"/>
      <map code="0xea" name="Iacute"/>
      <map code="0xeb" name="Icircumflex"/>
      <map code="0xec" name="Idieresis"/>
      <map code="0xed" name="Igrave"/>
      <map code="0xee" name="Oacute"/>
      <map code="0xef" name="Ocircumflex"/>
      <map code="0xf1" name="Ograve"/>
      <map code="0xf2" name="Uacute"/>
      <map code="0xf3" name="Ucircumflex"/>
      <map code="0xf4" name="Ugrave"/>
      <map code="0xf5" name="dotlessi"/>
      <map code="0xf6" name="circumflex"/>
      <map code="0xf7" name="tilde"/>
      <map code="0xf8" name="macron"/>
      <map code="0xf9" name="breve"/>
      <map code="0xfa" name="dotaccent"/>
      <map code="0xfb" name="ring"/>
      <map code="0xfc" name="cedilla"/>
      <map code="0xfd" name="hungarumlaut"/>
      <map code="0xfe" name="ogonek"/>
      <map code="0xff" name="caron"/>
    </cmap_format_6>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x0" name=".null"/><!-- ???? -->
      <map code="0xd" name="nonmarkingreturn"/><!-- ???? -->
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
      <map code="0xa1" name="exclamdown"/><!-- INVERTED EXCLAMATION MARK -->
      <map code="0xa2" name="cent"/><!-- CENT SIGN -->
      <map code="0xa3" name="sterling"/><!-- POUND SIGN -->
      <map code="0xa4" name="currency"/><!-- CURRENCY SIGN -->
      <map code="0xa5" name="yen"/><!-- YEN SIGN -->
      <map code="0xa6" name="brokenbar"/><!-- BROKEN BAR -->
      <map code="0xa7" name="section"/><!-- SECTION SIGN -->
      <map code="0xa8" name="dieresis"/><!-- DIAERESIS -->
      <map code="0xa9" name="copyright"/><!-- COPYRIGHT SIGN -->
      <map code="0xaa" name="ordfeminine"/><!-- FEMININE ORDINAL INDICATOR -->
      <map code="0xab" name="guillemotleft"/><!-- LEFT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xac" name="logicalnot"/><!-- NOT SIGN -->
      <map code="0xad" name="hyphen"/><!-- SOFT HYPHEN -->
      <map code="0xae" name="registered"/><!-- REGISTERED SIGN -->
      <map code="0xaf" name="macron"/><!-- MACRON -->
      <map code="0xb0" name="degree"/><!-- DEGREE SIGN -->
      <map code="0xb1" name="plusminus"/><!-- PLUS-MINUS SIGN -->
      <map code="0xb2" name="twosuperior"/><!-- SUPERSCRIPT TWO -->
      <map code="0xb3" name="threesuperior"/><!-- SUPERSCRIPT THREE -->
      <map code="0xb4" name="acute"/><!-- ACUTE ACCENT -->
      <map code="0xb5" name="mu"/><!-- MICRO SIGN -->
      <map code="0xb6" name="paragraph"/><!-- PILCROW SIGN -->
      <map code="0xb7" name="periodcentered"/><!-- MIDDLE DOT -->
      <map code="0xb8" name="cedilla"/><!-- CEDILLA -->
      <map code="0xb9" name="onesuperior"/><!-- SUPERSCRIPT ONE -->
      <map code="0xba" name="ordmasculine"/><!-- MASCULINE ORDINAL INDICATOR -->
      <map code="0xbb" name="guillemotright"/><!-- RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK -->
      <map code="0xbc" name="onequarter"/><!-- VULGAR FRACTION ONE QUARTER -->
      <map code="0xbd" name="onehalf"/><!-- VULGAR FRACTION ONE HALF -->
      <map code="0xbe" name="threequarters"/><!-- VULGAR FRACTION THREE QUARTERS -->
      <map code="0xbf" name="questiondown"/><!-- INVERTED QUESTION MARK -->
      <map code="0xc0" name="Agrave"/><!-- LATIN CAPITAL LETTER A WITH GRAVE -->
      <map code="0xc1" name="Aacute"/><!-- LATIN CAPITAL LETTER A WITH ACUTE -->
      <map code="0xc2" name="Acircumflex"/><!-- LATIN CAPITAL LETTER A WITH CIRCUMFLEX -->
      <map code="0xc3" name="Atilde"/><!-- LATIN CAPITAL LETTER A WITH TILDE -->
      <map code="0xc4" name="Adieresis"/><!-- LATIN CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0xc5" name="Aring"/><!-- LATIN CAPITAL LETTER A WITH RING ABOVE -->
      <map code="0xc6" name="AE"/><!-- LATIN CAPITAL LETTER AE -->
      <map code="0xc7" name="Ccedilla"/><!-- LATIN CAPITAL LETTER C WITH CEDILLA -->
      <map code="0xc8" name="Egrave"/><!-- LATIN CAPITAL LETTER E WITH GRAVE -->
      <map code="0xc9" name="Eacute"/><!-- LATIN CAPITAL LETTER E WITH ACUTE -->
      <map code="0xca" name="Ecircumflex"/><!-- LATIN CAPITAL LETTER E WITH CIRCUMFLEX -->
      <map code="0xcb" name="Edieresis"/><!-- LATIN CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0xcc" name="Igrave"/><!-- LATIN CAPITAL LETTER I WITH GRAVE -->
      <map code="0xcd" name="Iacute"/><!-- LATIN CAPITAL LETTER I WITH ACUTE -->
      <map code="0xce" name="Icircumflex"/><!-- LATIN CAPITAL LETTER I WITH CIRCUMFLEX -->
      <map code="0xcf" name="Idieresis"/><!-- LATIN CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0xd0" name="Eth"/><!-- LATIN CAPITAL LETTER ETH -->
      <map code="0xd1" name="Ntilde"/><!-- LATIN CAPITAL LETTER N WITH TILDE -->
      <map code="0xd2" name="Ograve"/><!-- LATIN CAPITAL LETTER O WITH GRAVE -->
      <map code="0xd3" name="Oacute"/><!-- LATIN CAPITAL LETTER O WITH ACUTE -->
      <map code="0xd4" name="Ocircumflex"/><!-- LATIN CAPITAL LETTER O WITH CIRCUMFLEX -->
      <map code="0xd5" name="Otilde"/><!-- LATIN CAPITAL LETTER O WITH TILDE -->
      <map code="0xd6" name="Odieresis"/><!-- LATIN CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0xd7" name="multiply"/><!-- MULTIPLICATION SIGN -->
      <map code="0xd8" name="Oslash"/><!-- LATIN CAPITAL LETTER O WITH STROKE -->
      <map code="0xd9" name="Ugrave"/><!-- LATIN CAPITAL LETTER U WITH GRAVE -->
      <map code="0xda" name="Uacute"/><!-- LATIN CAPITAL LETTER U WITH ACUTE -->
      <map code="0xdb" name="Ucircumflex"/><!-- LATIN CAPITAL LETTER U WITH CIRCUMFLEX -->
      <map code="0xdc" name="Udieresis"/><!-- LATIN CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0xdd" name="Yacute"/><!-- LATIN CAPITAL LETTER Y WITH ACUTE -->
      <map code="0xde" name="Thorn"/><!-- LATIN CAPITAL LETTER THORN -->
      <map code="0xdf" name="germandbls"/><!-- LATIN SMALL LETTER SHARP S -->
      <map code="0xe0" name="agrave"/><!-- LATIN SMALL LETTER A WITH GRAVE -->
      <map code="0xe1" name="aacute"/><!-- LATIN SMALL LETTER A WITH ACUTE -->
      <map code="0xe2" name="acircumflex"/><!-- LATIN SMALL LETTER A WITH CIRCUMFLEX -->
      <map code="0xe3" name="atilde"/><!-- LATIN SMALL LETTER A WITH TILDE -->
      <map code="0xe4" name="adieresis"/><!-- LATIN SMALL LETTER A WITH DIAERESIS -->
      <map code="0xe5" name="aring"/><!-- LATIN SMALL LETTER A WITH RING ABOVE -->
      <map code="0xe6" name="ae"/><!-- LATIN SMALL LETTER AE -->
      <map code="0xe7" name="ccedilla"/><!-- LATIN SMALL LETTER C WITH CEDILLA -->
      <map code="0xe8" name="egrave"/><!-- LATIN SMALL LETTER E WITH GRAVE -->
      <map code="0xe9" name="eacute"/><!-- LATIN SMALL LETTER E WITH ACUTE -->
      <map code="0xea" name="ecircumflex"/><!-- LATIN SMALL LETTER E WITH CIRCUMFLEX -->
      <map code="0xeb" name="edieresis"/><!-- LATIN SMALL LETTER E WITH DIAERESIS -->
      <map code="0xec" name="igrave"/><!-- LATIN SMALL LETTER I WITH GRAVE -->
      <map code="0xed" name="iacute"/><!-- LATIN SMALL LETTER I WITH ACUTE -->
      <map code="0xee" name="icircumflex"/><!-- LATIN SMALL LETTER I WITH CIRCUMFLEX -->
      <map code="0xef" name="idieresis"/><!-- LATIN SMALL LETTER I WITH DIAERESIS -->
      <map code="0xf0" name="eth"/><!-- LATIN SMALL LETTER ETH -->
      <map code="0xf1" name="ntilde"/><!-- LATIN SMALL LETTER N WITH TILDE -->
      <map code="0xf2" name="ograve"/><!-- LATIN SMALL LETTER O WITH GRAVE -->
      <map code="0xf3" name="oacute"/><!-- LATIN SMALL LETTER O WITH ACUTE -->
      <map code="0xf4" name="ocircumflex"/><!-- LATIN SMALL LETTER O WITH CIRCUMFLEX -->
      <map code="0xf5" name="otilde"/><!-- LATIN SMALL LETTER O WITH TILDE -->
      <map code="0xf6" name="odieresis"/><!-- LATIN SMALL LETTER O WITH DIAERESIS -->
      <map code="0xf7" name="divide"/><!-- DIVISION SIGN -->
      <map code="0xf8" name="oslash"/><!-- LATIN SMALL LETTER O WITH STROKE -->
      <map code="0xf9" name="ugrave"/><!-- LATIN SMALL LETTER U WITH GRAVE -->
      <map code="0xfa" name="uacute"/><!-- LATIN SMALL LETTER U WITH ACUTE -->
      <map code="0xfb" name="ucircumflex"/><!-- LATIN SMALL LETTER U WITH CIRCUMFLEX -->
      <map code="0xfc" name="udieresis"/><!-- LATIN SMALL LETTER U WITH DIAERESIS -->
      <map code="0xfd" name="yacute"/><!-- LATIN SMALL LETTER Y WITH ACUTE -->
      <map code="0xfe" name="thorn"/><!-- LATIN SMALL LETTER THORN -->
      <map code="0xff" name="ydieresis"/><!-- LATIN SMALL LETTER Y WITH DIAERESIS -->
      <map code="0x100" name="Amacron"/><!-- LATIN CAPITAL LETTER A WITH MACRON -->
      <map code="0x101" name="amacron"/><!-- LATIN SMALL LETTER A WITH MACRON -->
      <map code="0x102" name="Abreve"/><!-- LATIN CAPITAL LETTER A WITH BREVE -->
      <map code="0x103" name="abreve"/><!-- LATIN SMALL LETTER A WITH BREVE -->
      <map code="0x104" name="Aogonek"/><!-- LATIN CAPITAL LETTER A WITH OGONEK -->
      <map code="0x105" name="aogonek"/><!-- LATIN SMALL LETTER A WITH OGONEK -->
      <map code="0x106" name="Cacute"/><!-- LATIN CAPITAL LETTER C WITH ACUTE -->
      <map code="0x107" name="cacute"/><!-- LATIN SMALL LETTER C WITH ACUTE -->
      <map code="0x108" name="Ccircumflex"/><!-- LATIN CAPITAL LETTER C WITH CIRCUMFLEX -->
      <map code="0x109" name="ccircumflex"/><!-- LATIN SMALL LETTER C WITH CIRCUMFLEX -->
      <map code="0x10c" name="Ccaron"/><!-- LATIN CAPITAL LETTER C WITH CARON -->
      <map code="0x10d" name="ccaron"/><!-- LATIN SMALL LETTER C WITH CARON -->
      <map code="0x10e" name="Dcaron"/><!-- LATIN CAPITAL LETTER D WITH CARON -->
      <map code="0x10f" name="dcaron"/><!-- LATIN SMALL LETTER D WITH CARON -->
      <map code="0x110" name="Dcroat"/><!-- LATIN CAPITAL LETTER D WITH STROKE -->
      <map code="0x111" name="dcroat"/><!-- LATIN SMALL LETTER D WITH STROKE -->
      <map code="0x112" name="Emacron"/><!-- LATIN CAPITAL LETTER E WITH MACRON -->
      <map code="0x113" name="emacron"/><!-- LATIN SMALL LETTER E WITH MACRON -->
      <map code="0x116" name="Edotaccent"/><!-- LATIN CAPITAL LETTER E WITH DOT ABOVE -->
      <map code="0x117" name="edotaccent"/><!-- LATIN SMALL LETTER E WITH DOT ABOVE -->
      <map code="0x118" name="Eogonek"/><!-- LATIN CAPITAL LETTER E WITH OGONEK -->
      <map code="0x119" name="eogonek"/><!-- LATIN SMALL LETTER E WITH OGONEK -->
      <map code="0x11a" name="Ecaron"/><!-- LATIN CAPITAL LETTER E WITH CARON -->
      <map code="0x11b" name="ecaron"/><!-- LATIN SMALL LETTER E WITH CARON -->
      <map code="0x11c" name="Gcircumflex"/><!-- LATIN CAPITAL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11d" name="gcircumflex"/><!-- LATIN SMALL LETTER G WITH CIRCUMFLEX -->
      <map code="0x11e" name="Gbreve"/><!-- LATIN CAPITAL LETTER G WITH BREVE -->
      <map code="0x11f" name="gbreve"/><!-- LATIN SMALL LETTER G WITH BREVE -->
      <map code="0x122" name="Gcommaaccent"/><!-- LATIN CAPITAL LETTER G WITH CEDILLA -->
      <map code="0x123" name="gcommaaccent"/><!-- LATIN SMALL LETTER G WITH CEDILLA -->
      <map code="0x124" name="Hcircumflex"/><!-- LATIN CAPITAL LETTER H WITH CIRCUMFLEX -->
      <map code="0x125" name="hcircumflex"/><!-- LATIN SMALL LETTER H WITH CIRCUMFLEX -->
      <map code="0x126" name="Hbar"/><!-- LATIN CAPITAL LETTER H WITH STROKE -->
      <map code="0x127" name="hbar"/><!-- LATIN SMALL LETTER H WITH STROKE -->
      <map code="0x12a" name="Imacron"/><!-- LATIN CAPITAL LETTER I WITH MACRON -->
      <map code="0x12b" name="imacron"/><!-- LATIN SMALL LETTER I WITH MACRON -->
      <map code="0x12e" name="Iogonek"/><!-- LATIN CAPITAL LETTER I WITH OGONEK -->
      <map code="0x12f" name="iogonek"/><!-- LATIN SMALL LETTER I WITH OGONEK -->
      <map code="0x130" name="Idotaccent"/><!-- LATIN CAPITAL LETTER I WITH DOT ABOVE -->
      <map code="0x131" name="dotlessi"/><!-- LATIN SMALL LETTER DOTLESS I -->
      <map code="0x134" name="Jcircumflex"/><!-- LATIN CAPITAL LETTER J WITH CIRCUMFLEX -->
      <map code="0x135" name="jcircumflex"/><!-- LATIN SMALL LETTER J WITH CIRCUMFLEX -->
      <map code="0x136" name="Kcommaaccent"/><!-- LATIN CAPITAL LETTER K WITH CEDILLA -->
      <map code="0x137" name="kcommaaccent"/><!-- LATIN SMALL LETTER K WITH CEDILLA -->
      <map code="0x139" name="Lacute"/><!-- LATIN CAPITAL LETTER L WITH ACUTE -->
      <map code="0x13a" name="lacute"/><!-- LATIN SMALL LETTER L WITH ACUTE -->
      <map code="0x13b" name="Lcommaaccent"/><!-- LATIN CAPITAL LETTER L WITH CEDILLA -->
      <map code="0x13c" name="lcommaaccent"/><!-- LATIN SMALL LETTER L WITH CEDILLA -->
      <map code="0x13d" name="Lcaron"/><!-- LATIN CAPITAL LETTER L WITH CARON -->
      <map code="0x13e" name="lcaron"/><!-- LATIN SMALL LETTER L WITH CARON -->
      <map code="0x141" name="Lslash"/><!-- LATIN CAPITAL LETTER L WITH STROKE -->
      <map code="0x142" name="lslash"/><!-- LATIN SMALL LETTER L WITH STROKE -->
      <map code="0x143" name="Nacute"/><!-- LATIN CAPITAL LETTER N WITH ACUTE -->
      <map code="0x144" name="nacute"/><!-- LATIN SMALL LETTER N WITH ACUTE -->
      <map code="0x145" name="Ncommaaccent"/><!-- LATIN CAPITAL LETTER N WITH CEDILLA -->
      <map code="0x146" name="ncommaaccent"/><!-- LATIN SMALL LETTER N WITH CEDILLA -->
      <map code="0x147" name="Ncaron"/><!-- LATIN CAPITAL LETTER N WITH CARON -->
      <map code="0x148" name="ncaron"/><!-- LATIN SMALL LETTER N WITH CARON -->
      <map code="0x14c" name="Omacron"/><!-- LATIN CAPITAL LETTER O WITH MACRON -->
      <map code="0x14d" name="omacron"/><!-- LATIN SMALL LETTER O WITH MACRON -->
      <map code="0x150" name="Ohungarumlaut"/><!-- LATIN CAPITAL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x151" name="ohungarumlaut"/><!-- LATIN SMALL LETTER O WITH DOUBLE ACUTE -->
      <map code="0x152" name="OE"/><!-- LATIN CAPITAL LIGATURE OE -->
      <map code="0x153" name="oe"/><!-- LATIN SMALL LIGATURE OE -->
      <map code="0x154" name="Racute"/><!-- LATIN CAPITAL LETTER R WITH ACUTE -->
      <map code="0x155" name="racute"/><!-- LATIN SMALL LETTER R WITH ACUTE -->
      <map code="0x156" name="Rcommaaccent"/><!-- LATIN CAPITAL LETTER R WITH CEDILLA -->
      <map code="0x157" name="rcommaaccent"/><!-- LATIN SMALL LETTER R WITH CEDILLA -->
      <map code="0x158" name="Rcaron"/><!-- LATIN CAPITAL LETTER R WITH CARON -->
      <map code="0x159" name="rcaron"/><!-- LATIN SMALL LETTER R WITH CARON -->
      <map code="0x15a" name="Sacute"/><!-- LATIN CAPITAL LETTER S WITH ACUTE -->
      <map code="0x15b" name="sacute"/><!-- LATIN SMALL LETTER S WITH ACUTE -->
      <map code="0x15c" name="Scircumflex"/><!-- LATIN CAPITAL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15d" name="scircumflex"/><!-- LATIN SMALL LETTER S WITH CIRCUMFLEX -->
      <map code="0x15e" name="Scedilla"/><!-- LATIN CAPITAL LETTER S WITH CEDILLA -->
      <map code="0x15f" name="scedilla"/><!-- LATIN SMALL LETTER S WITH CEDILLA -->
      <map code="0x160" name="Scaron"/><!-- LATIN CAPITAL LETTER S WITH CARON -->
      <map code="0x161" name="scaron"/><!-- LATIN SMALL LETTER S WITH CARON -->
      <map code="0x162" name="Tcedilla"/><!-- LATIN CAPITAL LETTER T WITH CEDILLA -->
      <map code="0x163" name="tcedilla"/><!-- LATIN SMALL LETTER T WITH CEDILLA -->
      <map code="0x164" name="Tcaron"/><!-- LATIN CAPITAL LETTER T WITH CARON -->
      <map code="0x165" name="tcaron"/><!-- LATIN SMALL LETTER T WITH CARON -->
      <map code="0x16a" name="Umacron"/><!-- LATIN CAPITAL LETTER U WITH MACRON -->
      <map code="0x16b" name="umacron"/><!-- LATIN SMALL LETTER U WITH MACRON -->
      <map code="0x16c" name="Ubreve"/><!-- LATIN CAPITAL LETTER U WITH BREVE -->
      <map code="0x16d" name="ubreve"/><!-- LATIN SMALL LETTER U WITH BREVE -->
      <map code="0x16e" name="Uring"/><!-- LATIN CAPITAL LETTER U WITH RING ABOVE -->
      <map code="0x16f" name="uring"/><!-- LATIN SMALL LETTER U WITH RING ABOVE -->
      <map code="0x170" name="Uhungarumlaut"/><!-- LATIN CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x171" name="uhungarumlaut"/><!-- LATIN SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x172" name="Uogonek"/><!-- LATIN CAPITAL LETTER U WITH OGONEK -->
      <map code="0x173" name="uogonek"/><!-- LATIN SMALL LETTER U WITH OGONEK -->
      <map code="0x178" name="Ydieresis"/><!-- LATIN CAPITAL LETTER Y WITH DIAERESIS -->
      <map code="0x179" name="Zacute"/><!-- LATIN CAPITAL LETTER Z WITH ACUTE -->
      <map code="0x17a" name="zacute"/><!-- LATIN SMALL LETTER Z WITH ACUTE -->
      <map code="0x17b" name="Zdotaccent"/><!-- LATIN CAPITAL LETTER Z WITH DOT ABOVE -->
      <map code="0x17c" name="zdotaccent"/><!-- LATIN SMALL LETTER Z WITH DOT ABOVE -->
      <map code="0x17d" name="Zcaron"/><!-- LATIN CAPITAL LETTER Z WITH CARON -->
      <map code="0x17e" name="zcaron"/><!-- LATIN SMALL LETTER Z WITH CARON -->
      <map code="0x17f" name="longs"/><!-- LATIN SMALL LETTER LONG S -->
      <map code="0x192" name="florin"/><!-- LATIN SMALL LETTER F WITH HOOK -->
      <map code="0x1f4" name="uni01F4"/><!-- LATIN CAPITAL LETTER G WITH ACUTE -->
      <map code="0x1f5" name="uni01F5"/><!-- LATIN SMALL LETTER G WITH ACUTE -->
      <map code="0x218" name="Scommaaccent"/><!-- LATIN CAPITAL LETTER S WITH COMMA BELOW -->
      <map code="0x219" name="scommaaccent"/><!-- LATIN SMALL LETTER S WITH COMMA BELOW -->
      <map code="0x21a" name="Tcommaaccent"/><!-- LATIN CAPITAL LETTER T WITH COMMA BELOW -->
      <map code="0x21b" name="tcommaaccent"/><!-- LATIN SMALL LETTER T WITH COMMA BELOW -->
      <map code="0x237" name="dotlessj"/><!-- LATIN SMALL LETTER DOTLESS J -->
      <map code="0x2bc" name="afii57929"/><!-- MODIFIER LETTER APOSTROPHE -->
      <map code="0x2c6" name="circumflex"/><!-- MODIFIER LETTER CIRCUMFLEX ACCENT -->
      <map code="0x2c7" name="caron"/><!-- CARON -->
      <map code="0x2d8" name="breve"/><!-- BREVE -->
      <map code="0x2d9" name="dotaccent"/><!-- DOT ABOVE -->
      <map code="0x2da" name="ring"/><!-- RING ABOVE -->
      <map code="0x2db" name="ogonek"/><!-- OGONEK -->
      <map code="0x2dc" name="tilde"/><!-- SMALL TILDE -->
      <map code="0x2dd" name="hungarumlaut"/><!-- DOUBLE ACUTE ACCENT -->
      <map code="0x301" name="acutecomb"/><!-- COMBINING ACUTE ACCENT -->
      <map code="0x37e" name="semicolon"/><!-- GREEK QUESTION MARK -->
      <map code="0x394" name="Delta"/><!-- GREEK CAPITAL LETTER DELTA -->
      <map code="0x3a9" name="Omega"/><!-- GREEK CAPITAL LETTER OMEGA -->
      <map code="0x3bc" name="uni03BC"/><!-- GREEK SMALL LETTER MU -->
      <map code="0x3c0" name="pi"/><!-- GREEK SMALL LETTER PI -->
      <map code="0x401" name="afii10023"/><!-- CYRILLIC CAPITAL LETTER IO -->
      <map code="0x402" name="afii10051"/><!-- CYRILLIC CAPITAL LETTER DJE -->
      <map code="0x403" name="afii10052"/><!-- CYRILLIC CAPITAL LETTER GJE -->
      <map code="0x404" name="afii10053"/><!-- CYRILLIC CAPITAL LETTER UKRAINIAN IE -->
      <map code="0x405" name="afii10054"/><!-- CYRILLIC CAPITAL LETTER DZE -->
      <map code="0x406" name="afii10055"/><!-- CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x407" name="afii10056"/><!-- CYRILLIC CAPITAL LETTER YI -->
      <map code="0x408" name="afii10057"/><!-- CYRILLIC CAPITAL LETTER JE -->
      <map code="0x409" name="afii10058"/><!-- CYRILLIC CAPITAL LETTER LJE -->
      <map code="0x40a" name="afii10059"/><!-- CYRILLIC CAPITAL LETTER NJE -->
      <map code="0x40b" name="afii10060"/><!-- CYRILLIC CAPITAL LETTER TSHE -->
      <map code="0x40c" name="afii10061"/><!-- CYRILLIC CAPITAL LETTER KJE -->
      <map code="0x40e" name="afii10062"/><!-- CYRILLIC CAPITAL LETTER SHORT U -->
      <map code="0x40f" name="afii10145"/><!-- CYRILLIC CAPITAL LETTER DZHE -->
      <map code="0x410" name="afii10017"/><!-- CYRILLIC CAPITAL LETTER A -->
      <map code="0x411" name="afii10018"/><!-- CYRILLIC CAPITAL LETTER BE -->
      <map code="0x412" name="afii10019"/><!-- CYRILLIC CAPITAL LETTER VE -->
      <map code="0x413" name="afii10020"/><!-- CYRILLIC CAPITAL LETTER GHE -->
      <map code="0x414" name="afii10021"/><!-- CYRILLIC CAPITAL LETTER DE -->
      <map code="0x415" name="afii10022"/><!-- CYRILLIC CAPITAL LETTER IE -->
      <map code="0x416" name="afii10024"/><!-- CYRILLIC CAPITAL LETTER ZHE -->
      <map code="0x417" name="afii10025"/><!-- CYRILLIC CAPITAL LETTER ZE -->
      <map code="0x418" name="afii10026"/><!-- CYRILLIC CAPITAL LETTER I -->
      <map code="0x419" name="afii10027"/><!-- CYRILLIC CAPITAL LETTER SHORT I -->
      <map code="0x41a" name="afii10028"/><!-- CYRILLIC CAPITAL LETTER KA -->
      <map code="0x41b" name="afii10029"/><!-- CYRILLIC CAPITAL LETTER EL -->
      <map code="0x41c" name="afii10030"/><!-- CYRILLIC CAPITAL LETTER EM -->
      <map code="0x41d" name="afii10031"/><!-- CYRILLIC CAPITAL LETTER EN -->
      <map code="0x41e" name="afii10032"/><!-- CYRILLIC CAPITAL LETTER O -->
      <map code="0x41f" name="afii10033"/><!-- CYRILLIC CAPITAL LETTER PE -->
      <map code="0x420" name="afii10034"/><!-- CYRILLIC CAPITAL LETTER ER -->
      <map code="0x421" name="afii10035"/><!-- CYRILLIC CAPITAL LETTER ES -->
      <map code="0x422" name="afii10036"/><!-- CYRILLIC CAPITAL LETTER TE -->
      <map code="0x423" name="afii10037"/><!-- CYRILLIC CAPITAL LETTER U -->
      <map code="0x424" name="afii10038"/><!-- CYRILLIC CAPITAL LETTER EF -->
      <map code="0x425" name="afii10039"/><!-- CYRILLIC CAPITAL LETTER HA -->
      <map code="0x426" name="afii10040"/><!-- CYRILLIC CAPITAL LETTER TSE -->
      <map code="0x427" name="afii10041"/><!-- CYRILLIC CAPITAL LETTER CHE -->
      <map code="0x428" name="afii10042"/><!-- CYRILLIC CAPITAL LETTER SHA -->
      <map code="0x429" name="afii10043"/><!-- CYRILLIC CAPITAL LETTER SHCHA -->
      <map code="0x42a" name="afii10044"/><!-- CYRILLIC CAPITAL LETTER HARD SIGN -->
      <map code="0x42b" name="afii10045"/><!-- CYRILLIC CAPITAL LETTER YERU -->
      <map code="0x42c" name="afii10046"/><!-- CYRILLIC CAPITAL LETTER SOFT SIGN -->
      <map code="0x42d" name="afii10047"/><!-- CYRILLIC CAPITAL LETTER E -->
      <map code="0x42e" name="afii10048"/><!-- CYRILLIC CAPITAL LETTER YU -->
      <map code="0x42f" name="afii10049"/><!-- CYRILLIC CAPITAL LETTER YA -->
      <map code="0x430" name="afii10065"/><!-- CYRILLIC SMALL LETTER A -->
      <map code="0x431" name="afii10066"/><!-- CYRILLIC SMALL LETTER BE -->
      <map code="0x432" name="afii10067"/><!-- CYRILLIC SMALL LETTER VE -->
      <map code="0x433" name="afii10068"/><!-- CYRILLIC SMALL LETTER GHE -->
      <map code="0x434" name="afii10069"/><!-- CYRILLIC SMALL LETTER DE -->
      <map code="0x435" name="afii10070"/><!-- CYRILLIC SMALL LETTER IE -->
      <map code="0x436" name="afii10072"/><!-- CYRILLIC SMALL LETTER ZHE -->
      <map code="0x437" name="afii10073"/><!-- CYRILLIC SMALL LETTER ZE -->
      <map code="0x438" name="afii10074"/><!-- CYRILLIC SMALL LETTER I -->
      <map code="0x439" name="afii10075"/><!-- CYRILLIC SMALL LETTER SHORT I -->
      <map code="0x43a" name="afii10076"/><!-- CYRILLIC SMALL LETTER KA -->
      <map code="0x43b" name="afii10077"/><!-- CYRILLIC SMALL LETTER EL -->
      <map code="0x43c" name="afii10078"/><!-- CYRILLIC SMALL LETTER EM -->
      <map code="0x43d" name="afii10079"/><!-- CYRILLIC SMALL LETTER EN -->
      <map code="0x43e" name="afii10080"/><!-- CYRILLIC SMALL LETTER O -->
      <map code="0x43f" name="afii10081"/><!-- CYRILLIC SMALL LETTER PE -->
      <map code="0x440" name="afii10082"/><!-- CYRILLIC SMALL LETTER ER -->
      <map code="0x441" name="afii10083"/><!-- CYRILLIC SMALL LETTER ES -->
      <map code="0x442" name="afii10084"/><!-- CYRILLIC SMALL LETTER TE -->
      <map code="0x443" name="afii10085"/><!-- CYRILLIC SMALL LETTER U -->
      <map code="0x444" name="afii10086"/><!-- CYRILLIC SMALL LETTER EF -->
      <map code="0x445" name="afii10087"/><!-- CYRILLIC SMALL LETTER HA -->
      <map code="0x446" name="afii10088"/><!-- CYRILLIC SMALL LETTER TSE -->
      <map code="0x447" name="afii10089"/><!-- CYRILLIC SMALL LETTER CHE -->
      <map code="0x448" name="afii10090"/><!-- CYRILLIC SMALL LETTER SHA -->
      <map code="0x449" name="afii10091"/><!-- CYRILLIC SMALL LETTER SHCHA -->
      <map code="0x44a" name="afii10092"/><!-- CYRILLIC SMALL LETTER HARD SIGN -->
      <map code="0x44b" name="afii10093"/><!-- CYRILLIC SMALL LETTER YERU -->
      <map code="0x44c" name="afii10094"/><!-- CYRILLIC SMALL LETTER SOFT SIGN -->
      <map code="0x44d" name="afii10095"/><!-- CYRILLIC SMALL LETTER E -->
      <map code="0x44e" name="afii10096"/><!-- CYRILLIC SMALL LETTER YU -->
      <map code="0x44f" name="afii10097"/><!-- CYRILLIC SMALL LETTER YA -->
      <map code="0x451" name="afii10071"/><!-- CYRILLIC SMALL LETTER IO -->
      <map code="0x452" name="afii10099"/><!-- CYRILLIC SMALL LETTER DJE -->
      <map code="0x453" name="afii10100"/><!-- CYRILLIC SMALL LETTER GJE -->
      <map code="0x454" name="afii10101"/><!-- CYRILLIC SMALL LETTER UKRAINIAN IE -->
      <map code="0x455" name="afii10102"/><!-- CYRILLIC SMALL LETTER DZE -->
      <map code="0x456" name="afii10103"/><!-- CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I -->
      <map code="0x457" name="afii10104"/><!-- CYRILLIC SMALL LETTER YI -->
      <map code="0x458" name="afii10105"/><!-- CYRILLIC SMALL LETTER JE -->
      <map code="0x459" name="afii10106"/><!-- CYRILLIC SMALL LETTER LJE -->
      <map code="0x45a" name="afii10107"/><!-- CYRILLIC SMALL LETTER NJE -->
      <map code="0x45b" name="afii10108"/><!-- CYRILLIC SMALL LETTER TSHE -->
      <map code="0x45c" name="afii10109"/><!-- CYRILLIC SMALL LETTER KJE -->
      <map code="0x45e" name="afii10110"/><!-- CYRILLIC SMALL LETTER SHORT U -->
      <map code="0x45f" name="afii10193"/><!-- CYRILLIC SMALL LETTER DZHE -->
      <map code="0x462" name="afii10146"/><!-- CYRILLIC CAPITAL LETTER YAT -->
      <map code="0x463" name="afii10194"/><!-- CYRILLIC SMALL LETTER YAT -->
      <map code="0x472" name="afii10147"/><!-- CYRILLIC CAPITAL LETTER FITA -->
      <map code="0x473" name="afii10195"/><!-- CYRILLIC SMALL LETTER FITA -->
      <map code="0x474" name="afii10148"/><!-- CYRILLIC CAPITAL LETTER IZHITSA -->
      <map code="0x475" name="afii10196"/><!-- CYRILLIC SMALL LETTER IZHITSA -->
      <map code="0x48a" name="uni048A"/><!-- CYRILLIC CAPITAL LETTER SHORT I WITH TAIL -->
      <map code="0x48b" name="uni048B"/><!-- CYRILLIC SMALL LETTER SHORT I WITH TAIL -->
      <map code="0x48c" name="uni048C"/><!-- CYRILLIC CAPITAL LETTER SEMISOFT SIGN -->
      <map code="0x48d" name="uni048D"/><!-- CYRILLIC SMALL LETTER SEMISOFT SIGN -->
      <map code="0x48e" name="cyrErcrossed"/><!-- CYRILLIC CAPITAL LETTER ER WITH TICK -->
      <map code="0x48f" name="cyrercrossed"/><!-- CYRILLIC SMALL LETTER ER WITH TICK -->
      <map code="0x490" name="afii10050"/><!-- CYRILLIC CAPITAL LETTER GHE WITH UPTURN -->
      <map code="0x491" name="afii10098"/><!-- CYRILLIC SMALL LETTER GHE WITH UPTURN -->
      <map code="0x492" name="cyrGebar"/><!-- CYRILLIC CAPITAL LETTER GHE WITH STROKE -->
      <map code="0x493" name="cyrgebar"/><!-- CYRILLIC SMALL LETTER GHE WITH STROKE -->
      <map code="0x494" name="cyrGehook"/><!-- CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x495" name="cyrgehook"/><!-- CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK -->
      <map code="0x496" name="cyrZhedesc"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER -->
      <map code="0x497" name="cyrzhedesc"/><!-- CYRILLIC SMALL LETTER ZHE WITH DESCENDER -->
      <map code="0x498" name="cyrZetail"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DESCENDER -->
      <map code="0x499" name="cyrzetail"/><!-- CYRILLIC SMALL LETTER ZE WITH DESCENDER -->
      <map code="0x49a" name="cyrKadesc"/><!-- CYRILLIC CAPITAL LETTER KA WITH DESCENDER -->
      <map code="0x49b" name="cyrkadesc"/><!-- CYRILLIC SMALL LETTER KA WITH DESCENDER -->
      <map code="0x49c" name="cyrKavertbar"/><!-- CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49d" name="cyrkavertbar"/><!-- CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE -->
      <map code="0x49e" name="cyrKabar"/><!-- CYRILLIC CAPITAL LETTER KA WITH STROKE -->
      <map code="0x49f" name="cyrkabar"/><!-- CYRILLIC SMALL LETTER KA WITH STROKE -->
      <map code="0x4a0" name="cyrKaback"/><!-- CYRILLIC CAPITAL LETTER BASHKIR KA -->
      <map code="0x4a1" name="cyrkaback"/><!-- CYRILLIC SMALL LETTER BASHKIR KA -->
      <map code="0x4a2" name="cyrEndesc"/><!-- CYRILLIC CAPITAL LETTER EN WITH DESCENDER -->
      <map code="0x4a3" name="cyrendesc"/><!-- CYRILLIC SMALL LETTER EN WITH DESCENDER -->
      <map code="0x4a4" name="cyrEnGe"/><!-- CYRILLIC CAPITAL LIGATURE EN GHE -->
      <map code="0x4a5" name="cyrenge"/><!-- CYRILLIC SMALL LIGATURE EN GHE -->
      <map code="0x4a6" name="cyrPehook"/><!-- CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a7" name="cyrpehook"/><!-- CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK -->
      <map code="0x4a8" name="cyrOhook"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN HA -->
      <map code="0x4a9" name="cyrohook"/><!-- CYRILLIC SMALL LETTER ABKHASIAN HA -->
      <map code="0x4aa" name="cyrEstail"/><!-- CYRILLIC CAPITAL LETTER ES WITH DESCENDER -->
      <map code="0x4ab" name="cyrestail"/><!-- CYRILLIC SMALL LETTER ES WITH DESCENDER -->
      <map code="0x4ac" name="cyrTedesc"/><!-- CYRILLIC CAPITAL LETTER TE WITH DESCENDER -->
      <map code="0x4ad" name="cyrtedesc"/><!-- CYRILLIC SMALL LETTER TE WITH DESCENDER -->
      <map code="0x4ae" name="cyrstraightU"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U -->
      <map code="0x4af" name="cyrstraightu"/><!-- CYRILLIC SMALL LETTER STRAIGHT U -->
      <map code="0x4b0" name="cyrstraightUbar"/><!-- CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b1" name="cyrstraightubar"/><!-- CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE -->
      <map code="0x4b2" name="cyrHadesc"/><!-- CYRILLIC CAPITAL LETTER HA WITH DESCENDER -->
      <map code="0x4b3" name="cyrhadesc"/><!-- CYRILLIC SMALL LETTER HA WITH DESCENDER -->
      <map code="0x4b4" name="cyrTeTse"/><!-- CYRILLIC CAPITAL LIGATURE TE TSE -->
      <map code="0x4b5" name="cyrtetse"/><!-- CYRILLIC SMALL LIGATURE TE TSE -->
      <map code="0x4b6" name="cyrChedesc"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DESCENDER -->
      <map code="0x4b7" name="cyrchedesc"/><!-- CYRILLIC SMALL LETTER CHE WITH DESCENDER -->
      <map code="0x4b8" name="cyrChevertbar"/><!-- CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4b9" name="cyrchevertbar"/><!-- CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE -->
      <map code="0x4ba" name="cyrH"/><!-- CYRILLIC CAPITAL LETTER SHHA -->
      <map code="0x4bb" name="cyrh"/><!-- CYRILLIC SMALL LETTER SHHA -->
      <map code="0x4bc" name="cyrIehook"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE -->
      <map code="0x4bd" name="cyriehook"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE -->
      <map code="0x4be" name="cyrIehookogonek"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4bf" name="cyriehookogonek"/><!-- CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER -->
      <map code="0x4c0" name="cyrI"/><!-- CYRILLIC LETTER PALOCHKA -->
      <map code="0x4c3" name="cyrKahook"/><!-- CYRILLIC CAPITAL LETTER KA WITH HOOK -->
      <map code="0x4c4" name="cyrkahook"/><!-- CYRILLIC SMALL LETTER KA WITH HOOK -->
      <map code="0x4c5" name="cyrEltail"/><!-- CYRILLIC CAPITAL LETTER EL WITH TAIL -->
      <map code="0x4c6" name="cyreltail"/><!-- CYRILLIC SMALL LETTER EL WITH TAIL -->
      <map code="0x4c7" name="cyrEnhook"/><!-- CYRILLIC CAPITAL LETTER EN WITH HOOK -->
      <map code="0x4c8" name="cyrenhook"/><!-- CYRILLIC SMALL LETTER EN WITH HOOK -->
      <map code="0x4c9" name="cyrEntail"/><!-- CYRILLIC CAPITAL LETTER EN WITH TAIL -->
      <map code="0x4ca" name="cyrentail"/><!-- CYRILLIC SMALL LETTER EN WITH TAIL -->
      <map code="0x4cb" name="cyrChedescleft"/><!-- CYRILLIC CAPITAL LETTER KHAKASSIAN CHE -->
      <map code="0x4cc" name="cyrchedescleft"/><!-- CYRILLIC SMALL LETTER KHAKASSIAN CHE -->
      <map code="0x4cd" name="cyrEmtail"/><!-- CYRILLIC CAPITAL LETTER EM WITH TAIL -->
      <map code="0x4ce" name="cyremtail"/><!-- CYRILLIC SMALL LETTER EM WITH TAIL -->
      <map code="0x4cf" name="uni04CF"/><!-- CYRILLIC SMALL LETTER PALOCHKA -->
      <map code="0x4d0" name="cyrAcyrbreve"/><!-- CYRILLIC CAPITAL LETTER A WITH BREVE -->
      <map code="0x4d1" name="cyracyrbreve"/><!-- CYRILLIC SMALL LETTER A WITH BREVE -->
      <map code="0x4d2" name="cyrAdieresis"/><!-- CYRILLIC CAPITAL LETTER A WITH DIAERESIS -->
      <map code="0x4d3" name="cyradieresis"/><!-- CYRILLIC SMALL LETTER A WITH DIAERESIS -->
      <map code="0x4d4" name="cyrAE"/><!-- CYRILLIC CAPITAL LIGATURE A IE -->
      <map code="0x4d5" name="cyrae"/><!-- CYRILLIC SMALL LIGATURE A IE -->
      <map code="0x4d6" name="cyrIecyrbreve"/><!-- CYRILLIC CAPITAL LETTER IE WITH BREVE -->
      <map code="0x4d7" name="cyriecyrbreve"/><!-- CYRILLIC SMALL LETTER IE WITH BREVE -->
      <map code="0x4d8" name="cyrinvE"/><!-- CYRILLIC CAPITAL LETTER SCHWA -->
      <map code="0x4d9" name="cyrinve"/><!-- CYRILLIC SMALL LETTER SCHWA -->
      <map code="0x4da" name="cyrinvEdieresis"/><!-- CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4db" name="cyrinvedieresis"/><!-- CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS -->
      <map code="0x4dc" name="cyrZhedieresis"/><!-- CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4dd" name="cyrzhedieresis"/><!-- CYRILLIC SMALL LETTER ZHE WITH DIAERESIS -->
      <map code="0x4de" name="cyrZedieresis"/><!-- CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS -->
      <map code="0x4df" name="cyrzedieresis"/><!-- CYRILLIC SMALL LETTER ZE WITH DIAERESIS -->
      <map code="0x4e0" name="cyrDze"/><!-- CYRILLIC CAPITAL LETTER ABKHASIAN DZE -->
      <map code="0x4e1" name="cyrdze"/><!-- CYRILLIC SMALL LETTER ABKHASIAN DZE -->
      <map code="0x4e2" name="cyrImacron"/><!-- CYRILLIC CAPITAL LETTER I WITH MACRON -->
      <map code="0x4e3" name="cyrimacron"/><!-- CYRILLIC SMALL LETTER I WITH MACRON -->
      <map code="0x4e4" name="cyrIdieresis"/><!-- CYRILLIC CAPITAL LETTER I WITH DIAERESIS -->
      <map code="0x4e5" name="cyridieresis"/><!-- CYRILLIC SMALL LETTER I WITH DIAERESIS -->
      <map code="0x4e6" name="cyrOdieresis"/><!-- CYRILLIC CAPITAL LETTER O WITH DIAERESIS -->
      <map code="0x4e7" name="cyrodieresis"/><!-- CYRILLIC SMALL LETTER O WITH DIAERESIS -->
      <map code="0x4e8" name="cyrObar"/><!-- CYRILLIC CAPITAL LETTER BARRED O -->
      <map code="0x4e9" name="cyrobar"/><!-- CYRILLIC SMALL LETTER BARRED O -->
      <map code="0x4ea" name="cyrObardieresis"/><!-- CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4eb" name="cyrobardieresis"/><!-- CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS -->
      <map code="0x4ec" name="cyrEdieresis"/><!-- CYRILLIC CAPITAL LETTER E WITH DIAERESIS -->
      <map code="0x4ed" name="cyredieresis"/><!-- CYRILLIC SMALL LETTER E WITH DIAERESIS -->
      <map code="0x4ee" name="cyrUmacron"/><!-- CYRILLIC CAPITAL LETTER U WITH MACRON -->
      <map code="0x4ef" name="cyrumacron"/><!-- CYRILLIC SMALL LETTER U WITH MACRON -->
      <map code="0x4f0" name="cyrUdieresis"/><!-- CYRILLIC CAPITAL LETTER U WITH DIAERESIS -->
      <map code="0x4f1" name="cyrudieresis"/><!-- CYRILLIC SMALL LETTER U WITH DIAERESIS -->
      <map code="0x4f2" name="cyrUdblacute"/><!-- CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f3" name="cyrudblacute"/><!-- CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE -->
      <map code="0x4f4" name="cyrChedieresis"/><!-- CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f5" name="cyrchedieresis"/><!-- CYRILLIC SMALL LETTER CHE WITH DIAERESIS -->
      <map code="0x4f6" name="uni04F6"/><!-- CYRILLIC CAPITAL LETTER GHE WITH DESCENDER -->
      <map code="0x4f7" name="uni04F7"/><!-- CYRILLIC SMALL LETTER GHE WITH DESCENDER -->
      <map code="0x4f8" name="cyrYerudieresis"/><!-- CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS -->
      <map code="0x4f9" name="cyryerudieresis"/><!-- CYRILLIC SMALL LETTER YERU WITH DIAERESIS -->
      <map code="0x4fc" name="cyrHahook"/><!-- CYRILLIC CAPITAL LETTER HA WITH HOOK -->
      <map code="0x4fd" name="cyrhahook"/><!-- CYRILLIC SMALL LETTER HA WITH HOOK -->
      <map code="0x510" name="cyrEpsilon"/><!-- CYRILLIC CAPITAL LETTER REVERSED ZE -->
      <map code="0x511" name="cyrepsilon"/><!-- CYRILLIC SMALL LETTER REVERSED ZE -->
      <map code="0x512" name="uni0512"/><!-- CYRILLIC CAPITAL LETTER EL WITH HOOK -->
      <map code="0x513" name="uni0513"/><!-- CYRILLIC SMALL LETTER EL WITH HOOK -->
      <map code="0x51c" name="uni051C"/><!-- CYRILLIC CAPITAL LETTER WE -->
      <map code="0x51d" name="uni051D"/><!-- CYRILLIC SMALL LETTER WE -->
      <map code="0x524" name="uni0524"/><!-- CYRILLIC CAPITAL LETTER PE WITH DESCENDER -->
      <map code="0x525" name="uni0525"/><!-- CYRILLIC SMALL LETTER PE WITH DESCENDER -->
      <map code="0x526" name="uni0526"/><!-- CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER -->
      <map code="0x527" name="uni0527"/><!-- CYRILLIC SMALL LETTER SHHA WITH DESCENDER -->
      <map code="0x52e" name="cyrEldesc"/><!-- CYRILLIC CAPITAL LETTER EL WITH DESCENDER -->
      <map code="0x52f" name="cyreldesc"/><!-- CYRILLIC SMALL LETTER EL WITH DESCENDER -->
      <map code="0x1e30" name="uni1E30"/><!-- LATIN CAPITAL LETTER K WITH ACUTE -->
      <map code="0x1e31" name="uni1E31"/><!-- LATIN SMALL LETTER K WITH ACUTE -->
      <map code="0x1e3e" name="Macute"/><!-- LATIN CAPITAL LETTER M WITH ACUTE -->
      <map code="0x1e3f" name="macute"/><!-- LATIN SMALL LETTER M WITH ACUTE -->
      <map code="0x1e54" name="uni1E54"/><!-- LATIN CAPITAL LETTER P WITH ACUTE -->
      <map code="0x1e55" name="uni1E55"/><!-- LATIN SMALL LETTER P WITH ACUTE -->
      <map code="0x1e9e" name="Germandbls"/><!-- LATIN CAPITAL LETTER SHARP S -->
      <map code="0x2011" name="uni2011"/><!-- NON-BREAKING HYPHEN -->
      <map code="0x2013" name="endash"/><!-- EN DASH -->
      <map code="0x2014" name="emdash"/><!-- EM DASH -->
      <map code="0x2018" name="quoteleft"/><!-- LEFT SINGLE QUOTATION MARK -->
      <map code="0x2019" name="quoteright"/><!-- RIGHT SINGLE QUOTATION MARK -->
      <map code="0x201a" name="quotesinglbase"/><!-- SINGLE LOW-9 QUOTATION MARK -->
      <map code="0x201c" name="quotedblleft"/><!-- LEFT DOUBLE QUOTATION MARK -->
      <map code="0x201d" name="quotedblright"/><!-- RIGHT DOUBLE QUOTATION MARK -->
      <map code="0x201e" name="quotedblbase"/><!-- DOUBLE LOW-9 QUOTATION MARK -->
      <map code="0x2020" name="dagger"/><!-- DAGGER -->
      <map code="0x2021" name="daggerdbl"/><!-- DOUBLE DAGGER -->
      <map code="0x2022" name="bullet"/><!-- BULLET -->
      <map code="0x2026" name="ellipsis"/><!-- HORIZONTAL ELLIPSIS -->
      <map code="0x2030" name="perthousand"/><!-- PER MILLE SIGN -->
      <map code="0x2039" name="guilsinglleft"/><!-- SINGLE LEFT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x203a" name="guilsinglright"/><!-- SINGLE RIGHT-POINTING ANGLE QUOTATION MARK -->
      <map code="0x2044" name="fraction"/><!-- FRACTION SLASH -->
      <map code="0x2081" name="oneinferior"/><!-- SUBSCRIPT ONE -->
      <map code="0x2082" name="twoinferior"/><!-- SUBSCRIPT TWO -->
      <map code="0x2083" name="threeinferior"/><!-- SUBSCRIPT THREE -->
      <map code="0x2084" name="fourinferior"/><!-- SUBSCRIPT FOUR -->
      <map code="0x20ac" name="Euro"/><!-- EURO SIGN -->
      <map code="0x20b4" name="uni20B4"/><!-- HRYVNIA SIGN -->
      <map code="0x20bd" name="uni20BD"/><!-- RUBLE SIGN -->
      <map code="0x2113" name="afii61289"/><!-- SCRIPT SMALL L -->
      <map code="0x2116" name="afii61352"/><!-- NUMERO SIGN -->
      <map code="0x2122" name="trademark"/><!-- TRADE MARK SIGN -->
      <map code="0x2126" name="uni2126"/><!-- OHM SIGN -->
      <map code="0x212e" name="estimated"/><!-- ESTIMATED SYMBOL -->
      <map code="0x2202" name="partialdiff"/><!-- PARTIAL DIFFERENTIAL -->
      <map code="0x2206" name="uni2206"/><!-- INCREMENT -->
      <map code="0x220f" name="product"/><!-- N-ARY PRODUCT -->
      <map code="0x2211" name="summation"/><!-- N-ARY SUMMATION -->
      <map code="0x2212" name="minus"/><!-- MINUS SIGN -->
      <map code="0x2215" name="fraction"/><!-- DIVISION SLASH -->
      <map code="0x221a" name="radical"/><!-- SQUARE ROOT -->
      <map code="0x221e" name="infinity"/><!-- INFINITY -->
      <map code="0x222b" name="integral"/><!-- INTEGRAL -->
      <map code="0x2248" name="approxequal"/><!-- ALMOST EQUAL TO -->
      <map code="0x2260" name="notequal"/><!-- NOT EQUAL TO -->
      <map code="0x2264" name="lessequal"/><!-- LESS-THAN OR EQUAL TO -->
      <map code="0x2265" name="greaterequal"/><!-- GREATER-THAN OR EQUAL TO -->
      <map code="0x25ca" name="lozenge"/><!-- LOZENGE -->
      <map code="0x2c67" name="Hdesc"/><!-- LATIN CAPITAL LETTER H WITH DESCENDER -->
      <map code="0x2c68" name="hdesc"/><!-- LATIN SMALL LETTER H WITH DESCENDER -->
      <map code="0xf401" name="Accent"/><!-- ???? -->
      <map code="0xf406" name="Breve"/><!-- ???? -->
      <map code="0xf407" name="Cedilla"/><!-- ???? -->
      <map code="0xf408" name="Circumflex"/><!-- ???? -->
      <map code="0xf409" name="Commaaccent"/><!-- ???? -->
      <map code="0xf40a" name="Apostrophe"/><!-- ???? -->
      <map code="0xf40b" name="Dotaccent"/><!-- ???? -->
      <map code="0xf40c" name="Ring"/><!-- ???? -->
      <map code="0xf40d" name="Tilde"/><!-- ???? -->
      <map code="0xf40e" name="Ogonek"/><!-- ???? -->
      <map code="0xf486" name="Bacute"/><!-- ???? -->
      <map code="0xf487" name="bacute"/><!-- ???? -->
      <map code="0xf488" name="Facute"/><!-- ???? -->
      <map code="0xf489" name="facute"/><!-- ???? -->
      <map code="0xf49e" name="cyrHcrossed"/><!-- ???? -->
      <map code="0xf49f" name="cyrhcrossed"/><!-- ???? -->
      <map code="0xf4c6" name="cyrChehook"/><!-- ???? -->
      <map code="0xf4c7" name="cyrchehook"/><!-- ???? -->
      <map code="0xf4cc" name="cyrUacute"/><!-- ???? -->
      <map code="0xf4cd" name="cyruacute"/><!-- ???? -->
      <map code="0xf4d6" name="cyrEdotaccent"/><!-- ???? -->
      <map code="0xf4d7" name="cyredotaccent"/><!-- ???? -->
      <map code="0xf50a" name="cyrZetail.alt"/><!-- ???? -->
      <map code="0xf50b" name="cyrzetail.alt"/><!-- ???? -->
      <map code="0xf50c" name="cyrEstail.alt02"/><!-- ???? -->
      <map code="0xf50d" name="cyrestail.alt02"/><!-- ???? -->
      <map code="0xf50e" name="cyrAmacron"/><!-- ???? -->
      <map code="0xf50f" name="cyramacron"/><!-- ???? -->
      <map code="0xf510" name="cyrIemacron"/><!-- ???? -->
      <map code="0xf511" name="cyriemacron"/><!-- ???? -->
      <map code="0xf512" name="cyrIedieresismacron"/><!-- ???? -->
      <map code="0xf513" name="cyriedieresismacron"/><!-- ???? -->
      <map code="0xf514" name="cyrIedieresiscyrbreve"/><!-- ???? -->
      <map code="0xf515" name="cyriedieresiscyrbreve"/><!-- ???? -->
      <map code="0xf516" name="cyrZecaron"/><!-- ???? -->
      <map code="0xf517" name="cyrzecaron"/><!-- ???? -->
      <map code="0xf518" name="cyrOmacron"/><!-- ???? -->
      <map code="0xf519" name="cyromacron"/><!-- ???? -->
      <map code="0xf51a" name="cyrOcyrbreve"/><!-- ???? -->
      <map code="0xf51b" name="cyrocyrbreve"/><!-- ???? -->
      <map code="0xf51c" name="cyrObarcyrbreve"/><!-- ???? -->
      <map code="0xf51d" name="cyrobarcyrbreve"/><!-- ???? -->
      <map code="0xf51e" name="cyrObardieresiscyrbreve"/><!-- ???? -->
      <map code="0xf51f" name="cyrobardieresiscyrbreve"/><!-- ???? -->
      <map code="0xf520" name="cyrYerumacron"/><!-- ???? -->
      <map code="0xf521" name="cyryerumacron"/><!-- ???? -->
      <map code="0xf522" name="cyrEmacron"/><!-- ???? -->
      <map code="0xf523" name="cyremacron"/><!-- ???? -->
      <map code="0xf524" name="cyrEcyrbreve"/><!-- ???? -->
      <map code="0xf525" name="cyrecyrbreve"/><!-- ???? -->
      <map code="0xf526" name="afii10053dieresis"/><!-- ???? -->
      <map code="0xf527" name="afii10101dieresis"/><!-- ???? -->
      <map code="0xf528" name="cyrYamacron"/><!-- ???? -->
      <map code="0xf529" name="cyryamacron"/><!-- ???? -->
      <map code="0xf52a" name="cyrYacyrbreve"/><!-- ???? -->
      <map code="0xf52b" name="cyryacyrbreve"/><!-- ???? -->
      <map code="0xf52c" name="cyrYumacron"/><!-- ???? -->
      <map code="0xf52d" name="cyryumacron"/><!-- ???? -->
      <map code="0xf52e" name="cyrYucyrbreve"/><!-- ???? -->
      <map code="0xf52f" name="cyryucyrbreve"/><!-- ???? -->
      <map code="0xf530" name="cyrEldesc"/><!-- ???? -->
      <map code="0xf531" name="cyreldesc"/><!-- ???? -->
      <map code="0xf532" name="afii10027hook"/><!-- ???? -->
      <map code="0xf533" name="afii10075hook"/><!-- ???? -->
      <map code="0xf534" name="cyrOdotaccent"/><!-- ???? -->
      <map code="0xf535" name="cyrodotaccent"/><!-- ???? -->
      <map code="0xf536" name="cyrYerucyrbreve"/><!-- ???? -->
      <map code="0xf537" name="cyryerucyrbreve"/><!-- ???? -->
      <map code="0xf538" name="cyrEpsilondieresis"/><!-- ???? -->
      <map code="0xf539" name="cyrepsilondieresis"/><!-- ???? -->
      <map code="0xf53a" name="afii10055.alt"/><!-- ???? -->
      <map code="0xf53b" name="afii10103.alt"/><!-- ???? -->
      <map code="0xf53c" name="cyrGebar.alt"/><!-- ???? -->
      <map code="0xf53d" name="cyrgebar.alt"/><!-- ???? -->
      <map code="0xf53e" name="cyrEstail.alt"/><!-- ???? -->
      <map code="0xf53f" name="cyrestail.alt"/><!-- ???? -->
      <map code="0xf540" name="Dacute"/><!-- ???? -->
      <map code="0xf541" name="dacute"/><!-- ???? -->
      <map code="0xf542" name="Hacute"/><!-- ???? -->
      <map code="0xf543" name="hacute"/><!-- ???? -->
      <map code="0xf544" name="Lacutecarel"/><!-- ???? -->
      <map code="0xf545" name="lacutecarel"/><!-- ???? -->
      <map code="0xf546" name="Tacute"/><!-- ???? -->
      <map code="0xf547" name="tacute"/><!-- ???? -->
      <map code="0xf548" name="Vacute"/><!-- ???? -->
      <map code="0xf549" name="vacute"/><!-- ???? -->
      <map code="0xf54a" name="Ezhcarel"/><!-- ???? -->
      <map code="0xf54b" name="ezhcarel"/><!-- ???? -->
      <map code="0xf54c" name="Ezhcarelcaron"/><!-- ???? -->
      <map code="0xf54d" name="ezhcarelcaron"/><!-- ???? -->
      <map code="0xf62c" name="quoteleftsmall"/><!-- ???? -->
      <map code="0xf62d" name="quoterightsmall"/><!-- ???? -->
      <map code="0xf62e" name="quotedblleftsmall"/><!-- ???? -->
      <map code="0xf62f" name="quotedblrightsmall"/><!-- ???? -->
      <map code="0xf634" name="quotesinglesmall"/><!-- ???? -->
      <map code="0xf635" name="quotedblsmall"/><!-- ???? -->
      <map code="0xf662" name="one.numerator"/><!-- ???? -->
      <map code="0xf6c3" name="commaaccent"/><!-- ???? -->
      <map code="0xf6c9" name="Acute"/><!-- ???? -->
      <map code="0xf6ca" name="Caron"/><!-- ???? -->
      <map code="0xf6cb" name="Dieresis"/><!-- ???? -->
      <map code="0xf6ce" name="Grave"/><!-- ???? -->
      <map code="0xf6cf" name="Hungarumlaut"/><!-- ???? -->
      <map code="0xf6d0" name="Macron"/><!-- ???? -->
      <map code="0xf6d1" name="cyrBreve"/><!-- ???? -->
      <map code="0xf6d4" name="cyrbreve"/><!-- ???? -->
      <map code="0xfb01" name="fi"/><!-- LATIN SMALL LIGATURE FI -->
      <map code="0xfb02" name="fl"/><!-- LATIN SMALL LIGATURE FL -->
      <map code="0xfeff" name="uniFEFF"/><!-- ZERO WIDTH NO-BREAK SPACE -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHW[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        9
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          1 1
          INSTCTRL[ ]	/* SetInstrExecControl */
        EIF[ ]	/* EndIf */
        PUSHW[ ]	/* 1 value pushed */
        511
        SCANCTRL[ ]	/* ScanConversionControl */
        PUSHW[ ]	/* 1 value pushed */
        132
        SCVTCI[ ]	/* SetCVTCutIn */
        PUSHW[ ]	/* 2 values pushed */
        9 3
        SDS[ ]	/* SetDeltaShiftInGState */
        SDB[ ]	/* SetDeltaBaseInGState */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[01]	/* Round */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
        PUSHW[ ]	/* 1 value pushed */
        1
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MD[0]	/* MeasureDistance */
        ABS[ ]	/* Absolute */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[00]	/* Round */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[00]	/* Round */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          NEG[ ]	/* Negate */
          ROLL[ ]	/* RollTopThreeStack */
        EIF[ ]	/* EndIf */
        MDAP[1]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          ROUND[01]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            64
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          ROUND[01]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            64
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          ROLL[ ]	/* RollTopThreeStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[10]	/* Round */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[10]	/* Round */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          ROLL[ ]	/* RollTopThreeStack */
        EIF[ ]	/* EndIf */
        MDAP[1]	/* MoveDirectAbsPt */
        MIRP[11101]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            128
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            64
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          192
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            192
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROUND[01]	/* Round */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        RDTG[ ]	/* RoundDownToGrid */
        ROUND[01]	/* Round */
        RTG[ ]	/* RoundToGrid */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
        PUSHW[ ]	/* 1 value pushed */
        6
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          128
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHW[ ]	/* 1 value pushed */
          192
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHW[ ]	/* 1 value pushed */
          256
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHW[ ]	/* 1 value pushed */
          320
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHW[ ]	/* 1 value pushed */
          384
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
            PUSHW[ ]	/* 1 value pushed */
            384
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
            RCVT[ ]	/* ReadCVT */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        54
        RCVT[ ]	/* ReadCVT */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        55
        RCVT[ ]	/* ReadCVT */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        39 1
        GETINFO[ ]	/* GetInfo */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          16384 1024
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          2048
          GETINFO[ ]	/* GetInfo */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHW[ ]	/* 2 values pushed */
            54 1000
            WCVTF[ ]	/* WriteCVTInFUnits */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          35
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            GETINFO[ ]	/* GetInfo */
            PUSHW[ ]	/* 1 value pushed */
            4096
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              PUSHW[ ]	/* 2 values pushed */
              54 1000
              WCVTF[ ]	/* WriteCVTInFUnits */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        64
        GETINFO[ ]	/* GetInfo */
        PUSHW[ ]	/* 1 value pushed */
        8192
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          55 0
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          PUSHW[ ]	/* 2 values pushed */
          55 1000
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      PUSHW[ ]	/* 1 value pushed */
      12
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 1 value pushed */
      0
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      1 33 2
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      34 4 2
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      34 39 31 22 17 9 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      35 33 27 22 17 9 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      36 36 31 22 17 9 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      37 50 41 32 23 14 0 8
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      1 90 76 59 48 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      2 106 87 74 48 30 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      3 74 59 48 38 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      4 155 127 99 74 48 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      5 155 127 99 74 48 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      6 90 76 59 48 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      7 115 95 76 53 31 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      8 37 33 26 17 11 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      9 48 41 30 22 9 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      10 48 38 30 21 12 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      11 51 41 33 25 14 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      12 77 63 51 35 21 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      13 74 59 48 38 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      14 40 33 26 17 11 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      15 48 39 32 22 11 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      16 127 104 81 59 34 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      17 118 96 75 52 34 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      18 65 53 41 30 18 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      19 37 31 24 17 11 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      20 122 100 78 59 34 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      21 87 71 56 45 22 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      22 74 61 46 34 19 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      23 195 159 124 89 53 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      24 56 45 33 25 14 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      25 74 61 48 35 21 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      26 87 71 59 41 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      27 159 130 101 73 40 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      28 84 69 54 38 25 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      29 98 80 62 45 27 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      30 117 96 74 48 30 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      31 128 105 82 59 30 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      32 99 81 59 48 30 0 8
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      33 45 37 26 17 11 0 8
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      38 8 7
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 1 value pushed */
      0
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHW[ ]	/* 3 values pushed */
      160 40 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      0 40 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      15 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      31 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      112 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      144 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      176 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      32 42 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      96 42 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      176 42 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      64 42 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      128 42 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      223 42 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      15 46 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      63 46 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      95 46 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      223 46 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      15 46 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      223 46 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      31 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      111 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      63 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      239 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      95 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      143 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      127 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      159 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      175 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      207 46 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      15 48 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      47 48 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      63 48 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      95 48 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      175 48 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      223 48 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      255 48 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      15 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      31 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      47 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      95 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      143 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      191 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      207 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      239 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      255 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      160 48 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      79 48 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      15 50 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      63 50 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      240 50 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      32 50 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      96 50 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      223 50 1
      DELTAC2[ ]	/* DeltaExceptionC2 */
      PUSHW[ ]	/* 3 values pushed */
      15 50 1
      DELTAC3[ ]	/* DeltaExceptionC3 */
      PUSHW[ ]	/* 3 values pushed */
      144 50 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
      PUSHW[ ]	/* 3 values pushed */
      223 50 1
      DELTAC1[ ]	/* DeltaExceptionC1 */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="38"/>
    <cv index="1" value="126"/>
    <cv index="2" value="107"/>
    <cv index="3" value="150"/>
    <cv index="4" value="73"/>
    <cv index="5" value="73"/>
    <cv index="6" value="118"/>
    <cv index="7" value="98"/>
    <cv index="8" value="289"/>
    <cv index="9" value="238"/>
    <cv index="10" value="256"/>
    <cv index="11" value="226"/>
    <cv index="12" value="148"/>
    <cv index="13" value="141"/>
    <cv index="14" value="268"/>
    <cv index="15" value="239"/>
    <cv index="16" value="89"/>
    <cv index="17" value="96"/>
    <cv index="18" value="175"/>
    <cv index="19" value="307"/>
    <cv index="20" value="93"/>
    <cv index="21" value="130"/>
    <cv index="22" value="150"/>
    <cv index="23" value="58"/>
    <cv index="24" value="208"/>
    <cv index="25" value="154"/>
    <cv index="26" value="130"/>
    <cv index="27" value="71"/>
    <cv index="28" value="135"/>
    <cv index="29" value="116"/>
    <cv index="30" value="97"/>
    <cv index="31" value="88"/>
    <cv index="32" value="114"/>
    <cv index="33" value="253"/>
    <cv index="34" value="295"/>
    <cv index="35" value="348"/>
    <cv index="36" value="317"/>
    <cv index="37" value="227"/>
    <cv index="38" value="0"/>
    <cv index="39" value="24"/>
    <cv index="40" value="-367"/>
    <cv index="41" value="29"/>
    <cv index="42" value="1118"/>
    <cv index="43" value="20"/>
    <cv index="44" value="748"/>
    <cv index="45" value="18"/>
    <cv index="46" value="935"/>
    <cv index="47" value="23"/>
    <cv index="48" value="1356"/>
    <cv index="49" value="31"/>
    <cv index="50" value="1422"/>
    <cv index="51" value="9"/>
    <cv index="52" value="1557"/>
    <cv index="53" value="16"/>
    <cv index="54" value="0"/>
    <cv index="55" value="0"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="269" yMin="0" xMax="1237" yMax="1210">
      <contour>
        <pt x="269" y="0" on="1"/>
        <pt x="269" y="1210" on="1"/>
        <pt x="1237" y="1210" on="1"/>
        <pt x="1237" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="299" y="30" on="1"/>
        <pt x="1207" y="30" on="1"/>
        <pt x="1207" y="1180" on="1"/>
        <pt x="299" y="1180" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 3 values pushed */
          4 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name=".null"/><!-- contains no outline data -->

    <TTGlyph name="A" xMin="24" yMin="0" xMax="1455" yMax="1379">
      <contour>
        <pt x="904" y="438" on="1"/>
        <pt x="446" y="438" on="1"/>
        <pt x="330" y="130" on="1"/>
        <pt x="418" y="118" on="0"/>
        <pt x="498" y="74" on="1"/>
        <pt x="498" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="74" on="1"/>
        <pt x="56" y="93" on="0"/>
        <pt x="122" y="122" on="0"/>
        <pt x="156" y="130" on="1"/>
        <pt x="671" y="1379" on="1"/>
        <pt x="814" y="1379" on="1"/>
        <pt x="1315" y="130" on="1"/>
        <pt x="1353" y="122" on="0"/>
        <pt x="1426" y="93" on="0"/>
        <pt x="1455" y="74" on="1"/>
        <pt x="1455" y="0" on="1"/>
        <pt x="854" y="0" on="1"/>
        <pt x="854" y="74" on="1"/>
        <pt x="891" y="91" on="0"/>
        <pt x="976" y="122" on="0"/>
        <pt x="1015" y="130" on="1"/>
      </contour>
      <contour>
        <pt x="494" y="564" on="1"/>
        <pt x="859" y="564" on="1"/>
        <pt x="727" y="933" on="1"/>
        <pt x="684" y="1090" on="1"/>
        <pt x="680" y="1090" on="1"/>
        <pt x="633" y="930" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          23 11 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          26 11 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="AE" xMin="24" yMin="0" xMax="1928" yMax="1356">
      <component glyphName="cyrAE" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Aacute" xMin="24" yMin="0" xMax="1455" yMax="1751">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="488" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          36
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Abreve" xMin="24" yMin="0" xMax="1455" yMax="1757">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Breve" x="271" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          37
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Accent" xMin="-729" yMin="1453" xMax="-196" yMax="1751">
      <component glyphName="Acute" x="-845" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Acircumflex" xMin="24" yMin="0" xMax="1455" yMax="1740">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="294" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Acute" xMin="116" yMin="1453" xMax="649" yMax="1751">
      <contour>
        <pt x="391" y="1749" on="1"/>
        <pt x="422" y="1751" on="0"/>
        <pt x="501" y="1740" on="0"/>
        <pt x="577" y="1718" on="0"/>
        <pt x="637" y="1691" on="0"/>
        <pt x="649" y="1677" on="1"/>
        <pt x="649" y="1638" on="1"/>
        <pt x="170" y="1453" on="1"/>
        <pt x="116" y="1499" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          64 7 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          112 7 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 0 31 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Adieresis" xMin="24" yMin="0" xMax="1455" yMax="1720">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="198" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Agrave" xMin="24" yMin="0" xMax="1455" yMax="1755">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Grave" x="230" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Amacron" xMin="24" yMin="0" xMax="1455" yMax="1654">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="285" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Aogonek" xMin="24" yMin="-494" xMax="1455" yMax="1379">
      <contour>
        <pt x="330" y="130" on="1"/>
        <pt x="417" y="118" on="0"/>
        <pt x="498" y="74" on="1"/>
        <pt x="498" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="74" on="1"/>
        <pt x="56" y="93" on="0"/>
        <pt x="122" y="122" on="0"/>
        <pt x="156" y="130" on="1"/>
        <pt x="671" y="1379" on="1"/>
        <pt x="814" y="1379" on="1"/>
        <pt x="1315" y="130" on="1"/>
        <pt x="1353" y="122" on="0"/>
        <pt x="1426" y="93" on="0"/>
        <pt x="1455" y="74" on="1"/>
        <pt x="1455" y="0" on="1"/>
        <pt x="1383" y="0" on="1"/>
        <pt x="1308" y="-54" on="0"/>
        <pt x="1266" y="-127" on="1"/>
        <pt x="1224" y="-201" on="0"/>
        <pt x="1224" y="-261" on="1"/>
        <pt x="1224" y="-312" on="0"/>
        <pt x="1284" y="-366" on="0"/>
        <pt x="1329" y="-366" on="1"/>
        <pt x="1352" y="-366" on="0"/>
        <pt x="1396" y="-362" on="0"/>
        <pt x="1418" y="-356" on="1"/>
        <pt x="1418" y="-440" on="1"/>
        <pt x="1404" y="-451" on="0"/>
        <pt x="1364" y="-470" on="0"/>
        <pt x="1313" y="-485" on="0"/>
        <pt x="1254" y="-494" on="0"/>
        <pt x="1223" y="-494" on="1"/>
        <pt x="1103" y="-494" on="0"/>
        <pt x="1041" y="-439" on="1"/>
        <pt x="979" y="-383" on="0"/>
        <pt x="979" y="-304" on="1"/>
        <pt x="979" y="-252" on="0"/>
        <pt x="1019" y="-165" on="0"/>
        <pt x="1091" y="-92" on="0"/>
        <pt x="1192" y="-29" on="0"/>
        <pt x="1252" y="0" on="1"/>
        <pt x="854" y="0" on="1"/>
        <pt x="854" y="74" on="1"/>
        <pt x="891" y="91" on="0"/>
        <pt x="976" y="122" on="0"/>
        <pt x="1015" y="130" on="1"/>
        <pt x="904" y="438" on="1"/>
        <pt x="446" y="438" on="1"/>
      </contour>
      <contour>
        <pt x="859" y="564" on="1"/>
        <pt x="727" y="933" on="1"/>
        <pt x="684" y="1090" on="1"/>
        <pt x="680" y="1090" on="1"/>
        <pt x="633" y="930" on="1"/>
        <pt x="494" y="564" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          50 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          54 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          47 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          51 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Apostrophe" xMin="169" yMin="802" xMax="518" yMax="1354">
      <component glyphName="quotesinglbase" x="5" y="1090" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Aring" xMin="24" yMin="0" xMax="1455" yMax="1700">
      <contour>
        <pt x="495" y="1526" on="1"/>
        <pt x="495" y="1607" on="0"/>
        <pt x="565" y="1653" on="1"/>
        <pt x="636" y="1700" on="0"/>
        <pt x="753" y="1700" on="1"/>
        <pt x="803" y="1700" on="0"/>
        <pt x="892" y="1679" on="0"/>
        <pt x="960" y="1637" on="0"/>
        <pt x="999" y="1574" on="0"/>
        <pt x="999" y="1532" on="1"/>
        <pt x="999" y="1456" on="0"/>
        <pt x="929" y="1410" on="1"/>
        <pt x="884" y="1379" on="0"/>
        <pt x="819" y="1367" on="1"/>
        <pt x="1315" y="130" on="1"/>
        <pt x="1353" y="122" on="0"/>
        <pt x="1426" y="93" on="0"/>
        <pt x="1455" y="74" on="1"/>
        <pt x="1455" y="0" on="1"/>
        <pt x="854" y="0" on="1"/>
        <pt x="854" y="74" on="1"/>
        <pt x="891" y="91" on="0"/>
        <pt x="976" y="122" on="0"/>
        <pt x="1015" y="130" on="1"/>
        <pt x="904" y="438" on="1"/>
        <pt x="446" y="438" on="1"/>
        <pt x="330" y="130" on="1"/>
        <pt x="418" y="118" on="0"/>
        <pt x="498" y="74" on="1"/>
        <pt x="498" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="74" on="1"/>
        <pt x="56" y="93" on="0"/>
        <pt x="122" y="122" on="0"/>
        <pt x="156" y="130" on="1"/>
        <pt x="667" y="1369" on="1"/>
        <pt x="602" y="1379" on="0"/>
        <pt x="561" y="1408" on="1"/>
        <pt x="495" y="1451" on="0"/>
      </contour>
      <contour>
        <pt x="494" y="564" on="1"/>
        <pt x="859" y="564" on="1"/>
        <pt x="727" y="933" on="1"/>
        <pt x="684" y="1090" on="1"/>
        <pt x="680" y="1090" on="1"/>
        <pt x="633" y="930" on="1"/>
      </contour>
      <contour>
        <pt x="656" y="1526" on="1"/>
        <pt x="656" y="1493" on="0"/>
        <pt x="685" y="1476" on="1"/>
        <pt x="713" y="1460" on="0"/>
        <pt x="744" y="1460" on="1"/>
        <pt x="789" y="1460" on="0"/>
        <pt x="838" y="1493" on="0"/>
        <pt x="838" y="1524" on="1"/>
        <pt x="838" y="1569" on="0"/>
        <pt x="786" y="1604" on="0"/>
        <pt x="749" y="1604" on="1"/>
        <pt x="709" y="1604" on="0"/>
        <pt x="656" y="1569" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          49 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          63 4 79 4 95 4 111 4 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          15 4 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          39 35 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          24 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          42 4 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 16
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 17
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Atilde" xMin="24" yMin="0" xMax="1455" yMax="1706">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Tilde" x="263" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="76" yMin="-11" xMax="1270" yMax="1367">
      <contour>
        <pt x="76" y="0" on="1"/>
        <pt x="76" y="74" on="1"/>
        <pt x="113" y="95" on="0"/>
        <pt x="196" y="126" on="0"/>
        <pt x="235" y="130" on="1"/>
        <pt x="235" y="1225" on="1"/>
        <pt x="196" y="1234" on="0"/>
        <pt x="111" y="1262" on="0"/>
        <pt x="76" y="1282" on="1"/>
        <pt x="76" y="1356" on="1"/>
        <pt x="388" y="1356" on="1"/>
        <pt x="425" y="1356" on="0"/>
        <pt x="495" y="1359" on="0"/>
        <pt x="527" y="1361" on="1"/>
        <pt x="560" y="1364" on="0"/>
        <pt x="650" y="1367" on="0"/>
        <pt x="698" y="1367" on="1"/>
        <pt x="791" y="1367" on="0"/>
        <pt x="972" y="1346" on="0"/>
        <pt x="1044" y="1310" on="1"/>
        <pt x="1080" y="1292" on="0"/>
        <pt x="1141" y="1242" on="0"/>
        <pt x="1185" y="1176" on="0"/>
        <pt x="1210" y="1095" on="0"/>
        <pt x="1210" y="1046" on="1"/>
        <pt x="1210" y="984" on="0"/>
        <pt x="1165" y="876" on="0"/>
        <pt x="1087" y="793" on="0"/>
        <pt x="980" y="737" on="0"/>
        <pt x="918" y="726" on="1"/>
        <pt x="918" y="718" on="1"/>
        <pt x="980" y="711" on="0"/>
        <pt x="1105" y="668" on="0"/>
        <pt x="1206" y="589" on="0"/>
        <pt x="1270" y="470" on="0"/>
        <pt x="1270" y="386" on="1"/>
        <pt x="1270" y="283" on="0"/>
        <pt x="1173" y="126" on="0"/>
        <pt x="1093" y="78" on="1"/>
        <pt x="1051" y="52" on="0"/>
        <pt x="951" y="18" on="0"/>
        <pt x="844" y="-2" on="0"/>
        <pt x="731" y="-11" on="0"/>
        <pt x="676" y="-11" on="1"/>
        <pt x="632" y="-11" on="0"/>
        <pt x="529" y="-8" on="0"/>
        <pt x="428" y="-3" on="0"/>
        <pt x="338" y="0" on="0"/>
        <pt x="307" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="683" y="114" on="1"/>
        <pt x="713" y="114" on="0"/>
        <pt x="775" y="123" on="0"/>
        <pt x="832" y="141" on="0"/>
        <pt x="880" y="168" on="0"/>
        <pt x="898" y="186" on="1"/>
        <pt x="970" y="261" on="0"/>
        <pt x="970" y="381" on="1"/>
        <pt x="970" y="454" on="0"/>
        <pt x="913" y="549" on="0"/>
        <pt x="817" y="605" on="0"/>
        <pt x="694" y="626" on="0"/>
        <pt x="628" y="626" on="1"/>
        <pt x="514" y="626" on="1"/>
        <pt x="514" y="128" on="1"/>
        <pt x="540" y="122" on="0"/>
        <pt x="625" y="114" on="0"/>
      </contour>
      <contour>
        <pt x="575" y="752" on="1"/>
        <pt x="596" y="752" on="0"/>
        <pt x="645" y="753" on="0"/>
        <pt x="693" y="756" on="0"/>
        <pt x="736" y="760" on="0"/>
        <pt x="752" y="764" on="1"/>
        <pt x="782" y="773" on="0"/>
        <pt x="842" y="816" on="0"/>
        <pt x="890" y="878" on="0"/>
        <pt x="920" y="958" on="0"/>
        <pt x="920" y="1003" on="1"/>
        <pt x="920" y="1064" on="0"/>
        <pt x="883" y="1151" on="0"/>
        <pt x="852" y="1182" on="1"/>
        <pt x="836" y="1198" on="0"/>
        <pt x="788" y="1221" on="0"/>
        <pt x="734" y="1235" on="0"/>
        <pt x="678" y="1242" on="0"/>
        <pt x="653" y="1242" on="1"/>
        <pt x="611" y="1242" on="0"/>
        <pt x="538" y="1238" on="0"/>
        <pt x="514" y="1234" on="1"/>
        <pt x="514" y="752" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          66 16 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 66 31 66 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 66 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          61 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 66 61
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          84 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Bacute" xMin="76" yMin="-11" xMax="1270" yMax="1751">
      <component glyphName="B" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="367" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          96
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Breve" xMin="141" yMin="1479" xMax="796" yMax="1757">
      <contour>
        <pt x="716" y="1747" on="1"/>
        <pt x="729" y="1749" on="0"/>
        <pt x="782" y="1722" on="0"/>
        <pt x="796" y="1703" on="1"/>
        <pt x="779" y="1660" on="0"/>
        <pt x="720" y="1581" on="0"/>
        <pt x="639" y="1518" on="0"/>
        <pt x="535" y="1479" on="0"/>
        <pt x="474" y="1479" on="1"/>
        <pt x="345" y="1479" on="0"/>
        <pt x="178" y="1601" on="0"/>
        <pt x="141" y="1706" on="1"/>
        <pt x="155" y="1730" on="0"/>
        <pt x="211" y="1757" on="0"/>
        <pt x="240" y="1753" on="1"/>
        <pt x="254" y="1732" on="0"/>
        <pt x="310" y="1697" on="0"/>
        <pt x="376" y="1673" on="0"/>
        <pt x="447" y="1660" on="0"/>
        <pt x="476" y="1660" on="1"/>
        <pt x="507" y="1660" on="0"/>
        <pt x="577" y="1668" on="0"/>
        <pt x="641" y="1689" on="0"/>
        <pt x="697" y="1722" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          63 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          175 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          31 8 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          223 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          111 8 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          160 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          224 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 14 31 14 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 7 values pushed */
          15 14 31 14 47 14 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          19 8 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="130" yMin="-24" xMax="1329" yMax="1379">
      <contour>
        <pt x="1215" y="407" on="1"/>
        <pt x="1294" y="407" on="1"/>
        <pt x="1301" y="376" on="0"/>
        <pt x="1314" y="288" on="0"/>
        <pt x="1323" y="191" on="0"/>
        <pt x="1329" y="94" on="0"/>
        <pt x="1329" y="54" on="1"/>
        <pt x="1279" y="28" on="0"/>
        <pt x="1175" y="-2" on="0"/>
        <pt x="1069" y="-19" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="910" y="-24" on="1"/>
        <pt x="749" y="-24" on="0"/>
        <pt x="465" y="57" on="0"/>
        <pt x="253" y="228" on="0"/>
        <pt x="130" y="494" on="0"/>
        <pt x="130" y="680" on="1"/>
        <pt x="130" y="803" on="0"/>
        <pt x="191" y="1002" on="0"/>
        <pt x="298" y="1157" on="0"/>
        <pt x="442" y="1270" on="0"/>
        <pt x="609" y="1344" on="0"/>
        <pt x="791" y="1379" on="0"/>
        <pt x="882" y="1379" on="1"/>
        <pt x="945" y="1379" on="0"/>
        <pt x="1075" y="1368" on="0"/>
        <pt x="1193" y="1349" on="0"/>
        <pt x="1291" y="1324" on="0"/>
        <pt x="1324" y="1311" on="1"/>
        <pt x="1324" y="1284" on="0"/>
        <pt x="1316" y="1188" on="0"/>
        <pt x="1303" y="1080" on="0"/>
        <pt x="1287" y="975" on="0"/>
        <pt x="1279" y="939" on="1"/>
        <pt x="1197" y="939" on="1"/>
        <pt x="1091" y="1232" on="1"/>
        <pt x="1082" y="1236" on="0"/>
        <pt x="1040" y="1243" on="0"/>
        <pt x="988" y="1249" on="0"/>
        <pt x="935" y="1253" on="0"/>
        <pt x="914" y="1253" on="1"/>
        <pt x="862" y="1253" on="0"/>
        <pt x="753" y="1225" on="0"/>
        <pt x="650" y="1165" on="0"/>
        <pt x="559" y="1073" on="0"/>
        <pt x="491" y="945" on="0"/>
        <pt x="451" y="779" on="0"/>
        <pt x="451" y="677" on="1"/>
        <pt x="451" y="537" on="0"/>
        <pt x="526" y="320" on="0"/>
        <pt x="588" y="248" on="1"/>
        <pt x="619" y="212" on="0"/>
        <pt x="699" y="158" on="0"/>
        <pt x="791" y="122" on="0"/>
        <pt x="888" y="103" on="0"/>
        <pt x="936" y="103" on="1"/>
        <pt x="963" y="103" on="0"/>
        <pt x="1020" y="110" on="0"/>
        <pt x="1071" y="119" on="0"/>
        <pt x="1111" y="130" on="0"/>
        <pt x="1120" y="135" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 23 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          33 23 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Cacute" xMin="130" yMin="-24" xMax="1329" yMax="1751">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="592" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          68
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Caron" xMin="141" yMin="1468" xMax="749" yMax="1757">
      <contour>
        <pt x="683" y="1757" on="1"/>
        <pt x="699" y="1757" on="0"/>
        <pt x="744" y="1716" on="0"/>
        <pt x="749" y="1697" on="1"/>
        <pt x="503" y="1479" on="1"/>
        <pt x="496" y="1474" on="0"/>
        <pt x="465" y="1468" on="0"/>
        <pt x="428" y="1468" on="0"/>
        <pt x="395" y="1474" on="0"/>
        <pt x="383" y="1479" on="1"/>
        <pt x="141" y="1691" on="1"/>
        <pt x="147" y="1712" on="0"/>
        <pt x="188" y="1757" on="0"/>
        <pt x="208" y="1757" on="1"/>
        <pt x="451" y="1651" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          14 15 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          64 6 80 6 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          192 6 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          15 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          112 6 128 6 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          16 6 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          160 6 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 13 31 13 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          14 6 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccaron" xMin="130" yMin="-24" xMax="1329" yMax="1757">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="479" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccedilla" xMin="130" yMin="-529" xMax="1329" yMax="1379">
      <contour>
        <pt x="1215" y="407" on="1"/>
        <pt x="1294" y="407" on="1"/>
        <pt x="1301" y="376" on="0"/>
        <pt x="1314" y="288" on="0"/>
        <pt x="1323" y="191" on="0"/>
        <pt x="1329" y="94" on="0"/>
        <pt x="1329" y="54" on="1"/>
        <pt x="1279" y="28" on="0"/>
        <pt x="1175" y="-2" on="0"/>
        <pt x="1069" y="-19" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="910" y="-24" on="1"/>
        <pt x="898" y="-24" on="0"/>
        <pt x="874" y="-23" on="0"/>
        <pt x="862" y="-23" on="1"/>
        <pt x="824" y="-113" on="1"/>
        <pt x="939" y="-116" on="0"/>
        <pt x="1013" y="-158" on="1"/>
        <pt x="1086" y="-200" on="0"/>
        <pt x="1086" y="-285" on="1"/>
        <pt x="1086" y="-317" on="0"/>
        <pt x="1063" y="-372" on="0"/>
        <pt x="1022" y="-419" on="0"/>
        <pt x="967" y="-456" on="0"/>
        <pt x="935" y="-471" on="1"/>
        <pt x="903" y="-486" on="0"/>
        <pt x="835" y="-508" on="0"/>
        <pt x="766" y="-522" on="0"/>
        <pt x="702" y="-529" on="0"/>
        <pt x="675" y="-529" on="1"/>
        <pt x="675" y="-440" on="1"/>
        <pt x="708" y="-435" on="0"/>
        <pt x="765" y="-416" on="0"/>
        <pt x="806" y="-386" on="0"/>
        <pt x="828" y="-345" on="0"/>
        <pt x="828" y="-318" on="1"/>
        <pt x="826" y="-273" on="0"/>
        <pt x="762" y="-223" on="0"/>
        <pt x="681" y="-218" on="1"/>
        <pt x="743" y="-12" on="1"/>
        <pt x="612" y="6" on="0"/>
        <pt x="388" y="107" on="0"/>
        <pt x="223" y="276" on="0"/>
        <pt x="130" y="519" on="0"/>
        <pt x="130" y="680" on="1"/>
        <pt x="130" y="803" on="0"/>
        <pt x="191" y="1002" on="0"/>
        <pt x="298" y="1157" on="0"/>
        <pt x="442" y="1270" on="0"/>
        <pt x="609" y="1344" on="0"/>
        <pt x="791" y="1379" on="0"/>
        <pt x="882" y="1379" on="1"/>
        <pt x="945" y="1379" on="0"/>
        <pt x="1075" y="1368" on="0"/>
        <pt x="1193" y="1349" on="0"/>
        <pt x="1291" y="1324" on="0"/>
        <pt x="1324" y="1311" on="1"/>
        <pt x="1324" y="1284" on="0"/>
        <pt x="1316" y="1188" on="0"/>
        <pt x="1303" y="1080" on="0"/>
        <pt x="1287" y="975" on="0"/>
        <pt x="1279" y="939" on="1"/>
        <pt x="1197" y="939" on="1"/>
        <pt x="1091" y="1232" on="1"/>
        <pt x="1082" y="1236" on="0"/>
        <pt x="1040" y="1243" on="0"/>
        <pt x="988" y="1249" on="0"/>
        <pt x="935" y="1253" on="0"/>
        <pt x="914" y="1253" on="1"/>
        <pt x="862" y="1253" on="0"/>
        <pt x="753" y="1225" on="0"/>
        <pt x="650" y="1165" on="0"/>
        <pt x="559" y="1073" on="0"/>
        <pt x="491" y="945" on="0"/>
        <pt x="451" y="779" on="0"/>
        <pt x="451" y="677" on="1"/>
        <pt x="451" y="537" on="0"/>
        <pt x="526" y="320" on="0"/>
        <pt x="588" y="248" on="1"/>
        <pt x="619" y="212" on="0"/>
        <pt x="699" y="158" on="0"/>
        <pt x="791" y="122" on="0"/>
        <pt x="888" y="103" on="0"/>
        <pt x="936" y="103" on="1"/>
        <pt x="963" y="103" on="0"/>
        <pt x="1020" y="110" on="0"/>
        <pt x="1071" y="119" on="0"/>
        <pt x="1111" y="130" on="0"/>
        <pt x="1120" y="135" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          39 89 90
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            51
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            51 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 11 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          68 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          83 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ccircumflex" xMin="130" yMin="-24" xMax="1329" yMax="1740">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="458" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          61
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Cedilla" xMin="96" yMin="-529" xMax="508" yMax="24">
      <contour>
        <pt x="246" y="-113" on="1"/>
        <pt x="362" y="-116" on="0"/>
        <pt x="508" y="-198" on="0"/>
        <pt x="508" y="-285" on="1"/>
        <pt x="508" y="-349" on="0"/>
        <pt x="420" y="-442" on="0"/>
        <pt x="294" y="-501" on="0"/>
        <pt x="151" y="-529" on="0"/>
        <pt x="96" y="-529" on="1"/>
        <pt x="96" y="-440" on="1"/>
        <pt x="165" y="-430" on="0"/>
        <pt x="252" y="-372" on="0"/>
        <pt x="250" y="-318" on="1"/>
        <pt x="248" y="-273" on="0"/>
        <pt x="184" y="-223" on="0"/>
        <pt x="103" y="-218" on="1"/>
        <pt x="178" y="24" on="1"/>
        <pt x="302" y="24" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 16 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 0 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Circumflex" xMin="141" yMin="1449" xMax="749" yMax="1740">
      <contour>
        <pt x="195" y="1449" on="1"/>
        <pt x="141" y="1503" on="1"/>
        <pt x="387" y="1730" on="1"/>
        <pt x="406" y="1740" on="0"/>
        <pt x="487" y="1740" on="0"/>
        <pt x="507" y="1730" on="1"/>
        <pt x="749" y="1509" on="1"/>
        <pt x="695" y="1451" on="1"/>
        <pt x="439" y="1559" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          191 0 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          63 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          64 0 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          112 0 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 4 31 4 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          8 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Commaaccent" xMin="116" yMin="-529" xMax="475" yMax="-79">
      <contour>
        <pt x="165" y="-447" on="1"/>
        <pt x="209" y="-436" on="0"/>
        <pt x="277" y="-375" on="0"/>
        <pt x="275" y="-333" on="1"/>
        <pt x="252" y="-312" on="0"/>
        <pt x="166" y="-277" on="0"/>
        <pt x="128" y="-269" on="1"/>
        <pt x="116" y="-238" on="0"/>
        <pt x="131" y="-172" on="0"/>
        <pt x="170" y="-120" on="0"/>
        <pt x="225" y="-83" on="0"/>
        <pt x="253" y="-79" on="1"/>
        <pt x="294" y="-81" on="0"/>
        <pt x="374" y="-105" on="0"/>
        <pt x="436" y="-151" on="0"/>
        <pt x="475" y="-220" on="0"/>
        <pt x="475" y="-269" on="1"/>
        <pt x="475" y="-370" on="0"/>
        <pt x="316" y="-512" on="0"/>
        <pt x="190" y="-529" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          48 19 64 19 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          112 19 128 19 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 19 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          11 20 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          0 11 16 11 32 11 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 19 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 11 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 9 values pushed */
          58 6 74 6 90 6 106 6 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="65" yMin="-17" xMax="1414" yMax="1371">
      <contour>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="74" on="1"/>
        <pt x="98" y="93" on="0"/>
        <pt x="178" y="122" on="0"/>
        <pt x="223" y="130" on="1"/>
        <pt x="223" y="1225" on="1"/>
        <pt x="178" y="1236" on="0"/>
        <pt x="96" y="1264" on="0"/>
        <pt x="65" y="1282" on="1"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="290" y="1356" on="1"/>
        <pt x="322" y="1356" on="0"/>
        <pt x="432" y="1361" on="0"/>
        <pt x="551" y="1366" on="0"/>
        <pt x="663" y="1371" on="0"/>
        <pt x="698" y="1371" on="1"/>
        <pt x="866" y="1371" on="0"/>
        <pt x="1132" y="1283" on="0"/>
        <pt x="1317" y="1112" on="0"/>
        <pt x="1414" y="859" on="0"/>
        <pt x="1414" y="695" on="1"/>
        <pt x="1414" y="534" on="0"/>
        <pt x="1322" y="271" on="0"/>
        <pt x="1135" y="85" on="0"/>
        <pt x="851" y="-17" on="0"/>
        <pt x="660" y="-17" on="1"/>
        <pt x="643" y="-17" on="0"/>
        <pt x="586" y="-14" on="0"/>
        <pt x="518" y="-11" on="0"/>
        <pt x="442" y="-6" on="0"/>
        <pt x="369" y="-3" on="0"/>
        <pt x="302" y="0" on="0"/>
        <pt x="277" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="659" y="1245" on="1"/>
        <pt x="641" y="1245" on="0"/>
        <pt x="597" y="1244" on="0"/>
        <pt x="553" y="1243" on="0"/>
        <pt x="514" y="1240" on="0"/>
        <pt x="502" y="1238" on="1"/>
        <pt x="502" y="116" on="1"/>
        <pt x="511" y="115" on="0"/>
        <pt x="555" y="112" on="0"/>
        <pt x="604" y="110" on="0"/>
        <pt x="649" y="109" on="0"/>
        <pt x="659" y="109" on="1"/>
        <pt x="780" y="109" on="0"/>
        <pt x="947" y="201" on="0"/>
        <pt x="1050" y="360" on="0"/>
        <pt x="1095" y="573" on="0"/>
        <pt x="1095" y="693" on="1"/>
        <pt x="1095" y="764" on="0"/>
        <pt x="1076" y="901" on="0"/>
        <pt x="1034" y="1024" on="0"/>
        <pt x="967" y="1127" on="0"/>
        <pt x="870" y="1203" on="0"/>
        <pt x="741" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dacute" xMin="65" yMin="-17" xMax="1414" yMax="1751">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="385" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dcaron" xMin="65" yMin="-17" xMax="1414" yMax="1757">
      <component glyphName="D" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="254" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dcroat" xMin="59" yMin="-17" xMax="1414" yMax="1371">
      <component glyphName="Eth" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Delta" xMin="40" yMin="0" xMax="1244" yMax="1356">
      <component glyphName="uni2206" x="16" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Dieresis" xMin="146" yMin="1481" xMax="936" yMax="1720">
      <contour>
        <pt x="146" y="1596" on="1"/>
        <pt x="146" y="1658" on="0"/>
        <pt x="235" y="1720" on="0"/>
        <pt x="303" y="1720" on="1"/>
        <pt x="370" y="1720" on="0"/>
        <pt x="460" y="1658" on="0"/>
        <pt x="460" y="1596" on="1"/>
        <pt x="460" y="1542" on="0"/>
        <pt x="370" y="1481" on="0"/>
        <pt x="303" y="1481" on="1"/>
        <pt x="235" y="1481" on="0"/>
        <pt x="146" y="1542" on="0"/>
      </contour>
      <contour>
        <pt x="621" y="1596" on="1"/>
        <pt x="621" y="1658" on="0"/>
        <pt x="712" y="1720" on="0"/>
        <pt x="780" y="1720" on="1"/>
        <pt x="847" y="1720" on="0"/>
        <pt x="936" y="1658" on="0"/>
        <pt x="936" y="1596" on="1"/>
        <pt x="936" y="1542" on="0"/>
        <pt x="847" y="1481" on="0"/>
        <pt x="780" y="1481" on="1"/>
        <pt x="712" y="1481" on="0"/>
        <pt x="621" y="1542" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          63 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          175 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          223 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          111 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          160 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          224 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 15
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="DieresisCyrBreve" xMin="116" yMin="1421" xMax="906" yMax="1954">
      <contour>
        <pt x="116" y="1532" on="1"/>
        <pt x="116" y="1591" on="0"/>
        <pt x="205" y="1650" on="0"/>
        <pt x="273" y="1650" on="1"/>
        <pt x="340" y="1650" on="0"/>
        <pt x="430" y="1591" on="0"/>
        <pt x="430" y="1532" on="1"/>
        <pt x="430" y="1476" on="0"/>
        <pt x="340" y="1421" on="0"/>
        <pt x="273" y="1421" on="1"/>
        <pt x="205" y="1421" on="0"/>
        <pt x="116" y="1476" on="0"/>
      </contour>
      <contour>
        <pt x="591" y="1532" on="1"/>
        <pt x="591" y="1591" on="0"/>
        <pt x="682" y="1650" on="0"/>
        <pt x="750" y="1650" on="1"/>
        <pt x="817" y="1650" on="0"/>
        <pt x="906" y="1591" on="0"/>
        <pt x="906" y="1532" on="1"/>
        <pt x="906" y="1476" on="0"/>
        <pt x="817" y="1421" on="0"/>
        <pt x="750" y="1421" on="1"/>
        <pt x="682" y="1421" on="0"/>
        <pt x="591" y="1476" on="0"/>
      </contour>
      <contour>
        <pt x="513" y="1676" on="1"/>
        <pt x="425" y="1676" on="0"/>
        <pt x="279" y="1704" on="0"/>
        <pt x="174" y="1764" on="0"/>
        <pt x="118" y="1853" on="0"/>
        <pt x="118" y="1911" on="1"/>
        <pt x="155" y="1933" on="0"/>
        <pt x="268" y="1952" on="0"/>
        <pt x="316" y="1954" on="1"/>
        <pt x="381" y="1920" on="1"/>
        <pt x="381" y="1789" on="1"/>
        <pt x="408" y="1776" on="0"/>
        <pt x="480" y="1764" on="0"/>
        <pt x="515" y="1764" on="1"/>
        <pt x="542" y="1764" on="0"/>
        <pt x="621" y="1774" on="0"/>
        <pt x="649" y="1783" on="1"/>
        <pt x="649" y="1920" on="1"/>
        <pt x="715" y="1954" on="1"/>
        <pt x="732" y="1954" on="0"/>
        <pt x="782" y="1948" on="0"/>
        <pt x="835" y="1938" on="0"/>
        <pt x="887" y="1923" on="0"/>
        <pt x="904" y="1911" on="1"/>
        <pt x="904" y="1795" on="0"/>
        <pt x="695" y="1676" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          24 50 51
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          63 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 15
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 17 values pushed */
          111 24 127 24 143 24 159 24 175 24 191 24 207 24 223 24 8
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 32 31 32 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 11 values pushed */
          144 32 160 32 176 32 192 32 208 32 5
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Dotaccent" xMin="133" yMin="1470" xMax="482" yMax="1723">
      <contour>
        <pt x="133" y="1596" on="1"/>
        <pt x="133" y="1658" on="0"/>
        <pt x="222" y="1723" on="0"/>
        <pt x="309" y="1723" on="1"/>
        <pt x="396" y="1723" on="0"/>
        <pt x="482" y="1658" on="0"/>
        <pt x="482" y="1596" on="1"/>
        <pt x="482" y="1536" on="0"/>
        <pt x="396" y="1470" on="0"/>
        <pt x="309" y="1470" on="1"/>
        <pt x="222" y="1470" on="0"/>
        <pt x="133" y="1536" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          111 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          223 9 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          79 9 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 5 values pushed */
          15 9 31 9 2
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 5 values pushed */
          159 9 175 9 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          47 9 63 9 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          160 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          224 9 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 33
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="100" yMin="0" xMax="1244" yMax="1356">
      <contour>
        <pt x="1215" y="1356" on="1"/>
        <pt x="1211" y="1268" on="0"/>
        <pt x="1192" y="1083" on="0"/>
        <pt x="1176" y="1001" on="1"/>
        <pt x="1096" y="1001" on="1"/>
        <pt x="1008" y="1229" on="1"/>
        <pt x="549" y="1229" on="1"/>
        <pt x="549" y="756" on="1"/>
        <pt x="877" y="756" on="1"/>
        <pt x="962" y="904" on="1"/>
        <pt x="1024" y="904" on="1"/>
        <pt x="1029" y="856" on="0"/>
        <pt x="1034" y="751" on="0"/>
        <pt x="1034" y="693" on="1"/>
        <pt x="1034" y="635" on="0"/>
        <pt x="1029" y="528" on="0"/>
        <pt x="1024" y="477" on="1"/>
        <pt x="962" y="477" on="1"/>
        <pt x="877" y="630" on="1"/>
        <pt x="549" y="630" on="1"/>
        <pt x="549" y="126" on="1"/>
        <pt x="1023" y="126" on="1"/>
        <pt x="1126" y="372" on="1"/>
        <pt x="1205" y="372" on="1"/>
        <pt x="1213" y="334" on="0"/>
        <pt x="1227" y="242" on="0"/>
        <pt x="1238" y="143" on="0"/>
        <pt x="1244" y="44" on="0"/>
        <pt x="1244" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="74" on="1"/>
        <pt x="133" y="91" on="0"/>
        <pt x="214" y="122" on="0"/>
        <pt x="259" y="130" on="1"/>
        <pt x="259" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="133" y="1262" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          6 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 5 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          7 38 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 7 31 7 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          9 7 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          18 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 18 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 20 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eacute" xMin="100" yMin="0" xMax="1244" yMax="1751">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="421" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          46
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ecaron" xMin="100" yMin="0" xMax="1244" yMax="1757">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="288" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ecircumflex" xMin="100" yMin="0" xMax="1244" yMax="1740">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="263" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Edieresis" xMin="100" yMin="0" xMax="1244" yMax="1720">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="165" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Edotaccent" xMin="100" yMin="0" xMax="1244" yMax="1723">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="417" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Egrave" xMin="100" yMin="0" xMax="1244" yMax="1755">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Grave" x="288" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Emacron" xMin="100" yMin="0" xMax="1244" yMax="1654">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="269" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eogonek" xMin="100" yMin="-494" xMax="1244" yMax="1356">
      <contour>
        <pt x="1215" y="1356" on="1"/>
        <pt x="1211" y="1268" on="0"/>
        <pt x="1192" y="1083" on="0"/>
        <pt x="1176" y="1001" on="1"/>
        <pt x="1096" y="1001" on="1"/>
        <pt x="1008" y="1229" on="1"/>
        <pt x="549" y="1229" on="1"/>
        <pt x="549" y="756" on="1"/>
        <pt x="877" y="756" on="1"/>
        <pt x="962" y="904" on="1"/>
        <pt x="1024" y="904" on="1"/>
        <pt x="1029" y="856" on="0"/>
        <pt x="1034" y="751" on="0"/>
        <pt x="1034" y="693" on="1"/>
        <pt x="1034" y="635" on="0"/>
        <pt x="1029" y="528" on="0"/>
        <pt x="1024" y="477" on="1"/>
        <pt x="962" y="477" on="1"/>
        <pt x="877" y="630" on="1"/>
        <pt x="549" y="630" on="1"/>
        <pt x="549" y="126" on="1"/>
        <pt x="1023" y="126" on="1"/>
        <pt x="1126" y="372" on="1"/>
        <pt x="1205" y="372" on="1"/>
        <pt x="1213" y="334" on="0"/>
        <pt x="1227" y="242" on="0"/>
        <pt x="1238" y="143" on="0"/>
        <pt x="1244" y="44" on="0"/>
        <pt x="1244" y="0" on="1"/>
        <pt x="1164" y="0" on="1"/>
        <pt x="1089" y="-54" on="0"/>
        <pt x="1047" y="-127" on="1"/>
        <pt x="1005" y="-201" on="0"/>
        <pt x="1005" y="-261" on="1"/>
        <pt x="1005" y="-312" on="0"/>
        <pt x="1068" y="-366" on="0"/>
        <pt x="1110" y="-366" on="1"/>
        <pt x="1133" y="-366" on="0"/>
        <pt x="1176" y="-362" on="0"/>
        <pt x="1199" y="-356" on="1"/>
        <pt x="1199" y="-440" on="1"/>
        <pt x="1172" y="-461" on="0"/>
        <pt x="1068" y="-494" on="0"/>
        <pt x="1005" y="-494" on="1"/>
        <pt x="887" y="-494" on="0"/>
        <pt x="823" y="-439" on="1"/>
        <pt x="760" y="-384" on="0"/>
        <pt x="760" y="-304" on="1"/>
        <pt x="760" y="-198" on="0"/>
        <pt x="837" y="-127" on="1"/>
        <pt x="876" y="-92" on="0"/>
        <pt x="975" y="-28" on="0"/>
        <pt x="1035" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="74" on="1"/>
        <pt x="133" y="91" on="0"/>
        <pt x="214" y="122" on="0"/>
        <pt x="259" y="130" on="1"/>
        <pt x="259" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="133" y="1262" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          46 63 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            62
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            62 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          62
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 5 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          7 62 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 7 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 7 31 7 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          9 7 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          18 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 18 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 20 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          62
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          61 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Eth" xMin="59" yMin="-17" xMax="1414" yMax="1371">
      <contour>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="74" on="1"/>
        <pt x="98" y="93" on="0"/>
        <pt x="178" y="122" on="0"/>
        <pt x="223" y="130" on="1"/>
        <pt x="223" y="637" on="1"/>
        <pt x="59" y="637" on="1"/>
        <pt x="59" y="754" on="1"/>
        <pt x="223" y="754" on="1"/>
        <pt x="223" y="1225" on="1"/>
        <pt x="178" y="1236" on="0"/>
        <pt x="96" y="1264" on="0"/>
        <pt x="65" y="1282" on="1"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="290" y="1356" on="1"/>
        <pt x="322" y="1356" on="0"/>
        <pt x="432" y="1361" on="0"/>
        <pt x="551" y="1366" on="0"/>
        <pt x="663" y="1371" on="0"/>
        <pt x="698" y="1371" on="1"/>
        <pt x="866" y="1371" on="0"/>
        <pt x="1132" y="1283" on="0"/>
        <pt x="1317" y="1112" on="0"/>
        <pt x="1414" y="859" on="0"/>
        <pt x="1414" y="695" on="1"/>
        <pt x="1414" y="534" on="0"/>
        <pt x="1322" y="271" on="0"/>
        <pt x="1135" y="85" on="0"/>
        <pt x="851" y="-17" on="0"/>
        <pt x="660" y="-17" on="1"/>
        <pt x="643" y="-17" on="0"/>
        <pt x="586" y="-14" on="0"/>
        <pt x="518" y="-11" on="0"/>
        <pt x="442" y="-6" on="0"/>
        <pt x="369" y="-3" on="0"/>
        <pt x="302" y="0" on="0"/>
        <pt x="277" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="659" y="1245" on="1"/>
        <pt x="641" y="1245" on="0"/>
        <pt x="597" y="1244" on="0"/>
        <pt x="553" y="1243" on="0"/>
        <pt x="514" y="1240" on="0"/>
        <pt x="502" y="1238" on="1"/>
        <pt x="502" y="754" on="1"/>
        <pt x="798" y="754" on="1"/>
        <pt x="798" y="637" on="1"/>
        <pt x="502" y="637" on="1"/>
        <pt x="502" y="116" on="1"/>
        <pt x="511" y="115" on="0"/>
        <pt x="555" y="112" on="0"/>
        <pt x="604" y="110" on="0"/>
        <pt x="649" y="109" on="0"/>
        <pt x="659" y="109" on="1"/>
        <pt x="780" y="109" on="0"/>
        <pt x="947" y="201" on="0"/>
        <pt x="1050" y="360" on="0"/>
        <pt x="1095" y="573" on="0"/>
        <pt x="1095" y="693" on="1"/>
        <pt x="1095" y="764" on="0"/>
        <pt x="1076" y="901" on="0"/>
        <pt x="1034" y="1024" on="0"/>
        <pt x="967" y="1127" on="0"/>
        <pt x="870" y="1203" on="0"/>
        <pt x="741" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 13 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          52 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Euro" xMin="-61" yMin="-24" xMax="984" yMax="1379">
      <contour>
        <pt x="-28" y="868" on="1"/>
        <pt x="92" y="868" on="1"/>
        <pt x="109" y="989" on="0"/>
        <pt x="195" y="1179" on="0"/>
        <pt x="329" y="1310" on="0"/>
        <pt x="509" y="1379" on="0"/>
        <pt x="621" y="1379" on="1"/>
        <pt x="685" y="1379" on="0"/>
        <pt x="789" y="1369" on="0"/>
        <pt x="874" y="1351" on="0"/>
        <pt x="946" y="1326" on="0"/>
        <pt x="979" y="1311" on="1"/>
        <pt x="979" y="1280" on="0"/>
        <pt x="970" y="1183" on="0"/>
        <pt x="957" y="1077" on="0"/>
        <pt x="940" y="975" on="0"/>
        <pt x="932" y="939" on="1"/>
        <pt x="853" y="939" on="1"/>
        <pt x="744" y="1232" on="1"/>
        <pt x="727" y="1238" on="0"/>
        <pt x="675" y="1253" on="0"/>
        <pt x="636" y="1253" on="1"/>
        <pt x="580" y="1253" on="0"/>
        <pt x="491" y="1197" on="0"/>
        <pt x="427" y="1095" on="0"/>
        <pt x="387" y="953" on="0"/>
        <pt x="380" y="868" on="1"/>
        <pt x="754" y="868" on="1"/>
        <pt x="722" y="738" on="1"/>
        <pt x="368" y="738" on="1"/>
        <pt x="367" y="701" on="0"/>
        <pt x="368" y="632" on="0"/>
        <pt x="370" y="616" on="1"/>
        <pt x="691" y="616" on="1"/>
        <pt x="658" y="486" on="1"/>
        <pt x="382" y="486" on="1"/>
        <pt x="390" y="402" on="0"/>
        <pt x="427" y="261" on="0"/>
        <pt x="491" y="160" on="0"/>
        <pt x="586" y="103" on="0"/>
        <pt x="651" y="103" on="1"/>
        <pt x="699" y="103" on="0"/>
        <pt x="759" y="127" on="0"/>
        <pt x="775" y="135" on="1"/>
        <pt x="869" y="407" on="1"/>
        <pt x="950" y="407" on="1"/>
        <pt x="958" y="375" on="0"/>
        <pt x="970" y="287" on="0"/>
        <pt x="979" y="190" on="0"/>
        <pt x="984" y="93" on="0"/>
        <pt x="984" y="54" on="1"/>
        <pt x="952" y="34" on="0"/>
        <pt x="865" y="5" on="0"/>
        <pt x="766" y="-15" on="0"/>
        <pt x="661" y="-24" on="0"/>
        <pt x="613" y="-24" on="1"/>
        <pt x="477" y="-24" on="0"/>
        <pt x="289" y="58" on="0"/>
        <pt x="169" y="197" on="0"/>
        <pt x="107" y="382" on="0"/>
        <pt x="96" y="486" on="1"/>
        <pt x="-61" y="486" on="1"/>
        <pt x="-28" y="616" on="1"/>
        <pt x="80" y="616" on="1"/>
        <pt x="78" y="635" on="0"/>
        <pt x="78" y="658" on="0"/>
        <pt x="78" y="679" on="1"/>
        <pt x="78" y="689" on="0"/>
        <pt x="79" y="727" on="0"/>
        <pt x="80" y="738" on="1"/>
        <pt x="-61" y="738" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 71 72
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          26 6 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 26 31 26 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 21 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 26
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          32 26 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          0 32 16 32 32 32 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          34 26
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 40 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ezhcarel" xMin="52" yMin="-24" xMax="1019" yMax="1379">
      <component glyphName="afii10025" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="Ezhcarelcaron" xMin="52" yMin="-24" xMax="1019" yMax="1757">
      <component glyphName="afii10025" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="66" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="95" yMin="0" xMax="1181" yMax="1356">
      <contour>
        <pt x="525" y="130" on="1"/>
        <pt x="612" y="118" on="0"/>
        <pt x="693" y="74" on="1"/>
        <pt x="693" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="95" y="74" on="1"/>
        <pt x="126" y="91" on="0"/>
        <pt x="195" y="120" on="0"/>
        <pt x="234" y="130" on="1"/>
        <pt x="234" y="1225" on="1"/>
        <pt x="189" y="1236" on="0"/>
        <pt x="122" y="1266" on="0"/>
        <pt x="95" y="1282" on="1"/>
        <pt x="95" y="1356" on="1"/>
        <pt x="1181" y="1356" on="1"/>
        <pt x="1181" y="1317" on="0"/>
        <pt x="1175" y="1225" on="0"/>
        <pt x="1164" y="1130" on="0"/>
        <pt x="1150" y="1039" on="0"/>
        <pt x="1142" y="1001" on="1"/>
        <pt x="1062" y="1001" on="1"/>
        <pt x="973" y="1229" on="1"/>
        <pt x="525" y="1229" on="1"/>
        <pt x="525" y="721" on="1"/>
        <pt x="874" y="721" on="1"/>
        <pt x="950" y="854" on="1"/>
        <pt x="1010" y="854" on="1"/>
        <pt x="1024" y="756" on="0"/>
        <pt x="1022" y="651" on="1"/>
        <pt x="1020" y="547" on="0"/>
        <pt x="1010" y="459" on="1"/>
        <pt x="950" y="459" on="1"/>
        <pt x="874" y="595" on="1"/>
        <pt x="525" y="595" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 21 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          23 13 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          207 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          95 23 111 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          47 23 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          159 23 175 23 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 23 31 23 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          63 23 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          25 23 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          32 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 32 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Facute" xMin="95" yMin="0" xMax="1181" yMax="1751">
      <component glyphName="F" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="394" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="130" yMin="-24" xMax="1507" yMax="1379">
      <contour>
        <pt x="1387" y="85" on="1"/>
        <pt x="1353" y="64" on="0"/>
        <pt x="1239" y="25" on="0"/>
        <pt x="1111" y="-6" on="0"/>
        <pt x="982" y="-24" on="0"/>
        <pt x="933" y="-24" on="1"/>
        <pt x="722" y="-24" on="0"/>
        <pt x="405" y="77" on="0"/>
        <pt x="299" y="191" on="1"/>
        <pt x="218" y="279" on="0"/>
        <pt x="130" y="526" on="0"/>
        <pt x="130" y="678" on="1"/>
        <pt x="130" y="758" on="0"/>
        <pt x="164" y="909" on="0"/>
        <pt x="224" y="1042" on="0"/>
        <pt x="305" y="1154" on="0"/>
        <pt x="352" y="1196" on="1"/>
        <pt x="407" y="1245" on="0"/>
        <pt x="531" y="1315" on="0"/>
        <pt x="664" y="1358" on="0"/>
        <pt x="803" y="1379" on="0"/>
        <pt x="872" y="1379" on="1"/>
        <pt x="904" y="1379" on="0"/>
        <pt x="981" y="1375" on="0"/>
        <pt x="1060" y="1369" on="0"/>
        <pt x="1134" y="1360" on="0"/>
        <pt x="1162" y="1356" on="1"/>
        <pt x="1218" y="1348" on="0"/>
        <pt x="1324" y="1324" on="0"/>
        <pt x="1356" y="1311" on="1"/>
        <pt x="1355" y="1282" on="0"/>
        <pt x="1348" y="1191" on="0"/>
        <pt x="1336" y="1087" on="0"/>
        <pt x="1319" y="981" on="0"/>
        <pt x="1310" y="939" on="1"/>
        <pt x="1230" y="939" on="1"/>
        <pt x="1122" y="1230" on="1"/>
        <pt x="1082" y="1241" on="0"/>
        <pt x="983" y="1253" on="0"/>
        <pt x="919" y="1253" on="1"/>
        <pt x="873" y="1253" on="0"/>
        <pt x="775" y="1233" on="0"/>
        <pt x="681" y="1191" on="0"/>
        <pt x="597" y="1126" on="0"/>
        <pt x="564" y="1080" on="1"/>
        <pt x="515" y="1011" on="0"/>
        <pt x="451" y="808" on="0"/>
        <pt x="451" y="673" on="1"/>
        <pt x="451" y="558" on="0"/>
        <pt x="508" y="359" on="0"/>
        <pt x="558" y="289" on="1"/>
        <pt x="598" y="233" on="0"/>
        <pt x="688" y="161" on="0"/>
        <pt x="786" y="119" on="0"/>
        <pt x="887" y="103" on="0"/>
        <pt x="937" y="103" on="1"/>
        <pt x="997" y="103" on="0"/>
        <pt x="1111" y="129" on="0"/>
        <pt x="1157" y="155" on="1"/>
        <pt x="1157" y="519" on="1"/>
        <pt x="1106" y="523" on="0"/>
        <pt x="1017" y="554" on="0"/>
        <pt x="978" y="575" on="1"/>
        <pt x="978" y="649" on="1"/>
        <pt x="1507" y="649" on="1"/>
        <pt x="1507" y="575" on="1"/>
        <pt x="1489" y="558" on="0"/>
        <pt x="1432" y="529" on="0"/>
        <pt x="1387" y="519" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 21 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 21 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          62 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          65
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gbreve" xMin="130" yMin="-24" xMax="1507" yMax="1757">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="Breve" x="453" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          77
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gcircumflex" xMin="130" yMin="-24" xMax="1507" yMax="1740">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="474" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Gcommaaccent" xMin="130" yMin="-529" xMax="1507" yMax="1379">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="608" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Germandbls" xMin="98" yMin="-24" xMax="1472" yMax="1379">
      <contour>
        <pt x="1063" y="1079" on="1"/>
        <pt x="1051" y="1126" on="0"/>
        <pt x="1003" y="1192" on="0"/>
        <pt x="933" y="1234" on="0"/>
        <pt x="843" y="1253" on="0"/>
        <pt x="790" y="1253" on="1"/>
        <pt x="744" y="1253" on="0"/>
        <pt x="647" y="1233" on="0"/>
        <pt x="567" y="1175" on="0"/>
        <pt x="516" y="1069" on="0"/>
        <pt x="516" y="983" on="1"/>
        <pt x="516" y="0" on="1"/>
        <pt x="98" y="0" on="1"/>
        <pt x="98" y="81" on="1"/>
        <pt x="123" y="98" on="0"/>
        <pt x="193" y="131" on="0"/>
        <pt x="226" y="137" on="1"/>
        <pt x="226" y="926" on="1"/>
        <pt x="226" y="1059" on="0"/>
        <pt x="319" y="1234" on="0"/>
        <pt x="476" y="1337" on="0"/>
        <pt x="682" y="1379" on="0"/>
        <pt x="794" y="1379" on="1"/>
        <pt x="875" y="1379" on="0"/>
        <pt x="1043" y="1358" on="0"/>
        <pt x="1191" y="1298" on="0"/>
        <pt x="1308" y="1192" on="0"/>
        <pt x="1338" y="1107" on="1"/>
        <pt x="981" y="809" on="1"/>
        <pt x="1035" y="800" on="0"/>
        <pt x="1151" y="764" on="0"/>
        <pt x="1260" y="709" on="0"/>
        <pt x="1357" y="635" on="0"/>
        <pt x="1430" y="542" on="0"/>
        <pt x="1472" y="427" on="0"/>
        <pt x="1472" y="360" on="1"/>
        <pt x="1472" y="270" on="0"/>
        <pt x="1404" y="127" on="0"/>
        <pt x="1288" y="28" on="0"/>
        <pt x="1137" y="-24" on="0"/>
        <pt x="1053" y="-24" on="1"/>
        <pt x="959" y="-24" on="0"/>
        <pt x="773" y="15" on="0"/>
        <pt x="698" y="50" on="1"/>
        <pt x="703" y="110" on="0"/>
        <pt x="735" y="215" on="0"/>
        <pt x="755" y="248" on="1"/>
        <pt x="820" y="248" on="1"/>
        <pt x="947" y="116" on="1"/>
        <pt x="967" y="107" on="0"/>
        <pt x="1008" y="103" on="0"/>
        <pt x="1032" y="103" on="1"/>
        <pt x="1095" y="103" on="0"/>
        <pt x="1143" y="157" on="1"/>
        <pt x="1191" y="211" on="0"/>
        <pt x="1191" y="298" on="1"/>
        <pt x="1191" y="357" on="0"/>
        <pt x="1148" y="477" on="0"/>
        <pt x="1046" y="576" on="0"/>
        <pt x="877" y="645" on="0"/>
        <pt x="752" y="654" on="1"/>
        <pt x="752" y="763" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          60 62 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          28 22 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          47 51 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          61 28 60
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Grave" xMin="116" yMin="1453" xMax="639" yMax="1755">
      <contour>
        <pt x="639" y="1490" on="1"/>
        <pt x="573" y="1453" on="1"/>
        <pt x="116" y="1638" on="1"/>
        <pt x="116" y="1677" on="1"/>
        <pt x="122" y="1695" on="0"/>
        <pt x="194" y="1723" on="0"/>
        <pt x="285" y="1745" on="0"/>
        <pt x="372" y="1755" on="0"/>
        <pt x="393" y="1749" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 1 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          64 1 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          112 1 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 8 31 8 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="70" yMin="0" xMax="1523" yMax="1356">
      <contour>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="183" y="1234" on="0"/>
        <pt x="98" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1074" y="757" on="1"/>
        <pt x="1074" y="1225" on="1"/>
        <pt x="1031" y="1234" on="0"/>
        <pt x="963" y="1264" on="0"/>
        <pt x="936" y="1282" on="1"/>
        <pt x="936" y="1356" on="1"/>
        <pt x="1523" y="1356" on="1"/>
        <pt x="1523" y="1282" on="1"/>
        <pt x="1490" y="1260" on="0"/>
        <pt x="1405" y="1234" on="0"/>
        <pt x="1364" y="1225" on="1"/>
        <pt x="1364" y="130" on="1"/>
        <pt x="1409" y="122" on="0"/>
        <pt x="1492" y="91" on="0"/>
        <pt x="1523" y="74" on="1"/>
        <pt x="1523" y="0" on="1"/>
        <pt x="936" y="0" on="1"/>
        <pt x="936" y="74" on="1"/>
        <pt x="965" y="91" on="0"/>
        <pt x="1035" y="122" on="0"/>
        <pt x="1074" y="130" on="1"/>
        <pt x="1074" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="657" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 44 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 16 31 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hacute" xMin="70" yMin="0" xMax="1523" yMax="1751">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="586" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hbar" xMin="70" yMin="0" xMax="1527" yMax="1356">
      <contour>
        <pt x="80" y="1086" on="1"/>
        <pt x="229" y="1086" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="183" y="1234" on="0"/>
        <pt x="98" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="1086" on="1"/>
        <pt x="1078" y="1086" on="1"/>
        <pt x="1078" y="1225" on="1"/>
        <pt x="1035" y="1234" on="0"/>
        <pt x="967" y="1264" on="0"/>
        <pt x="940" y="1282" on="1"/>
        <pt x="940" y="1356" on="1"/>
        <pt x="1527" y="1356" on="1"/>
        <pt x="1527" y="1282" on="1"/>
        <pt x="1494" y="1260" on="0"/>
        <pt x="1410" y="1234" on="0"/>
        <pt x="1368" y="1225" on="1"/>
        <pt x="1368" y="1086" on="1"/>
        <pt x="1517" y="1086" on="1"/>
        <pt x="1517" y="965" on="1"/>
        <pt x="1368" y="965" on="1"/>
        <pt x="1368" y="130" on="1"/>
        <pt x="1413" y="122" on="0"/>
        <pt x="1496" y="91" on="0"/>
        <pt x="1527" y="74" on="1"/>
        <pt x="1527" y="0" on="1"/>
        <pt x="940" y="0" on="1"/>
        <pt x="940" y="74" on="1"/>
        <pt x="969" y="91" on="0"/>
        <pt x="1039" y="122" on="0"/>
        <pt x="1078" y="130" on="1"/>
        <pt x="1078" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="657" y="74" on="1"/>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="965" on="1"/>
        <pt x="80" y="965" on="1"/>
      </contour>
      <contour>
        <pt x="1078" y="757" on="1"/>
        <pt x="1078" y="965" on="1"/>
        <pt x="519" y="965" on="1"/>
        <pt x="519" y="757" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          7 56 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          55 18 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          80 55 96 55 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          0 55 16 55 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          12 17 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          80 12 96 12 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hcircumflex" xMin="70" yMin="0" xMax="1523" yMax="1740">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="353" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hdesc" xMin="70" yMin="-316" xMax="1553" yMax="1356">
      <contour>
        <pt x="658" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="183" y="1234" on="0"/>
        <pt x="98" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="658" y="1356" on="1"/>
        <pt x="658" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1050" y="757" on="1"/>
        <pt x="1050" y="1225" on="1"/>
        <pt x="1007" y="1234" on="0"/>
        <pt x="939" y="1264" on="0"/>
        <pt x="912" y="1282" on="1"/>
        <pt x="912" y="1356" on="1"/>
        <pt x="1499" y="1356" on="1"/>
        <pt x="1499" y="1282" on="1"/>
        <pt x="1466" y="1260" on="0"/>
        <pt x="1381" y="1234" on="0"/>
        <pt x="1340" y="1225" on="1"/>
        <pt x="1340" y="126" on="1"/>
        <pt x="1553" y="126" on="1"/>
        <pt x="1551" y="76" on="0"/>
        <pt x="1542" y="-43" on="0"/>
        <pt x="1530" y="-163" on="0"/>
        <pt x="1512" y="-273" on="0"/>
        <pt x="1501" y="-316" on="1"/>
        <pt x="1425" y="-316" on="1"/>
        <pt x="1321" y="0" on="1"/>
        <pt x="912" y="0" on="1"/>
        <pt x="912" y="74" on="1"/>
        <pt x="941" y="91" on="0"/>
        <pt x="1011" y="122" on="0"/>
        <pt x="1050" y="130" on="1"/>
        <pt x="1050" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="658" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 48 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 16 31 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Hungarumlaut" xMin="136" yMin="1457" xMax="859" yMax="1732">
      <contour>
        <pt x="272" y="1730" on="1"/>
        <pt x="284" y="1732" on="0"/>
        <pt x="343" y="1722" on="0"/>
        <pt x="410" y="1706" on="0"/>
        <pt x="463" y="1686" on="0"/>
        <pt x="469" y="1675" on="1"/>
        <pt x="469" y="1649" on="1"/>
        <pt x="208" y="1461" on="1"/>
        <pt x="136" y="1505" on="1"/>
      </contour>
      <contour>
        <pt x="652" y="1730" on="1"/>
        <pt x="665" y="1732" on="0"/>
        <pt x="724" y="1722" on="0"/>
        <pt x="793" y="1705" on="0"/>
        <pt x="849" y="1681" on="0"/>
        <pt x="859" y="1670" on="1"/>
        <pt x="857" y="1651" on="1"/>
        <pt x="504" y="1457" on="1"/>
        <pt x="428" y="1501" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          17 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          160 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          15 0 31 0 47 0 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="96" yMin="0" xMax="700" yMax="1356">
      <contour>
        <pt x="700" y="0" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="96" y="74" on="1"/>
        <pt x="173" y="116" on="0"/>
        <pt x="253" y="130" on="1"/>
        <pt x="253" y="1225" on="1"/>
        <pt x="214" y="1232" on="0"/>
        <pt x="129" y="1262" on="0"/>
        <pt x="96" y="1282" on="1"/>
        <pt x="96" y="1356" on="1"/>
        <pt x="700" y="1356" on="1"/>
        <pt x="700" y="1282" on="1"/>
        <pt x="666" y="1260" on="0"/>
        <pt x="582" y="1232" on="0"/>
        <pt x="544" y="1225" on="1"/>
        <pt x="544" y="130" on="1"/>
        <pt x="582" y="122" on="0"/>
        <pt x="666" y="95" on="0"/>
        <pt x="700" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          4 19 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Iacute" xMin="96" yMin="0" xMax="700" yMax="1751">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="49" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Icircumflex" xMin="96" yMin="0" xMax="728" yMax="1740">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="-21" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Idieresis" xMin="4" yMin="0" xMax="794" yMax="1720">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="-142" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Idotaccent" xMin="96" yMin="0" xMax="700" yMax="1723">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="91" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Igrave" xMin="96" yMin="0" xMax="700" yMax="1755">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Grave" x="-19" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          20
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Imacron" xMin="86" yMin="0" xMax="713" yMax="1654">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="-55" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Iogonek" xMin="96" yMin="-494" xMax="700" yMax="1356">
      <contour>
        <pt x="700" y="0" on="1"/>
        <pt x="631" y="0" on="1"/>
        <pt x="555" y="-54" on="0"/>
        <pt x="513" y="-127" on="1"/>
        <pt x="472" y="-201" on="0"/>
        <pt x="472" y="-261" on="1"/>
        <pt x="472" y="-312" on="0"/>
        <pt x="531" y="-366" on="0"/>
        <pt x="576" y="-366" on="1"/>
        <pt x="600" y="-366" on="0"/>
        <pt x="642" y="-362" on="0"/>
        <pt x="666" y="-356" on="1"/>
        <pt x="666" y="-440" on="1"/>
        <pt x="652" y="-451" on="0"/>
        <pt x="611" y="-470" on="0"/>
        <pt x="560" y="-485" on="0"/>
        <pt x="501" y="-494" on="0"/>
        <pt x="470" y="-494" on="1"/>
        <pt x="351" y="-494" on="0"/>
        <pt x="289" y="-439" on="1"/>
        <pt x="226" y="-384" on="0"/>
        <pt x="226" y="-304" on="1"/>
        <pt x="226" y="-252" on="0"/>
        <pt x="266" y="-165" on="0"/>
        <pt x="339" y="-92" on="0"/>
        <pt x="439" y="-29" on="0"/>
        <pt x="499" y="0" on="1"/>
        <pt x="96" y="0" on="1"/>
        <pt x="96" y="74" on="1"/>
        <pt x="173" y="116" on="0"/>
        <pt x="253" y="130" on="1"/>
        <pt x="253" y="1225" on="1"/>
        <pt x="214" y="1232" on="0"/>
        <pt x="129" y="1262" on="0"/>
        <pt x="96" y="1282" on="1"/>
        <pt x="96" y="1356" on="1"/>
        <pt x="700" y="1356" on="1"/>
        <pt x="700" y="1282" on="1"/>
        <pt x="666" y="1260" on="0"/>
        <pt x="582" y="1232" on="0"/>
        <pt x="544" y="1225" on="1"/>
        <pt x="544" y="130" on="1"/>
        <pt x="582" y="122" on="0"/>
        <pt x="666" y="95" on="0"/>
        <pt x="700" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="193" yMin="-310" xMax="829" yMax="1356">
      <contour>
        <pt x="193" y="1356" on="1"/>
        <pt x="829" y="1356" on="1"/>
        <pt x="829" y="1282" on="1"/>
        <pt x="814" y="1272" on="0"/>
        <pt x="772" y="1255" on="0"/>
        <pt x="727" y="1240" on="0"/>
        <pt x="681" y="1228" on="0"/>
        <pt x="662" y="1225" on="1"/>
        <pt x="662" y="235" on="1"/>
        <pt x="662" y="155" on="0"/>
        <pt x="643" y="25" on="0"/>
        <pt x="619" y="-26" on="1"/>
        <pt x="596" y="-77" on="0"/>
        <pt x="534" y="-158" on="0"/>
        <pt x="502" y="-187" on="1"/>
        <pt x="486" y="-202" on="0"/>
        <pt x="447" y="-227" on="0"/>
        <pt x="406" y="-249" on="0"/>
        <pt x="367" y="-266" on="0"/>
        <pt x="350" y="-273" on="1"/>
        <pt x="316" y="-287" on="0"/>
        <pt x="261" y="-305" on="0"/>
        <pt x="239" y="-310" on="1"/>
        <pt x="203" y="-259" on="1"/>
        <pt x="242" y="-224" on="0"/>
        <pt x="305" y="-150" on="0"/>
        <pt x="348" y="-44" on="0"/>
        <pt x="371" y="109" on="0"/>
        <pt x="371" y="223" on="1"/>
        <pt x="371" y="1225" on="1"/>
        <pt x="351" y="1228" on="0"/>
        <pt x="303" y="1241" on="0"/>
        <pt x="254" y="1256" on="0"/>
        <pt x="209" y="1273" on="0"/>
        <pt x="193" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Jcircumflex" xMin="193" yMin="-310" xMax="829" yMax="1740">
      <component glyphName="J" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="64" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="70" yMin="0" xMax="1543" yMax="1356">
      <contour>
        <pt x="940" y="1356" on="1"/>
        <pt x="1459" y="1356" on="1"/>
        <pt x="1459" y="1282" on="1"/>
        <pt x="1426" y="1260" on="0"/>
        <pt x="1341" y="1232" on="0"/>
        <pt x="1306" y="1225" on="1"/>
        <pt x="875" y="753" on="1"/>
        <pt x="899" y="722" on="0"/>
        <pt x="982" y="626" on="0"/>
        <pt x="1084" y="510" on="0"/>
        <pt x="1198" y="384" on="0"/>
        <pt x="1310" y="265" on="0"/>
        <pt x="1411" y="159" on="0"/>
        <pt x="1450" y="122" on="1"/>
        <pt x="1543" y="66" on="1"/>
        <pt x="1543" y="0" on="1"/>
        <pt x="1207" y="0" on="1"/>
        <pt x="1129" y="54" on="1"/>
        <pt x="1093" y="93" on="0"/>
        <pt x="992" y="206" on="0"/>
        <pt x="872" y="352" on="0"/>
        <pt x="739" y="530" on="0"/>
        <pt x="670" y="635" on="1"/>
        <pt x="519" y="635" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="562" y="122" on="0"/>
        <pt x="632" y="91" on="0"/>
        <pt x="657" y="74" on="1"/>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="109" y="93" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="184" y="1232" on="0"/>
        <pt x="101" y="1262" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="632" y="1266" on="0"/>
        <pt x="561" y="1236" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="734" on="1"/>
        <pt x="702" y="761" on="1"/>
        <pt x="1082" y="1225" on="1"/>
        <pt x="1043" y="1234" on="0"/>
        <pt x="967" y="1266" on="0"/>
        <pt x="940" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 38 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          45 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 45 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Kcommaaccent" xMin="70" yMin="-529" xMax="1543" yMax="1356">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="494" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="L" xMin="95" yMin="0" xMax="1267" yMax="1356">
      <contour>
        <pt x="95" y="1356" on="1"/>
        <pt x="731" y="1356" on="1"/>
        <pt x="731" y="1282" on="1"/>
        <pt x="689" y="1260" on="0"/>
        <pt x="592" y="1232" on="0"/>
        <pt x="544" y="1225" on="1"/>
        <pt x="544" y="126" on="1"/>
        <pt x="1025" y="126" on="1"/>
        <pt x="1155" y="473" on="1"/>
        <pt x="1235" y="473" on="1"/>
        <pt x="1242" y="429" on="0"/>
        <pt x="1254" y="307" on="0"/>
        <pt x="1263" y="176" on="0"/>
        <pt x="1267" y="49" on="0"/>
        <pt x="1265" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="95" y="74" on="1"/>
        <pt x="140" y="96" on="0"/>
        <pt x="219" y="124" on="0"/>
        <pt x="254" y="130" on="1"/>
        <pt x="254" y="1225" on="1"/>
        <pt x="159" y="1241" on="0"/>
        <pt x="95" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 23 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lacute" xMin="95" yMin="0" xMax="1267" yMax="1751">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="185" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lacutecarel" xMin="95" yMin="0" xMax="1267" yMax="1356">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="661" y="-127" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            23 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lcaron" xMin="95" yMin="0" xMax="1267" yMax="1388">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="caron.L" x="218" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            29 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Lcommaaccent" xMin="95" yMin="-529" xMax="1267" yMax="1356">
      <component glyphName="L" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="416" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Lslash" xMin="95" yMin="0" xMax="1267" yMax="1356">
      <contour>
        <pt x="95" y="1356" on="1"/>
        <pt x="731" y="1356" on="1"/>
        <pt x="731" y="1282" on="1"/>
        <pt x="689" y="1260" on="0"/>
        <pt x="592" y="1232" on="0"/>
        <pt x="544" y="1225" on="1"/>
        <pt x="544" y="811" on="1"/>
        <pt x="767" y="949" on="1"/>
        <pt x="767" y="796" on="1"/>
        <pt x="544" y="658" on="1"/>
        <pt x="544" y="126" on="1"/>
        <pt x="1025" y="126" on="1"/>
        <pt x="1155" y="473" on="1"/>
        <pt x="1235" y="473" on="1"/>
        <pt x="1242" y="429" on="0"/>
        <pt x="1254" y="307" on="0"/>
        <pt x="1263" y="176" on="0"/>
        <pt x="1267" y="49" on="0"/>
        <pt x="1265" y="0" on="1"/>
        <pt x="95" y="0" on="1"/>
        <pt x="95" y="74" on="1"/>
        <pt x="140" y="96" on="0"/>
        <pt x="219" y="124" on="0"/>
        <pt x="254" y="130" on="1"/>
        <pt x="254" y="480" on="1"/>
        <pt x="95" y="384" on="1"/>
        <pt x="95" y="536" on="1"/>
        <pt x="254" y="634" on="1"/>
        <pt x="254" y="1225" on="1"/>
        <pt x="159" y="1241" on="0"/>
        <pt x="95" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          7 18 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          25 18 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          26 25 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 7 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          8 7 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          9 8 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 25 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          27 26 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="80" yMin="0" xMax="1853" yMax="1356">
      <contour>
        <pt x="1851" y="0" on="1"/>
        <pt x="1271" y="0" on="1"/>
        <pt x="1271" y="74" on="1"/>
        <pt x="1310" y="93" on="0"/>
        <pt x="1384" y="120" on="0"/>
        <pt x="1426" y="130" on="1"/>
        <pt x="1426" y="939" on="1"/>
        <pt x="1436" y="1166" on="1"/>
        <pt x="1421" y="1166" on="1"/>
        <pt x="1355" y="959" on="1"/>
        <pt x="958" y="0" on="1"/>
        <pt x="869" y="0" on="1"/>
        <pt x="473" y="951" on="1"/>
        <pt x="403" y="1177" on="1"/>
        <pt x="386" y="1177" on="1"/>
        <pt x="388" y="931" on="1"/>
        <pt x="388" y="137" on="1"/>
        <pt x="425" y="130" on="0"/>
        <pt x="514" y="95" on="0"/>
        <pt x="553" y="74" on="1"/>
        <pt x="553" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="74" on="1"/>
        <pt x="156" y="110" on="1"/>
        <pt x="204" y="132" on="0"/>
        <pt x="243" y="139" on="1"/>
        <pt x="243" y="1225" on="1"/>
        <pt x="204" y="1234" on="0"/>
        <pt x="117" y="1260" on="0"/>
        <pt x="84" y="1282" on="1"/>
        <pt x="84" y="1356" on="1"/>
        <pt x="609" y="1356" on="1"/>
        <pt x="929" y="567" on="1"/>
        <pt x="985" y="381" on="1"/>
        <pt x="987" y="381" on="1"/>
        <pt x="1046" y="571" on="1"/>
        <pt x="1372" y="1356" on="1"/>
        <pt x="1853" y="1356" on="1"/>
        <pt x="1853" y="1282" on="1"/>
        <pt x="1820" y="1262" on="0"/>
        <pt x="1744" y="1234" on="0"/>
        <pt x="1705" y="1225" on="1"/>
        <pt x="1705" y="128" on="1"/>
        <pt x="1747" y="120" on="0"/>
        <pt x="1822" y="89" on="0"/>
        <pt x="1851" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          10 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          7 0 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          13 30 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          33 0 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Macron" xMin="141" yMin="1518" xMax="768" yMax="1654">
      <contour>
        <pt x="141" y="1518" on="1"/>
        <pt x="141" y="1654" on="1"/>
        <pt x="768" y="1654" on="1"/>
        <pt x="768" y="1518" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          159 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          143 3 159 3 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          79 3 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          143 3 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          15 3 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          223 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          95 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          128 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          2 28
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Macute" xMin="80" yMin="0" xMax="1853" yMax="1751">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="740" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="44" yMin="-24" xMax="1434" yMax="1356">
      <contour>
        <pt x="954" y="1356" on="1"/>
        <pt x="1434" y="1356" on="1"/>
        <pt x="1434" y="1282" on="1"/>
        <pt x="1398" y="1253" on="0"/>
        <pt x="1308" y="1208" on="0"/>
        <pt x="1269" y="1197" on="1"/>
        <pt x="1269" y="-24" on="1"/>
        <pt x="1105" y="-24" on="1"/>
        <pt x="421" y="965" on="1"/>
        <pt x="344" y="1114" on="1"/>
        <pt x="338" y="1114" on="1"/>
        <pt x="356" y="959" on="1"/>
        <pt x="356" y="151" on="1"/>
        <pt x="395" y="142" on="0"/>
        <pt x="489" y="96" on="0"/>
        <pt x="522" y="74" on="1"/>
        <pt x="522" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="74" on="1"/>
        <pt x="79" y="96" on="0"/>
        <pt x="162" y="137" on="0"/>
        <pt x="206" y="151" on="1"/>
        <pt x="206" y="1208" on="1"/>
        <pt x="168" y="1224" on="0"/>
        <pt x="90" y="1262" on="0"/>
        <pt x="59" y="1284" on="1"/>
        <pt x="59" y="1356" on="1"/>
        <pt x="478" y="1356" on="1"/>
        <pt x="1033" y="550" on="1"/>
        <pt x="1123" y="384" on="1"/>
        <pt x="1130" y="384" on="1"/>
        <pt x="1121" y="550" on="1"/>
        <pt x="1121" y="1197" on="1"/>
        <pt x="1074" y="1212" on="0"/>
        <pt x="987" y="1257" on="0"/>
        <pt x="954" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          29 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Nacute" xMin="44" yMin="-24" xMax="1434" yMax="1751">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="529" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ncaron" xMin="44" yMin="-24" xMax="1434" yMax="1757">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="294" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ncommaaccent" xMin="44" yMin="-529" xMax="1434" yMax="1356">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="452" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ntilde" xMin="44" yMin="-24" xMax="1434" yMax="1706">
      <component glyphName="N" x="0" y="0" flags="0x204"/>
      <component glyphName="Tilde" x="277" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="88" yMin="-24" xMax="1505" yMax="1379">
      <contour>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="187" y="1086" on="0"/>
        <pt x="371" y="1274" on="0"/>
        <pt x="634" y="1379" on="0"/>
        <pt x="798" y="1379" on="1"/>
        <pt x="962" y="1379" on="0"/>
        <pt x="1224" y="1274" on="0"/>
        <pt x="1407" y="1086" on="0"/>
        <pt x="1505" y="829" on="0"/>
        <pt x="1505" y="678" on="1"/>
        <pt x="1505" y="526" on="0"/>
        <pt x="1407" y="269" on="0"/>
        <pt x="1224" y="81" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="798" y="-24" on="1"/>
        <pt x="634" y="-24" on="0"/>
        <pt x="372" y="81" on="0"/>
        <pt x="187" y="269" on="0"/>
        <pt x="88" y="526" on="0"/>
      </contour>
      <contour>
        <pt x="417" y="678" on="1"/>
        <pt x="417" y="553" on="0"/>
        <pt x="470" y="343" on="0"/>
        <pt x="571" y="189" on="0"/>
        <pt x="720" y="103" on="0"/>
        <pt x="816" y="103" on="1"/>
        <pt x="904" y="103" on="0"/>
        <pt x="1038" y="189" on="0"/>
        <pt x="1129" y="343" on="0"/>
        <pt x="1176" y="553" on="0"/>
        <pt x="1176" y="678" on="1"/>
        <pt x="1176" y="802" on="0"/>
        <pt x="1127" y="1013" on="0"/>
        <pt x="1028" y="1166" on="0"/>
        <pt x="881" y="1253" on="0"/>
        <pt x="783" y="1253" on="1"/>
        <pt x="688" y="1253" on="0"/>
        <pt x="550" y="1166" on="0"/>
        <pt x="460" y="1013" on="0"/>
        <pt x="417" y="802" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          25 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="OE" xMin="88" yMin="-24" xMax="1944" yMax="1379">
      <contour>
        <pt x="979" y="0" on="1"/>
        <pt x="957" y="-5" on="0"/>
        <pt x="902" y="-13" on="0"/>
        <pt x="844" y="-20" on="0"/>
        <pt x="786" y="-24" on="0"/>
        <pt x="762" y="-24" on="1"/>
        <pt x="602" y="-24" on="0"/>
        <pt x="352" y="73" on="0"/>
        <pt x="179" y="255" on="0"/>
        <pt x="88" y="515" on="0"/>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="179" y="1086" on="0"/>
        <pt x="352" y="1274" on="0"/>
        <pt x="602" y="1379" on="0"/>
        <pt x="762" y="1379" on="1"/>
        <pt x="811" y="1379" on="0"/>
        <pt x="921" y="1366" on="0"/>
        <pt x="977" y="1356" on="1"/>
        <pt x="1914" y="1356" on="1"/>
        <pt x="1910" y="1268" on="0"/>
        <pt x="1891" y="1083" on="0"/>
        <pt x="1875" y="1001" on="1"/>
        <pt x="1796" y="1001" on="1"/>
        <pt x="1707" y="1229" on="1"/>
        <pt x="1268" y="1229" on="1"/>
        <pt x="1268" y="756" on="1"/>
        <pt x="1581" y="756" on="1"/>
        <pt x="1666" y="904" on="1"/>
        <pt x="1729" y="904" on="1"/>
        <pt x="1738" y="809" on="0"/>
        <pt x="1738" y="693" on="1"/>
        <pt x="1738" y="577" on="0"/>
        <pt x="1729" y="477" on="1"/>
        <pt x="1666" y="477" on="1"/>
        <pt x="1581" y="630" on="1"/>
        <pt x="1268" y="630" on="1"/>
        <pt x="1268" y="126" on="1"/>
        <pt x="1723" y="126" on="1"/>
        <pt x="1825" y="372" on="1"/>
        <pt x="1905" y="372" on="1"/>
        <pt x="1913" y="335" on="0"/>
        <pt x="1928" y="242" on="0"/>
        <pt x="1938" y="143" on="0"/>
        <pt x="1944" y="44" on="0"/>
        <pt x="1943" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="794" y="103" on="1"/>
        <pt x="848" y="103" on="0"/>
        <pt x="935" y="127" on="0"/>
        <pt x="977" y="149" on="1"/>
        <pt x="977" y="1195" on="1"/>
        <pt x="933" y="1218" on="0"/>
        <pt x="827" y="1253" on="0"/>
        <pt x="761" y="1253" on="1"/>
        <pt x="671" y="1253" on="0"/>
        <pt x="541" y="1166" on="0"/>
        <pt x="457" y="1013" on="0"/>
        <pt x="417" y="802" on="0"/>
        <pt x="417" y="678" on="1"/>
        <pt x="417" y="546" on="0"/>
        <pt x="466" y="333" on="0"/>
        <pt x="562" y="184" on="0"/>
        <pt x="703" y="103" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          18 63 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          23 24 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          26 18 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 26 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 26 31 26 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          28 26 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          35 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 35 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          39 37 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          53 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Oacute" xMin="88" yMin="-24" xMax="1505" yMax="1751">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="507" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ocircumflex" xMin="88" yMin="-24" xMax="1505" yMax="1740">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="351" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Odieresis" xMin="88" yMin="-24" xMax="1505" yMax="1720">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="255" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ogonek" xMin="116" yMin="-494" xMax="589" yMax="39">
      <contour>
        <pt x="589" y="39" on="1"/>
        <pt x="536" y="13" on="0"/>
        <pt x="453" y="-58" on="0"/>
        <pt x="393" y="-139" on="0"/>
        <pt x="362" y="-225" on="0"/>
        <pt x="362" y="-261" on="1"/>
        <pt x="362" y="-312" on="0"/>
        <pt x="422" y="-366" on="0"/>
        <pt x="467" y="-366" on="1"/>
        <pt x="490" y="-366" on="0"/>
        <pt x="532" y="-362" on="0"/>
        <pt x="556" y="-356" on="1"/>
        <pt x="556" y="-440" on="1"/>
        <pt x="529" y="-461" on="0"/>
        <pt x="422" y="-494" on="0"/>
        <pt x="360" y="-494" on="1"/>
        <pt x="242" y="-494" on="0"/>
        <pt x="116" y="-384" on="0"/>
        <pt x="116" y="-304" on="1"/>
        <pt x="116" y="-242" on="0"/>
        <pt x="172" y="-146" on="0"/>
        <pt x="269" y="-64" on="0"/>
        <pt x="401" y="6" on="0"/>
        <pt x="478" y="39" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ograve" xMin="88" yMin="-24" xMax="1505" yMax="1755">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Grave" x="332" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ohungarumlaut" xMin="77" yMin="-24" xMax="1494" yMax="1732">
      <component glyphName="O" x="-11" y="0" flags="0x204"/>
      <component glyphName="Hungarumlaut" x="412" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          56
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Omacron" xMin="88" yMin="-24" xMax="1505" yMax="1654">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="342" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Omega" xMin="96" yMin="0" xMax="1544" yMax="1379">
      <contour>
        <pt x="96" y="0" on="1"/>
        <pt x="96" y="35" on="0"/>
        <pt x="103" y="151" on="0"/>
        <pt x="114" y="279" on="0"/>
        <pt x="128" y="403" on="0"/>
        <pt x="135" y="445" on="1"/>
        <pt x="201" y="445" on="1"/>
        <pt x="287" y="217" on="1"/>
        <pt x="612" y="217" on="1"/>
        <pt x="526" y="248" on="0"/>
        <pt x="364" y="348" on="0"/>
        <pt x="236" y="488" on="0"/>
        <pt x="159" y="670" on="0"/>
        <pt x="159" y="784" on="1"/>
        <pt x="159" y="923" on="0"/>
        <pt x="259" y="1144" on="0"/>
        <pt x="439" y="1297" on="0"/>
        <pt x="687" y="1379" on="0"/>
        <pt x="835" y="1379" on="1"/>
        <pt x="985" y="1379" on="0"/>
        <pt x="1227" y="1300" on="0"/>
        <pt x="1397" y="1150" on="0"/>
        <pt x="1488" y="933" on="0"/>
        <pt x="1488" y="794" on="1"/>
        <pt x="1488" y="713" on="0"/>
        <pt x="1449" y="575" on="0"/>
        <pt x="1383" y="459" on="0"/>
        <pt x="1295" y="364" on="0"/>
        <pt x="1197" y="290" on="0"/>
        <pt x="1094" y="235" on="0"/>
        <pt x="1046" y="217" on="1"/>
        <pt x="1352" y="217" on="1"/>
        <pt x="1439" y="445" on="1"/>
        <pt x="1506" y="445" on="1"/>
        <pt x="1511" y="415" on="0"/>
        <pt x="1521" y="339" on="0"/>
        <pt x="1530" y="254" on="0"/>
        <pt x="1537" y="168" on="0"/>
        <pt x="1542" y="89" on="0"/>
        <pt x="1544" y="22" on="0"/>
        <pt x="1544" y="0" on="1"/>
        <pt x="929" y="0" on="1"/>
        <pt x="929" y="231" on="1"/>
        <pt x="969" y="250" on="0"/>
        <pt x="1054" y="346" on="0"/>
        <pt x="1124" y="486" on="0"/>
        <pt x="1169" y="663" on="0"/>
        <pt x="1169" y="763" on="1"/>
        <pt x="1169" y="877" on="0"/>
        <pt x="1118" y="1055" on="0"/>
        <pt x="1076" y="1121" on="1"/>
        <pt x="993" y="1253" on="0"/>
        <pt x="835" y="1253" on="1"/>
        <pt x="740" y="1253" on="0"/>
        <pt x="605" y="1186" on="0"/>
        <pt x="519" y="1063" on="0"/>
        <pt x="478" y="890" on="0"/>
        <pt x="478" y="784" on="1"/>
        <pt x="478" y="680" on="0"/>
        <pt x="528" y="498" on="0"/>
        <pt x="604" y="352" on="0"/>
        <pt x="693" y="252" on="0"/>
        <pt x="732" y="231" on="1"/>
        <pt x="732" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          18 64 65
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            63
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            63 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 18 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          32 18 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          52 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Oslash" xMin="88" yMin="-49" xMax="1505" yMax="1429">
      <contour>
        <pt x="326" y="132" on="1"/>
        <pt x="211" y="227" on="0"/>
        <pt x="88" y="507" on="0"/>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="187" y="1086" on="0"/>
        <pt x="371" y="1274" on="0"/>
        <pt x="634" y="1379" on="0"/>
        <pt x="798" y="1379" on="1"/>
        <pt x="878" y="1379" on="0"/>
        <pt x="1021" y="1353" on="0"/>
        <pt x="1085" y="1329" on="1"/>
        <pt x="1147" y="1429" on="1"/>
        <pt x="1269" y="1354" on="1"/>
        <pt x="1214" y="1264" on="1"/>
        <pt x="1214" y="1263" on="1"/>
        <pt x="1283" y="1217" on="0"/>
        <pt x="1392" y="1094" on="0"/>
        <pt x="1466" y="945" on="0"/>
        <pt x="1505" y="772" on="0"/>
        <pt x="1505" y="678" on="1"/>
        <pt x="1505" y="526" on="0"/>
        <pt x="1407" y="269" on="0"/>
        <pt x="1224" y="81" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="798" y="-24" on="1"/>
        <pt x="696" y="-24" on="0"/>
        <pt x="519" y="17" on="0"/>
        <pt x="443" y="55" on="1"/>
        <pt x="377" y="-49" on="1"/>
        <pt x="259" y="27" on="1"/>
      </contour>
      <contour>
        <pt x="1176" y="678" on="1"/>
        <pt x="1176" y="795" on="0"/>
        <pt x="1133" y="993" on="0"/>
        <pt x="1089" y="1069" on="1"/>
        <pt x="551" y="225" on="1"/>
        <pt x="601" y="167" on="0"/>
        <pt x="733" y="103" on="0"/>
        <pt x="816" y="103" on="1"/>
        <pt x="904" y="103" on="0"/>
        <pt x="1038" y="189" on="0"/>
        <pt x="1129" y="343" on="0"/>
        <pt x="1176" y="553" on="0"/>
      </contour>
      <contour>
        <pt x="417" y="678" on="1"/>
        <pt x="417" y="587" on="0"/>
        <pt x="444" y="428" on="0"/>
        <pt x="471" y="361" on="1"/>
        <pt x="993" y="1183" on="1"/>
        <pt x="950" y="1217" on="0"/>
        <pt x="846" y="1253" on="0"/>
        <pt x="783" y="1253" on="1"/>
        <pt x="688" y="1253" on="0"/>
        <pt x="550" y="1166" on="0"/>
        <pt x="460" y="1013" on="0"/>
        <pt x="417" y="802" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            8
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            8 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Otilde" xMin="88" yMin="-24" xMax="1505" yMax="1706">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Tilde" x="320" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="65" yMin="0" xMax="1201" yMax="1371">
      <contour>
        <pt x="515" y="130" on="1"/>
        <pt x="567" y="122" on="0"/>
        <pt x="670" y="93" on="0"/>
        <pt x="710" y="74" on="1"/>
        <pt x="710" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="74" on="1"/>
        <pt x="102" y="95" on="0"/>
        <pt x="185" y="122" on="0"/>
        <pt x="224" y="130" on="1"/>
        <pt x="224" y="1225" on="1"/>
        <pt x="179" y="1234" on="0"/>
        <pt x="98" y="1262" on="0"/>
        <pt x="65" y="1282" on="1"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="309" y="1356" on="1"/>
        <pt x="348" y="1356" on="0"/>
        <pt x="436" y="1359" on="0"/>
        <pt x="486" y="1363" on="1"/>
        <pt x="537" y="1367" on="0"/>
        <pt x="628" y="1371" on="0"/>
        <pt x="670" y="1371" on="1"/>
        <pt x="773" y="1371" on="0"/>
        <pt x="964" y="1330" on="0"/>
        <pt x="1112" y="1234" on="0"/>
        <pt x="1201" y="1073" on="0"/>
        <pt x="1201" y="953" on="1"/>
        <pt x="1201" y="839" on="0"/>
        <pt x="1114" y="672" on="0"/>
        <pt x="968" y="564" on="0"/>
        <pt x="775" y="512" on="0"/>
        <pt x="670" y="512" on="1"/>
        <pt x="661" y="512" on="0"/>
        <pt x="617" y="512" on="0"/>
        <pt x="568" y="513" on="0"/>
        <pt x="524" y="515" on="0"/>
        <pt x="515" y="517" on="1"/>
      </contour>
      <contour>
        <pt x="620" y="1245" on="1"/>
        <pt x="581" y="1245" on="0"/>
        <pt x="536" y="1239" on="0"/>
        <pt x="515" y="1234" on="1"/>
        <pt x="515" y="645" on="1"/>
        <pt x="541" y="638" on="0"/>
        <pt x="597" y="637" on="0"/>
        <pt x="623" y="637" on="1"/>
        <pt x="674" y="637" on="0"/>
        <pt x="768" y="671" on="0"/>
        <pt x="840" y="745" on="0"/>
        <pt x="883" y="861" on="0"/>
        <pt x="883" y="943" on="1"/>
        <pt x="883" y="1021" on="0"/>
        <pt x="852" y="1144" on="0"/>
        <pt x="813" y="1182" on="1"/>
        <pt x="775" y="1220" on="0"/>
        <pt x="682" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          31 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 21 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="88" yMin="-407" xMax="1521" yMax="1379">
      <contour>
        <pt x="1521" y="-217" on="1"/>
        <pt x="1486" y="-253" on="0"/>
        <pt x="1407" y="-322" on="0"/>
        <pt x="1320" y="-375" on="0"/>
        <pt x="1224" y="-407" on="0"/>
        <pt x="1171" y="-407" on="1"/>
        <pt x="1126" y="-407" on="0"/>
        <pt x="1037" y="-389" on="0"/>
        <pt x="947" y="-360" on="0"/>
        <pt x="853" y="-321" on="0"/>
        <pt x="804" y="-300" on="1"/>
        <pt x="755" y="-279" on="0"/>
        <pt x="653" y="-239" on="0"/>
        <pt x="545" y="-203" on="0"/>
        <pt x="428" y="-175" on="0"/>
        <pt x="365" y="-166" on="1"/>
        <pt x="414" y="-81" on="1"/>
        <pt x="508" y="-64" on="0"/>
        <pt x="687" y="-82" on="0"/>
        <pt x="863" y="-123" on="0"/>
        <pt x="1039" y="-173" on="0"/>
        <pt x="1218" y="-203" on="0"/>
        <pt x="1404" y="-201" on="0"/>
        <pt x="1503" y="-168" on="1"/>
      </contour>
      <contour>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="187" y="1086" on="0"/>
        <pt x="371" y="1274" on="0"/>
        <pt x="634" y="1379" on="0"/>
        <pt x="798" y="1379" on="1"/>
        <pt x="962" y="1379" on="0"/>
        <pt x="1224" y="1274" on="0"/>
        <pt x="1407" y="1086" on="0"/>
        <pt x="1505" y="829" on="0"/>
        <pt x="1505" y="678" on="1"/>
        <pt x="1505" y="526" on="0"/>
        <pt x="1407" y="269" on="0"/>
        <pt x="1224" y="81" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="798" y="-24" on="1"/>
        <pt x="634" y="-24" on="0"/>
        <pt x="372" y="81" on="0"/>
        <pt x="187" y="269" on="0"/>
        <pt x="88" y="526" on="0"/>
      </contour>
      <contour>
        <pt x="417" y="678" on="1"/>
        <pt x="417" y="553" on="0"/>
        <pt x="470" y="343" on="0"/>
        <pt x="571" y="189" on="0"/>
        <pt x="720" y="103" on="0"/>
        <pt x="816" y="103" on="1"/>
        <pt x="904" y="103" on="0"/>
        <pt x="1038" y="189" on="0"/>
        <pt x="1129" y="343" on="0"/>
        <pt x="1176" y="553" on="0"/>
        <pt x="1176" y="678" on="1"/>
        <pt x="1176" y="802" on="0"/>
        <pt x="1127" y="1013" on="0"/>
        <pt x="1028" y="1166" on="0"/>
        <pt x="881" y="1253" on="0"/>
        <pt x="783" y="1253" on="1"/>
        <pt x="688" y="1253" on="0"/>
        <pt x="550" y="1166" on="0"/>
        <pt x="460" y="1013" on="0"/>
        <pt x="417" y="802" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          29 64 65
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 5 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 17 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          21 5 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="80" yMin="0" xMax="1429" yMax="1371">
      <contour>
        <pt x="530" y="130" on="1"/>
        <pt x="575" y="120" on="0"/>
        <pt x="644" y="89" on="0"/>
        <pt x="677" y="74" on="1"/>
        <pt x="677" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="74" on="1"/>
        <pt x="123" y="96" on="0"/>
        <pt x="200" y="122" on="0"/>
        <pt x="239" y="130" on="1"/>
        <pt x="239" y="1225" on="1"/>
        <pt x="141" y="1247" on="0"/>
        <pt x="80" y="1282" on="1"/>
        <pt x="80" y="1356" on="1"/>
        <pt x="286" y="1356" on="1"/>
        <pt x="324" y="1356" on="0"/>
        <pt x="430" y="1361" on="0"/>
        <pt x="548" y="1366" on="0"/>
        <pt x="668" y="1371" on="0"/>
        <pt x="720" y="1371" on="1"/>
        <pt x="827" y="1371" on="0"/>
        <pt x="1012" y="1323" on="0"/>
        <pt x="1147" y="1226" on="0"/>
        <pt x="1224" y="1080" on="0"/>
        <pt x="1224" y="983" on="1"/>
        <pt x="1224" y="914" on="0"/>
        <pt x="1183" y="800" on="0"/>
        <pt x="1110" y="711" on="0"/>
        <pt x="1010" y="644" on="0"/>
        <pt x="950" y="621" on="1"/>
        <pt x="989" y="560" on="0"/>
        <pt x="1086" y="427" on="0"/>
        <pt x="1190" y="297" on="0"/>
        <pt x="1292" y="177" on="0"/>
        <pt x="1336" y="128" on="1"/>
        <pt x="1429" y="66" on="1"/>
        <pt x="1429" y="0" on="1"/>
        <pt x="1106" y="0" on="1"/>
        <pt x="1022" y="64" on="1"/>
        <pt x="979" y="118" on="0"/>
        <pt x="892" y="238" on="0"/>
        <pt x="853" y="308" on="1"/>
        <pt x="834" y="342" on="0"/>
        <pt x="793" y="412" on="0"/>
        <pt x="754" y="483" on="0"/>
        <pt x="719" y="554" on="0"/>
        <pt x="706" y="587" on="1"/>
        <pt x="530" y="587" on="1"/>
      </contour>
      <contour>
        <pt x="650" y="1245" on="1"/>
        <pt x="635" y="1245" on="0"/>
        <pt x="600" y="1244" on="0"/>
        <pt x="567" y="1241" on="0"/>
        <pt x="539" y="1237" on="0"/>
        <pt x="530" y="1234" on="1"/>
        <pt x="530" y="693" on="1"/>
        <pt x="644" y="693" on="1"/>
        <pt x="668" y="693" on="0"/>
        <pt x="723" y="702" on="0"/>
        <pt x="776" y="720" on="0"/>
        <pt x="823" y="747" on="0"/>
        <pt x="841" y="765" on="1"/>
        <pt x="876" y="800" on="0"/>
        <pt x="922" y="904" on="0"/>
        <pt x="922" y="974" on="1"/>
        <pt x="922" y="1046" on="0"/>
        <pt x="877" y="1148" on="0"/>
        <pt x="802" y="1214" on="0"/>
        <pt x="704" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          54 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          29 46 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Racute" xMin="80" yMin="0" xMax="1429" yMax="1751">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="404" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Rcaron" xMin="80" yMin="0" xMax="1429" yMax="1757">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="223" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Rcommaaccent" xMin="80" yMin="-529" xMax="1429" yMax="1371">
      <component glyphName="R" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="467" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Ring" xMin="138" yMin="1424" xMax="641" yMax="1760">
      <contour>
        <pt x="138" y="1586" on="1"/>
        <pt x="138" y="1666" on="0"/>
        <pt x="277" y="1760" on="0"/>
        <pt x="396" y="1760" on="1"/>
        <pt x="447" y="1760" on="0"/>
        <pt x="535" y="1739" on="0"/>
        <pt x="603" y="1697" on="0"/>
        <pt x="641" y="1634" on="0"/>
        <pt x="641" y="1592" on="1"/>
        <pt x="641" y="1516" on="0"/>
        <pt x="504" y="1424" on="0"/>
        <pt x="394" y="1424" on="1"/>
        <pt x="270" y="1424" on="0"/>
        <pt x="138" y="1512" on="0"/>
      </contour>
      <contour>
        <pt x="299" y="1586" on="1"/>
        <pt x="299" y="1553" on="0"/>
        <pt x="357" y="1520" on="0"/>
        <pt x="386" y="1520" on="1"/>
        <pt x="430" y="1520" on="0"/>
        <pt x="481" y="1553" on="0"/>
        <pt x="481" y="1584" on="1"/>
        <pt x="481" y="1629" on="0"/>
        <pt x="429" y="1664" on="0"/>
        <pt x="392" y="1664" on="1"/>
        <pt x="351" y="1664" on="0"/>
        <pt x="299" y="1629" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          23 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 15 values pushed */
          15 3 31 3 47 3 63 3 79 3 95 3 111 3 7
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 17
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 17
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="106" yMin="-24" xMax="1034" yMax="1379">
      <contour>
        <pt x="330" y="161" on="1"/>
        <pt x="340" y="152" on="0"/>
        <pt x="376" y="132" on="0"/>
        <pt x="423" y="114" on="0"/>
        <pt x="476" y="103" on="0"/>
        <pt x="504" y="103" on="1"/>
        <pt x="558" y="103" on="0"/>
        <pt x="642" y="130" on="0"/>
        <pt x="677" y="158" on="1"/>
        <pt x="712" y="186" on="0"/>
        <pt x="744" y="262" on="0"/>
        <pt x="744" y="312" on="1"/>
        <pt x="744" y="385" on="0"/>
        <pt x="698" y="432" on="1"/>
        <pt x="652" y="480" on="0"/>
        <pt x="514" y="562" on="0"/>
        <pt x="433" y="601" on="1"/>
        <pt x="355" y="641" on="0"/>
        <pt x="284" y="695" on="1"/>
        <pt x="216" y="750" on="0"/>
        <pt x="169" y="824" on="1"/>
        <pt x="124" y="897" on="0"/>
        <pt x="124" y="1009" on="1"/>
        <pt x="124" y="1103" on="0"/>
        <pt x="195" y="1243" on="0"/>
        <pt x="319" y="1334" on="0"/>
        <pt x="486" y="1379" on="0"/>
        <pt x="583" y="1379" on="1"/>
        <pt x="703" y="1379" on="0"/>
        <pt x="905" y="1346" on="0"/>
        <pt x="986" y="1311" on="1"/>
        <pt x="984" y="1272" on="0"/>
        <pt x="974" y="1172" on="0"/>
        <pt x="959" y="1073" on="0"/>
        <pt x="942" y="985" on="0"/>
        <pt x="933" y="957" on="1"/>
        <pt x="854" y="957" on="1"/>
        <pt x="765" y="1222" on="1"/>
        <pt x="753" y="1228" on="0"/>
        <pt x="718" y="1239" on="0"/>
        <pt x="675" y="1248" on="0"/>
        <pt x="626" y="1253" on="0"/>
        <pt x="602" y="1253" on="1"/>
        <pt x="561" y="1253" on="0"/>
        <pt x="489" y="1232" on="0"/>
        <pt x="461" y="1210" on="1"/>
        <pt x="405" y="1168" on="0"/>
        <pt x="405" y="1086" on="1"/>
        <pt x="405" y="1012" on="0"/>
        <pt x="451" y="962" on="1"/>
        <pt x="499" y="911" on="0"/>
        <pt x="637" y="825" on="0"/>
        <pt x="719" y="783" on="1"/>
        <pt x="801" y="741" on="0"/>
        <pt x="872" y="687" on="1"/>
        <pt x="907" y="660" on="0"/>
        <pt x="966" y="598" on="0"/>
        <pt x="1010" y="524" on="0"/>
        <pt x="1034" y="435" on="0"/>
        <pt x="1034" y="381" on="1"/>
        <pt x="1034" y="285" on="0"/>
        <pt x="967" y="134" on="0"/>
        <pt x="835" y="30" on="0"/>
        <pt x="641" y="-24" on="0"/>
        <pt x="515" y="-24" on="1"/>
        <pt x="454" y="-24" on="0"/>
        <pt x="327" y="-5" on="0"/>
        <pt x="214" y="23" on="0"/>
        <pt x="127" y="55" on="0"/>
        <pt x="106" y="68" on="1"/>
        <pt x="109" y="113" on="0"/>
        <pt x="123" y="216" on="0"/>
        <pt x="141" y="318" on="0"/>
        <pt x="161" y="410" on="0"/>
        <pt x="171" y="445" on="1"/>
        <pt x="250" y="445" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            64 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          52 27 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 52 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 52 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          75 5 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Sacute" xMin="106" yMin="-24" xMax="1034" yMax="1751">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="333" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scaron" xMin="106" yMin="-24" xMax="1034" yMax="1757">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="161" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          80
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scedilla" xMin="106" yMin="-529" xMax="1034" yMax="1379">
      <contour>
        <pt x="330" y="161" on="1"/>
        <pt x="340" y="152" on="0"/>
        <pt x="376" y="132" on="0"/>
        <pt x="423" y="114" on="0"/>
        <pt x="476" y="103" on="0"/>
        <pt x="504" y="103" on="1"/>
        <pt x="558" y="103" on="0"/>
        <pt x="642" y="130" on="0"/>
        <pt x="677" y="158" on="1"/>
        <pt x="712" y="186" on="0"/>
        <pt x="744" y="262" on="0"/>
        <pt x="744" y="312" on="1"/>
        <pt x="744" y="385" on="0"/>
        <pt x="698" y="432" on="1"/>
        <pt x="652" y="480" on="0"/>
        <pt x="514" y="562" on="0"/>
        <pt x="433" y="601" on="1"/>
        <pt x="355" y="641" on="0"/>
        <pt x="284" y="695" on="1"/>
        <pt x="216" y="750" on="0"/>
        <pt x="169" y="824" on="1"/>
        <pt x="124" y="897" on="0"/>
        <pt x="124" y="1009" on="1"/>
        <pt x="124" y="1103" on="0"/>
        <pt x="195" y="1243" on="0"/>
        <pt x="319" y="1334" on="0"/>
        <pt x="486" y="1379" on="0"/>
        <pt x="583" y="1379" on="1"/>
        <pt x="703" y="1379" on="0"/>
        <pt x="905" y="1346" on="0"/>
        <pt x="986" y="1311" on="1"/>
        <pt x="984" y="1272" on="0"/>
        <pt x="974" y="1172" on="0"/>
        <pt x="959" y="1073" on="0"/>
        <pt x="942" y="985" on="0"/>
        <pt x="933" y="957" on="1"/>
        <pt x="854" y="957" on="1"/>
        <pt x="765" y="1222" on="1"/>
        <pt x="753" y="1228" on="0"/>
        <pt x="718" y="1239" on="0"/>
        <pt x="675" y="1248" on="0"/>
        <pt x="626" y="1253" on="0"/>
        <pt x="602" y="1253" on="1"/>
        <pt x="561" y="1253" on="0"/>
        <pt x="489" y="1232" on="0"/>
        <pt x="461" y="1210" on="1"/>
        <pt x="405" y="1168" on="0"/>
        <pt x="405" y="1086" on="1"/>
        <pt x="405" y="1012" on="0"/>
        <pt x="451" y="962" on="1"/>
        <pt x="499" y="911" on="0"/>
        <pt x="637" y="825" on="0"/>
        <pt x="719" y="783" on="1"/>
        <pt x="801" y="741" on="0"/>
        <pt x="872" y="687" on="1"/>
        <pt x="907" y="660" on="0"/>
        <pt x="966" y="598" on="0"/>
        <pt x="1010" y="524" on="0"/>
        <pt x="1034" y="435" on="0"/>
        <pt x="1034" y="381" on="1"/>
        <pt x="1034" y="199" on="0"/>
        <pt x="801" y="-8" on="0"/>
        <pt x="576" y="-22" on="1"/>
        <pt x="537" y="-113" on="1"/>
        <pt x="654" y="-116" on="0"/>
        <pt x="726" y="-158" on="1"/>
        <pt x="798" y="-200" on="0"/>
        <pt x="798" y="-285" on="1"/>
        <pt x="798" y="-328" on="0"/>
        <pt x="758" y="-398" on="0"/>
        <pt x="691" y="-452" on="0"/>
        <pt x="605" y="-491" on="0"/>
        <pt x="514" y="-517" on="0"/>
        <pt x="425" y="-529" on="0"/>
        <pt x="388" y="-529" on="1"/>
        <pt x="388" y="-440" on="1"/>
        <pt x="457" y="-430" on="0"/>
        <pt x="543" y="-372" on="0"/>
        <pt x="541" y="-318" on="1"/>
        <pt x="539" y="-273" on="0"/>
        <pt x="475" y="-223" on="0"/>
        <pt x="394" y="-218" on="1"/>
        <pt x="456" y="-22" on="1"/>
        <pt x="401" y="-18" on="0"/>
        <pt x="291" y="3" on="0"/>
        <pt x="197" y="28" on="0"/>
        <pt x="124" y="56" on="0"/>
        <pt x="106" y="68" on="1"/>
        <pt x="109" y="113" on="0"/>
        <pt x="123" y="216" on="0"/>
        <pt x="141" y="318" on="0"/>
        <pt x="161" y="410" on="0"/>
        <pt x="171" y="445" on="1"/>
        <pt x="250" y="445" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          62 94 95
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          74
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            82
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            82 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          52 27 82
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 52 82
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 42 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          82
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          63 82 74
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          74
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          75
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          63
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          81 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          93 5 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scircumflex" xMin="106" yMin="-24" xMax="1034" yMax="1740">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="155" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          76
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Scommaaccent" xMin="106" yMin="-529" xMax="1034" yMax="1379">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="252" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="T" xMin="65" yMin="0" xMax="1301" yMax="1356">
      <contour>
        <pt x="145" y="948" on="1"/>
        <pt x="137" y="974" on="0"/>
        <pt x="116" y="1048" on="0"/>
        <pt x="94" y="1148" on="0"/>
        <pt x="73" y="1276" on="0"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="1301" y="1356" on="1"/>
        <pt x="1284" y="1204" on="0"/>
        <pt x="1238" y="1001" on="0"/>
        <pt x="1221" y="948" on="1"/>
        <pt x="1139" y="948" on="1"/>
        <pt x="1122" y="992" on="0"/>
        <pt x="1090" y="1090" on="0"/>
        <pt x="1076" y="1132" on="1"/>
        <pt x="1060" y="1181" on="0"/>
        <pt x="1046" y="1229" on="1"/>
        <pt x="828" y="1229" on="1"/>
        <pt x="828" y="130" on="1"/>
        <pt x="879" y="120" on="0"/>
        <pt x="977" y="93" on="0"/>
        <pt x="1016" y="74" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="350" y="0" on="1"/>
        <pt x="350" y="74" on="1"/>
        <pt x="389" y="89" on="0"/>
        <pt x="486" y="122" on="0"/>
        <pt x="537" y="130" on="1"/>
        <pt x="537" y="1229" on="1"/>
        <pt x="320" y="1229" on="1"/>
        <pt x="306" y="1181" on="0"/>
        <pt x="290" y="1132" on="1"/>
        <pt x="276" y="1090" on="0"/>
        <pt x="244" y="992" on="0"/>
        <pt x="227" y="948" on="1"/>
        <pt x="145" y="948" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          26 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          33 27 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tacute" xMin="65" yMin="0" xMax="1301" yMax="1751">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="416" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tcaron" xMin="65" yMin="0" xMax="1301" yMax="1757">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="238" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tcedilla" xMin="65" yMin="-529" xMax="1301" yMax="1356">
      <contour>
        <pt x="145" y="948" on="1"/>
        <pt x="137" y="974" on="0"/>
        <pt x="116" y="1048" on="0"/>
        <pt x="94" y="1148" on="0"/>
        <pt x="73" y="1276" on="0"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="1301" y="1356" on="1"/>
        <pt x="1284" y="1204" on="0"/>
        <pt x="1238" y="1001" on="0"/>
        <pt x="1221" y="948" on="1"/>
        <pt x="1139" y="948" on="1"/>
        <pt x="1122" y="992" on="0"/>
        <pt x="1090" y="1090" on="0"/>
        <pt x="1076" y="1132" on="1"/>
        <pt x="1060" y="1181" on="0"/>
        <pt x="1046" y="1229" on="1"/>
        <pt x="828" y="1229" on="1"/>
        <pt x="828" y="130" on="1"/>
        <pt x="879" y="120" on="0"/>
        <pt x="977" y="93" on="0"/>
        <pt x="1016" y="74" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="738" y="0" on="1"/>
        <pt x="689" y="-113" on="1"/>
        <pt x="806" y="-116" on="0"/>
        <pt x="878" y="-158" on="1"/>
        <pt x="951" y="-200" on="0"/>
        <pt x="951" y="-285" on="1"/>
        <pt x="951" y="-348" on="0"/>
        <pt x="907" y="-395" on="1"/>
        <pt x="863" y="-442" on="0"/>
        <pt x="801" y="-471" on="1"/>
        <pt x="770" y="-486" on="0"/>
        <pt x="704" y="-508" on="0"/>
        <pt x="667" y="-515" on="1"/>
        <pt x="631" y="-522" on="0"/>
        <pt x="568" y="-529" on="0"/>
        <pt x="540" y="-529" on="1"/>
        <pt x="540" y="-440" on="1"/>
        <pt x="609" y="-430" on="0"/>
        <pt x="695" y="-372" on="0"/>
        <pt x="693" y="-318" on="1"/>
        <pt x="691" y="-273" on="0"/>
        <pt x="628" y="-223" on="0"/>
        <pt x="547" y="-218" on="1"/>
        <pt x="614" y="0" on="1"/>
        <pt x="350" y="0" on="1"/>
        <pt x="350" y="74" on="1"/>
        <pt x="389" y="89" on="0"/>
        <pt x="486" y="122" on="0"/>
        <pt x="537" y="130" on="1"/>
        <pt x="537" y="1229" on="1"/>
        <pt x="320" y="1229" on="1"/>
        <pt x="306" y="1181" on="0"/>
        <pt x="290" y="1132" on="1"/>
        <pt x="276" y="1090" on="0"/>
        <pt x="244" y="992" on="0"/>
        <pt x="227" y="948" on="1"/>
        <pt x="145" y="948" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          23 59 60
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 15 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          23 45 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tcommaaccent" xMin="65" yMin="-529" xMax="1301" yMax="1356">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
      <component glyphName="Commaaccent" x="397" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="Thorn" xMin="65" yMin="0" xMax="1206" yMax="1356">
      <contour>
        <pt x="514" y="122" on="1"/>
        <pt x="566" y="116" on="0"/>
        <pt x="668" y="83" on="0"/>
        <pt x="710" y="64" on="1"/>
        <pt x="710" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="64" on="1"/>
        <pt x="102" y="85" on="0"/>
        <pt x="185" y="113" on="0"/>
        <pt x="224" y="120" on="1"/>
        <pt x="224" y="1236" on="1"/>
        <pt x="185" y="1242" on="0"/>
        <pt x="100" y="1273" on="0"/>
        <pt x="67" y="1292" on="1"/>
        <pt x="67" y="1356" on="1"/>
        <pt x="671" y="1356" on="1"/>
        <pt x="671" y="1292" on="1"/>
        <pt x="636" y="1270" on="0"/>
        <pt x="553" y="1242" on="0"/>
        <pt x="514" y="1236" on="1"/>
        <pt x="514" y="1148" on="1"/>
        <pt x="553" y="1153" on="0"/>
        <pt x="639" y="1158" on="0"/>
        <pt x="676" y="1158" on="1"/>
        <pt x="773" y="1158" on="0"/>
        <pt x="952" y="1131" on="0"/>
        <pt x="1024" y="1089" on="1"/>
        <pt x="1063" y="1066" on="0"/>
        <pt x="1129" y="1002" on="0"/>
        <pt x="1178" y="919" on="0"/>
        <pt x="1206" y="817" on="0"/>
        <pt x="1206" y="757" on="1"/>
        <pt x="1206" y="650" on="0"/>
        <pt x="1117" y="490" on="0"/>
        <pt x="969" y="385" on="0"/>
        <pt x="774" y="333" on="0"/>
        <pt x="669" y="333" on="1"/>
        <pt x="660" y="333" on="0"/>
        <pt x="617" y="334" on="0"/>
        <pt x="568" y="335" on="0"/>
        <pt x="524" y="337" on="0"/>
        <pt x="514" y="339" on="1"/>
      </contour>
      <contour>
        <pt x="612" y="1033" on="1"/>
        <pt x="580" y="1033" on="0"/>
        <pt x="534" y="1026" on="0"/>
        <pt x="514" y="1020" on="1"/>
        <pt x="514" y="467" on="1"/>
        <pt x="540" y="463" on="0"/>
        <pt x="597" y="459" on="0"/>
        <pt x="623" y="459" on="1"/>
        <pt x="674" y="459" on="0"/>
        <pt x="769" y="492" on="0"/>
        <pt x="842" y="562" on="0"/>
        <pt x="886" y="671" on="0"/>
        <pt x="886" y="748" on="1"/>
        <pt x="886" y="820" on="0"/>
        <pt x="847" y="928" on="0"/>
        <pt x="775" y="998" on="0"/>
        <pt x="674" y="1033" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 59 60
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          23 14 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          49 14 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Tilde" xMin="142" yMin="1466" xMax="810" yMax="1706">
      <contour>
        <pt x="810" y="1592" on="1"/>
        <pt x="748" y="1531" on="0"/>
        <pt x="640" y="1466" on="0"/>
        <pt x="570" y="1466" on="1"/>
        <pt x="534" y="1466" on="0"/>
        <pt x="469" y="1488" on="0"/>
        <pt x="407" y="1511" on="0"/>
        <pt x="349" y="1532" on="0"/>
        <pt x="318" y="1532" on="1"/>
        <pt x="292" y="1532" on="0"/>
        <pt x="227" y="1511" on="0"/>
        <pt x="196" y="1484" on="1"/>
        <pt x="142" y="1575" on="1"/>
        <pt x="290" y="1706" on="0"/>
        <pt x="403" y="1706" on="1"/>
        <pt x="438" y="1706" on="0"/>
        <pt x="503" y="1687" on="0"/>
        <pt x="560" y="1664" on="0"/>
        <pt x="619" y="1645" on="0"/>
        <pt x="649" y="1645" on="1"/>
        <pt x="675" y="1645" on="0"/>
        <pt x="737" y="1662" on="0"/>
        <pt x="767" y="1683" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          160 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          64 3 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          15 14 31 14 47 14 63 14 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          191 14 207 14 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          79 14 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          224 14 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          8 3 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          11 14 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          19 14 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          22 3 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="55" yMin="-17" xMax="1429" yMax="1356">
      <contour>
        <pt x="55" y="1356" on="1"/>
        <pt x="652" y="1356" on="1"/>
        <pt x="652" y="1282" on="1"/>
        <pt x="587" y="1241" on="0"/>
        <pt x="504" y="1225" on="1"/>
        <pt x="504" y="480" on="1"/>
        <pt x="504" y="385" on="0"/>
        <pt x="550" y="257" on="0"/>
        <pt x="633" y="178" on="0"/>
        <pt x="750" y="144" on="0"/>
        <pt x="821" y="144" on="1"/>
        <pt x="885" y="144" on="0"/>
        <pt x="993" y="180" on="0"/>
        <pt x="1073" y="261" on="0"/>
        <pt x="1118" y="393" on="0"/>
        <pt x="1118" y="490" on="1"/>
        <pt x="1118" y="1216" on="1"/>
        <pt x="1073" y="1225" on="0"/>
        <pt x="979" y="1260" on="0"/>
        <pt x="948" y="1282" on="1"/>
        <pt x="948" y="1356" on="1"/>
        <pt x="1429" y="1356" on="1"/>
        <pt x="1429" y="1282" on="1"/>
        <pt x="1394" y="1257" on="0"/>
        <pt x="1308" y="1225" on="0"/>
        <pt x="1268" y="1216" on="1"/>
        <pt x="1268" y="488" on="1"/>
        <pt x="1268" y="364" on="0"/>
        <pt x="1200" y="175" on="0"/>
        <pt x="1070" y="48" on="0"/>
        <pt x="883" y="-17" on="0"/>
        <pt x="763" y="-17" on="1"/>
        <pt x="632" y="-17" on="0"/>
        <pt x="426" y="41" on="0"/>
        <pt x="355" y="99" on="1"/>
        <pt x="214" y="214" on="0"/>
        <pt x="214" y="471" on="1"/>
        <pt x="214" y="1225" on="1"/>
        <pt x="175" y="1232" on="0"/>
        <pt x="90" y="1260" on="0"/>
        <pt x="55" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uacute" xMin="55" yMin="-17" xMax="1429" yMax="1751">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="582" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ubreve" xMin="55" yMin="-17" xMax="1429" yMax="1757">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Breve" x="321" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ucircumflex" xMin="55" yMin="-17" xMax="1429" yMax="1740">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="359" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Udieresis" xMin="55" yMin="-17" xMax="1429" yMax="1720">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="251" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ugrave" xMin="55" yMin="-17" xMax="1429" yMax="1755">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Grave" x="283" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uhungarumlaut" xMin="55" yMin="-17" xMax="1429" yMax="1732">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Hungarumlaut" x="412" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Umacron" xMin="55" yMin="-17" xMax="1429" yMax="1654">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="335" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uogonek" xMin="55" yMin="-494" xMax="1429" yMax="1356">
      <contour>
        <pt x="55" y="1356" on="1"/>
        <pt x="652" y="1356" on="1"/>
        <pt x="652" y="1282" on="1"/>
        <pt x="587" y="1241" on="0"/>
        <pt x="504" y="1225" on="1"/>
        <pt x="504" y="480" on="1"/>
        <pt x="504" y="385" on="0"/>
        <pt x="550" y="257" on="0"/>
        <pt x="633" y="178" on="0"/>
        <pt x="750" y="144" on="0"/>
        <pt x="821" y="144" on="1"/>
        <pt x="885" y="144" on="0"/>
        <pt x="993" y="180" on="0"/>
        <pt x="1073" y="261" on="0"/>
        <pt x="1118" y="393" on="0"/>
        <pt x="1118" y="490" on="1"/>
        <pt x="1118" y="1216" on="1"/>
        <pt x="1073" y="1225" on="0"/>
        <pt x="979" y="1260" on="0"/>
        <pt x="948" y="1282" on="1"/>
        <pt x="948" y="1356" on="1"/>
        <pt x="1429" y="1356" on="1"/>
        <pt x="1429" y="1282" on="1"/>
        <pt x="1394" y="1257" on="0"/>
        <pt x="1308" y="1225" on="0"/>
        <pt x="1268" y="1216" on="1"/>
        <pt x="1268" y="488" on="1"/>
        <pt x="1268" y="298" on="0"/>
        <pt x="1113" y="61" on="0"/>
        <pt x="969" y="13" on="1"/>
        <pt x="927" y="-14" on="0"/>
        <pt x="861" y="-81" on="0"/>
        <pt x="816" y="-153" on="0"/>
        <pt x="792" y="-227" on="0"/>
        <pt x="792" y="-261" on="1"/>
        <pt x="792" y="-312" on="0"/>
        <pt x="854" y="-366" on="0"/>
        <pt x="896" y="-366" on="1"/>
        <pt x="920" y="-366" on="0"/>
        <pt x="963" y="-362" on="0"/>
        <pt x="985" y="-356" on="1"/>
        <pt x="985" y="-440" on="1"/>
        <pt x="959" y="-461" on="0"/>
        <pt x="854" y="-494" on="0"/>
        <pt x="792" y="-494" on="1"/>
        <pt x="674" y="-494" on="0"/>
        <pt x="610" y="-439" on="1"/>
        <pt x="547" y="-384" on="0"/>
        <pt x="547" y="-304" on="1"/>
        <pt x="547" y="-206" on="0"/>
        <pt x="613" y="-138" on="1"/>
        <pt x="646" y="-105" on="0"/>
        <pt x="734" y="-44" on="0"/>
        <pt x="787" y="-16" on="1"/>
        <pt x="781" y="-16" on="0"/>
        <pt x="769" y="-17" on="0"/>
        <pt x="763" y="-17" on="1"/>
        <pt x="632" y="-17" on="0"/>
        <pt x="426" y="41" on="0"/>
        <pt x="355" y="99" on="1"/>
        <pt x="214" y="214" on="0"/>
        <pt x="214" y="471" on="1"/>
        <pt x="214" y="1225" on="1"/>
        <pt x="175" y="1232" on="0"/>
        <pt x="90" y="1260" on="0"/>
        <pt x="55" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          52 66 67
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          65 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Uring" xMin="55" yMin="-17" xMax="1429" yMax="1760">
      <component glyphName="U" x="0" y="0" flags="0x204"/>
      <component glyphName="Ring" x="408" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          52
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="29" yMin="-24" xMax="1450" yMax="1356">
      <contour>
        <pt x="1121" y="1225" on="1"/>
        <pt x="1074" y="1236" on="0"/>
        <pt x="991" y="1266" on="0"/>
        <pt x="958" y="1282" on="1"/>
        <pt x="958" y="1356" on="1"/>
        <pt x="1450" y="1356" on="1"/>
        <pt x="1450" y="1282" on="1"/>
        <pt x="1427" y="1266" on="0"/>
        <pt x="1352" y="1236" on="0"/>
        <pt x="1311" y="1225" on="1"/>
        <pt x="866" y="0" on="1"/>
        <pt x="674" y="-24" on="1"/>
        <pt x="174" y="1225" on="1"/>
        <pt x="136" y="1236" on="0"/>
        <pt x="58" y="1264" on="0"/>
        <pt x="29" y="1282" on="1"/>
        <pt x="29" y="1356" on="1"/>
        <pt x="674" y="1356" on="1"/>
        <pt x="674" y="1282" on="1"/>
        <pt x="640" y="1266" on="0"/>
        <pt x="559" y="1236" on="0"/>
        <pt x="515" y="1225" on="1"/>
        <pt x="786" y="462" on="1"/>
        <pt x="831" y="281" on="1"/>
        <pt x="834" y="281" on="1"/>
        <pt x="877" y="467" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          22 26 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          23 10 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Vacute" xMin="29" yMin="-24" xMax="1450" yMax="1751">
      <component glyphName="V" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="591" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          33
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="24" yMin="-24" xMax="2025" yMax="1356">
      <contour>
        <pt x="1699" y="1225" on="1"/>
        <pt x="1622" y="1238" on="0"/>
        <pt x="1536" y="1282" on="1"/>
        <pt x="1536" y="1356" on="1"/>
        <pt x="2025" y="1356" on="1"/>
        <pt x="2025" y="1282" on="1"/>
        <pt x="1992" y="1260" on="0"/>
        <pt x="1918" y="1234" on="0"/>
        <pt x="1883" y="1225" on="1"/>
        <pt x="1541" y="0" on="1"/>
        <pt x="1339" y="-24" on="1"/>
        <pt x="1038" y="914" on="1"/>
        <pt x="746" y="0" on="1"/>
        <pt x="543" y="-24" on="1"/>
        <pt x="166" y="1225" on="1"/>
        <pt x="124" y="1234" on="0"/>
        <pt x="55" y="1262" on="0"/>
        <pt x="24" y="1282" on="1"/>
        <pt x="24" y="1356" on="1"/>
        <pt x="652" y="1356" on="1"/>
        <pt x="652" y="1282" on="1"/>
        <pt x="619" y="1264" on="0"/>
        <pt x="535" y="1236" on="0"/>
        <pt x="491" y="1225" on="1"/>
        <pt x="671" y="542" on="1"/>
        <pt x="711" y="290" on="1"/>
        <pt x="715" y="290" on="1"/>
        <pt x="783" y="552" on="1"/>
        <pt x="1040" y="1356" on="1"/>
        <pt x="1155" y="1356" on="1"/>
        <pt x="1430" y="562" on="1"/>
        <pt x="1495" y="310" on="1"/>
        <pt x="1500" y="310" on="1"/>
        <pt x="1544" y="565" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          11 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          31 9 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="42" yMin="0" xMax="1437" yMax="1356">
      <contour>
        <pt x="880" y="1356" on="1"/>
        <pt x="1360" y="1356" on="1"/>
        <pt x="1360" y="1282" on="1"/>
        <pt x="1331" y="1266" on="0"/>
        <pt x="1267" y="1236" on="0"/>
        <pt x="1229" y="1225" on="1"/>
        <pt x="869" y="731" on="1"/>
        <pt x="1288" y="130" on="1"/>
        <pt x="1332" y="120" on="0"/>
        <pt x="1404" y="91" on="0"/>
        <pt x="1437" y="74" on="1"/>
        <pt x="1437" y="0" on="1"/>
        <pt x="809" y="0" on="1"/>
        <pt x="809" y="74" on="1"/>
        <pt x="840" y="91" on="0"/>
        <pt x="908" y="120" on="0"/>
        <pt x="946" y="130" on="1"/>
        <pt x="667" y="546" on="1"/>
        <pt x="394" y="128" on="1"/>
        <pt x="434" y="122" on="0"/>
        <pt x="504" y="95" on="0"/>
        <pt x="537" y="74" on="1"/>
        <pt x="537" y="0" on="1"/>
        <pt x="42" y="0" on="1"/>
        <pt x="42" y="74" on="1"/>
        <pt x="105" y="113" on="0"/>
        <pt x="173" y="130" on="1"/>
        <pt x="579" y="672" on="1"/>
        <pt x="201" y="1225" on="1"/>
        <pt x="165" y="1236" on="0"/>
        <pt x="99" y="1266" on="0"/>
        <pt x="68" y="1282" on="1"/>
        <pt x="68" y="1356" on="1"/>
        <pt x="681" y="1356" on="1"/>
        <pt x="681" y="1282" on="1"/>
        <pt x="659" y="1268" on="0"/>
        <pt x="589" y="1240" on="0"/>
        <pt x="542" y="1225" on="1"/>
        <pt x="780" y="847" on="1"/>
        <pt x="1027" y="1225" on="1"/>
        <pt x="989" y="1234" on="0"/>
        <pt x="911" y="1266" on="0"/>
        <pt x="880" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          38 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          17 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 38 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          27 17 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="33" yMin="0" xMax="1445" yMax="1356">
      <contour>
        <pt x="970" y="1356" on="1"/>
        <pt x="1445" y="1356" on="1"/>
        <pt x="1445" y="1282" on="1"/>
        <pt x="1416" y="1264" on="0"/>
        <pt x="1344" y="1232" on="0"/>
        <pt x="1307" y="1225" on="1"/>
        <pt x="901" y="567" on="1"/>
        <pt x="901" y="130" on="1"/>
        <pt x="940" y="126" on="0"/>
        <pt x="1016" y="93" on="0"/>
        <pt x="1048" y="74" on="1"/>
        <pt x="1048" y="0" on="1"/>
        <pt x="452" y="0" on="1"/>
        <pt x="452" y="74" on="1"/>
        <pt x="484" y="91" on="0"/>
        <pt x="566" y="122" on="0"/>
        <pt x="611" y="130" on="1"/>
        <pt x="611" y="565" on="1"/>
        <pt x="190" y="1225" on="1"/>
        <pt x="145" y="1234" on="0"/>
        <pt x="66" y="1264" on="0"/>
        <pt x="33" y="1282" on="1"/>
        <pt x="33" y="1356" on="1"/>
        <pt x="668" y="1356" on="1"/>
        <pt x="668" y="1282" on="1"/>
        <pt x="641" y="1266" on="0"/>
        <pt x="571" y="1236" on="0"/>
        <pt x="524" y="1225" on="1"/>
        <pt x="831" y="707" on="1"/>
        <pt x="1125" y="1225" on="1"/>
        <pt x="1080" y="1236" on="0"/>
        <pt x="999" y="1266" on="0"/>
        <pt x="970" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          16 33 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          28 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Yacute" xMin="33" yMin="0" xMax="1445" yMax="1751">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="588" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Ydieresis" xMin="33" yMin="0" xMax="1445" yMax="1720">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="251" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="130" yMin="0" xMax="1249" yMax="1356">
      <contour>
        <pt x="1129" y="408" on="1"/>
        <pt x="1211" y="408" on="1"/>
        <pt x="1218" y="368" on="0"/>
        <pt x="1231" y="266" on="0"/>
        <pt x="1244" y="155" on="0"/>
        <pt x="1249" y="46" on="0"/>
        <pt x="1249" y="0" on="1"/>
        <pt x="130" y="0" on="1"/>
        <pt x="130" y="126" on="1"/>
        <pt x="885" y="1229" on="1"/>
        <pt x="378" y="1229" on="1"/>
        <pt x="264" y="953" on="1"/>
        <pt x="183" y="953" on="1"/>
        <pt x="172" y="996" on="0"/>
        <pt x="157" y="1104" on="0"/>
        <pt x="146" y="1214" on="0"/>
        <pt x="142" y="1317" on="0"/>
        <pt x="142" y="1356" on="1"/>
        <pt x="1203" y="1356" on="1"/>
        <pt x="1203" y="1229" on="1"/>
        <pt x="452" y="126" on="1"/>
        <pt x="1009" y="126" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 20 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 9 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zacute" xMin="130" yMin="0" xMax="1249" yMax="1751">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="426" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zcaron" xMin="130" yMin="0" xMax="1249" yMax="1757">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="235" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Zdotaccent" xMin="130" yMin="0" xMax="1249" yMax="1723">
      <component glyphName="Z" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="387" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="44" yMin="-23" xMax="1000" yMax="958">
      <contour>
        <pt x="866" y="271" on="1"/>
        <pt x="866" y="230" on="0"/>
        <pt x="868" y="170" on="0"/>
        <pt x="871" y="137" on="1"/>
        <pt x="1000" y="118" on="1"/>
        <pt x="1000" y="52" on="1"/>
        <pt x="976" y="41" on="0"/>
        <pt x="901" y="18" on="0"/>
        <pt x="817" y="-1" on="0"/>
        <pt x="734" y="-15" on="0"/>
        <pt x="703" y="-18" on="1"/>
        <pt x="639" y="-18" on="1"/>
        <pt x="629" y="4" on="0"/>
        <pt x="618" y="46" on="0"/>
        <pt x="616" y="67" on="1"/>
        <pt x="614" y="89" on="0"/>
        <pt x="612" y="141" on="0"/>
        <pt x="611" y="172" on="1"/>
        <pt x="602" y="172" on="1"/>
        <pt x="593" y="136" on="0"/>
        <pt x="548" y="66" on="0"/>
        <pt x="478" y="11" on="0"/>
        <pt x="384" y="-23" on="0"/>
        <pt x="327" y="-23" on="1"/>
        <pt x="266" y="-23" on="0"/>
        <pt x="163" y="14" on="0"/>
        <pt x="87" y="82" on="0"/>
        <pt x="44" y="178" on="0"/>
        <pt x="44" y="238" on="1"/>
        <pt x="44" y="321" on="0"/>
        <pt x="116" y="432" on="0"/>
        <pt x="258" y="501" on="0"/>
        <pt x="467" y="535" on="0"/>
        <pt x="605" y="541" on="1"/>
        <pt x="620" y="702" on="0"/>
        <pt x="592" y="776" on="1"/>
        <pt x="565" y="851" on="0"/>
        <pt x="470" y="851" on="1"/>
        <pt x="412" y="851" on="0"/>
        <pt x="365" y="832" on="1"/>
        <pt x="276" y="609" on="1"/>
        <pt x="194" y="609" on="1"/>
        <pt x="179" y="631" on="0"/>
        <pt x="150" y="689" on="0"/>
        <pt x="127" y="753" on="0"/>
        <pt x="110" y="821" on="0"/>
        <pt x="106" y="853" on="1"/>
        <pt x="175" y="900" on="0"/>
        <pt x="289" y="929" on="1"/>
        <pt x="403" y="958" on="0"/>
        <pt x="527" y="958" on="1"/>
        <pt x="633" y="958" on="0"/>
        <pt x="768" y="911" on="0"/>
        <pt x="846" y="831" on="0"/>
        <pt x="875" y="722" on="0"/>
        <pt x="875" y="661" on="1"/>
        <pt x="875" y="604" on="0"/>
        <pt x="872" y="504" on="0"/>
        <pt x="869" y="410" on="0"/>
        <pt x="866" y="319" on="0"/>
      </contour>
      <contour>
        <pt x="445" y="127" on="1"/>
        <pt x="484" y="127" on="0"/>
        <pt x="540" y="156" on="0"/>
        <pt x="578" y="199" on="0"/>
        <pt x="600" y="247" on="0"/>
        <pt x="605" y="266" on="1"/>
        <pt x="605" y="453" on="1"/>
        <pt x="456" y="453" on="0"/>
        <pt x="325" y="371" on="0"/>
        <pt x="325" y="277" on="1"/>
        <pt x="325" y="205" on="0"/>
        <pt x="387" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            50
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            50 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          4 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          33 50 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 37 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 21 values pushed */
          9 40 25 40 41 40 57 40 73 40 89 40 105 40 121 40 137 40 153 40 10
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          66 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aacute" xMin="44" yMin="-23" xMax="1000" yMax="1482">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="241" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="abreve" xMin="44" yMin="-23" xMax="1000" yMax="1478">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="135" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          77
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="acircumflex" xMin="44" yMin="-23" xMax="1000" yMax="1487">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="152" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="acute" xMin="98" yMin="1098" xMax="546" yMax="1482">
      <contour>
        <pt x="307" y="1478" on="1"/>
        <pt x="322" y="1482" on="0"/>
        <pt x="394" y="1480" on="0"/>
        <pt x="472" y="1468" on="0"/>
        <pt x="536" y="1447" on="0"/>
        <pt x="546" y="1435" on="1"/>
        <pt x="546" y="1388" on="1"/>
        <pt x="186" y="1098" on="1"/>
        <pt x="98" y="1141" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="acutecomb" xMin="-574" yMin="1098" xMax="-126" yMax="1482">
      <component glyphName="acute" x="-672" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="adieresis" xMin="44" yMin="-23" xMax="1000" yMax="1422">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="143" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          81
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          84
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ae" xMin="44" yMin="-23" xMax="1440" yMax="958">
      <component glyphName="cyrae" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10017" xMin="24" yMin="0" xMax="1455" yMax="1379">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10018" xMin="76" yMin="-6" xMax="1260" yMax="1356">
      <contour>
        <pt x="235" y="1225" on="1"/>
        <pt x="143" y="1241" on="0"/>
        <pt x="76" y="1282" on="1"/>
        <pt x="76" y="1356" on="1"/>
        <pt x="1136" y="1356" on="1"/>
        <pt x="1136" y="1311" on="0"/>
        <pt x="1128" y="1203" on="0"/>
        <pt x="1116" y="1095" on="0"/>
        <pt x="1101" y="993" on="0"/>
        <pt x="1093" y="953" on="1"/>
        <pt x="1014" y="953" on="1"/>
        <pt x="894" y="1229" on="1"/>
        <pt x="525" y="1229" on="1"/>
        <pt x="525" y="789" on="1"/>
        <pt x="562" y="794" on="0"/>
        <pt x="655" y="802" on="0"/>
        <pt x="696" y="802" on="1"/>
        <pt x="764" y="802" on="0"/>
        <pt x="900" y="787" on="0"/>
        <pt x="1026" y="751" on="0"/>
        <pt x="1134" y="692" on="0"/>
        <pt x="1214" y="604" on="0"/>
        <pt x="1260" y="485" on="0"/>
        <pt x="1260" y="407" on="1"/>
        <pt x="1260" y="304" on="0"/>
        <pt x="1169" y="149" on="0"/>
        <pt x="1015" y="46" on="0"/>
        <pt x="808" y="-6" on="0"/>
        <pt x="693" y="-6" on="1"/>
        <pt x="686" y="-6" on="0"/>
        <pt x="641" y="-5" on="0"/>
        <pt x="579" y="-4" on="0"/>
        <pt x="505" y="-2" on="0"/>
        <pt x="435" y="-1" on="0"/>
        <pt x="373" y="0" on="0"/>
        <pt x="353" y="0" on="1"/>
        <pt x="76" y="0" on="1"/>
        <pt x="76" y="74" on="1"/>
        <pt x="113" y="95" on="0"/>
        <pt x="192" y="124" on="0"/>
        <pt x="235" y="130" on="1"/>
      </contour>
      <contour>
        <pt x="661" y="676" on="1"/>
        <pt x="645" y="676" on="0"/>
        <pt x="606" y="674" on="0"/>
        <pt x="568" y="671" on="0"/>
        <pt x="535" y="666" on="0"/>
        <pt x="525" y="664" on="1"/>
        <pt x="525" y="128" on="1"/>
        <pt x="542" y="125" on="0"/>
        <pt x="623" y="120" on="0"/>
        <pt x="672" y="120" on="1"/>
        <pt x="729" y="120" on="0"/>
        <pt x="827" y="158" on="0"/>
        <pt x="899" y="230" on="0"/>
        <pt x="940" y="335" on="0"/>
        <pt x="940" y="401" on="1"/>
        <pt x="940" y="468" on="0"/>
        <pt x="899" y="570" on="0"/>
        <pt x="826" y="640" on="0"/>
        <pt x="723" y="676" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 11 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          16 3 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10019" xMin="76" yMin="-11" xMax="1270" yMax="1367">
      <component glyphName="B" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10020" xMin="100" yMin="0" xMax="1223" yMax="1356">
      <contour>
        <pt x="549" y="130" on="1"/>
        <pt x="597" y="122" on="0"/>
        <pt x="692" y="91" on="0"/>
        <pt x="735" y="74" on="1"/>
        <pt x="735" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="74" on="1"/>
        <pt x="143" y="95" on="0"/>
        <pt x="221" y="123" on="0"/>
        <pt x="258" y="130" on="1"/>
        <pt x="258" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="136" y="1260" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
        <pt x="1223" y="1356" on="1"/>
        <pt x="1223" y="1313" on="0"/>
        <pt x="1218" y="1211" on="0"/>
        <pt x="1209" y="1104" on="0"/>
        <pt x="1196" y="997" on="0"/>
        <pt x="1188" y="949" on="1"/>
        <pt x="1108" y="949" on="1"/>
        <pt x="978" y="1229" on="1"/>
        <pt x="549" y="1229" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 22 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10021" xMin="7" yMin="-316" xMax="1393" yMax="1356">
      <contour>
        <pt x="1393" y="126" on="1"/>
        <pt x="1393" y="81" on="0"/>
        <pt x="1386" y="-33" on="0"/>
        <pt x="1373" y="-153" on="0"/>
        <pt x="1355" y="-269" on="0"/>
        <pt x="1343" y="-316" on="1"/>
        <pt x="1268" y="-316" on="1"/>
        <pt x="1164" y="0" on="1"/>
        <pt x="238" y="0" on="1"/>
        <pt x="133" y="-316" on="1"/>
        <pt x="57" y="-316" on="1"/>
        <pt x="46" y="-268" on="0"/>
        <pt x="26" y="-148" on="0"/>
        <pt x="13" y="-26" on="0"/>
        <pt x="7" y="87" on="0"/>
        <pt x="7" y="126" on="1"/>
        <pt x="175" y="126" on="1"/>
        <pt x="230" y="207" on="0"/>
        <pt x="321" y="447" on="0"/>
        <pt x="384" y="732" on="0"/>
        <pt x="418" y="1048" on="0"/>
        <pt x="418" y="1207" on="1"/>
        <pt x="367" y="1216" on="0"/>
        <pt x="259" y="1255" on="0"/>
        <pt x="212" y="1282" on="1"/>
        <pt x="212" y="1356" on="1"/>
        <pt x="1326" y="1356" on="1"/>
        <pt x="1326" y="1282" on="1"/>
        <pt x="1258" y="1245" on="0"/>
        <pt x="1167" y="1225" on="1"/>
        <pt x="1167" y="126" on="1"/>
      </contour>
      <contour>
        <pt x="877" y="126" on="1"/>
        <pt x="877" y="1229" on="1"/>
        <pt x="565" y="1229" on="1"/>
        <pt x="556" y="1005" on="0"/>
        <pt x="508" y="649" on="0"/>
        <pt x="445" y="377" on="0"/>
        <pt x="371" y="186" on="0"/>
        <pt x="336" y="126" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          33 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10022" xMin="100" yMin="0" xMax="1244" yMax="1356">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10023" xMin="100" yMin="0" xMax="1244" yMax="1720">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="169" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10024" xMin="26" yMin="0" xMax="1999" yMax="1356">
      <contour>
        <pt x="876" y="1225" on="1"/>
        <pt x="837" y="1236" on="0"/>
        <pt x="774" y="1266" on="0"/>
        <pt x="750" y="1282" on="1"/>
        <pt x="750" y="1356" on="1"/>
        <pt x="1254" y="1356" on="1"/>
        <pt x="1254" y="1282" on="1"/>
        <pt x="1215" y="1254" on="0"/>
        <pt x="1140" y="1225" on="1"/>
        <pt x="1140" y="732" on="1"/>
        <pt x="1271" y="761" on="1"/>
        <pt x="1556" y="1225" on="1"/>
        <pt x="1517" y="1236" on="0"/>
        <pt x="1445" y="1266" on="0"/>
        <pt x="1414" y="1282" on="1"/>
        <pt x="1414" y="1356" on="1"/>
        <pt x="1928" y="1356" on="1"/>
        <pt x="1928" y="1282" on="1"/>
        <pt x="1898" y="1266" on="0"/>
        <pt x="1827" y="1236" on="0"/>
        <pt x="1789" y="1225" on="1"/>
        <pt x="1434" y="752" on="1"/>
        <pt x="1484" y="686" on="0"/>
        <pt x="1596" y="527" on="0"/>
        <pt x="1718" y="359" on="0"/>
        <pt x="1850" y="190" on="0"/>
        <pt x="1920" y="113" on="1"/>
        <pt x="1999" y="66" on="1"/>
        <pt x="1999" y="0" on="1"/>
        <pt x="1676" y="0" on="1"/>
        <pt x="1593" y="66" on="1"/>
        <pt x="1533" y="131" on="0"/>
        <pt x="1440" y="270" on="0"/>
        <pt x="1361" y="415" on="0"/>
        <pt x="1286" y="564" on="0"/>
        <pt x="1244" y="639" on="1"/>
        <pt x="1140" y="639" on="1"/>
        <pt x="1140" y="130" on="1"/>
        <pt x="1173" y="120" on="0"/>
        <pt x="1234" y="91" on="0"/>
        <pt x="1263" y="74" on="1"/>
        <pt x="1263" y="0" on="1"/>
        <pt x="741" y="0" on="1"/>
        <pt x="741" y="74" on="1"/>
        <pt x="767" y="91" on="0"/>
        <pt x="834" y="120" on="0"/>
        <pt x="876" y="130" on="1"/>
        <pt x="876" y="656" on="1"/>
        <pt x="765" y="628" on="1"/>
        <pt x="724" y="549" on="0"/>
        <pt x="647" y="402" on="0"/>
        <pt x="609" y="333" on="1"/>
        <pt x="572" y="264" on="0"/>
        <pt x="486" y="132" on="0"/>
        <pt x="432" y="66" on="1"/>
        <pt x="349" y="0" on="1"/>
        <pt x="26" y="0" on="1"/>
        <pt x="26" y="66" on="1"/>
        <pt x="105" y="113" on="1"/>
        <pt x="175" y="190" on="0"/>
        <pt x="306" y="356" on="0"/>
        <pt x="424" y="519" on="0"/>
        <pt x="528" y="670" on="0"/>
        <pt x="572" y="732" on="1"/>
        <pt x="219" y="1225" on="1"/>
        <pt x="180" y="1236" on="0"/>
        <pt x="114" y="1266" on="0"/>
        <pt x="90" y="1282" on="1"/>
        <pt x="90" y="1356" on="1"/>
        <pt x="600" y="1356" on="1"/>
        <pt x="600" y="1282" on="1"/>
        <pt x="576" y="1266" on="0"/>
        <pt x="506" y="1236" on="0"/>
        <pt x="467" y="1225" on="1"/>
        <pt x="752" y="750" on="1"/>
        <pt x="876" y="750" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 76 77
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            68
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            68 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          74 4 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          74
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 74 31 74 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 74 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          74
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 10 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          63 74 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10025" xMin="52" yMin="-24" xMax="1019" yMax="1379">
      <contour>
        <pt x="466" y="-24" on="1"/>
        <pt x="412" y="-24" on="0"/>
        <pt x="293" y="-12" on="0"/>
        <pt x="182" y="9" on="0"/>
        <pt x="85" y="37" on="0"/>
        <pt x="52" y="52" on="1"/>
        <pt x="54" y="83" on="0"/>
        <pt x="67" y="172" on="0"/>
        <pt x="86" y="268" on="0"/>
        <pt x="109" y="363" on="0"/>
        <pt x="122" y="401" on="1"/>
        <pt x="203" y="401" on="1"/>
        <pt x="280" y="126" on="1"/>
        <pt x="314" y="111" on="0"/>
        <pt x="395" y="103" on="0"/>
        <pt x="437" y="103" on="1"/>
        <pt x="501" y="103" on="0"/>
        <pt x="594" y="139" on="0"/>
        <pt x="632" y="176" on="1"/>
        <pt x="709" y="250" on="0"/>
        <pt x="709" y="375" on="1"/>
        <pt x="709" y="513" on="0"/>
        <pt x="641" y="570" on="1"/>
        <pt x="574" y="628" on="0"/>
        <pt x="460" y="628" on="1"/>
        <pt x="310" y="602" on="1"/>
        <pt x="301" y="637" on="0"/>
        <pt x="297" y="726" on="0"/>
        <pt x="308" y="763" on="1"/>
        <pt x="371" y="763" on="1"/>
        <pt x="387" y="762" on="0"/>
        <pt x="427" y="763" on="0"/>
        <pt x="468" y="765" on="0"/>
        <pt x="507" y="769" on="0"/>
        <pt x="522" y="771" on="1"/>
        <pt x="597" y="802" on="0"/>
        <pt x="675" y="920" on="0"/>
        <pt x="675" y="1011" on="1"/>
        <pt x="675" y="1126" on="0"/>
        <pt x="561" y="1253" on="0"/>
        <pt x="452" y="1253" on="1"/>
        <pt x="406" y="1253" on="0"/>
        <pt x="330" y="1228" on="0"/>
        <pt x="317" y="1216" on="1"/>
        <pt x="222" y="970" on="1"/>
        <pt x="140" y="970" on="1"/>
        <pt x="133" y="998" on="0"/>
        <pt x="118" y="1075" on="0"/>
        <pt x="106" y="1162" on="0"/>
        <pt x="97" y="1253" on="0"/>
        <pt x="96" y="1295" on="1"/>
        <pt x="132" y="1320" on="0"/>
        <pt x="230" y="1352" on="0"/>
        <pt x="334" y="1371" on="0"/>
        <pt x="435" y="1379" on="0"/>
        <pt x="475" y="1379" on="1"/>
        <pt x="569" y="1379" on="0"/>
        <pt x="749" y="1351" on="0"/>
        <pt x="889" y="1277" on="0"/>
        <pt x="975" y="1148" on="0"/>
        <pt x="975" y="1046" on="1"/>
        <pt x="975" y="948" on="0"/>
        <pt x="910" y="857" on="1"/>
        <pt x="845" y="767" on="0"/>
        <pt x="713" y="726" on="1"/>
        <pt x="713" y="719" on="1"/>
        <pt x="774" y="709" on="0"/>
        <pt x="885" y="659" on="0"/>
        <pt x="969" y="576" on="0"/>
        <pt x="1019" y="461" on="0"/>
        <pt x="1019" y="386" on="1"/>
        <pt x="1019" y="282" on="0"/>
        <pt x="942" y="128" on="0"/>
        <pt x="798" y="26" on="0"/>
        <pt x="593" y="-24" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          29 55 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 29 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          24 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 24 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          37 11 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 40 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          65 29 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10026" xMin="81" yMin="0" xMax="1512" yMax="1356">
      <contour>
        <pt x="663" y="0" on="1"/>
        <pt x="81" y="0" on="1"/>
        <pt x="81" y="74" on="1"/>
        <pt x="118" y="93" on="0"/>
        <pt x="199" y="124" on="0"/>
        <pt x="240" y="130" on="1"/>
        <pt x="240" y="1225" on="1"/>
        <pt x="201" y="1236" on="0"/>
        <pt x="116" y="1260" on="0"/>
        <pt x="81" y="1282" on="1"/>
        <pt x="81" y="1356" on="1"/>
        <pt x="663" y="1356" on="1"/>
        <pt x="663" y="1282" on="1"/>
        <pt x="635" y="1264" on="0"/>
        <pt x="561" y="1234" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="490" on="1"/>
        <pt x="499" y="339" on="1"/>
        <pt x="594" y="497" on="1"/>
        <pt x="1082" y="1179" on="1"/>
        <pt x="1082" y="1225" on="1"/>
        <pt x="991" y="1247" on="0"/>
        <pt x="929" y="1282" on="1"/>
        <pt x="929" y="1356" on="1"/>
        <pt x="1512" y="1356" on="1"/>
        <pt x="1512" y="1282" on="1"/>
        <pt x="1479" y="1260" on="0"/>
        <pt x="1396" y="1236" on="0"/>
        <pt x="1353" y="1225" on="1"/>
        <pt x="1353" y="130" on="1"/>
        <pt x="1398" y="122" on="0"/>
        <pt x="1477" y="93" on="0"/>
        <pt x="1512" y="74" on="1"/>
        <pt x="1512" y="0" on="1"/>
        <pt x="929" y="0" on="1"/>
        <pt x="929" y="74" on="1"/>
        <pt x="956" y="87" on="0"/>
        <pt x="1032" y="120" on="0"/>
        <pt x="1075" y="130" on="1"/>
        <pt x="1075" y="863" on="1"/>
        <pt x="1094" y="1017" on="1"/>
        <pt x="1007" y="863" on="1"/>
        <pt x="511" y="172" on="1"/>
        <pt x="511" y="130" on="1"/>
        <pt x="556" y="120" on="0"/>
        <pt x="633" y="89" on="0"/>
        <pt x="663" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 47 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          17 46 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          40 22 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10027" xMin="81" yMin="0" xMax="1512" yMax="1747">
      <component glyphName="afii10026" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="257" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10027hook" xMin="82" yMin="-408" xMax="1512" yMax="1737">
      <contour>
        <pt x="802" y="1435" on="1"/>
        <pt x="713" y="1435" on="0"/>
        <pt x="568" y="1468" on="0"/>
        <pt x="463" y="1532" on="0"/>
        <pt x="407" y="1628" on="0"/>
        <pt x="407" y="1691" on="1"/>
        <pt x="442" y="1716" on="0"/>
        <pt x="556" y="1731" on="0"/>
        <pt x="605" y="1733" on="1"/>
        <pt x="671" y="1698" on="1"/>
        <pt x="671" y="1547" on="1"/>
        <pt x="697" y="1534" on="0"/>
        <pt x="769" y="1524" on="0"/>
        <pt x="804" y="1524" on="1"/>
        <pt x="832" y="1524" on="0"/>
        <pt x="911" y="1532" on="0"/>
        <pt x="938" y="1541" on="1"/>
        <pt x="938" y="1698" on="1"/>
        <pt x="1004" y="1733" on="1"/>
        <pt x="1039" y="1737" on="0"/>
        <pt x="1150" y="1716" on="0"/>
        <pt x="1194" y="1691" on="1"/>
        <pt x="1194" y="1567" on="0"/>
        <pt x="984" y="1435" on="0"/>
      </contour>
      <contour>
        <pt x="1076" y="863" on="1"/>
        <pt x="1095" y="1017" on="1"/>
        <pt x="1008" y="863" on="1"/>
        <pt x="512" y="172" on="1"/>
        <pt x="512" y="130" on="1"/>
        <pt x="556" y="120" on="0"/>
        <pt x="634" y="89" on="0"/>
        <pt x="664" y="74" on="1"/>
        <pt x="664" y="0" on="1"/>
        <pt x="82" y="0" on="1"/>
        <pt x="82" y="74" on="1"/>
        <pt x="119" y="93" on="0"/>
        <pt x="200" y="124" on="0"/>
        <pt x="241" y="130" on="1"/>
        <pt x="241" y="1225" on="1"/>
        <pt x="202" y="1236" on="0"/>
        <pt x="117" y="1260" on="0"/>
        <pt x="82" y="1282" on="1"/>
        <pt x="82" y="1356" on="1"/>
        <pt x="664" y="1356" on="1"/>
        <pt x="664" y="1282" on="1"/>
        <pt x="636" y="1264" on="0"/>
        <pt x="562" y="1234" on="0"/>
        <pt x="520" y="1225" on="1"/>
        <pt x="520" y="490" on="1"/>
        <pt x="500" y="339" on="1"/>
        <pt x="595" y="497" on="1"/>
        <pt x="1083" y="1179" on="1"/>
        <pt x="1083" y="1225" on="1"/>
        <pt x="992" y="1247" on="0"/>
        <pt x="930" y="1282" on="1"/>
        <pt x="930" y="1356" on="1"/>
        <pt x="1512" y="1356" on="1"/>
        <pt x="1512" y="1282" on="1"/>
        <pt x="1480" y="1260" on="0"/>
        <pt x="1397" y="1236" on="0"/>
        <pt x="1354" y="1225" on="1"/>
        <pt x="1354" y="2" on="1"/>
        <pt x="1354" y="-130" on="0"/>
        <pt x="1296" y="-290" on="0"/>
        <pt x="1180" y="-377" on="0"/>
        <pt x="1004" y="-408" on="0"/>
        <pt x="884" y="-408" on="1"/>
        <pt x="872" y="-322" on="1"/>
        <pt x="926" y="-310" on="0"/>
        <pt x="1002" y="-269" on="0"/>
        <pt x="1052" y="-198" on="0"/>
        <pt x="1076" y="-83" on="0"/>
        <pt x="1076" y="4" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 73 74
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 8
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 7 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          17 7 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          25 32 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          42 7 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          49 32 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          55 7 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10028" xMin="70" yMin="0" xMax="1465" yMax="1356">
      <contour>
        <pt x="862" y="1356" on="1"/>
        <pt x="1381" y="1356" on="1"/>
        <pt x="1381" y="1282" on="1"/>
        <pt x="1348" y="1260" on="0"/>
        <pt x="1263" y="1232" on="0"/>
        <pt x="1228" y="1225" on="1"/>
        <pt x="844" y="753" on="1"/>
        <pt x="868" y="722" on="0"/>
        <pt x="944" y="626" on="0"/>
        <pt x="1036" y="510" on="0"/>
        <pt x="1137" y="384" on="0"/>
        <pt x="1239" y="265" on="0"/>
        <pt x="1333" y="159" on="0"/>
        <pt x="1372" y="122" on="1"/>
        <pt x="1465" y="66" on="1"/>
        <pt x="1465" y="0" on="1"/>
        <pt x="1129" y="0" on="1"/>
        <pt x="1051" y="54" on="1"/>
        <pt x="979" y="132" on="0"/>
        <pt x="777" y="424" on="0"/>
        <pt x="639" y="635" on="1"/>
        <pt x="519" y="635" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="562" y="122" on="0"/>
        <pt x="632" y="91" on="0"/>
        <pt x="657" y="74" on="1"/>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="109" y="93" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="184" y="1232" on="0"/>
        <pt x="101" y="1262" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="632" y="1266" on="0"/>
        <pt x="561" y="1236" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="734" on="1"/>
        <pt x="671" y="761" on="1"/>
        <pt x="1004" y="1225" on="1"/>
        <pt x="965" y="1234" on="0"/>
        <pt x="889" y="1266" on="0"/>
        <pt x="862" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          6 48 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 0 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          42 36 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 42 79 42 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 42 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          95 42 111 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 42 31 42 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          111 42 127 42 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          159 42 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          20 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10029" xMin="74" yMin="-24" xMax="1456" yMax="1356">
      <contour>
        <pt x="492" y="1207" on="1"/>
        <pt x="433" y="1216" on="0"/>
        <pt x="326" y="1259" on="0"/>
        <pt x="287" y="1282" on="1"/>
        <pt x="287" y="1356" on="1"/>
        <pt x="1456" y="1356" on="1"/>
        <pt x="1456" y="1282" on="1"/>
        <pt x="1426" y="1264" on="0"/>
        <pt x="1343" y="1234" on="0"/>
        <pt x="1297" y="1225" on="1"/>
        <pt x="1297" y="130" on="1"/>
        <pt x="1341" y="122" on="0"/>
        <pt x="1421" y="91" on="0"/>
        <pt x="1456" y="74" on="1"/>
        <pt x="1456" y="0" on="1"/>
        <pt x="859" y="0" on="1"/>
        <pt x="859" y="74" on="1"/>
        <pt x="892" y="91" on="0"/>
        <pt x="968" y="120" on="0"/>
        <pt x="1007" y="130" on="1"/>
        <pt x="1007" y="1229" on="1"/>
        <pt x="640" y="1229" on="1"/>
        <pt x="634" y="935" on="0"/>
        <pt x="591" y="542" on="0"/>
        <pt x="529" y="287" on="0"/>
        <pt x="453" y="137" on="0"/>
        <pt x="413" y="83" on="1"/>
        <pt x="376" y="33" on="0"/>
        <pt x="263" y="-24" on="0"/>
        <pt x="211" y="-24" on="1"/>
        <pt x="186" y="-13" on="0"/>
        <pt x="139" y="46" on="0"/>
        <pt x="101" y="124" on="0"/>
        <pt x="76" y="209" on="0"/>
        <pt x="74" y="246" on="1"/>
        <pt x="126" y="320" on="1"/>
        <pt x="357" y="264" on="1"/>
        <pt x="382" y="318" on="0"/>
        <pt x="431" y="471" on="0"/>
        <pt x="469" y="695" on="0"/>
        <pt x="492" y="1001" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 29 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          36 35 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10030" xMin="80" yMin="0" xMax="1853" yMax="1356">
      <component glyphName="M" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10031" xMin="70" yMin="0" xMax="1523" yMax="1356">
      <component glyphName="H" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10032" xMin="88" yMin="-24" xMax="1505" yMax="1379">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10033" xMin="75" yMin="0" xMax="1518" yMax="1356">
      <contour>
        <pt x="655" y="0" on="1"/>
        <pt x="75" y="0" on="1"/>
        <pt x="75" y="74" on="1"/>
        <pt x="104" y="89" on="0"/>
        <pt x="182" y="122" on="0"/>
        <pt x="234" y="130" on="1"/>
        <pt x="234" y="1225" on="1"/>
        <pt x="195" y="1234" on="0"/>
        <pt x="112" y="1260" on="0"/>
        <pt x="75" y="1282" on="1"/>
        <pt x="75" y="1356" on="1"/>
        <pt x="1518" y="1356" on="1"/>
        <pt x="1518" y="1282" on="1"/>
        <pt x="1482" y="1259" on="0"/>
        <pt x="1400" y="1234" on="0"/>
        <pt x="1359" y="1225" on="1"/>
        <pt x="1359" y="130" on="1"/>
        <pt x="1431" y="122" on="0"/>
        <pt x="1518" y="74" on="1"/>
        <pt x="1518" y="0" on="1"/>
        <pt x="937" y="0" on="1"/>
        <pt x="937" y="74" on="1"/>
        <pt x="957" y="89" on="0"/>
        <pt x="1018" y="118" on="0"/>
        <pt x="1069" y="130" on="1"/>
        <pt x="1069" y="1229" on="1"/>
        <pt x="524" y="1229" on="1"/>
        <pt x="524" y="130" on="1"/>
        <pt x="563" y="120" on="0"/>
        <pt x="625" y="93" on="0"/>
        <pt x="655" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10034" xMin="65" yMin="0" xMax="1201" yMax="1371">
      <component glyphName="P" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10035" xMin="130" yMin="-24" xMax="1329" yMax="1379">
      <component glyphName="C" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10036" xMin="65" yMin="0" xMax="1301" yMax="1356">
      <component glyphName="T" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10037" xMin="58" yMin="-9" xMax="1485" yMax="1356">
      <contour>
        <pt x="1165" y="1225" on="1"/>
        <pt x="1119" y="1236" on="0"/>
        <pt x="1049" y="1264" on="0"/>
        <pt x="1016" y="1282" on="1"/>
        <pt x="1016" y="1356" on="1"/>
        <pt x="1485" y="1356" on="1"/>
        <pt x="1485" y="1282" on="1"/>
        <pt x="1463" y="1266" on="0"/>
        <pt x="1392" y="1238" on="0"/>
        <pt x="1347" y="1225" on="1"/>
        <pt x="884" y="390" on="1"/>
        <pt x="871" y="366" on="0"/>
        <pt x="839" y="308" on="0"/>
        <pt x="802" y="246" on="0"/>
        <pt x="762" y="184" on="0"/>
        <pt x="741" y="157" on="1"/>
        <pt x="714" y="122" on="0"/>
        <pt x="652" y="63" on="0"/>
        <pt x="578" y="18" on="0"/>
        <pt x="491" y="-8" on="0"/>
        <pt x="440" y="-9" on="1"/>
        <pt x="426" y="7" on="0"/>
        <pt x="391" y="70" on="0"/>
        <pt x="361" y="142" on="0"/>
        <pt x="339" y="211" on="0"/>
        <pt x="337" y="233" on="1"/>
        <pt x="391" y="310" on="1"/>
        <pt x="616" y="229" on="1"/>
        <pt x="652" y="244" on="0"/>
        <pt x="697" y="302" on="0"/>
        <pt x="711" y="337" on="1"/>
        <pt x="192" y="1225" on="1"/>
        <pt x="155" y="1236" on="0"/>
        <pt x="88" y="1264" on="0"/>
        <pt x="58" y="1282" on="1"/>
        <pt x="58" y="1356" on="1"/>
        <pt x="662" y="1356" on="1"/>
        <pt x="662" y="1282" on="1"/>
        <pt x="605" y="1247" on="0"/>
        <pt x="515" y="1225" on="1"/>
        <pt x="790" y="709" on="1"/>
        <pt x="839" y="601" on="1"/>
        <pt x="843" y="601" on="1"/>
        <pt x="894" y="708" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          26 20 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          27 26 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          30 20 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          41 4 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10038" xMin="72" yMin="0" xMax="1688" yMax="1356">
      <contour>
        <pt x="611" y="1356" on="1"/>
        <pt x="1141" y="1356" on="1"/>
        <pt x="1141" y="1284" on="1"/>
        <pt x="1119" y="1270" on="0"/>
        <pt x="1059" y="1240" on="0"/>
        <pt x="1014" y="1227" on="1"/>
        <pt x="1014" y="1144" on="1"/>
        <pt x="1031" y="1146" on="0"/>
        <pt x="1067" y="1151" on="0"/>
        <pt x="1111" y="1154" on="0"/>
        <pt x="1163" y="1156" on="0"/>
        <pt x="1197" y="1156" on="1"/>
        <pt x="1304" y="1156" on="0"/>
        <pt x="1484" y="1096" on="0"/>
        <pt x="1615" y="980" on="0"/>
        <pt x="1688" y="808" on="0"/>
        <pt x="1688" y="697" on="1"/>
        <pt x="1688" y="576" on="0"/>
        <pt x="1600" y="396" on="0"/>
        <pt x="1458" y="277" on="0"/>
        <pt x="1277" y="218" on="0"/>
        <pt x="1184" y="218" on="1"/>
        <pt x="1164" y="218" on="0"/>
        <pt x="1115" y="220" on="0"/>
        <pt x="1068" y="224" on="0"/>
        <pt x="1027" y="228" on="0"/>
        <pt x="1014" y="231" on="1"/>
        <pt x="1014" y="128" on="1"/>
        <pt x="1052" y="118" on="0"/>
        <pt x="1116" y="87" on="0"/>
        <pt x="1141" y="72" on="1"/>
        <pt x="1141" y="0" on="1"/>
        <pt x="611" y="0" on="1"/>
        <pt x="611" y="72" on="1"/>
        <pt x="637" y="87" on="0"/>
        <pt x="709" y="118" on="0"/>
        <pt x="748" y="126" on="1"/>
        <pt x="748" y="227" on="1"/>
        <pt x="705" y="223" on="0"/>
        <pt x="605" y="218" on="0"/>
        <pt x="543" y="218" on="1"/>
        <pt x="458" y="218" on="0"/>
        <pt x="290" y="269" on="0"/>
        <pt x="156" y="379" on="0"/>
        <pt x="72" y="554" on="0"/>
        <pt x="72" y="678" on="1"/>
        <pt x="72" y="790" on="0"/>
        <pt x="151" y="967" on="0"/>
        <pt x="293" y="1090" on="0"/>
        <pt x="492" y="1156" on="0"/>
        <pt x="611" y="1156" on="1"/>
        <pt x="642" y="1156" on="0"/>
        <pt x="682" y="1155" on="0"/>
        <pt x="711" y="1154" on="0"/>
        <pt x="734" y="1152" on="0"/>
        <pt x="748" y="1151" on="1"/>
        <pt x="748" y="1227" on="1"/>
        <pt x="703" y="1238" on="0"/>
        <pt x="631" y="1268" on="0"/>
        <pt x="611" y="1284" on="1"/>
      </contour>
      <contour>
        <pt x="1122" y="1038" on="1"/>
        <pt x="1097" y="1039" on="0"/>
        <pt x="1034" y="1033" on="0"/>
        <pt x="1012" y="1028" on="1"/>
        <pt x="1012" y="342" on="1"/>
        <pt x="1031" y="339" on="0"/>
        <pt x="1080" y="337" on="0"/>
        <pt x="1111" y="337" on="1"/>
        <pt x="1161" y="337" on="0"/>
        <pt x="1260" y="376" on="0"/>
        <pt x="1339" y="462" on="0"/>
        <pt x="1388" y="599" on="0"/>
        <pt x="1388" y="697" on="1"/>
        <pt x="1388" y="760" on="0"/>
        <pt x="1362" y="881" on="0"/>
        <pt x="1301" y="976" on="0"/>
        <pt x="1198" y="1036" on="0"/>
      </contour>
      <contour>
        <pt x="650" y="337" on="1"/>
        <pt x="672" y="337" on="0"/>
        <pt x="729" y="342" on="0"/>
        <pt x="750" y="347" on="1"/>
        <pt x="750" y="1034" on="1"/>
        <pt x="733" y="1036" on="0"/>
        <pt x="689" y="1038" on="0"/>
        <pt x="665" y="1038" on="1"/>
        <pt x="590" y="1038" on="0"/>
        <pt x="480" y="982" on="0"/>
        <pt x="408" y="884" on="0"/>
        <pt x="373" y="753" on="0"/>
        <pt x="373" y="678" on="1"/>
        <pt x="373" y="593" on="0"/>
        <pt x="416" y="465" on="0"/>
        <pt x="491" y="380" on="0"/>
        <pt x="592" y="337" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          80 94 95
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          80
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          80
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 0 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          21 31 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          67 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          77
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          60
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          84
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10039" xMin="42" yMin="0" xMax="1437" yMax="1356">
      <component glyphName="X" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10040" xMin="70" yMin="-316" xMax="1553" yMax="1356">
      <contour>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="97" y="89" on="0"/>
        <pt x="179" y="120" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="190" y="1232" on="0"/>
        <pt x="107" y="1260" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="647" y="1356" on="1"/>
        <pt x="647" y="1282" on="1"/>
        <pt x="624" y="1266" on="0"/>
        <pt x="562" y="1238" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="126" on="1"/>
        <pt x="1036" y="126" on="1"/>
        <pt x="1036" y="1225" on="1"/>
        <pt x="1001" y="1234" on="0"/>
        <pt x="934" y="1264" on="0"/>
        <pt x="907" y="1282" on="1"/>
        <pt x="907" y="1356" on="1"/>
        <pt x="1485" y="1356" on="1"/>
        <pt x="1485" y="1282" on="1"/>
        <pt x="1447" y="1259" on="0"/>
        <pt x="1367" y="1234" on="0"/>
        <pt x="1326" y="1225" on="1"/>
        <pt x="1326" y="126" on="1"/>
        <pt x="1553" y="126" on="1"/>
        <pt x="1552" y="76" on="0"/>
        <pt x="1544" y="-43" on="0"/>
        <pt x="1530" y="-163" on="0"/>
        <pt x="1513" y="-273" on="0"/>
        <pt x="1503" y="-316" on="1"/>
        <pt x="1428" y="-316" on="1"/>
        <pt x="1323" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          10 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10041" xMin="60" yMin="0" xMax="1413" yMax="1356">
      <contour>
        <pt x="1413" y="0" on="1"/>
        <pt x="816" y="0" on="1"/>
        <pt x="816" y="74" on="1"/>
        <pt x="861" y="95" on="0"/>
        <pt x="950" y="126" on="0"/>
        <pt x="995" y="130" on="1"/>
        <pt x="995" y="587" on="1"/>
        <pt x="968" y="572" on="0"/>
        <pt x="889" y="540" on="0"/>
        <pt x="794" y="515" on="0"/>
        <pt x="687" y="499" on="0"/>
        <pt x="633" y="499" on="1"/>
        <pt x="555" y="499" on="0"/>
        <pt x="400" y="535" on="0"/>
        <pt x="277" y="620" on="0"/>
        <pt x="200" y="763" on="0"/>
        <pt x="200" y="871" on="1"/>
        <pt x="200" y="1225" on="1"/>
        <pt x="163" y="1232" on="0"/>
        <pt x="89" y="1262" on="0"/>
        <pt x="60" y="1282" on="1"/>
        <pt x="60" y="1356" on="1"/>
        <pt x="608" y="1356" on="1"/>
        <pt x="608" y="1282" on="1"/>
        <pt x="586" y="1266" on="0"/>
        <pt x="527" y="1236" on="0"/>
        <pt x="490" y="1225" on="1"/>
        <pt x="490" y="921" on="1"/>
        <pt x="490" y="855" on="0"/>
        <pt x="520" y="749" on="0"/>
        <pt x="585" y="675" on="0"/>
        <pt x="689" y="635" on="0"/>
        <pt x="763" y="635" on="1"/>
        <pt x="791" y="635" on="0"/>
        <pt x="852" y="647" on="0"/>
        <pt x="913" y="666" on="0"/>
        <pt x="971" y="690" on="0"/>
        <pt x="995" y="703" on="1"/>
        <pt x="995" y="1225" on="1"/>
        <pt x="962" y="1236" on="0"/>
        <pt x="900" y="1264" on="0"/>
        <pt x="875" y="1282" on="1"/>
        <pt x="875" y="1356" on="1"/>
        <pt x="1413" y="1356" on="1"/>
        <pt x="1413" y="1282" on="1"/>
        <pt x="1388" y="1264" on="0"/>
        <pt x="1322" y="1236" on="0"/>
        <pt x="1285" y="1225" on="1"/>
        <pt x="1285" y="130" on="1"/>
        <pt x="1324" y="122" on="0"/>
        <pt x="1389" y="89" on="0"/>
        <pt x="1413" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 42 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10042" xMin="110" yMin="0" xMax="2139" yMax="1356">
      <contour>
        <pt x="875" y="1356" on="1"/>
        <pt x="1376" y="1356" on="1"/>
        <pt x="1376" y="1282" on="1"/>
        <pt x="1356" y="1266" on="0"/>
        <pt x="1304" y="1236" on="0"/>
        <pt x="1272" y="1225" on="1"/>
        <pt x="1272" y="126" on="1"/>
        <pt x="1714" y="126" on="1"/>
        <pt x="1714" y="1225" on="1"/>
        <pt x="1657" y="1240" on="0"/>
        <pt x="1603" y="1282" on="1"/>
        <pt x="1603" y="1356" on="1"/>
        <pt x="2139" y="1356" on="1"/>
        <pt x="2139" y="1282" on="1"/>
        <pt x="2079" y="1243" on="0"/>
        <pt x="2004" y="1225" on="1"/>
        <pt x="2004" y="130" on="1"/>
        <pt x="2043" y="120" on="0"/>
        <pt x="2111" y="91" on="0"/>
        <pt x="2139" y="74" on="1"/>
        <pt x="2139" y="0" on="1"/>
        <pt x="110" y="0" on="1"/>
        <pt x="110" y="74" on="1"/>
        <pt x="141" y="91" on="0"/>
        <pt x="215" y="122" on="0"/>
        <pt x="249" y="130" on="1"/>
        <pt x="249" y="1225" on="1"/>
        <pt x="171" y="1242" on="0"/>
        <pt x="110" y="1282" on="1"/>
        <pt x="110" y="1356" on="1"/>
        <pt x="644" y="1356" on="1"/>
        <pt x="644" y="1282" on="1"/>
        <pt x="629" y="1270" on="0"/>
        <pt x="572" y="1238" on="0"/>
        <pt x="540" y="1225" on="1"/>
        <pt x="540" y="126" on="1"/>
        <pt x="982" y="126" on="1"/>
        <pt x="982" y="1225" on="1"/>
        <pt x="916" y="1247" on="0"/>
        <pt x="875" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          36 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10043" xMin="88" yMin="-316" xMax="2209" yMax="1356">
      <contour>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="74" on="1"/>
        <pt x="117" y="89" on="0"/>
        <pt x="186" y="122" on="0"/>
        <pt x="227" y="130" on="1"/>
        <pt x="227" y="1225" on="1"/>
        <pt x="191" y="1232" on="0"/>
        <pt x="115" y="1262" on="0"/>
        <pt x="88" y="1282" on="1"/>
        <pt x="88" y="1356" on="1"/>
        <pt x="622" y="1356" on="1"/>
        <pt x="622" y="1282" on="1"/>
        <pt x="605" y="1266" on="0"/>
        <pt x="548" y="1236" on="0"/>
        <pt x="518" y="1225" on="1"/>
        <pt x="518" y="126" on="1"/>
        <pt x="960" y="126" on="1"/>
        <pt x="960" y="1225" on="1"/>
        <pt x="894" y="1249" on="0"/>
        <pt x="853" y="1282" on="1"/>
        <pt x="853" y="1356" on="1"/>
        <pt x="1355" y="1356" on="1"/>
        <pt x="1355" y="1282" on="1"/>
        <pt x="1337" y="1266" on="0"/>
        <pt x="1284" y="1236" on="0"/>
        <pt x="1250" y="1225" on="1"/>
        <pt x="1250" y="126" on="1"/>
        <pt x="1692" y="126" on="1"/>
        <pt x="1692" y="1225" on="1"/>
        <pt x="1627" y="1245" on="0"/>
        <pt x="1581" y="1282" on="1"/>
        <pt x="1581" y="1356" on="1"/>
        <pt x="2117" y="1356" on="1"/>
        <pt x="2117" y="1282" on="1"/>
        <pt x="2091" y="1262" on="0"/>
        <pt x="2023" y="1234" on="0"/>
        <pt x="1982" y="1225" on="1"/>
        <pt x="1982" y="126" on="1"/>
        <pt x="2209" y="126" on="1"/>
        <pt x="2209" y="81" on="0"/>
        <pt x="2200" y="-35" on="0"/>
        <pt x="2187" y="-155" on="0"/>
        <pt x="2170" y="-269" on="0"/>
        <pt x="2158" y="-316" on="1"/>
        <pt x="2082" y="-316" on="1"/>
        <pt x="1978" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          16 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10044" xMin="30" yMin="-6" xMax="1505" yMax="1356">
      <contour>
        <pt x="927" y="1356" on="1"/>
        <pt x="927" y="1282" on="1"/>
        <pt x="894" y="1262" on="0"/>
        <pt x="798" y="1236" on="0"/>
        <pt x="749" y="1225" on="1"/>
        <pt x="749" y="811" on="1"/>
        <pt x="771" y="815" on="0"/>
        <pt x="823" y="820" on="0"/>
        <pt x="876" y="823" on="0"/>
        <pt x="927" y="825" on="0"/>
        <pt x="949" y="825" on="1"/>
        <pt x="1014" y="825" on="0"/>
        <pt x="1147" y="811" on="0"/>
        <pt x="1271" y="776" on="0"/>
        <pt x="1379" y="718" on="0"/>
        <pt x="1459" y="629" on="0"/>
        <pt x="1505" y="507" on="0"/>
        <pt x="1505" y="426" on="1"/>
        <pt x="1505" y="304" on="0"/>
        <pt x="1411" y="139" on="0"/>
        <pt x="1249" y="38" on="0"/>
        <pt x="1030" y="-6" on="0"/>
        <pt x="905" y="-6" on="1"/>
        <pt x="896" y="-6" on="0"/>
        <pt x="821" y="-4" on="0"/>
        <pt x="726" y="-2" on="0"/>
        <pt x="630" y="0" on="0"/>
        <pt x="600" y="0" on="1"/>
        <pt x="299" y="0" on="1"/>
        <pt x="299" y="74" on="1"/>
        <pt x="334" y="93" on="0"/>
        <pt x="413" y="122" on="0"/>
        <pt x="458" y="130" on="1"/>
        <pt x="458" y="1229" on="1"/>
        <pt x="256" y="1229" on="1"/>
        <pt x="154" y="948" on="1"/>
        <pt x="72" y="948" on="1"/>
        <pt x="64" y="996" on="0"/>
        <pt x="49" y="1107" on="0"/>
        <pt x="37" y="1216" on="0"/>
        <pt x="30" y="1317" on="0"/>
        <pt x="30" y="1356" on="1"/>
      </contour>
      <contour>
        <pt x="881" y="699" on="1"/>
        <pt x="844" y="699" on="0"/>
        <pt x="770" y="691" on="0"/>
        <pt x="749" y="687" on="1"/>
        <pt x="749" y="128" on="1"/>
        <pt x="775" y="125" on="0"/>
        <pt x="844" y="120" on="0"/>
        <pt x="871" y="120" on="1"/>
        <pt x="948" y="120" on="0"/>
        <pt x="1066" y="153" on="0"/>
        <pt x="1146" y="226" on="0"/>
        <pt x="1187" y="344" on="0"/>
        <pt x="1187" y="428" on="1"/>
        <pt x="1187" y="501" on="0"/>
        <pt x="1141" y="604" on="0"/>
        <pt x="1060" y="669" on="0"/>
        <pt x="947" y="699" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 41 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 33 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10045" xMin="80" yMin="-6" xMax="1931" yMax="1356">
      <contour>
        <pt x="1931" y="0" on="1"/>
        <pt x="1343" y="0" on="1"/>
        <pt x="1343" y="74" on="1"/>
        <pt x="1375" y="91" on="0"/>
        <pt x="1447" y="120" on="0"/>
        <pt x="1485" y="130" on="1"/>
        <pt x="1485" y="1225" on="1"/>
        <pt x="1448" y="1234" on="0"/>
        <pt x="1369" y="1260" on="0"/>
        <pt x="1334" y="1282" on="1"/>
        <pt x="1334" y="1356" on="1"/>
        <pt x="1931" y="1356" on="1"/>
        <pt x="1931" y="1282" on="1"/>
        <pt x="1865" y="1240" on="0"/>
        <pt x="1776" y="1225" on="1"/>
        <pt x="1776" y="130" on="1"/>
        <pt x="1824" y="122" on="0"/>
        <pt x="1901" y="89" on="0"/>
        <pt x="1931" y="74" on="1"/>
      </contour>
      <contour>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="74" on="1"/>
        <pt x="115" y="93" on="0"/>
        <pt x="198" y="124" on="0"/>
        <pt x="238" y="130" on="1"/>
        <pt x="238" y="1225" on="1"/>
        <pt x="200" y="1234" on="0"/>
        <pt x="115" y="1260" on="0"/>
        <pt x="80" y="1282" on="1"/>
        <pt x="80" y="1356" on="1"/>
        <pt x="708" y="1356" on="1"/>
        <pt x="708" y="1282" on="1"/>
        <pt x="674" y="1262" on="0"/>
        <pt x="577" y="1234" on="0"/>
        <pt x="529" y="1225" on="1"/>
        <pt x="529" y="811" on="1"/>
        <pt x="574" y="817" on="0"/>
        <pt x="665" y="825" on="0"/>
        <pt x="727" y="825" on="1"/>
        <pt x="796" y="825" on="0"/>
        <pt x="933" y="810" on="0"/>
        <pt x="1057" y="775" on="0"/>
        <pt x="1165" y="716" on="0"/>
        <pt x="1243" y="627" on="0"/>
        <pt x="1288" y="506" on="0"/>
        <pt x="1288" y="426" on="1"/>
        <pt x="1288" y="316" on="0"/>
        <pt x="1207" y="153" on="0"/>
        <pt x="1059" y="46" on="0"/>
        <pt x="848" y="-6" on="0"/>
        <pt x="719" y="-6" on="1"/>
        <pt x="712" y="-6" on="0"/>
        <pt x="667" y="-5" on="0"/>
        <pt x="605" y="-4" on="0"/>
        <pt x="532" y="-2" on="0"/>
        <pt x="460" y="-1" on="0"/>
        <pt x="397" y="0" on="0"/>
        <pt x="377" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="668" y="699" on="1"/>
        <pt x="633" y="699" on="0"/>
        <pt x="566" y="693" on="0"/>
        <pt x="529" y="687" on="1"/>
        <pt x="529" y="128" on="1"/>
        <pt x="551" y="126" on="0"/>
        <pt x="589" y="124" on="0"/>
        <pt x="624" y="121" on="0"/>
        <pt x="660" y="120" on="0"/>
        <pt x="682" y="120" on="1"/>
        <pt x="760" y="120" on="0"/>
        <pt x="869" y="163" on="0"/>
        <pt x="938" y="243" on="0"/>
        <pt x="969" y="356" on="0"/>
        <pt x="969" y="426" on="1"/>
        <pt x="969" y="498" on="0"/>
        <pt x="924" y="601" on="0"/>
        <pt x="843" y="667" on="0"/>
        <pt x="733" y="699" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            49
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            49 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          37 28 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          57 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          66 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10046" xMin="70" yMin="-6" xMax="1286" yMax="1356">
      <contour>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="105" y="93" on="0"/>
        <pt x="188" y="124" on="0"/>
        <pt x="228" y="130" on="1"/>
        <pt x="228" y="1225" on="1"/>
        <pt x="190" y="1234" on="0"/>
        <pt x="105" y="1260" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="698" y="1356" on="1"/>
        <pt x="698" y="1282" on="1"/>
        <pt x="664" y="1262" on="0"/>
        <pt x="567" y="1234" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="811" on="1"/>
        <pt x="564" y="817" on="0"/>
        <pt x="663" y="825" on="0"/>
        <pt x="725" y="825" on="1"/>
        <pt x="794" y="825" on="0"/>
        <pt x="931" y="810" on="0"/>
        <pt x="1055" y="775" on="0"/>
        <pt x="1163" y="716" on="0"/>
        <pt x="1241" y="627" on="0"/>
        <pt x="1286" y="506" on="0"/>
        <pt x="1286" y="426" on="1"/>
        <pt x="1286" y="316" on="0"/>
        <pt x="1203" y="153" on="0"/>
        <pt x="1051" y="46" on="0"/>
        <pt x="838" y="-6" on="0"/>
        <pt x="709" y="-6" on="1"/>
        <pt x="702" y="-6" on="0"/>
        <pt x="657" y="-5" on="0"/>
        <pt x="595" y="-4" on="0"/>
        <pt x="522" y="-2" on="0"/>
        <pt x="450" y="-1" on="0"/>
        <pt x="387" y="0" on="0"/>
        <pt x="367" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="666" y="699" on="1"/>
        <pt x="631" y="699" on="0"/>
        <pt x="556" y="693" on="0"/>
        <pt x="519" y="687" on="1"/>
        <pt x="519" y="128" on="1"/>
        <pt x="541" y="126" on="0"/>
        <pt x="579" y="124" on="0"/>
        <pt x="614" y="121" on="0"/>
        <pt x="650" y="120" on="0"/>
        <pt x="672" y="120" on="1"/>
        <pt x="750" y="120" on="0"/>
        <pt x="861" y="163" on="0"/>
        <pt x="933" y="243" on="0"/>
        <pt x="967" y="356" on="0"/>
        <pt x="967" y="426" on="1"/>
        <pt x="967" y="498" on="0"/>
        <pt x="922" y="601" on="0"/>
        <pt x="841" y="667" on="0"/>
        <pt x="731" y="699" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          18 57 58
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          18 9 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          38 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10047" xMin="94" yMin="-24" xMax="1291" yMax="1379">
      <contour>
        <pt x="397" y="587" on="1"/>
        <pt x="392" y="607" on="0"/>
        <pt x="385" y="654" on="0"/>
        <pt x="384" y="682" on="1"/>
        <pt x="382" y="741" on="0"/>
        <pt x="397" y="786" on="1"/>
        <pt x="968" y="778" on="1"/>
        <pt x="963" y="895" on="0"/>
        <pt x="883" y="1073" on="0"/>
        <pt x="754" y="1193" on="0"/>
        <pt x="588" y="1253" on="0"/>
        <pt x="498" y="1253" on="1"/>
        <pt x="472" y="1253" on="0"/>
        <pt x="419" y="1245" on="0"/>
        <pt x="371" y="1234" on="0"/>
        <pt x="333" y="1221" on="0"/>
        <pt x="323" y="1216" on="1"/>
        <pt x="222" y="965" on="1"/>
        <pt x="143" y="965" on="1"/>
        <pt x="138" y="986" on="0"/>
        <pt x="126" y="1066" on="0"/>
        <pt x="116" y="1161" on="0"/>
        <pt x="112" y="1257" on="0"/>
        <pt x="114" y="1295" on="1"/>
        <pt x="148" y="1314" on="0"/>
        <pt x="251" y="1345" on="0"/>
        <pt x="363" y="1367" on="0"/>
        <pt x="474" y="1379" on="0"/>
        <pt x="516" y="1379" on="1"/>
        <pt x="683" y="1379" on="0"/>
        <pt x="967" y="1293" on="0"/>
        <pt x="1174" y="1120" on="0"/>
        <pt x="1291" y="863" on="0"/>
        <pt x="1291" y="692" on="1"/>
        <pt x="1291" y="561" on="0"/>
        <pt x="1227" y="353" on="0"/>
        <pt x="1115" y="194" on="0"/>
        <pt x="965" y="81" on="0"/>
        <pt x="792" y="9" on="0"/>
        <pt x="606" y="-24" on="0"/>
        <pt x="514" y="-24" on="1"/>
        <pt x="454" y="-24" on="0"/>
        <pt x="334" y="-12" on="0"/>
        <pt x="223" y="8" on="0"/>
        <pt x="128" y="36" on="0"/>
        <pt x="94" y="52" on="1"/>
        <pt x="94" y="84" on="0"/>
        <pt x="101" y="178" on="0"/>
        <pt x="113" y="281" on="0"/>
        <pt x="128" y="384" on="0"/>
        <pt x="135" y="425" on="1"/>
        <pt x="216" y="425" on="1"/>
        <pt x="321" y="122" on="1"/>
        <pt x="336" y="118" on="0"/>
        <pt x="377" y="111" on="0"/>
        <pt x="422" y="106" on="0"/>
        <pt x="468" y="103" on="0"/>
        <pt x="488" y="103" on="1"/>
        <pt x="541" y="103" on="0"/>
        <pt x="653" y="129" on="0"/>
        <pt x="759" y="185" on="0"/>
        <pt x="854" y="272" on="0"/>
        <pt x="925" y="393" on="0"/>
        <pt x="967" y="549" on="0"/>
        <pt x="968" y="647" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 28 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          0 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 11 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          57 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          51 57 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          64 0 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10048" xMin="88" yMin="-24" xMax="2202" yMax="1379">
      <contour>
        <pt x="685" y="0" on="1"/>
        <pt x="88" y="0" on="1"/>
        <pt x="88" y="74" on="1"/>
        <pt x="123" y="93" on="0"/>
        <pt x="202" y="122" on="0"/>
        <pt x="247" y="130" on="1"/>
        <pt x="247" y="1225" on="1"/>
        <pt x="208" y="1232" on="0"/>
        <pt x="125" y="1260" on="0"/>
        <pt x="88" y="1282" on="1"/>
        <pt x="88" y="1356" on="1"/>
        <pt x="685" y="1356" on="1"/>
        <pt x="685" y="1282" on="1"/>
        <pt x="661" y="1266" on="0"/>
        <pt x="591" y="1236" on="0"/>
        <pt x="537" y="1225" on="1"/>
        <pt x="537" y="757" on="1"/>
        <pt x="788" y="757" on="1"/>
        <pt x="801" y="893" on="0"/>
        <pt x="910" y="1122" on="0"/>
        <pt x="1092" y="1287" on="0"/>
        <pt x="1342" y="1379" on="0"/>
        <pt x="1495" y="1379" on="1"/>
        <pt x="1659" y="1379" on="0"/>
        <pt x="1921" y="1274" on="0"/>
        <pt x="2104" y="1086" on="0"/>
        <pt x="2202" y="829" on="0"/>
        <pt x="2202" y="678" on="1"/>
        <pt x="2202" y="526" on="0"/>
        <pt x="2104" y="269" on="0"/>
        <pt x="1921" y="81" on="0"/>
        <pt x="1659" y="-24" on="0"/>
        <pt x="1495" y="-24" on="1"/>
        <pt x="1337" y="-24" on="0"/>
        <pt x="1082" y="74" on="0"/>
        <pt x="899" y="248" on="0"/>
        <pt x="793" y="489" on="0"/>
        <pt x="786" y="632" on="1"/>
        <pt x="537" y="632" on="1"/>
        <pt x="537" y="130" on="1"/>
        <pt x="586" y="120" on="0"/>
        <pt x="658" y="89" on="0"/>
        <pt x="685" y="74" on="1"/>
      </contour>
      <contour>
        <pt x="1102" y="678" on="1"/>
        <pt x="1102" y="553" on="0"/>
        <pt x="1155" y="343" on="0"/>
        <pt x="1258" y="189" on="0"/>
        <pt x="1407" y="103" on="0"/>
        <pt x="1503" y="103" on="1"/>
        <pt x="1591" y="103" on="0"/>
        <pt x="1728" y="189" on="0"/>
        <pt x="1823" y="343" on="0"/>
        <pt x="1873" y="553" on="0"/>
        <pt x="1873" y="678" on="1"/>
        <pt x="1873" y="802" on="0"/>
        <pt x="1824" y="1013" on="0"/>
        <pt x="1725" y="1166" on="0"/>
        <pt x="1578" y="1253" on="0"/>
        <pt x="1480" y="1253" on="1"/>
        <pt x="1385" y="1253" on="0"/>
        <pt x="1244" y="1166" on="0"/>
        <pt x="1149" y="1013" on="0"/>
        <pt x="1102" y="802" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          58 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10049" xMin="50" yMin="0" xMax="1409" yMax="1362">
      <contour>
        <pt x="1409" y="1356" on="1"/>
        <pt x="1409" y="1282" on="1"/>
        <pt x="1384" y="1266" on="0"/>
        <pt x="1298" y="1236" on="0"/>
        <pt x="1250" y="1225" on="1"/>
        <pt x="1250" y="130" on="1"/>
        <pt x="1301" y="120" on="0"/>
        <pt x="1377" y="89" on="0"/>
        <pt x="1409" y="74" on="1"/>
        <pt x="1409" y="0" on="1"/>
        <pt x="808" y="0" on="1"/>
        <pt x="808" y="74" on="1"/>
        <pt x="841" y="91" on="0"/>
        <pt x="917" y="120" on="0"/>
        <pt x="959" y="130" on="1"/>
        <pt x="959" y="556" on="1"/>
        <pt x="757" y="556" on="1"/>
        <pt x="728" y="489" on="0"/>
        <pt x="656" y="348" on="0"/>
        <pt x="578" y="216" on="0"/>
        <pt x="500" y="102" on="0"/>
        <pt x="465" y="62" on="1"/>
        <pt x="385" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="66" on="1"/>
        <pt x="135" y="113" on="1"/>
        <pt x="160" y="133" on="0"/>
        <pt x="225" y="200" on="0"/>
        <pt x="289" y="272" on="0"/>
        <pt x="342" y="338" on="0"/>
        <pt x="356" y="358" on="1"/>
        <pt x="506" y="578" on="1"/>
        <pt x="479" y="586" on="0"/>
        <pt x="411" y="615" on="0"/>
        <pt x="342" y="659" on="0"/>
        <pt x="276" y="719" on="0"/>
        <pt x="225" y="796" on="0"/>
        <pt x="194" y="891" on="0"/>
        <pt x="194" y="948" on="1"/>
        <pt x="194" y="1060" on="0"/>
        <pt x="291" y="1219" on="0"/>
        <pt x="370" y="1269" on="1"/>
        <pt x="449" y="1318" on="0"/>
        <pt x="664" y="1362" on="0"/>
        <pt x="815" y="1362" on="1"/>
        <pt x="834" y="1362" on="0"/>
        <pt x="907" y="1360" on="0"/>
        <pt x="991" y="1358" on="0"/>
        <pt x="1073" y="1356" on="0"/>
        <pt x="1103" y="1356" on="1"/>
      </contour>
      <contour>
        <pt x="844" y="670" on="1"/>
        <pt x="857" y="670" on="0"/>
        <pt x="888" y="671" on="0"/>
        <pt x="920" y="674" on="0"/>
        <pt x="948" y="677" on="0"/>
        <pt x="959" y="680" on="1"/>
        <pt x="959" y="1225" on="1"/>
        <pt x="951" y="1227" on="0"/>
        <pt x="918" y="1231" on="0"/>
        <pt x="879" y="1234" on="0"/>
        <pt x="841" y="1236" on="0"/>
        <pt x="829" y="1236" on="1"/>
        <pt x="762" y="1236" on="0"/>
        <pt x="644" y="1207" on="0"/>
        <pt x="555" y="1140" on="0"/>
        <pt x="504" y="1030" on="0"/>
        <pt x="504" y="950" on="1"/>
        <pt x="504" y="878" on="0"/>
        <pt x="550" y="772" on="0"/>
        <pt x="638" y="703" on="0"/>
        <pt x="764" y="670" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          16 71 72
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          50 44 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          127 50 143 50 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 50 79 50 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 50 31 50 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          15 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 50 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          61 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10050" xMin="70" yMin="0" xMax="1015" yMax="1646">
      <contour>
        <pt x="519" y="130" on="1"/>
        <pt x="567" y="122" on="0"/>
        <pt x="663" y="91" on="0"/>
        <pt x="705" y="74" on="1"/>
        <pt x="705" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="157" y="117" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="190" y="1234" on="0"/>
        <pt x="107" y="1260" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="789" y="1356" on="1"/>
        <pt x="906" y="1646" on="1"/>
        <pt x="987" y="1646" on="1"/>
        <pt x="993" y="1600" on="0"/>
        <pt x="1004" y="1484" on="0"/>
        <pt x="1011" y="1367" on="0"/>
        <pt x="1015" y="1263" on="0"/>
        <pt x="1015" y="1229" on="1"/>
        <pt x="519" y="1229" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10051" xMin="54" yMin="-9" xMax="1568" yMax="1356">
      <contour>
        <pt x="1568" y="447" on="1"/>
        <pt x="1568" y="311" on="0"/>
        <pt x="1499" y="133" on="0"/>
        <pt x="1370" y="30" on="0"/>
        <pt x="1186" y="-9" on="0"/>
        <pt x="1072" y="-6" on="1"/>
        <pt x="1060" y="81" on="1"/>
        <pt x="1113" y="93" on="0"/>
        <pt x="1195" y="133" on="0"/>
        <pt x="1250" y="205" on="0"/>
        <pt x="1278" y="318" on="0"/>
        <pt x="1278" y="403" on="1"/>
        <pt x="1278" y="551" on="0"/>
        <pt x="1169" y="699" on="0"/>
        <pt x="1042" y="699" on="1"/>
        <pt x="978" y="699" on="0"/>
        <pt x="856" y="662" on="0"/>
        <pt x="805" y="634" on="1"/>
        <pt x="805" y="130" on="1"/>
        <pt x="838" y="120" on="0"/>
        <pt x="907" y="89" on="0"/>
        <pt x="932" y="74" on="1"/>
        <pt x="932" y="0" on="1"/>
        <pt x="327" y="0" on="1"/>
        <pt x="327" y="74" on="1"/>
        <pt x="366" y="89" on="0"/>
        <pt x="464" y="122" on="0"/>
        <pt x="515" y="130" on="1"/>
        <pt x="515" y="1229" on="1"/>
        <pt x="301" y="1229" on="1"/>
        <pt x="177" y="948" on="1"/>
        <pt x="98" y="948" on="1"/>
        <pt x="91" y="988" on="0"/>
        <pt x="77" y="1091" on="0"/>
        <pt x="64" y="1201" on="0"/>
        <pt x="55" y="1310" on="0"/>
        <pt x="54" y="1356" on="1"/>
        <pt x="1268" y="1356" on="1"/>
        <pt x="1267" y="1309" on="0"/>
        <pt x="1259" y="1203" on="0"/>
        <pt x="1247" y="1097" on="0"/>
        <pt x="1233" y="997" on="0"/>
        <pt x="1226" y="957" on="1"/>
        <pt x="1144" y="957" on="1"/>
        <pt x="1020" y="1229" on="1"/>
        <pt x="805" y="1229" on="1"/>
        <pt x="805" y="750" on="1"/>
        <pt x="883" y="792" on="0"/>
        <pt x="1049" y="835" on="0"/>
        <pt x="1141" y="835" on="1"/>
        <pt x="1192" y="835" on="0"/>
        <pt x="1295" y="822" on="0"/>
        <pt x="1390" y="788" on="0"/>
        <pt x="1472" y="732" on="0"/>
        <pt x="1533" y="646" on="0"/>
        <pt x="1568" y="526" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          49 36 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          14 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 28 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10052" xMin="100" yMin="0" xMax="1223" yMax="1751">
      <component glyphName="afii10020" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="438" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10053" xMin="88" yMin="-24" xMax="1279" yMax="1379">
      <contour>
        <pt x="1165" y="407" on="1"/>
        <pt x="1244" y="407" on="1"/>
        <pt x="1251" y="375" on="0"/>
        <pt x="1264" y="287" on="0"/>
        <pt x="1273" y="190" on="0"/>
        <pt x="1279" y="94" on="0"/>
        <pt x="1279" y="54" on="1"/>
        <pt x="1250" y="35" on="0"/>
        <pt x="1148" y="6" on="0"/>
        <pt x="1028" y="-14" on="0"/>
        <pt x="903" y="-24" on="0"/>
        <pt x="851" y="-24" on="1"/>
        <pt x="690" y="-24" on="0"/>
        <pt x="411" y="54" on="0"/>
        <pt x="206" y="222" on="0"/>
        <pt x="88" y="485" on="0"/>
        <pt x="88" y="671" on="1"/>
        <pt x="88" y="794" on="0"/>
        <pt x="145" y="994" on="0"/>
        <pt x="247" y="1151" on="0"/>
        <pt x="385" y="1267" on="0"/>
        <pt x="547" y="1342" on="0"/>
        <pt x="725" y="1379" on="0"/>
        <pt x="816" y="1379" on="1"/>
        <pt x="944" y="1379" on="0"/>
        <pt x="1184" y="1346" on="0"/>
        <pt x="1274" y="1311" on="1"/>
        <pt x="1273" y="1284" on="0"/>
        <pt x="1263" y="1188" on="0"/>
        <pt x="1250" y="1079" on="0"/>
        <pt x="1235" y="974" on="0"/>
        <pt x="1229" y="939" on="1"/>
        <pt x="1147" y="939" on="1"/>
        <pt x="1041" y="1232" on="1"/>
        <pt x="1003" y="1242" on="0"/>
        <pt x="920" y="1253" on="0"/>
        <pt x="878" y="1253" on="1"/>
        <pt x="799" y="1253" on="0"/>
        <pt x="641" y="1206" on="0"/>
        <pt x="510" y="1089" on="0"/>
        <pt x="421" y="890" on="0"/>
        <pt x="411" y="738" on="1"/>
        <pt x="999" y="769" on="1"/>
        <pt x="1016" y="722" on="0"/>
        <pt x="1017" y="666" on="1"/>
        <pt x="1018" y="608" on="0"/>
        <pt x="1009" y="567" on="1"/>
        <pt x="949" y="574" on="0"/>
        <pt x="802" y="588" on="0"/>
        <pt x="730" y="593" on="1"/>
        <pt x="695" y="595" on="0"/>
        <pt x="610" y="599" on="0"/>
        <pt x="524" y="602" on="0"/>
        <pt x="443" y="605" on="0"/>
        <pt x="411" y="606" on="1"/>
        <pt x="418" y="485" on="0"/>
        <pt x="492" y="295" on="0"/>
        <pt x="550" y="233" on="1"/>
        <pt x="580" y="201" on="0"/>
        <pt x="659" y="153" on="0"/>
        <pt x="748" y="120" on="0"/>
        <pt x="842" y="103" on="0"/>
        <pt x="887" y="103" on="1"/>
        <pt x="914" y="103" on="0"/>
        <pt x="968" y="108" on="0"/>
        <pt x="1017" y="116" on="0"/>
        <pt x="1057" y="128" on="0"/>
        <pt x="1070" y="135" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          62 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 62 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 36 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          41 23 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          46 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          54 41 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10053dieresis" xMin="88" yMin="-24" xMax="1279" yMax="1720">
      <component glyphName="afii10053" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="295" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          77
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          80
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10054" xMin="106" yMin="-24" xMax="1034" yMax="1379">
      <component glyphName="S" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10055" xMin="96" yMin="0" xMax="700" yMax="1356">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10055.alt" xMin="96" yMin="0" xMax="700" yMax="1723">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="108" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10056" xMin="4" yMin="0" xMax="794" yMax="1720">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="-142" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10057" xMin="193" yMin="-310" xMax="829" yMax="1356">
      <component glyphName="J" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10058" xMin="51" yMin="-24" xMax="1998" yMax="1356">
      <contour>
        <pt x="805" y="0" on="1"/>
        <pt x="805" y="74" on="1"/>
        <pt x="840" y="93" on="0"/>
        <pt x="913" y="122" on="0"/>
        <pt x="952" y="130" on="1"/>
        <pt x="952" y="1229" on="1"/>
        <pt x="616" y="1229" on="1"/>
        <pt x="611" y="934" on="0"/>
        <pt x="589" y="738" on="1"/>
        <pt x="578" y="639" on="0"/>
        <pt x="553" y="478" on="0"/>
        <pt x="537" y="414" on="1"/>
        <pt x="506" y="287" on="0"/>
        <pt x="468" y="212" on="1"/>
        <pt x="449" y="174" on="0"/>
        <pt x="409" y="110" on="0"/>
        <pt x="389" y="83" on="1"/>
        <pt x="371" y="58" on="0"/>
        <pt x="323" y="18" on="0"/>
        <pt x="269" y="-9" on="0"/>
        <pt x="214" y="-24" on="0"/>
        <pt x="188" y="-24" on="1"/>
        <pt x="163" y="-14" on="0"/>
        <pt x="115" y="46" on="0"/>
        <pt x="77" y="124" on="0"/>
        <pt x="53" y="209" on="0"/>
        <pt x="51" y="246" on="1"/>
        <pt x="103" y="320" on="1"/>
        <pt x="334" y="264" on="1"/>
        <pt x="358" y="318" on="0"/>
        <pt x="406" y="472" on="0"/>
        <pt x="445" y="695" on="0"/>
        <pt x="469" y="1000" on="0"/>
        <pt x="469" y="1207" on="1"/>
        <pt x="409" y="1216" on="0"/>
        <pt x="302" y="1259" on="0"/>
        <pt x="264" y="1282" on="1"/>
        <pt x="264" y="1356" on="1"/>
        <pt x="1413" y="1356" on="1"/>
        <pt x="1413" y="1282" on="1"/>
        <pt x="1376" y="1262" on="0"/>
        <pt x="1290" y="1234" on="0"/>
        <pt x="1242" y="1225" on="1"/>
        <pt x="1242" y="811" on="1"/>
        <pt x="1286" y="817" on="0"/>
        <pt x="1385" y="825" on="0"/>
        <pt x="1447" y="825" on="1"/>
        <pt x="1516" y="825" on="0"/>
        <pt x="1651" y="810" on="0"/>
        <pt x="1774" y="775" on="0"/>
        <pt x="1878" y="716" on="0"/>
        <pt x="1955" y="627" on="0"/>
        <pt x="1998" y="506" on="0"/>
        <pt x="1998" y="426" on="1"/>
        <pt x="1998" y="316" on="0"/>
        <pt x="1918" y="153" on="0"/>
        <pt x="1770" y="46" on="0"/>
        <pt x="1560" y="-6" on="0"/>
        <pt x="1431" y="-6" on="1"/>
        <pt x="1425" y="-6" on="0"/>
        <pt x="1388" y="-5" on="0"/>
        <pt x="1336" y="-4" on="0"/>
        <pt x="1274" y="-2" on="0"/>
        <pt x="1242" y="-2" on="1"/>
        <pt x="1205" y="-1" on="0"/>
        <pt x="1131" y="0" on="0"/>
        <pt x="1104" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="1388" y="699" on="1"/>
        <pt x="1353" y="699" on="0"/>
        <pt x="1278" y="693" on="0"/>
        <pt x="1242" y="687" on="1"/>
        <pt x="1242" y="128" on="1"/>
        <pt x="1264" y="126" on="0"/>
        <pt x="1301" y="124" on="0"/>
        <pt x="1336" y="121" on="0"/>
        <pt x="1372" y="120" on="0"/>
        <pt x="1394" y="120" on="1"/>
        <pt x="1472" y="120" on="0"/>
        <pt x="1580" y="163" on="0"/>
        <pt x="1648" y="243" on="0"/>
        <pt x="1679" y="356" on="0"/>
        <pt x="1679" y="426" on="1"/>
        <pt x="1679" y="498" on="0"/>
        <pt x="1637" y="601" on="0"/>
        <pt x="1560" y="667" on="0"/>
        <pt x="1453" y="699" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          4 86 87
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            37
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            37 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            58
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            58 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          27 21 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          28 27 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          46 37 58
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          67 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          76 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10059" xMin="60" yMin="-6" xMax="2002" yMax="1356">
      <contour>
        <pt x="844" y="0" on="1"/>
        <pt x="844" y="74" on="1"/>
        <pt x="877" y="95" on="0"/>
        <pt x="942" y="122" on="0"/>
        <pt x="982" y="130" on="1"/>
        <pt x="982" y="656" on="1"/>
        <pt x="509" y="656" on="1"/>
        <pt x="509" y="130" on="1"/>
        <pt x="548" y="122" on="0"/>
        <pt x="614" y="95" on="0"/>
        <pt x="647" y="74" on="1"/>
        <pt x="647" y="0" on="1"/>
        <pt x="60" y="0" on="1"/>
        <pt x="60" y="74" on="1"/>
        <pt x="93" y="91" on="0"/>
        <pt x="180" y="122" on="0"/>
        <pt x="219" y="130" on="1"/>
        <pt x="219" y="1225" on="1"/>
        <pt x="171" y="1234" on="0"/>
        <pt x="87" y="1264" on="0"/>
        <pt x="60" y="1282" on="1"/>
        <pt x="60" y="1356" on="1"/>
        <pt x="647" y="1356" on="1"/>
        <pt x="647" y="1282" on="1"/>
        <pt x="618" y="1262" on="0"/>
        <pt x="546" y="1232" on="0"/>
        <pt x="509" y="1225" on="1"/>
        <pt x="509" y="782" on="1"/>
        <pt x="982" y="782" on="1"/>
        <pt x="982" y="1225" on="1"/>
        <pt x="944" y="1234" on="0"/>
        <pt x="883" y="1259" on="0"/>
        <pt x="844" y="1282" on="1"/>
        <pt x="844" y="1356" on="1"/>
        <pt x="1443" y="1356" on="1"/>
        <pt x="1443" y="1282" on="1"/>
        <pt x="1406" y="1262" on="0"/>
        <pt x="1319" y="1234" on="0"/>
        <pt x="1273" y="1225" on="1"/>
        <pt x="1273" y="780" on="1"/>
        <pt x="1320" y="785" on="0"/>
        <pt x="1418" y="794" on="0"/>
        <pt x="1473" y="794" on="1"/>
        <pt x="1574" y="794" on="0"/>
        <pt x="1765" y="757" on="0"/>
        <pt x="1913" y="667" on="0"/>
        <pt x="2002" y="517" on="0"/>
        <pt x="2002" y="405" on="1"/>
        <pt x="2002" y="297" on="0"/>
        <pt x="1906" y="142" on="0"/>
        <pt x="1746" y="42" on="0"/>
        <pt x="1537" y="-6" on="0"/>
        <pt x="1425" y="-6" on="1"/>
        <pt x="1355" y="-6" on="0"/>
        <pt x="1213" y="-1" on="0"/>
        <pt x="1136" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="1404" y="669" on="1"/>
        <pt x="1363" y="669" on="0"/>
        <pt x="1292" y="661" on="0"/>
        <pt x="1273" y="656" on="1"/>
        <pt x="1273" y="128" on="1"/>
        <pt x="1302" y="124" on="0"/>
        <pt x="1359" y="120" on="0"/>
        <pt x="1394" y="120" on="1"/>
        <pt x="1540" y="120" on="0"/>
        <pt x="1684" y="265" on="0"/>
        <pt x="1684" y="407" on="1"/>
        <pt x="1684" y="474" on="0"/>
        <pt x="1642" y="573" on="0"/>
        <pt x="1568" y="638" on="0"/>
        <pt x="1465" y="669" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          27 21 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          42 33 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          56 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          63 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10060" xMin="20" yMin="0" xMax="1598" yMax="1356">
      <contour>
        <pt x="756" y="745" on="1"/>
        <pt x="783" y="761" on="0"/>
        <pt x="854" y="793" on="0"/>
        <pt x="939" y="818" on="0"/>
        <pt x="1037" y="833" on="0"/>
        <pt x="1091" y="833" on="1"/>
        <pt x="1169" y="833" on="0"/>
        <pt x="1303" y="801" on="0"/>
        <pt x="1402" y="718" on="0"/>
        <pt x="1459" y="577" on="0"/>
        <pt x="1459" y="469" on="1"/>
        <pt x="1459" y="130" on="1"/>
        <pt x="1496" y="124" on="0"/>
        <pt x="1570" y="93" on="0"/>
        <pt x="1598" y="74" on="1"/>
        <pt x="1598" y="0" on="1"/>
        <pt x="1169" y="0" on="1"/>
        <pt x="1169" y="401" on="1"/>
        <pt x="1169" y="468" on="0"/>
        <pt x="1155" y="577" on="0"/>
        <pt x="1113" y="655" on="0"/>
        <pt x="1036" y="697" on="0"/>
        <pt x="973" y="697" on="1"/>
        <pt x="909" y="697" on="0"/>
        <pt x="805" y="660" on="0"/>
        <pt x="756" y="630" on="1"/>
        <pt x="756" y="130" on="1"/>
        <pt x="789" y="120" on="0"/>
        <pt x="851" y="89" on="0"/>
        <pt x="876" y="74" on="1"/>
        <pt x="876" y="0" on="1"/>
        <pt x="277" y="0" on="1"/>
        <pt x="277" y="74" on="1"/>
        <pt x="316" y="89" on="0"/>
        <pt x="414" y="122" on="0"/>
        <pt x="465" y="130" on="1"/>
        <pt x="465" y="1229" on="1"/>
        <pt x="267" y="1229" on="1"/>
        <pt x="143" y="948" on="1"/>
        <pt x="64" y="948" on="1"/>
        <pt x="57" y="988" on="0"/>
        <pt x="43" y="1091" on="0"/>
        <pt x="30" y="1201" on="0"/>
        <pt x="21" y="1310" on="0"/>
        <pt x="20" y="1356" on="1"/>
        <pt x="1210" y="1356" on="1"/>
        <pt x="1209" y="1309" on="0"/>
        <pt x="1201" y="1203" on="0"/>
        <pt x="1189" y="1097" on="0"/>
        <pt x="1175" y="997" on="0"/>
        <pt x="1168" y="957" on="1"/>
        <pt x="1086" y="957" on="1"/>
        <pt x="962" y="1229" on="1"/>
        <pt x="756" y="1229" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 44 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 36 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10061" xMin="70" yMin="0" xMax="1465" yMax="1751">
      <component glyphName="afii10028" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="489" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10062" xMin="58" yMin="-9" xMax="1485" yMax="1747">
      <component glyphName="afii10037" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="292" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10065" xMin="44" yMin="-23" xMax="1000" yMax="958">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10066" xMin="51" yMin="-23" xMax="962" yMax="1426">
      <contour>
        <pt x="51" y="507" on="1"/>
        <pt x="51" y="741" on="0"/>
        <pt x="132" y="1053" on="0"/>
        <pt x="297" y="1242" on="0"/>
        <pt x="547" y="1326" on="0"/>
        <pt x="716" y="1332" on="1"/>
        <pt x="838" y="1426" on="1"/>
        <pt x="911" y="1426" on="1"/>
        <pt x="911" y="1390" on="0"/>
        <pt x="900" y="1298" on="0"/>
        <pt x="884" y="1208" on="0"/>
        <pt x="866" y="1134" on="0"/>
        <pt x="859" y="1116" on="1"/>
        <pt x="760" y="1116" on="0"/>
        <pt x="613" y="1112" on="0"/>
        <pt x="497" y="1099" on="0"/>
        <pt x="405" y="1072" on="0"/>
        <pt x="361" y="1049" on="1"/>
        <pt x="320" y="1028" on="0"/>
        <pt x="252" y="951" on="0"/>
        <pt x="201" y="854" on="0"/>
        <pt x="170" y="741" on="0"/>
        <pt x="167" y="683" on="1"/>
        <pt x="177" y="683" on="1"/>
        <pt x="197" y="729" on="0"/>
        <pt x="266" y="816" on="0"/>
        <pt x="359" y="883" on="0"/>
        <pt x="472" y="923" on="0"/>
        <pt x="536" y="923" on="1"/>
        <pt x="634" y="923" on="0"/>
        <pt x="792" y="868" on="0"/>
        <pt x="903" y="754" on="0"/>
        <pt x="962" y="580" on="0"/>
        <pt x="962" y="462" on="1"/>
        <pt x="962" y="361" on="0"/>
        <pt x="905" y="184" on="0"/>
        <pt x="789" y="53" on="0"/>
        <pt x="613" y="-23" on="0"/>
        <pt x="493" y="-23" on="1"/>
        <pt x="281" y="-23" on="0"/>
        <pt x="51" y="247" on="0"/>
      </contour>
      <contour>
        <pt x="342" y="491" on="1"/>
        <pt x="342" y="377" on="0"/>
        <pt x="361" y="222" on="0"/>
        <pt x="403" y="126" on="0"/>
        <pt x="468" y="84" on="0"/>
        <pt x="515" y="84" on="1"/>
        <pt x="604" y="84" on="0"/>
        <pt x="672" y="266" on="0"/>
        <pt x="672" y="449" on="1"/>
        <pt x="672" y="544" on="0"/>
        <pt x="644" y="697" on="0"/>
        <pt x="613" y="734" on="1"/>
        <pt x="584" y="768" on="0"/>
        <pt x="518" y="791" on="0"/>
        <pt x="484" y="791" on="1"/>
        <pt x="469" y="791" on="0"/>
        <pt x="434" y="781" on="0"/>
        <pt x="401" y="765" on="0"/>
        <pt x="370" y="746" on="0"/>
        <pt x="359" y="737" on="1"/>
        <pt x="356" y="715" on="0"/>
        <pt x="349" y="657" on="0"/>
        <pt x="345" y="593" on="0"/>
        <pt x="342" y="524" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          38 65 66
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 5 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          117 12 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10067" xMin="64" yMin="-8" xMax="1042" yMax="943">
      <contour>
        <pt x="1042" y="273" on="1"/>
        <pt x="1042" y="199" on="0"/>
        <pt x="977" y="92" on="0"/>
        <pt x="865" y="24" on="0"/>
        <pt x="714" y="-8" on="0"/>
        <pt x="627" y="-8" on="1"/>
        <pt x="568" y="-8" on="0"/>
        <pt x="475" y="-6" on="0"/>
        <pt x="403" y="-3" on="0"/>
        <pt x="349" y="0" on="0"/>
        <pt x="328" y="0" on="1"/>
        <pt x="64" y="0" on="1"/>
        <pt x="64" y="73" on="1"/>
        <pt x="123" y="103" on="0"/>
        <pt x="188" y="118" on="1"/>
        <pt x="188" y="817" on="1"/>
        <pt x="152" y="824" on="0"/>
        <pt x="90" y="847" on="0"/>
        <pt x="64" y="863" on="1"/>
        <pt x="64" y="935" on="1"/>
        <pt x="317" y="935" on="1"/>
        <pt x="407" y="935" on="0"/>
        <pt x="568" y="943" on="0"/>
        <pt x="638" y="943" on="1"/>
        <pt x="727" y="943" on="0"/>
        <pt x="862" y="920" on="0"/>
        <pt x="907" y="893" on="1"/>
        <pt x="954" y="865" on="0"/>
        <pt x="1000" y="783" on="0"/>
        <pt x="1000" y="720" on="1"/>
        <pt x="1000" y="676" on="0"/>
        <pt x="960" y="605" on="0"/>
        <pt x="896" y="552" on="0"/>
        <pt x="817" y="518" on="0"/>
        <pt x="778" y="511" on="1"/>
        <pt x="830" y="507" on="0"/>
        <pt x="925" y="473" on="0"/>
        <pt x="998" y="413" on="0"/>
        <pt x="1042" y="328" on="0"/>
      </contour>
      <contour>
        <pt x="456" y="107" on="1"/>
        <pt x="469" y="104" on="0"/>
        <pt x="507" y="101" on="0"/>
        <pt x="545" y="99" on="0"/>
        <pt x="579" y="99" on="0"/>
        <pt x="590" y="99" on="1"/>
        <pt x="760" y="99" on="0"/>
        <pt x="760" y="268" on="1"/>
        <pt x="760" y="348" on="0"/>
        <pt x="661" y="428" on="0"/>
        <pt x="581" y="428" on="1"/>
        <pt x="456" y="428" on="1"/>
      </contour>
      <contour>
        <pt x="456" y="509" on="1"/>
        <pt x="646" y="528" on="1"/>
        <pt x="661" y="537" on="0"/>
        <pt x="692" y="567" on="0"/>
        <pt x="716" y="609" on="0"/>
        <pt x="732" y="661" on="0"/>
        <pt x="732" y="693" on="1"/>
        <pt x="732" y="836" on="0"/>
        <pt x="566" y="836" on="1"/>
        <pt x="555" y="836" on="0"/>
        <pt x="527" y="836" on="0"/>
        <pt x="496" y="834" on="0"/>
        <pt x="467" y="832" on="0"/>
        <pt x="456" y="829" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 65 66
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          51 23 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          127 51 143 51 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          143 51 159 51 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 51 79 51 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 51 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 51 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          15 51 1
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 2 values pushed */
          50 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 51 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10068" xMin="54" yMin="0" xMax="886" yMax="935">
      <contour>
        <pt x="886" y="935" on="1"/>
        <pt x="884" y="900" on="0"/>
        <pt x="874" y="806" on="0"/>
        <pt x="860" y="706" on="0"/>
        <pt x="843" y="609" on="0"/>
        <pt x="834" y="571" on="1"/>
        <pt x="758" y="571" on="1"/>
        <pt x="674" y="829" on="1"/>
        <pt x="447" y="829" on="1"/>
        <pt x="447" y="118" on="1"/>
        <pt x="556" y="97" on="0"/>
        <pt x="616" y="73" on="1"/>
        <pt x="616" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
        <pt x="54" y="73" on="1"/>
        <pt x="86" y="92" on="0"/>
        <pt x="146" y="110" on="0"/>
        <pt x="178" y="118" on="1"/>
        <pt x="178" y="819" on="1"/>
        <pt x="111" y="831" on="0"/>
        <pt x="54" y="863" on="1"/>
        <pt x="54" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 12 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10069" xMin="10" yMin="-277" xMax="1019" yMax="935">
      <contour>
        <pt x="209" y="0" on="1"/>
        <pt x="110" y="-277" on="1"/>
        <pt x="36" y="-277" on="1"/>
        <pt x="25" y="-171" on="0"/>
        <pt x="10" y="22" on="0"/>
        <pt x="10" y="118" on="1"/>
        <pt x="119" y="118" on="1"/>
        <pt x="142" y="148" on="0"/>
        <pt x="199" y="256" on="0"/>
        <pt x="248" y="421" on="0"/>
        <pt x="283" y="648" on="0"/>
        <pt x="285" y="798" on="1"/>
        <pt x="245" y="809" on="0"/>
        <pt x="182" y="842" on="0"/>
        <pt x="156" y="863" on="1"/>
        <pt x="156" y="935" on="1"/>
        <pt x="988" y="935" on="1"/>
        <pt x="988" y="863" on="1"/>
        <pt x="963" y="846" on="0"/>
        <pt x="908" y="823" on="0"/>
        <pt x="871" y="817" on="1"/>
        <pt x="871" y="118" on="1"/>
        <pt x="1017" y="118" on="1"/>
        <pt x="1019" y="17" on="0"/>
        <pt x="1005" y="-180" on="0"/>
        <pt x="991" y="-277" on="1"/>
        <pt x="918" y="-277" on="1"/>
        <pt x="815" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="420" y="817" on="1"/>
        <pt x="417" y="665" on="0"/>
        <pt x="383" y="433" on="0"/>
        <pt x="336" y="263" on="0"/>
        <pt x="286" y="150" on="0"/>
        <pt x="267" y="118" on="1"/>
        <pt x="602" y="118" on="1"/>
        <pt x="602" y="817" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10070" xMin="45" yMin="-23" xMax="871" yMax="958">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10071" xMin="45" yMin="-23" xMax="871" yMax="1422">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="142" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10072" xMin="21" yMin="0" xMax="1464" yMax="935">
      <contour>
        <pt x="1043" y="935" on="1"/>
        <pt x="1434" y="935" on="1"/>
        <pt x="1434" y="863" on="1"/>
        <pt x="1401" y="839" on="0"/>
        <pt x="1328" y="817" on="1"/>
        <pt x="1298" y="778" on="0"/>
        <pt x="1242" y="707" on="0"/>
        <pt x="1187" y="639" on="0"/>
        <pt x="1132" y="571" on="0"/>
        <pt x="1102" y="535" on="1"/>
        <pt x="1125" y="500" on="0"/>
        <pt x="1190" y="404" on="0"/>
        <pt x="1266" y="293" on="0"/>
        <pt x="1352" y="174" on="0"/>
        <pt x="1396" y="118" on="1"/>
        <pt x="1464" y="73" on="1"/>
        <pt x="1464" y="0" on="1"/>
        <pt x="1204" y="0" on="1"/>
        <pt x="1151" y="43" on="1"/>
        <pt x="1121" y="83" on="0"/>
        <pt x="1057" y="190" on="0"/>
        <pt x="999" y="298" on="0"/>
        <pt x="951" y="395" on="0"/>
        <pt x="937" y="427" on="1"/>
        <pt x="864" y="427" on="1"/>
        <pt x="864" y="118" on="1"/>
        <pt x="923" y="103" on="0"/>
        <pt x="977" y="73" on="1"/>
        <pt x="977" y="0" on="1"/>
        <pt x="516" y="0" on="1"/>
        <pt x="516" y="73" on="1"/>
        <pt x="542" y="86" on="0"/>
        <pt x="593" y="109" on="0"/>
        <pt x="621" y="118" on="1"/>
        <pt x="621" y="438" on="1"/>
        <pt x="538" y="419" on="1"/>
        <pt x="526" y="395" on="0"/>
        <pt x="486" y="305" on="0"/>
        <pt x="434" y="199" on="0"/>
        <pt x="369" y="88" on="0"/>
        <pt x="332" y="43" on="1"/>
        <pt x="277" y="0" on="1"/>
        <pt x="21" y="0" on="1"/>
        <pt x="21" y="73" on="1"/>
        <pt x="100" y="118" on="1"/>
        <pt x="144" y="170" on="0"/>
        <pt x="222" y="284" on="0"/>
        <pt x="290" y="392" on="0"/>
        <pt x="350" y="488" on="0"/>
        <pt x="377" y="524" on="1"/>
        <pt x="344" y="560" on="0"/>
        <pt x="285" y="629" on="0"/>
        <pt x="229" y="700" on="0"/>
        <pt x="174" y="775" on="0"/>
        <pt x="144" y="817" on="1"/>
        <pt x="92" y="830" on="0"/>
        <pt x="50" y="863" on="1"/>
        <pt x="50" y="935" on="1"/>
        <pt x="440" y="935" on="1"/>
        <pt x="440" y="863" on="1"/>
        <pt x="407" y="837" on="0"/>
        <pt x="348" y="817" on="1"/>
        <pt x="372" y="772" on="0"/>
        <pt x="415" y="701" on="0"/>
        <pt x="460" y="634" on="0"/>
        <pt x="510" y="563" on="0"/>
        <pt x="543" y="520" on="1"/>
        <pt x="621" y="520" on="1"/>
        <pt x="621" y="817" on="1"/>
        <pt x="590" y="825" on="0"/>
        <pt x="546" y="848" on="0"/>
        <pt x="526" y="863" on="1"/>
        <pt x="526" y="935" on="1"/>
        <pt x="957" y="935" on="1"/>
        <pt x="957" y="863" on="1"/>
        <pt x="937" y="848" on="0"/>
        <pt x="898" y="825" on="0"/>
        <pt x="864" y="817" on="1"/>
        <pt x="864" y="509" on="1"/>
        <pt x="950" y="528" on="1"/>
        <pt x="983" y="572" on="0"/>
        <pt x="1030" y="640" on="0"/>
        <pt x="1070" y="704" on="0"/>
        <pt x="1111" y="773" on="0"/>
        <pt x="1137" y="817" on="1"/>
        <pt x="1111" y="827" on="0"/>
        <pt x="1066" y="846" on="0"/>
        <pt x="1043" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          24 88 89
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            57
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            57 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            72
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            72 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          56 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          71
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          74
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          87
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          66 72 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 66 79 66 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          63 66 79 66 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          143 66 159 66 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 66 143 66 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          207 66 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          23 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 23 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          49 35 72
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          66
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          79
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10073" xMin="16" yMin="-23" xMax="779" yMax="958">
      <contour>
        <pt x="334" y="99" on="1"/>
        <pt x="371" y="99" on="0"/>
        <pt x="434" y="133" on="0"/>
        <pt x="456" y="159" on="1"/>
        <pt x="476" y="183" on="0"/>
        <pt x="493" y="246" on="0"/>
        <pt x="493" y="278" on="1"/>
        <pt x="493" y="343" on="0"/>
        <pt x="423" y="420" on="0"/>
        <pt x="372" y="427" on="1"/>
        <pt x="220" y="398" on="1"/>
        <pt x="210" y="422" on="0"/>
        <pt x="209" y="461" on="1"/>
        <pt x="207" y="503" on="0"/>
        <pt x="220" y="528" on="1"/>
        <pt x="391" y="528" on="1"/>
        <pt x="405" y="539" on="0"/>
        <pt x="427" y="560" on="0"/>
        <pt x="436" y="571" on="1"/>
        <pt x="442" y="578" on="0"/>
        <pt x="454" y="606" on="0"/>
        <pt x="463" y="641" on="0"/>
        <pt x="469" y="679" on="0"/>
        <pt x="469" y="697" on="1"/>
        <pt x="469" y="769" on="0"/>
        <pt x="408" y="851" on="0"/>
        <pt x="340" y="851" on="1"/>
        <pt x="315" y="851" on="0"/>
        <pt x="275" y="846" on="0"/>
        <pt x="255" y="840" on="1"/>
        <pt x="190" y="639" on="1"/>
        <pt x="127" y="639" on="1"/>
        <pt x="96" y="701" on="0"/>
        <pt x="77" y="765" on="1"/>
        <pt x="69" y="794" on="0"/>
        <pt x="56" y="858" on="0"/>
        <pt x="52" y="892" on="1"/>
        <pt x="73" y="902" on="0"/>
        <pt x="131" y="925" on="0"/>
        <pt x="212" y="945" on="0"/>
        <pt x="317" y="958" on="0"/>
        <pt x="385" y="958" on="1"/>
        <pt x="570" y="958" on="0"/>
        <pt x="741" y="838" on="0"/>
        <pt x="741" y="729" on="1"/>
        <pt x="741" y="680" on="0"/>
        <pt x="708" y="605" on="0"/>
        <pt x="650" y="549" on="0"/>
        <pt x="572" y="510" on="0"/>
        <pt x="527" y="497" on="1"/>
        <pt x="556" y="497" on="0"/>
        <pt x="642" y="473" on="0"/>
        <pt x="722" y="420" on="0"/>
        <pt x="779" y="337" on="0"/>
        <pt x="779" y="278" on="1"/>
        <pt x="779" y="131" on="0"/>
        <pt x="584" y="-23" on="0"/>
        <pt x="374" y="-23" on="1"/>
        <pt x="248" y="-23" on="0"/>
        <pt x="73" y="31" on="0"/>
        <pt x="16" y="69" on="1"/>
        <pt x="67" y="245" on="1"/>
        <pt x="122" y="245" on="1"/>
        <pt x="135" y="234" on="0"/>
        <pt x="171" y="201" on="0"/>
        <pt x="190" y="180" on="1"/>
        <pt x="205" y="163" on="0"/>
        <pt x="234" y="128" on="0"/>
        <pt x="249" y="110" on="1"/>
        <pt x="269" y="103" on="0"/>
        <pt x="302" y="99" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            57
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            57 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 41 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          9 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 15 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 5 values pushed */
          57 30 73 30 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          49 15 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          62 9 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10074" xMin="44" yMin="0" xMax="1137" yMax="935">
      <contour>
        <pt x="44" y="935" on="1"/>
        <pt x="537" y="935" on="1"/>
        <pt x="537" y="863" on="1"/>
        <pt x="517" y="851" on="0"/>
        <pt x="461" y="828" on="0"/>
        <pt x="425" y="817" on="1"/>
        <pt x="425" y="425" on="1"/>
        <pt x="404" y="252" on="1"/>
        <pt x="414" y="252" on="1"/>
        <pt x="486" y="391" on="1"/>
        <pt x="788" y="935" on="1"/>
        <pt x="1137" y="935" on="1"/>
        <pt x="1137" y="863" on="1"/>
        <pt x="1108" y="846" on="0"/>
        <pt x="1047" y="823" on="0"/>
        <pt x="1018" y="817" on="1"/>
        <pt x="1018" y="118" on="1"/>
        <pt x="1053" y="110" on="0"/>
        <pt x="1112" y="88" on="0"/>
        <pt x="1137" y="73" on="1"/>
        <pt x="1137" y="0" on="1"/>
        <pt x="643" y="0" on="1"/>
        <pt x="643" y="73" on="1"/>
        <pt x="669" y="88" on="0"/>
        <pt x="727" y="112" on="0"/>
        <pt x="756" y="118" on="1"/>
        <pt x="756" y="529" on="1"/>
        <pt x="775" y="677" on="1"/>
        <pt x="765" y="677" on="1"/>
        <pt x="695" y="537" on="1"/>
        <pt x="398" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="76" y="88" on="0"/>
        <pt x="131" y="109" on="0"/>
        <pt x="164" y="118" on="1"/>
        <pt x="164" y="817" on="1"/>
        <pt x="90" y="829" on="0"/>
        <pt x="44" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          21 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          7 22 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          27 12 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10075" xMin="44" yMin="0" xMax="1137" yMax="1444">
      <component glyphName="afii10074" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="82" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10075hook" xMin="44" yMin="-396" xMax="1137" yMax="1444">
      <contour>
        <pt x="44" y="935" on="1"/>
        <pt x="537" y="935" on="1"/>
        <pt x="537" y="863" on="1"/>
        <pt x="517" y="851" on="0"/>
        <pt x="461" y="828" on="0"/>
        <pt x="425" y="817" on="1"/>
        <pt x="425" y="425" on="1"/>
        <pt x="404" y="252" on="1"/>
        <pt x="414" y="252" on="1"/>
        <pt x="486" y="391" on="1"/>
        <pt x="788" y="935" on="1"/>
        <pt x="1137" y="935" on="1"/>
        <pt x="1137" y="863" on="1"/>
        <pt x="1111" y="847" on="0"/>
        <pt x="1052" y="824" on="0"/>
        <pt x="1018" y="817" on="1"/>
        <pt x="1018" y="2" on="1"/>
        <pt x="1018" y="-114" on="0"/>
        <pt x="967" y="-268" on="0"/>
        <pt x="862" y="-359" on="0"/>
        <pt x="700" y="-396" on="0"/>
        <pt x="588" y="-396" on="1"/>
        <pt x="578" y="-311" on="1"/>
        <pt x="629" y="-298" on="0"/>
        <pt x="697" y="-256" on="0"/>
        <pt x="738" y="-184" on="0"/>
        <pt x="755" y="-77" on="0"/>
        <pt x="756" y="2" on="1"/>
        <pt x="756" y="530" on="1"/>
        <pt x="775" y="677" on="1"/>
        <pt x="765" y="677" on="1"/>
        <pt x="695" y="537" on="1"/>
        <pt x="398" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="76" y="88" on="0"/>
        <pt x="131" y="109" on="0"/>
        <pt x="164" y="118" on="1"/>
        <pt x="164" y="817" on="1"/>
        <pt x="90" y="829" on="0"/>
        <pt x="44" y="863" on="1"/>
      </contour>
      <contour>
        <pt x="592" y="1137" on="1"/>
        <pt x="400" y="1137" on="0"/>
        <pt x="226" y="1276" on="0"/>
        <pt x="226" y="1392" on="1"/>
        <pt x="254" y="1416" on="0"/>
        <pt x="358" y="1441" on="0"/>
        <pt x="414" y="1444" on="1"/>
        <pt x="480" y="1420" on="1"/>
        <pt x="480" y="1247" on="1"/>
        <pt x="528" y="1226" on="0"/>
        <pt x="594" y="1226" on="1"/>
        <pt x="613" y="1226" on="0"/>
        <pt x="681" y="1233" on="0"/>
        <pt x="709" y="1241" on="1"/>
        <pt x="709" y="1420" on="1"/>
        <pt x="774" y="1444" on="1"/>
        <pt x="827" y="1441" on="0"/>
        <pt x="927" y="1418" on="0"/>
        <pt x="954" y="1392" on="1"/>
        <pt x="954" y="1276" on="0"/>
        <pt x="779" y="1137" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          21 62 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 10
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          2 10 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 33
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 10 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          37 7 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          38 10 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          51 56 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10076" xMin="56" yMin="0" xMax="1142" yMax="935">
      <contour>
        <pt x="670" y="935" on="1"/>
        <pt x="1098" y="935" on="1"/>
        <pt x="1098" y="863" on="1"/>
        <pt x="1081" y="848" on="0"/>
        <pt x="1027" y="827" on="0"/>
        <pt x="980" y="812" on="1"/>
        <pt x="917" y="734" on="0"/>
        <pt x="782" y="595" on="0"/>
        <pt x="719" y="535" on="1"/>
        <pt x="761" y="491" on="0"/>
        <pt x="845" y="386" on="0"/>
        <pt x="931" y="276" on="0"/>
        <pt x="1018" y="166" on="0"/>
        <pt x="1063" y="118" on="1"/>
        <pt x="1142" y="73" on="1"/>
        <pt x="1142" y="0" on="1"/>
        <pt x="848" y="0" on="1"/>
        <pt x="788" y="43" on="1"/>
        <pt x="708" y="140" on="0"/>
        <pt x="656" y="238" on="1"/>
        <pt x="630" y="287" on="0"/>
        <pt x="578" y="382" on="0"/>
        <pt x="552" y="430" on="1"/>
        <pt x="448" y="430" on="1"/>
        <pt x="448" y="118" on="1"/>
        <pt x="509" y="101" on="0"/>
        <pt x="553" y="73" on="1"/>
        <pt x="553" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="73" on="1"/>
        <pt x="107" y="103" on="0"/>
        <pt x="179" y="118" on="1"/>
        <pt x="179" y="817" on="1"/>
        <pt x="147" y="824" on="0"/>
        <pt x="85" y="847" on="0"/>
        <pt x="56" y="863" on="1"/>
        <pt x="56" y="935" on="1"/>
        <pt x="533" y="935" on="1"/>
        <pt x="533" y="863" on="1"/>
        <pt x="515" y="849" on="0"/>
        <pt x="479" y="827" on="0"/>
        <pt x="448" y="817" on="1"/>
        <pt x="448" y="512" on="1"/>
        <pt x="564" y="531" on="1"/>
        <pt x="618" y="594" on="0"/>
        <pt x="727" y="734" on="0"/>
        <pt x="772" y="812" on="1"/>
        <pt x="740" y="825" on="0"/>
        <pt x="694" y="848" on="0"/>
        <pt x="670" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          42 36 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 42 79 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 42 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 42 79 42 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          143 42 159 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 42 143 42 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          207 42 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          22 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 22 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10077" xMin="16" yMin="-34" xMax="1089" yMax="935">
      <contour>
        <pt x="235" y="211" on="1"/>
        <pt x="258" y="254" on="0"/>
        <pt x="299" y="380" on="0"/>
        <pt x="311" y="459" on="1"/>
        <pt x="323" y="538" on="0"/>
        <pt x="335" y="706" on="0"/>
        <pt x="336" y="798" on="1"/>
        <pt x="298" y="810" on="0"/>
        <pt x="229" y="844" on="0"/>
        <pt x="203" y="863" on="1"/>
        <pt x="203" y="935" on="1"/>
        <pt x="1089" y="935" on="1"/>
        <pt x="1089" y="863" on="1"/>
        <pt x="1030" y="829" on="0"/>
        <pt x="965" y="817" on="1"/>
        <pt x="965" y="118" on="1"/>
        <pt x="1005" y="109" on="0"/>
        <pt x="1065" y="86" on="0"/>
        <pt x="1089" y="73" on="1"/>
        <pt x="1089" y="0" on="1"/>
        <pt x="593" y="0" on="1"/>
        <pt x="593" y="73" on="1"/>
        <pt x="616" y="88" on="0"/>
        <pt x="663" y="110" on="0"/>
        <pt x="697" y="118" on="1"/>
        <pt x="697" y="829" on="1"/>
        <pt x="471" y="829" on="1"/>
        <pt x="469" y="730" on="0"/>
        <pt x="447" y="514" on="0"/>
        <pt x="405" y="309" on="0"/>
        <pt x="340" y="128" on="0"/>
        <pt x="295" y="64" on="1"/>
        <pt x="257" y="10" on="0"/>
        <pt x="168" y="-34" on="0"/>
        <pt x="133" y="-26" on="1"/>
        <pt x="108" y="-13" on="0"/>
        <pt x="66" y="43" on="0"/>
        <pt x="36" y="109" on="0"/>
        <pt x="18" y="173" on="0"/>
        <pt x="16" y="194" on="1"/>
        <pt x="59" y="259" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 34 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 40 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10078" xMin="22" yMin="0" xMax="1372" yMax="935">
      <contour>
        <pt x="390" y="0" on="1"/>
        <pt x="22" y="0" on="1"/>
        <pt x="22" y="73" on="1"/>
        <pt x="53" y="88" on="0"/>
        <pt x="110" y="110" on="0"/>
        <pt x="141" y="118" on="1"/>
        <pt x="179" y="798" on="1"/>
        <pt x="139" y="814" on="0"/>
        <pt x="84" y="848" on="0"/>
        <pt x="59" y="863" on="1"/>
        <pt x="59" y="935" on="1"/>
        <pt x="491" y="935" on="1"/>
        <pt x="649" y="492" on="1"/>
        <pt x="685" y="364" on="1"/>
        <pt x="690" y="364" on="1"/>
        <pt x="729" y="494" on="1"/>
        <pt x="897" y="935" on="1"/>
        <pt x="1334" y="935" on="1"/>
        <pt x="1334" y="863" on="1"/>
        <pt x="1311" y="848" on="0"/>
        <pt x="1254" y="825" on="0"/>
        <pt x="1214" y="817" on="1"/>
        <pt x="1252" y="118" on="1"/>
        <pt x="1284" y="113" on="0"/>
        <pt x="1341" y="90" on="0"/>
        <pt x="1372" y="73" on="1"/>
        <pt x="1372" y="0" on="1"/>
        <pt x="878" y="0" on="1"/>
        <pt x="878" y="73" on="1"/>
        <pt x="897" y="82" on="0"/>
        <pt x="949" y="106" on="0"/>
        <pt x="991" y="118" on="1"/>
        <pt x="976" y="751" on="1"/>
        <pt x="961" y="751" on="1"/>
        <pt x="684" y="0" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="311" y="761" on="1"/>
        <pt x="295" y="761" on="1"/>
        <pt x="278" y="118" on="1"/>
        <pt x="344" y="97" on="0"/>
        <pt x="390" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          14 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          32 18 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          36 34 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10079" xMin="44" yMin="0" xMax="1136" yMax="935">
      <contour>
        <pt x="535" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="70" y="88" on="0"/>
        <pt x="129" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="129" y="827" on="0"/>
        <pt x="70" y="848" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="535" y="935" on="1"/>
        <pt x="535" y="863" on="1"/>
        <pt x="492" y="836" on="0"/>
        <pt x="431" y="817" on="1"/>
        <pt x="431" y="526" on="1"/>
        <pt x="749" y="526" on="1"/>
        <pt x="749" y="817" on="1"/>
        <pt x="694" y="829" on="0"/>
        <pt x="647" y="863" on="1"/>
        <pt x="647" y="935" on="1"/>
        <pt x="1136" y="935" on="1"/>
        <pt x="1136" y="863" on="1"/>
        <pt x="1111" y="847" on="0"/>
        <pt x="1055" y="824" on="0"/>
        <pt x="1018" y="817" on="1"/>
        <pt x="1018" y="118" on="1"/>
        <pt x="1052" y="110" on="0"/>
        <pt x="1111" y="92" on="0"/>
        <pt x="1136" y="73" on="1"/>
        <pt x="1136" y="0" on="1"/>
        <pt x="647" y="0" on="1"/>
        <pt x="647" y="73" on="1"/>
        <pt x="695" y="109" on="0"/>
        <pt x="749" y="118" on="1"/>
        <pt x="749" y="419" on="1"/>
        <pt x="431" y="419" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="495" y="102" on="0"/>
        <pt x="535" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          19 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          15 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10080" xMin="48" yMin="-23" xMax="976" yMax="958">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10081" xMin="44" yMin="0" xMax="1136" yMax="935">
      <contour>
        <pt x="534" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="80" y="93" on="0"/>
        <pt x="135" y="110" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="124" y="827" on="0"/>
        <pt x="65" y="851" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="1136" y="935" on="1"/>
        <pt x="1136" y="863" on="1"/>
        <pt x="1113" y="848" on="0"/>
        <pt x="1056" y="824" on="0"/>
        <pt x="1018" y="817" on="1"/>
        <pt x="1018" y="118" on="1"/>
        <pt x="1050" y="112" on="0"/>
        <pt x="1113" y="90" on="0"/>
        <pt x="1136" y="73" on="1"/>
        <pt x="1136" y="0" on="1"/>
        <pt x="646" y="0" on="1"/>
        <pt x="646" y="73" on="1"/>
        <pt x="664" y="86" on="0"/>
        <pt x="707" y="109" on="0"/>
        <pt x="748" y="118" on="1"/>
        <pt x="748" y="829" on="1"/>
        <pt x="431" y="829" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="469" y="107" on="0"/>
        <pt x="514" y="87" on="0"/>
        <pt x="534" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10082" xMin="50" yMin="-367" xMax="1077" yMax="958">
      <component glyphName="p" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10083" xMin="69" yMin="-23" xMax="860" yMax="958">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10084" xMin="28" yMin="0" xMax="977" yMax="935">
      <contour>
        <pt x="768" y="0" on="1"/>
        <pt x="236" y="0" on="1"/>
        <pt x="236" y="73" on="1"/>
        <pt x="265" y="88" on="0"/>
        <pt x="337" y="110" on="0"/>
        <pt x="369" y="118" on="1"/>
        <pt x="369" y="829" on="1"/>
        <pt x="235" y="829" on="1"/>
        <pt x="153" y="571" on="1"/>
        <pt x="74" y="571" on="1"/>
        <pt x="65" y="610" on="0"/>
        <pt x="48" y="707" on="0"/>
        <pt x="36" y="806" on="0"/>
        <pt x="28" y="899" on="0"/>
        <pt x="28" y="935" on="1"/>
        <pt x="977" y="935" on="1"/>
        <pt x="977" y="901" on="0"/>
        <pt x="969" y="809" on="0"/>
        <pt x="956" y="710" on="0"/>
        <pt x="939" y="611" on="0"/>
        <pt x="931" y="571" on="1"/>
        <pt x="852" y="571" on="1"/>
        <pt x="769" y="829" on="1"/>
        <pt x="637" y="829" on="1"/>
        <pt x="637" y="118" on="1"/>
        <pt x="681" y="107" on="0"/>
        <pt x="739" y="88" on="0"/>
        <pt x="768" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10085" xMin="15" yMin="-402" xMax="1016" yMax="935">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10086" xMin="44" yMin="-375" xMax="1373" yMax="1406">
      <contour>
        <pt x="962" y="-375" on="1"/>
        <pt x="454" y="-375" on="1"/>
        <pt x="454" y="-301" on="1"/>
        <pt x="507" y="-271" on="0"/>
        <pt x="578" y="-257" on="1"/>
        <pt x="578" y="40" on="1"/>
        <pt x="546" y="7" on="0"/>
        <pt x="454" y="-23" on="0"/>
        <pt x="409" y="-23" on="1"/>
        <pt x="316" y="-23" on="0"/>
        <pt x="179" y="52" on="0"/>
        <pt x="89" y="179" on="0"/>
        <pt x="44" y="345" on="0"/>
        <pt x="44" y="437" on="1"/>
        <pt x="44" y="564" on="0"/>
        <pt x="96" y="758" on="0"/>
        <pt x="191" y="890" on="0"/>
        <pt x="325" y="958" on="0"/>
        <pt x="406" y="958" on="1"/>
        <pt x="432" y="958" on="0"/>
        <pt x="483" y="949" on="0"/>
        <pt x="529" y="935" on="0"/>
        <pt x="566" y="916" on="0"/>
        <pt x="578" y="907" on="1"/>
        <pt x="578" y="1251" on="1"/>
        <pt x="436" y="1266" on="1"/>
        <pt x="436" y="1339" on="1"/>
        <pt x="463" y="1351" on="0"/>
        <pt x="551" y="1374" on="0"/>
        <pt x="650" y="1392" on="0"/>
        <pt x="744" y="1405" on="0"/>
        <pt x="777" y="1406" on="1"/>
        <pt x="840" y="1406" on="1"/>
        <pt x="840" y="896" on="1"/>
        <pt x="871" y="920" on="0"/>
        <pt x="960" y="958" on="0"/>
        <pt x="1014" y="958" on="1"/>
        <pt x="1098" y="958" on="0"/>
        <pt x="1231" y="896" on="0"/>
        <pt x="1324" y="771" on="0"/>
        <pt x="1373" y="584" on="0"/>
        <pt x="1373" y="459" on="1"/>
        <pt x="1373" y="351" on="0"/>
        <pt x="1320" y="174" on="0"/>
        <pt x="1221" y="47" on="0"/>
        <pt x="1081" y="-23" on="0"/>
        <pt x="994" y="-23" on="1"/>
        <pt x="945" y="-23" on="0"/>
        <pt x="864" y="7" on="0"/>
        <pt x="840" y="26" on="1"/>
        <pt x="840" y="-257" on="1"/>
        <pt x="909" y="-267" on="0"/>
        <pt x="962" y="-301" on="1"/>
      </contour>
      <contour>
        <pt x="497" y="95" on="1"/>
        <pt x="529" y="95" on="0"/>
        <pt x="571" y="119" on="0"/>
        <pt x="588" y="139" on="1"/>
        <pt x="588" y="809" on="1"/>
        <pt x="571" y="820" on="0"/>
        <pt x="527" y="840" on="0"/>
        <pt x="489" y="840" on="1"/>
        <pt x="411" y="840" on="0"/>
        <pt x="327" y="649" on="0"/>
        <pt x="327" y="458" on="1"/>
        <pt x="327" y="374" on="0"/>
        <pt x="343" y="254" on="0"/>
        <pt x="370" y="174" on="0"/>
        <pt x="405" y="126" on="0"/>
        <pt x="442" y="102" on="0"/>
        <pt x="480" y="95" on="0"/>
      </contour>
      <contour>
        <pt x="927" y="840" on="1"/>
        <pt x="895" y="840" on="0"/>
        <pt x="845" y="812" on="0"/>
        <pt x="830" y="801" on="1"/>
        <pt x="830" y="128" on="1"/>
        <pt x="845" y="117" on="0"/>
        <pt x="890" y="95" on="0"/>
        <pt x="918" y="95" on="1"/>
        <pt x="952" y="95" on="0"/>
        <pt x="1015" y="129" on="0"/>
        <pt x="1063" y="212" on="0"/>
        <pt x="1091" y="352" on="0"/>
        <pt x="1091" y="459" on="1"/>
        <pt x="1091" y="574" on="0"/>
        <pt x="1067" y="722" on="0"/>
        <pt x="1023" y="807" on="0"/>
        <pt x="963" y="840" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            8
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            8 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          52 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          53 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          53
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          77
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10087" xMin="13" yMin="0" xMax="1010" yMax="935">
      <component glyphName="x" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10088" xMin="44" yMin="-277" xMax="1165" yMax="935">
      <contour>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="95" y="103" on="0"/>
        <pt x="164" y="118" on="1"/>
        <pt x="164" y="817" on="1"/>
        <pt x="95" y="829" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="536" y="935" on="1"/>
        <pt x="536" y="863" on="1"/>
        <pt x="516" y="849" on="0"/>
        <pt x="468" y="827" on="0"/>
        <pt x="432" y="817" on="1"/>
        <pt x="432" y="107" on="1"/>
        <pt x="733" y="107" on="1"/>
        <pt x="733" y="817" on="1"/>
        <pt x="707" y="823" on="0"/>
        <pt x="661" y="846" on="0"/>
        <pt x="631" y="863" on="1"/>
        <pt x="631" y="935" on="1"/>
        <pt x="1121" y="935" on="1"/>
        <pt x="1121" y="863" on="1"/>
        <pt x="1096" y="849" on="0"/>
        <pt x="1042" y="827" on="0"/>
        <pt x="1003" y="817" on="1"/>
        <pt x="1003" y="107" on="1"/>
        <pt x="1165" y="107" on="1"/>
        <pt x="1162" y="16" on="0"/>
        <pt x="1150" y="-86" on="1"/>
        <pt x="1128" y="-277" on="1"/>
        <pt x="1055" y="-277" on="1"/>
        <pt x="954" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          18 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10089" xMin="37" yMin="0" xMax="1107" yMax="935">
      <contour>
        <pt x="37" y="935" on="1"/>
        <pt x="528" y="935" on="1"/>
        <pt x="528" y="863" on="1"/>
        <pt x="490" y="832" on="0"/>
        <pt x="430" y="817" on="1"/>
        <pt x="430" y="611" on="1"/>
        <pt x="430" y="531" on="0"/>
        <pt x="484" y="440" on="0"/>
        <pt x="551" y="440" on="1"/>
        <pt x="600" y="440" on="0"/>
        <pt x="682" y="469" on="0"/>
        <pt x="715" y="491" on="1"/>
        <pt x="715" y="817" on="1"/>
        <pt x="684" y="823" on="0"/>
        <pt x="640" y="846" on="0"/>
        <pt x="615" y="863" on="1"/>
        <pt x="615" y="935" on="1"/>
        <pt x="1107" y="935" on="1"/>
        <pt x="1107" y="863" on="1"/>
        <pt x="1056" y="831" on="0"/>
        <pt x="984" y="817" on="1"/>
        <pt x="984" y="118" on="1"/>
        <pt x="1021" y="109" on="0"/>
        <pt x="1081" y="88" on="0"/>
        <pt x="1107" y="73" on="1"/>
        <pt x="1107" y="0" on="1"/>
        <pt x="565" y="0" on="1"/>
        <pt x="565" y="73" on="1"/>
        <pt x="642" y="105" on="0"/>
        <pt x="715" y="118" on="1"/>
        <pt x="715" y="411" on="1"/>
        <pt x="669" y="361" on="0"/>
        <pt x="524" y="299" on="0"/>
        <pt x="439" y="299" on="1"/>
        <pt x="309" y="299" on="0"/>
        <pt x="161" y="441" on="0"/>
        <pt x="161" y="562" on="1"/>
        <pt x="161" y="817" on="1"/>
        <pt x="89" y="831" on="0"/>
        <pt x="37" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          33 0 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10090" xMin="55" yMin="0" xMax="1674" yMax="935">
      <contour>
        <pt x="1281" y="107" on="1"/>
        <pt x="1281" y="817" on="1"/>
        <pt x="1236" y="830" on="0"/>
        <pt x="1197" y="863" on="1"/>
        <pt x="1197" y="935" on="1"/>
        <pt x="1674" y="935" on="1"/>
        <pt x="1674" y="863" on="1"/>
        <pt x="1648" y="848" on="0"/>
        <pt x="1588" y="825" on="0"/>
        <pt x="1551" y="817" on="1"/>
        <pt x="1551" y="118" on="1"/>
        <pt x="1620" y="103" on="0"/>
        <pt x="1674" y="73" on="1"/>
        <pt x="1674" y="0" on="1"/>
        <pt x="55" y="0" on="1"/>
        <pt x="55" y="73" on="1"/>
        <pt x="107" y="103" on="0"/>
        <pt x="180" y="118" on="1"/>
        <pt x="180" y="817" on="1"/>
        <pt x="148" y="821" on="0"/>
        <pt x="87" y="842" on="0"/>
        <pt x="55" y="863" on="1"/>
        <pt x="55" y="935" on="1"/>
        <pt x="533" y="935" on="1"/>
        <pt x="533" y="863" on="1"/>
        <pt x="498" y="832" on="0"/>
        <pt x="448" y="817" on="1"/>
        <pt x="448" y="107" on="1"/>
        <pt x="730" y="107" on="1"/>
        <pt x="730" y="817" on="1"/>
        <pt x="705" y="827" on="0"/>
        <pt x="655" y="848" on="0"/>
        <pt x="635" y="863" on="1"/>
        <pt x="635" y="935" on="1"/>
        <pt x="1084" y="935" on="1"/>
        <pt x="1084" y="863" on="1"/>
        <pt x="1071" y="849" on="0"/>
        <pt x="1029" y="827" on="0"/>
        <pt x="999" y="817" on="1"/>
        <pt x="999" y="107" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10091" xMin="50" yMin="-277" xMax="1713" yMax="935">
      <contour>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="73" on="1"/>
        <pt x="102" y="103" on="0"/>
        <pt x="174" y="118" on="1"/>
        <pt x="174" y="817" on="1"/>
        <pt x="102" y="833" on="0"/>
        <pt x="50" y="863" on="1"/>
        <pt x="50" y="935" on="1"/>
        <pt x="528" y="935" on="1"/>
        <pt x="528" y="863" on="1"/>
        <pt x="512" y="849" on="0"/>
        <pt x="469" y="827" on="0"/>
        <pt x="443" y="817" on="1"/>
        <pt x="443" y="107" on="1"/>
        <pt x="725" y="107" on="1"/>
        <pt x="725" y="817" on="1"/>
        <pt x="700" y="825" on="0"/>
        <pt x="649" y="848" on="0"/>
        <pt x="630" y="863" on="1"/>
        <pt x="630" y="935" on="1"/>
        <pt x="1078" y="935" on="1"/>
        <pt x="1078" y="863" on="1"/>
        <pt x="1044" y="832" on="0"/>
        <pt x="994" y="817" on="1"/>
        <pt x="994" y="107" on="1"/>
        <pt x="1276" y="107" on="1"/>
        <pt x="1276" y="817" on="1"/>
        <pt x="1227" y="832" on="0"/>
        <pt x="1192" y="863" on="1"/>
        <pt x="1192" y="935" on="1"/>
        <pt x="1669" y="935" on="1"/>
        <pt x="1669" y="863" on="1"/>
        <pt x="1643" y="848" on="0"/>
        <pt x="1583" y="827" on="0"/>
        <pt x="1545" y="817" on="1"/>
        <pt x="1545" y="107" on="1"/>
        <pt x="1713" y="107" on="1"/>
        <pt x="1713" y="62" on="0"/>
        <pt x="1706" y="-37" on="0"/>
        <pt x="1696" y="-136" on="0"/>
        <pt x="1683" y="-233" on="0"/>
        <pt x="1676" y="-277" on="1"/>
        <pt x="1604" y="-277" on="1"/>
        <pt x="1502" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          23 44 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10092" xMin="20" yMin="-8" xMax="1154" yMax="935">
      <contour>
        <pt x="596" y="107" on="1"/>
        <pt x="633" y="99" on="0"/>
        <pt x="674" y="99" on="1"/>
        <pt x="714" y="99" on="0"/>
        <pt x="787" y="118" on="0"/>
        <pt x="810" y="141" on="1"/>
        <pt x="832" y="163" on="0"/>
        <pt x="861" y="241" on="0"/>
        <pt x="861" y="299" on="1"/>
        <pt x="861" y="353" on="0"/>
        <pt x="826" y="420" on="0"/>
        <pt x="773" y="457" on="0"/>
        <pt x="710" y="471" on="0"/>
        <pt x="682" y="471" on="1"/>
        <pt x="657" y="471" on="0"/>
        <pt x="617" y="466" on="0"/>
        <pt x="596" y="462" on="1"/>
      </contour>
      <contour>
        <pt x="709" y="935" on="1"/>
        <pt x="709" y="863" on="1"/>
        <pt x="686" y="848" on="0"/>
        <pt x="629" y="827" on="0"/>
        <pt x="596" y="817" on="1"/>
        <pt x="596" y="562" on="1"/>
        <pt x="619" y="566" on="0"/>
        <pt x="713" y="579" on="0"/>
        <pt x="788" y="579" on="1"/>
        <pt x="826" y="579" on="0"/>
        <pt x="902" y="571" on="0"/>
        <pt x="972" y="554" on="0"/>
        <pt x="1033" y="527" on="0"/>
        <pt x="1056" y="509" on="1"/>
        <pt x="1102" y="472" on="0"/>
        <pt x="1154" y="368" on="0"/>
        <pt x="1154" y="298" on="1"/>
        <pt x="1154" y="223" on="0"/>
        <pt x="1091" y="109" on="0"/>
        <pt x="982" y="32" on="0"/>
        <pt x="835" y="-8" on="0"/>
        <pt x="751" y="-8" on="1"/>
        <pt x="726" y="-8" on="0"/>
        <pt x="635" y="-6" on="0"/>
        <pt x="533" y="-3" on="0"/>
        <pt x="432" y="0" on="0"/>
        <pt x="396" y="0" on="1"/>
        <pt x="203" y="0" on="1"/>
        <pt x="203" y="73" on="1"/>
        <pt x="255" y="103" on="0"/>
        <pt x="326" y="118" on="1"/>
        <pt x="326" y="829" on="1"/>
        <pt x="223" y="829" on="1"/>
        <pt x="132" y="571" on="1"/>
        <pt x="60" y="571" on="1"/>
        <pt x="52" y="606" on="0"/>
        <pt x="38" y="702" on="0"/>
        <pt x="27" y="804" on="0"/>
        <pt x="20" y="900" on="0"/>
        <pt x="20" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 56 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          13 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          45 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          50 49 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10093" xMin="50" yMin="-8" xMax="1549" yMax="935">
      <contour>
        <pt x="442" y="562" on="1"/>
        <pt x="474" y="567" on="0"/>
        <pt x="576" y="579" on="0"/>
        <pt x="651" y="579" on="1"/>
        <pt x="724" y="579" on="0"/>
        <pt x="866" y="545" on="0"/>
        <pt x="912" y="510" on="1"/>
        <pt x="958" y="475" on="0"/>
        <pt x="1015" y="368" on="0"/>
        <pt x="1015" y="298" on="1"/>
        <pt x="1015" y="223" on="0"/>
        <pt x="949" y="109" on="0"/>
        <pt x="836" y="32" on="0"/>
        <pt x="684" y="-8" on="0"/>
        <pt x="598" y="-8" on="1"/>
        <pt x="573" y="-8" on="0"/>
        <pt x="477" y="-6" on="0"/>
        <pt x="367" y="-3" on="0"/>
        <pt x="260" y="0" on="0"/>
        <pt x="224" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="73" on="1"/>
        <pt x="80" y="90" on="0"/>
        <pt x="141" y="109" on="0"/>
        <pt x="173" y="118" on="1"/>
        <pt x="173" y="817" on="1"/>
        <pt x="138" y="823" on="0"/>
        <pt x="78" y="848" on="0"/>
        <pt x="50" y="863" on="1"/>
        <pt x="50" y="935" on="1"/>
        <pt x="554" y="935" on="1"/>
        <pt x="554" y="863" on="1"/>
        <pt x="532" y="849" on="0"/>
        <pt x="476" y="827" on="0"/>
        <pt x="442" y="817" on="1"/>
      </contour>
      <contour>
        <pt x="442" y="107" on="1"/>
        <pt x="461" y="103" on="0"/>
        <pt x="506" y="99" on="0"/>
        <pt x="535" y="99" on="1"/>
        <pt x="572" y="99" on="0"/>
        <pt x="640" y="121" on="0"/>
        <pt x="692" y="168" on="0"/>
        <pt x="722" y="244" on="0"/>
        <pt x="722" y="298" on="1"/>
        <pt x="722" y="349" on="0"/>
        <pt x="690" y="418" on="0"/>
        <pt x="668" y="435" on="1"/>
        <pt x="657" y="444" on="0"/>
        <pt x="626" y="457" on="0"/>
        <pt x="591" y="466" on="0"/>
        <pt x="556" y="471" on="0"/>
        <pt x="541" y="471" on="1"/>
        <pt x="519" y="471" on="0"/>
        <pt x="465" y="468" on="0"/>
        <pt x="442" y="462" on="1"/>
      </contour>
      <contour>
        <pt x="1549" y="0" on="1"/>
        <pt x="1053" y="0" on="1"/>
        <pt x="1053" y="73" on="1"/>
        <pt x="1076" y="86" on="0"/>
        <pt x="1125" y="109" on="0"/>
        <pt x="1156" y="118" on="1"/>
        <pt x="1156" y="817" on="1"/>
        <pt x="1086" y="830" on="0"/>
        <pt x="1044" y="863" on="1"/>
        <pt x="1044" y="935" on="1"/>
        <pt x="1549" y="935" on="1"/>
        <pt x="1549" y="863" on="1"/>
        <pt x="1527" y="848" on="0"/>
        <pt x="1463" y="827" on="0"/>
        <pt x="1425" y="817" on="1"/>
        <pt x="1425" y="118" on="1"/>
        <pt x="1457" y="109" on="0"/>
        <pt x="1517" y="88" on="0"/>
        <pt x="1549" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            64 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          3 29 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          21 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          73 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10094" xMin="70" yMin="-8" xMax="1041" yMax="935">
      <contour>
        <pt x="463" y="562" on="1"/>
        <pt x="471" y="563" on="0"/>
        <pt x="511" y="569" on="0"/>
        <pt x="565" y="575" on="0"/>
        <pt x="630" y="579" on="0"/>
        <pt x="664" y="579" on="1"/>
        <pt x="731" y="579" on="0"/>
        <pt x="864" y="554" on="0"/>
        <pt x="915" y="522" on="1"/>
        <pt x="976" y="484" on="0"/>
        <pt x="1041" y="364" on="0"/>
        <pt x="1041" y="298" on="1"/>
        <pt x="1041" y="223" on="0"/>
        <pt x="982" y="109" on="0"/>
        <pt x="877" y="32" on="0"/>
        <pt x="733" y="-8" on="0"/>
        <pt x="649" y="-8" on="1"/>
        <pt x="623" y="-8" on="0"/>
        <pt x="517" y="-6" on="0"/>
        <pt x="396" y="-3" on="0"/>
        <pt x="281" y="0" on="0"/>
        <pt x="245" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="73" on="1"/>
        <pt x="99" y="88" on="0"/>
        <pt x="163" y="109" on="0"/>
        <pt x="195" y="118" on="1"/>
        <pt x="195" y="817" on="1"/>
        <pt x="159" y="825" on="0"/>
        <pt x="99" y="848" on="0"/>
        <pt x="70" y="863" on="1"/>
        <pt x="70" y="935" on="1"/>
        <pt x="575" y="935" on="1"/>
        <pt x="575" y="863" on="1"/>
        <pt x="553" y="849" on="0"/>
        <pt x="497" y="827" on="0"/>
        <pt x="463" y="817" on="1"/>
      </contour>
      <contour>
        <pt x="463" y="107" on="1"/>
        <pt x="482" y="103" on="0"/>
        <pt x="533" y="99" on="0"/>
        <pt x="554" y="99" on="1"/>
        <pt x="593" y="99" on="0"/>
        <pt x="664" y="118" on="0"/>
        <pt x="716" y="164" on="0"/>
        <pt x="747" y="241" on="0"/>
        <pt x="747" y="299" on="1"/>
        <pt x="747" y="349" on="0"/>
        <pt x="713" y="416" on="0"/>
        <pt x="659" y="455" on="0"/>
        <pt x="592" y="471" on="0"/>
        <pt x="558" y="471" on="1"/>
        <pt x="535" y="471" on="0"/>
        <pt x="486" y="466" on="0"/>
        <pt x="463" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 31 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          23 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10095" xMin="30" yMin="-23" xMax="841" yMax="958">
      <contour>
        <pt x="362" y="-23" on="1"/>
        <pt x="308" y="-23" on="0"/>
        <pt x="212" y="-5" on="0"/>
        <pt x="128" y="24" on="0"/>
        <pt x="57" y="62" on="0"/>
        <pt x="30" y="82" on="1"/>
        <pt x="81" y="258" on="1"/>
        <pt x="135" y="258" on="1"/>
        <pt x="149" y="245" on="0"/>
        <pt x="185" y="207" on="0"/>
        <pt x="202" y="184" on="1"/>
        <pt x="211" y="173" on="0"/>
        <pt x="223" y="158" on="0"/>
        <pt x="234" y="143" on="0"/>
        <pt x="246" y="125" on="0"/>
        <pt x="255" y="112" on="1"/>
        <pt x="267" y="107" on="0"/>
        <pt x="314" y="99" on="0"/>
        <pt x="341" y="99" on="1"/>
        <pt x="395" y="99" on="0"/>
        <pt x="470" y="144" on="0"/>
        <pt x="499" y="182" on="1"/>
        <pt x="531" y="224" on="0"/>
        <pt x="557" y="352" on="0"/>
        <pt x="558" y="427" on="1"/>
        <pt x="234" y="389" on="1"/>
        <pt x="228" y="401" on="0"/>
        <pt x="221" y="441" on="0"/>
        <pt x="221" y="484" on="0"/>
        <pt x="227" y="525" on="0"/>
        <pt x="234" y="537" on="1"/>
        <pt x="556" y="537" on="1"/>
        <pt x="555" y="697" on="0"/>
        <pt x="457" y="851" on="0"/>
        <pt x="359" y="851" on="1"/>
        <pt x="333" y="851" on="0"/>
        <pt x="294" y="846" on="0"/>
        <pt x="278" y="842" on="1"/>
        <pt x="187" y="623" on="1"/>
        <pt x="124" y="623" on="1"/>
        <pt x="113" y="647" on="0"/>
        <pt x="90" y="712" on="0"/>
        <pt x="71" y="783" on="0"/>
        <pt x="58" y="852" on="0"/>
        <pt x="55" y="881" on="1"/>
        <pt x="76" y="892" on="0"/>
        <pt x="143" y="919" on="0"/>
        <pt x="229" y="942" on="0"/>
        <pt x="327" y="958" on="0"/>
        <pt x="380" y="958" on="1"/>
        <pt x="471" y="958" on="0"/>
        <pt x="641" y="910" on="0"/>
        <pt x="704" y="854" on="1"/>
        <pt x="767" y="798" on="0"/>
        <pt x="841" y="617" on="0"/>
        <pt x="841" y="486" on="1"/>
        <pt x="841" y="385" on="0"/>
        <pt x="795" y="219" on="0"/>
        <pt x="751" y="160" on="1"/>
        <pt x="713" y="109" on="0"/>
        <pt x="623" y="40" on="0"/>
        <pt x="523" y="-4" on="0"/>
        <pt x="416" y="-23" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            49
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            49 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          18 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          7 18 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          31 49 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 31 79 31 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 31 79 31 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          25 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 25 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 34 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10096" xMin="48" yMin="-23" xMax="1517" yMax="958">
      <contour>
        <pt x="535" y="0" on="1"/>
        <pt x="48" y="0" on="1"/>
        <pt x="48" y="73" on="1"/>
        <pt x="76" y="88" on="0"/>
        <pt x="129" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="131" y="827" on="0"/>
        <pt x="81" y="848" on="0"/>
        <pt x="48" y="863" on="1"/>
        <pt x="48" y="935" on="1"/>
        <pt x="535" y="935" on="1"/>
        <pt x="535" y="863" on="1"/>
        <pt x="515" y="849" on="0"/>
        <pt x="469" y="827" on="0"/>
        <pt x="432" y="817" on="1"/>
        <pt x="432" y="526" on="1"/>
        <pt x="593" y="526" on="1"/>
        <pt x="599" y="627" on="0"/>
        <pt x="671" y="787" on="0"/>
        <pt x="792" y="899" on="0"/>
        <pt x="954" y="958" on="0"/>
        <pt x="1050" y="958" on="1"/>
        <pt x="1159" y="958" on="0"/>
        <pt x="1332" y="895" on="0"/>
        <pt x="1453" y="770" on="0"/>
        <pt x="1517" y="585" on="0"/>
        <pt x="1517" y="462" on="1"/>
        <pt x="1517" y="349" on="0"/>
        <pt x="1449" y="170" on="0"/>
        <pt x="1326" y="44" on="0"/>
        <pt x="1154" y="-23" on="0"/>
        <pt x="1050" y="-23" on="1"/>
        <pt x="954" y="-23" on="0"/>
        <pt x="790" y="34" on="0"/>
        <pt x="670" y="146" on="0"/>
        <pt x="598" y="311" on="0"/>
        <pt x="593" y="419" on="1"/>
        <pt x="432" y="419" on="1"/>
        <pt x="432" y="118" on="1"/>
        <pt x="469" y="110" on="0"/>
        <pt x="515" y="88" on="0"/>
        <pt x="535" y="73" on="1"/>
      </contour>
      <contour>
        <pt x="870" y="468" on="1"/>
        <pt x="870" y="367" on="0"/>
        <pt x="891" y="222" on="0"/>
        <pt x="936" y="128" on="0"/>
        <pt x="1007" y="84" on="0"/>
        <pt x="1058" y="84" on="1"/>
        <pt x="1150" y="84" on="0"/>
        <pt x="1228" y="274" on="0"/>
        <pt x="1228" y="468" on="1"/>
        <pt x="1228" y="672" on="0"/>
        <pt x="1182" y="761" on="1"/>
        <pt x="1159" y="806" on="0"/>
        <pt x="1082" y="851" on="0"/>
        <pt x="1044" y="851" on="1"/>
        <pt x="870" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          127 16 143 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          63 16 79 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          63 16 79 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          38 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          56 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10097" xMin="24" yMin="0" xMax="1064" yMax="947">
      <contour>
        <pt x="130" y="651" on="1"/>
        <pt x="130" y="714" on="0"/>
        <pt x="175" y="822" on="0"/>
        <pt x="269" y="902" on="0"/>
        <pt x="416" y="947" on="0"/>
        <pt x="517" y="947" on="1"/>
        <pt x="539" y="947" on="0"/>
        <pt x="623" y="943" on="0"/>
        <pt x="717" y="939" on="0"/>
        <pt x="804" y="935" on="0"/>
        <pt x="828" y="935" on="1"/>
        <pt x="1064" y="935" on="1"/>
        <pt x="1064" y="863" on="1"/>
        <pt x="1055" y="856" on="0"/>
        <pt x="1035" y="843" on="0"/>
        <pt x="1006" y="832" on="0"/>
        <pt x="966" y="822" on="0"/>
        <pt x="939" y="817" on="1"/>
        <pt x="939" y="118" on="1"/>
        <pt x="974" y="107" on="0"/>
        <pt x="1036" y="85" on="0"/>
        <pt x="1064" y="73" on="1"/>
        <pt x="1064" y="0" on="1"/>
        <pt x="567" y="0" on="1"/>
        <pt x="567" y="73" on="1"/>
        <pt x="612" y="103" on="0"/>
        <pt x="671" y="118" on="1"/>
        <pt x="671" y="385" on="1"/>
        <pt x="546" y="366" on="1"/>
        <pt x="531" y="334" on="0"/>
        <pt x="495" y="258" on="0"/>
        <pt x="450" y="175" on="0"/>
        <pt x="394" y="86" on="0"/>
        <pt x="360" y="43" on="1"/>
        <pt x="302" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="73" on="1"/>
        <pt x="112" y="118" on="1"/>
        <pt x="175" y="181" on="0"/>
        <pt x="233" y="259" on="1"/>
        <pt x="330" y="389" on="1"/>
        <pt x="295" y="399" on="0"/>
        <pt x="224" y="440" on="0"/>
        <pt x="166" y="504" on="0"/>
        <pt x="130" y="593" on="0"/>
      </contour>
      <contour>
        <pt x="671" y="829" on="1"/>
        <pt x="651" y="832" on="0"/>
        <pt x="601" y="840" on="0"/>
        <pt x="578" y="840" on="1"/>
        <pt x="496" y="841" on="0"/>
        <pt x="407" y="750" on="0"/>
        <pt x="407" y="657" on="1"/>
        <pt x="407" y="615" on="0"/>
        <pt x="432" y="545" on="0"/>
        <pt x="485" y="496" on="0"/>
        <pt x="565" y="468" on="0"/>
        <pt x="619" y="468" on="1"/>
        <pt x="671" y="468" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          56 5 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          95 56 111 56 127 56 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 56 79 56 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 7 values pushed */
          223 56 239 56 255 56 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          175 56 191 56 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          28 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          40 28 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10098" xMin="44" yMin="0" xMax="757" yMax="1194">
      <contour>
        <pt x="431" y="829" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="537" y="97" on="0"/>
        <pt x="590" y="73" on="1"/>
        <pt x="590" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="62" y="82" on="0"/>
        <pt x="92" y="96" on="0"/>
        <pt x="120" y="106" on="0"/>
        <pt x="147" y="114" on="0"/>
        <pt x="162" y="118" on="1"/>
        <pt x="162" y="819" on="1"/>
        <pt x="95" y="831" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="565" y="935" on="1"/>
        <pt x="571" y="953" on="0"/>
        <pt x="584" y="991" on="0"/>
        <pt x="605" y="1048" on="0"/>
        <pt x="635" y="1131" on="0"/>
        <pt x="659" y="1194" on="1"/>
        <pt x="736" y="1194" on="1"/>
        <pt x="741" y="1153" on="0"/>
        <pt x="749" y="1046" on="0"/>
        <pt x="754" y="942" on="0"/>
        <pt x="757" y="853" on="0"/>
        <pt x="757" y="829" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10099" xMin="20" yMin="-396" xMax="1000" yMax="1377">
      <contour>
        <pt x="36" y="1107" on="1"/>
        <pt x="158" y="1107" on="1"/>
        <pt x="158" y="1222" on="1"/>
        <pt x="20" y="1237" on="1"/>
        <pt x="20" y="1310" on="1"/>
        <pt x="48" y="1322" on="0"/>
        <pt x="135" y="1344" on="0"/>
        <pt x="231" y="1361" on="0"/>
        <pt x="326" y="1374" on="0"/>
        <pt x="364" y="1377" on="1"/>
        <pt x="428" y="1377" on="1"/>
        <pt x="428" y="1107" on="1"/>
        <pt x="733" y="1107" on="1"/>
        <pt x="733" y="993" on="1"/>
        <pt x="428" y="993" on="1"/>
        <pt x="428" y="693" on="1"/>
        <pt x="430" y="693" on="1"/>
        <pt x="444" y="729" on="0"/>
        <pt x="493" y="801" on="0"/>
        <pt x="562" y="859" on="0"/>
        <pt x="649" y="895" on="0"/>
        <pt x="701" y="895" on="1"/>
        <pt x="773" y="895" on="0"/>
        <pt x="885" y="859" on="0"/>
        <pt x="961" y="769" on="0"/>
        <pt x="1000" y="617" on="0"/>
        <pt x="1000" y="501" on="1"/>
        <pt x="1000" y="2" on="1"/>
        <pt x="1000" y="-114" on="0"/>
        <pt x="947" y="-268" on="0"/>
        <pt x="839" y="-359" on="0"/>
        <pt x="675" y="-396" on="0"/>
        <pt x="564" y="-396" on="1"/>
        <pt x="555" y="-311" on="1"/>
        <pt x="606" y="-299" on="0"/>
        <pt x="673" y="-256" on="0"/>
        <pt x="714" y="-184" on="0"/>
        <pt x="730" y="-77" on="0"/>
        <pt x="730" y="0" on="1"/>
        <pt x="730" y="500" on="1"/>
        <pt x="730" y="541" on="0"/>
        <pt x="729" y="600" on="0"/>
        <pt x="724" y="646" on="0"/>
        <pt x="713" y="682" on="0"/>
        <pt x="703" y="700" on="1"/>
        <pt x="692" y="720" on="0"/>
        <pt x="648" y="745" on="0"/>
        <pt x="611" y="745" on="1"/>
        <pt x="558" y="745" on="0"/>
        <pt x="460" y="661" on="0"/>
        <pt x="428" y="575" on="1"/>
        <pt x="428" y="118" on="1"/>
        <pt x="458" y="110" on="0"/>
        <pt x="505" y="92" on="0"/>
        <pt x="531" y="73" on="1"/>
        <pt x="531" y="0" on="1"/>
        <pt x="40" y="0" on="1"/>
        <pt x="40" y="73" on="1"/>
        <pt x="69" y="88" on="0"/>
        <pt x="126" y="110" on="0"/>
        <pt x="158" y="118" on="1"/>
        <pt x="158" y="993" on="1"/>
        <pt x="36" y="993" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 9 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          48 21 64 21 80 21 96 21 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          11 9 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          127 4 143 4 159 4 175 4 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 55 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10100" xMin="54" yMin="0" xMax="886" yMax="1482">
      <component glyphName="afii10068" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="281" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="afii10101" xMin="50" yMin="-23" xMax="840" yMax="958">
      <contour>
        <pt x="840" y="152" on="1"/>
        <pt x="821" y="115" on="0"/>
        <pt x="759" y="51" on="0"/>
        <pt x="677" y="4" on="0"/>
        <pt x="576" y="-23" on="0"/>
        <pt x="518" y="-23" on="1"/>
        <pt x="391" y="-23" on="0"/>
        <pt x="213" y="56" on="0"/>
        <pt x="101" y="190" on="0"/>
        <pt x="50" y="368" on="0"/>
        <pt x="50" y="468" on="1"/>
        <pt x="50" y="586" on="0"/>
        <pt x="122" y="768" on="0"/>
        <pt x="251" y="893" on="0"/>
        <pt x="432" y="958" on="0"/>
        <pt x="542" y="958" on="1"/>
        <pt x="581" y="958" on="0"/>
        <pt x="664" y="946" on="0"/>
        <pt x="742" y="925" on="0"/>
        <pt x="811" y="897" on="0"/>
        <pt x="837" y="882" on="1"/>
        <pt x="833" y="850" on="0"/>
        <pt x="817" y="777" on="0"/>
        <pt x="797" y="705" on="0"/>
        <pt x="774" y="641" on="0"/>
        <pt x="763" y="617" on="1"/>
        <pt x="699" y="617" on="1"/>
        <pt x="616" y="834" on="1"/>
        <pt x="603" y="840" on="0"/>
        <pt x="564" y="851" on="0"/>
        <pt x="538" y="851" on="1"/>
        <pt x="499" y="851" on="0"/>
        <pt x="427" y="813" on="0"/>
        <pt x="373" y="732" on="0"/>
        <pt x="340" y="604" on="0"/>
        <pt x="340" y="514" on="1"/>
        <pt x="635" y="539" on="1"/>
        <pt x="648" y="514" on="0"/>
        <pt x="648" y="470" on="1"/>
        <pt x="648" y="427" on="0"/>
        <pt x="635" y="402" on="1"/>
        <pt x="345" y="406" on="1"/>
        <pt x="346" y="381" on="0"/>
        <pt x="358" y="326" on="0"/>
        <pt x="377" y="272" on="0"/>
        <pt x="403" y="223" on="0"/>
        <pt x="419" y="205" on="1"/>
        <pt x="456" y="163" on="0"/>
        <pt x="549" y="127" on="0"/>
        <pt x="613" y="127" on="1"/>
        <pt x="680" y="127" on="0"/>
        <pt x="776" y="165" on="0"/>
        <pt x="810" y="191" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          143 35 159 35 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 35 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 35 79 35 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 35 79 35 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          26 35 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          52 49 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10101dieresis" xMin="50" yMin="-23" xMax="840" yMax="1422">
      <component glyphName="afii10101" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="150" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          62
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10102" xMin="42" yMin="-23" xMax="767" yMax="958">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10103" xMin="38" yMin="0" xMax="541" yMax="1431">
      <component glyphName="i" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10103.alt" xMin="38" yMin="0" xMax="541" yMax="958">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10104" xMin="-58" yMin="0" xMax="624" yMax="1422">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-58" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="afii10105" xMin="82" yMin="-396" xMax="520" yMax="1431">
      <component glyphName="j" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="afii10106" xMin="26" yMin="-34" xMax="1545" yMax="935">
      <contour>
        <pt x="1092" y="863" on="1"/>
        <pt x="1069" y="849" on="0"/>
        <pt x="1002" y="827" on="0"/>
        <pt x="968" y="817" on="1"/>
        <pt x="968" y="562" on="1"/>
        <pt x="1000" y="567" on="0"/>
        <pt x="1092" y="579" on="0"/>
        <pt x="1160" y="579" on="1"/>
        <pt x="1237" y="579" on="0"/>
        <pt x="1378" y="549" on="0"/>
        <pt x="1432" y="511" on="1"/>
        <pt x="1483" y="476" on="0"/>
        <pt x="1545" y="361" on="0"/>
        <pt x="1545" y="281" on="1"/>
        <pt x="1545" y="203" on="0"/>
        <pt x="1472" y="93" on="0"/>
        <pt x="1351" y="24" on="0"/>
        <pt x="1196" y="-8" on="0"/>
        <pt x="1114" y="-8" on="1"/>
        <pt x="1088" y="-8" on="0"/>
        <pt x="995" y="-6" on="0"/>
        <pt x="890" y="-3" on="0"/>
        <pt x="786" y="0" on="0"/>
        <pt x="749" y="0" on="1"/>
        <pt x="595" y="0" on="1"/>
        <pt x="595" y="73" on="1"/>
        <pt x="618" y="88" on="0"/>
        <pt x="665" y="110" on="0"/>
        <pt x="699" y="118" on="1"/>
        <pt x="699" y="829" on="1"/>
        <pt x="473" y="829" on="1"/>
        <pt x="471" y="730" on="0"/>
        <pt x="452" y="514" on="0"/>
        <pt x="413" y="309" on="0"/>
        <pt x="350" y="128" on="0"/>
        <pt x="304" y="64" on="1"/>
        <pt x="267" y="10" on="0"/>
        <pt x="177" y="-34" on="0"/>
        <pt x="141" y="-26" on="1"/>
        <pt x="117" y="-13" on="0"/>
        <pt x="76" y="44" on="0"/>
        <pt x="46" y="109" on="0"/>
        <pt x="28" y="173" on="0"/>
        <pt x="26" y="194" on="1"/>
        <pt x="68" y="259" on="1"/>
        <pt x="245" y="211" on="1"/>
        <pt x="268" y="256" on="0"/>
        <pt x="302" y="378" on="0"/>
        <pt x="313" y="457" on="1"/>
        <pt x="324" y="536" on="0"/>
        <pt x="337" y="706" on="0"/>
        <pt x="338" y="798" on="1"/>
        <pt x="301" y="810" on="0"/>
        <pt x="231" y="844" on="0"/>
        <pt x="205" y="863" on="1"/>
        <pt x="205" y="935" on="1"/>
        <pt x="1092" y="935" on="1"/>
      </contour>
      <contour>
        <pt x="968" y="107" on="1"/>
        <pt x="986" y="103" on="0"/>
        <pt x="1030" y="99" on="0"/>
        <pt x="1051" y="99" on="1"/>
        <pt x="1089" y="99" on="0"/>
        <pt x="1161" y="117" on="0"/>
        <pt x="1218" y="161" on="0"/>
        <pt x="1252" y="233" on="0"/>
        <pt x="1252" y="287" on="1"/>
        <pt x="1252" y="329" on="0"/>
        <pt x="1231" y="397" on="0"/>
        <pt x="1185" y="445" on="0"/>
        <pt x="1112" y="471" on="0"/>
        <pt x="1060" y="471" on="1"/>
        <pt x="1040" y="471" on="0"/>
        <pt x="990" y="467" on="0"/>
        <pt x="968" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 74 75
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          7 55 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 38 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          45 44 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          70 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10107" xMin="44" yMin="-8" xMax="1584" yMax="935">
      <contour>
        <pt x="647" y="0" on="1"/>
        <pt x="647" y="73" on="1"/>
        <pt x="695" y="109" on="0"/>
        <pt x="750" y="118" on="1"/>
        <pt x="750" y="419" on="1"/>
        <pt x="432" y="419" on="1"/>
        <pt x="432" y="118" on="1"/>
        <pt x="464" y="110" on="0"/>
        <pt x="515" y="88" on="0"/>
        <pt x="535" y="73" on="1"/>
        <pt x="535" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="71" y="88" on="0"/>
        <pt x="129" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="129" y="827" on="0"/>
        <pt x="71" y="848" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="535" y="935" on="1"/>
        <pt x="535" y="863" on="1"/>
        <pt x="493" y="837" on="0"/>
        <pt x="432" y="817" on="1"/>
        <pt x="432" y="526" on="1"/>
        <pt x="750" y="526" on="1"/>
        <pt x="750" y="817" on="1"/>
        <pt x="694" y="829" on="0"/>
        <pt x="647" y="863" on="1"/>
        <pt x="647" y="935" on="1"/>
        <pt x="1143" y="935" on="1"/>
        <pt x="1143" y="863" on="1"/>
        <pt x="1121" y="849" on="0"/>
        <pt x="1053" y="827" on="0"/>
        <pt x="1019" y="817" on="1"/>
        <pt x="1019" y="562" on="1"/>
        <pt x="1049" y="567" on="0"/>
        <pt x="1137" y="579" on="0"/>
        <pt x="1211" y="579" on="1"/>
        <pt x="1247" y="579" on="0"/>
        <pt x="1322" y="573" on="0"/>
        <pt x="1394" y="557" on="0"/>
        <pt x="1460" y="531" on="0"/>
        <pt x="1487" y="510" on="1"/>
        <pt x="1533" y="475" on="0"/>
        <pt x="1584" y="368" on="0"/>
        <pt x="1584" y="298" on="1"/>
        <pt x="1584" y="223" on="0"/>
        <pt x="1524" y="109" on="0"/>
        <pt x="1420" y="32" on="0"/>
        <pt x="1277" y="-8" on="0"/>
        <pt x="1195" y="-8" on="1"/>
        <pt x="1178" y="-8" on="0"/>
        <pt x="1120" y="-7" on="0"/>
        <pt x="1048" y="-5" on="0"/>
        <pt x="969" y="-3" on="0"/>
        <pt x="893" y="-1" on="0"/>
        <pt x="825" y="0" on="0"/>
        <pt x="801" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="1019" y="107" on="1"/>
        <pt x="1038" y="103" on="0"/>
        <pt x="1086" y="99" on="0"/>
        <pt x="1106" y="99" on="1"/>
        <pt x="1144" y="99" on="0"/>
        <pt x="1211" y="120" on="0"/>
        <pt x="1262" y="166" on="0"/>
        <pt x="1291" y="241" on="0"/>
        <pt x="1291" y="295" on="1"/>
        <pt x="1291" y="387" on="0"/>
        <pt x="1193" y="471" on="0"/>
        <pt x="1107" y="471" on="1"/>
        <pt x="1087" y="471" on="0"/>
        <pt x="1042" y="468" on="0"/>
        <pt x="1019" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 75 76
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 20 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 25 79 25 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 25 79 25 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          39 30 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          63 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          71 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10108" xMin="20" yMin="-18" xMax="1109" yMax="1377">
      <contour>
        <pt x="35" y="1107" on="1"/>
        <pt x="156" y="1107" on="1"/>
        <pt x="156" y="1222" on="1"/>
        <pt x="20" y="1237" on="1"/>
        <pt x="20" y="1310" on="1"/>
        <pt x="49" y="1322" on="0"/>
        <pt x="134" y="1344" on="0"/>
        <pt x="229" y="1361" on="0"/>
        <pt x="323" y="1374" on="0"/>
        <pt x="361" y="1377" on="1"/>
        <pt x="425" y="1377" on="1"/>
        <pt x="425" y="1107" on="1"/>
        <pt x="782" y="1107" on="1"/>
        <pt x="782" y="993" on="1"/>
        <pt x="425" y="993" on="1"/>
        <pt x="425" y="690" on="1"/>
        <pt x="427" y="690" on="1"/>
        <pt x="444" y="728" on="0"/>
        <pt x="498" y="801" on="0"/>
        <pt x="570" y="858" on="0"/>
        <pt x="657" y="893" on="0"/>
        <pt x="708" y="893" on="1"/>
        <pt x="784" y="893" on="0"/>
        <pt x="892" y="858" on="0"/>
        <pt x="960" y="771" on="0"/>
        <pt x="991" y="623" on="0"/>
        <pt x="991" y="509" on="1"/>
        <pt x="991" y="134" on="1"/>
        <pt x="1109" y="118" on="1"/>
        <pt x="1109" y="52" on="1"/>
        <pt x="1082" y="41" on="0"/>
        <pt x="1000" y="18" on="0"/>
        <pt x="909" y="-1" on="0"/>
        <pt x="820" y="-15" on="0"/>
        <pt x="788" y="-18" on="1"/>
        <pt x="724" y="-18" on="1"/>
        <pt x="722" y="452" on="1"/>
        <pt x="722" y="534" on="0"/>
        <pt x="715" y="664" on="0"/>
        <pt x="698" y="695" on="1"/>
        <pt x="686" y="717" on="0"/>
        <pt x="638" y="743" on="0"/>
        <pt x="601" y="743" on="1"/>
        <pt x="552" y="743" on="0"/>
        <pt x="456" y="656" on="0"/>
        <pt x="425" y="573" on="1"/>
        <pt x="425" y="118" on="1"/>
        <pt x="455" y="110" on="0"/>
        <pt x="502" y="92" on="0"/>
        <pt x="529" y="73" on="1"/>
        <pt x="529" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="68" y="88" on="0"/>
        <pt x="123" y="110" on="0"/>
        <pt x="156" y="118" on="1"/>
        <pt x="156" y="993" on="1"/>
        <pt x="35" y="993" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            50
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            50 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 9 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          48 21 64 21 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          11 9 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          127 4 143 4 159 4 175 4 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 50 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          52 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10109" xMin="56" yMin="0" xMax="1142" yMax="1482">
      <component glyphName="afii10076" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="405" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="afii10110" xMin="15" yMin="-402" xMax="1016" yMax="1444">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="42" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="afii10145" xMin="81" yMin="-388" xMax="1511" yMax="1356">
      <contour>
        <pt x="661" y="1282" on="1"/>
        <pt x="631" y="1262" on="0"/>
        <pt x="569" y="1234" on="0"/>
        <pt x="530" y="1225" on="1"/>
        <pt x="530" y="126" on="1"/>
        <pt x="1062" y="126" on="1"/>
        <pt x="1062" y="1225" on="1"/>
        <pt x="1011" y="1236" on="0"/>
        <pt x="950" y="1266" on="0"/>
        <pt x="930" y="1282" on="1"/>
        <pt x="930" y="1356" on="1"/>
        <pt x="1511" y="1356" on="1"/>
        <pt x="1511" y="1282" on="1"/>
        <pt x="1468" y="1257" on="0"/>
        <pt x="1391" y="1229" on="0"/>
        <pt x="1352" y="1225" on="1"/>
        <pt x="1352" y="130" on="1"/>
        <pt x="1394" y="122" on="0"/>
        <pt x="1475" y="96" on="0"/>
        <pt x="1511" y="74" on="1"/>
        <pt x="1511" y="0" on="1"/>
        <pt x="939" y="0" on="1"/>
        <pt x="932" y="-47" on="0"/>
        <pt x="910" y="-144" on="0"/>
        <pt x="895" y="-195" on="1"/>
        <pt x="881" y="-247" on="0"/>
        <pt x="852" y="-343" on="0"/>
        <pt x="838" y="-388" on="1"/>
        <pt x="753" y="-388" on="1"/>
        <pt x="720" y="-289" on="0"/>
        <pt x="668" y="-94" on="0"/>
        <pt x="653" y="0" on="1"/>
        <pt x="81" y="0" on="1"/>
        <pt x="81" y="74" on="1"/>
        <pt x="118" y="95" on="0"/>
        <pt x="201" y="122" on="0"/>
        <pt x="240" y="130" on="1"/>
        <pt x="240" y="1225" on="1"/>
        <pt x="188" y="1234" on="0"/>
        <pt x="110" y="1264" on="0"/>
        <pt x="81" y="1282" on="1"/>
        <pt x="81" y="1356" on="1"/>
        <pt x="661" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10146" xMin="20" yMin="-6" xMax="1496" yMax="1402">
      <contour>
        <pt x="736" y="1081" on="1"/>
        <pt x="736" y="778" on="1"/>
        <pt x="792" y="786" on="0"/>
        <pt x="903" y="791" on="0"/>
        <pt x="957" y="791" on="1"/>
        <pt x="1066" y="791" on="0"/>
        <pt x="1262" y="751" on="0"/>
        <pt x="1410" y="661" on="0"/>
        <pt x="1496" y="513" on="0"/>
        <pt x="1496" y="405" on="1"/>
        <pt x="1496" y="294" on="0"/>
        <pt x="1406" y="137" on="0"/>
        <pt x="1247" y="39" on="0"/>
        <pt x="1028" y="-6" on="0"/>
        <pt x="898" y="-6" on="1"/>
        <pt x="891" y="-6" on="0"/>
        <pt x="851" y="-5" on="0"/>
        <pt x="794" y="-4" on="0"/>
        <pt x="728" y="-2" on="0"/>
        <pt x="663" y="-1" on="0"/>
        <pt x="605" y="0" on="0"/>
        <pt x="586" y="0" on="1"/>
        <pt x="287" y="0" on="1"/>
        <pt x="287" y="74" on="1"/>
        <pt x="322" y="93" on="0"/>
        <pt x="404" y="124" on="0"/>
        <pt x="446" y="130" on="1"/>
        <pt x="446" y="1081" on="1"/>
        <pt x="267" y="1081" on="1"/>
        <pt x="143" y="791" on="1"/>
        <pt x="64" y="791" on="1"/>
        <pt x="55" y="831" on="0"/>
        <pt x="40" y="934" on="0"/>
        <pt x="28" y="1045" on="0"/>
        <pt x="21" y="1154" on="0"/>
        <pt x="20" y="1199" on="1"/>
        <pt x="446" y="1199" on="1"/>
        <pt x="446" y="1280" on="1"/>
        <pt x="407" y="1288" on="0"/>
        <pt x="322" y="1315" on="0"/>
        <pt x="287" y="1336" on="1"/>
        <pt x="287" y="1402" on="1"/>
        <pt x="915" y="1402" on="1"/>
        <pt x="915" y="1336" on="1"/>
        <pt x="882" y="1317" on="0"/>
        <pt x="784" y="1288" on="0"/>
        <pt x="736" y="1280" on="1"/>
        <pt x="736" y="1199" on="1"/>
        <pt x="1216" y="1199" on="1"/>
        <pt x="1215" y="1155" on="0"/>
        <pt x="1207" y="1064" on="0"/>
        <pt x="1200" y="1016" on="1"/>
        <pt x="1193" y="968" on="0"/>
        <pt x="1181" y="886" on="0"/>
        <pt x="1174" y="852" on="1"/>
        <pt x="1092" y="852" on="1"/>
        <pt x="980" y="1081" on="1"/>
      </contour>
      <contour>
        <pt x="885" y="664" on="1"/>
        <pt x="867" y="664" on="0"/>
        <pt x="824" y="663" on="0"/>
        <pt x="782" y="661" on="0"/>
        <pt x="747" y="657" on="0"/>
        <pt x="736" y="654" on="1"/>
        <pt x="736" y="128" on="1"/>
        <pt x="774" y="124" on="0"/>
        <pt x="851" y="120" on="0"/>
        <pt x="888" y="120" on="1"/>
        <pt x="941" y="120" on="0"/>
        <pt x="1044" y="146" on="0"/>
        <pt x="1126" y="210" on="0"/>
        <pt x="1176" y="321" on="0"/>
        <pt x="1176" y="405" on="1"/>
        <pt x="1176" y="544" on="0"/>
        <pt x="1100" y="605" on="1"/>
        <pt x="1063" y="635" on="0"/>
        <pt x="946" y="664" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 41 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          80 4 96 4 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          23 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 41 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          48 35 64 35 80 35 96 35 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          27 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          29 27 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          55 4 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          57 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          66 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10147" xMin="88" yMin="-24" xMax="1505" yMax="1379">
      <contour>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="187" y="1086" on="0"/>
        <pt x="371" y="1274" on="0"/>
        <pt x="634" y="1379" on="0"/>
        <pt x="798" y="1379" on="1"/>
        <pt x="962" y="1379" on="0"/>
        <pt x="1224" y="1274" on="0"/>
        <pt x="1407" y="1086" on="0"/>
        <pt x="1505" y="829" on="0"/>
        <pt x="1505" y="678" on="1"/>
        <pt x="1505" y="526" on="0"/>
        <pt x="1407" y="269" on="0"/>
        <pt x="1224" y="81" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="798" y="-24" on="1"/>
        <pt x="634" y="-24" on="0"/>
        <pt x="372" y="81" on="0"/>
        <pt x="187" y="269" on="0"/>
        <pt x="88" y="526" on="0"/>
      </contour>
      <contour>
        <pt x="1007" y="715" on="1"/>
        <pt x="1033" y="715" on="0"/>
        <pt x="1117" y="729" on="0"/>
        <pt x="1172" y="763" on="1"/>
        <pt x="1164" y="870" on="0"/>
        <pt x="1107" y="1050" on="0"/>
        <pt x="1009" y="1180" on="0"/>
        <pt x="872" y="1253" on="0"/>
        <pt x="783" y="1253" on="1"/>
        <pt x="691" y="1253" on="0"/>
        <pt x="555" y="1170" on="0"/>
        <pt x="465" y="1022" on="0"/>
        <pt x="419" y="819" on="0"/>
        <pt x="417" y="700" on="1"/>
        <pt x="439" y="724" on="0"/>
        <pt x="497" y="772" on="0"/>
        <pt x="561" y="812" on="0"/>
        <pt x="630" y="837" on="0"/>
        <pt x="663" y="837" on="1"/>
        <pt x="716" y="837" on="0"/>
        <pt x="810" y="794" on="0"/>
        <pt x="858" y="767" on="1"/>
        <pt x="893" y="747" on="0"/>
        <pt x="969" y="715" on="0"/>
      </contour>
      <contour>
        <pt x="612" y="647" on="1"/>
        <pt x="581" y="647" on="0"/>
        <pt x="482" y="616" on="0"/>
        <pt x="422" y="571" on="1"/>
        <pt x="433" y="468" on="0"/>
        <pt x="495" y="296" on="0"/>
        <pt x="595" y="172" on="0"/>
        <pt x="731" y="103" on="0"/>
        <pt x="816" y="103" on="1"/>
        <pt x="899" y="103" on="0"/>
        <pt x="1029" y="182" on="0"/>
        <pt x="1120" y="323" on="0"/>
        <pt x="1170" y="518" on="0"/>
        <pt x="1175" y="633" on="1"/>
        <pt x="1154" y="611" on="0"/>
        <pt x="1099" y="570" on="0"/>
        <pt x="1041" y="538" on="0"/>
        <pt x="983" y="519" on="0"/>
        <pt x="961" y="519" on="1"/>
        <pt x="915" y="519" on="0"/>
        <pt x="837" y="552" on="0"/>
        <pt x="799" y="574" on="1"/>
        <pt x="752" y="601" on="0"/>
        <pt x="657" y="647" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 68 69
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          62 38 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          20 62 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 38 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          52 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10148" xMin="50" yMin="-24" xMax="1628" yMax="1379">
      <contour>
        <pt x="1466" y="1379" on="1"/>
        <pt x="1495" y="1369" on="0"/>
        <pt x="1549" y="1306" on="0"/>
        <pt x="1593" y="1224" on="0"/>
        <pt x="1623" y="1136" on="0"/>
        <pt x="1628" y="1102" on="1"/>
        <pt x="1569" y="1034" on="1"/>
        <pt x="1362" y="1088" on="1"/>
        <pt x="1343" y="1070" on="0"/>
        <pt x="1305" y="1023" on="0"/>
        <pt x="1269" y="970" on="0"/>
        <pt x="1236" y="913" on="0"/>
        <pt x="1222" y="885" on="1"/>
        <pt x="1175" y="795" on="0"/>
        <pt x="1092" y="592" on="0"/>
        <pt x="1055" y="488" on="1"/>
        <pt x="1034" y="429" on="0"/>
        <pt x="993" y="301" on="0"/>
        <pt x="955" y="169" on="0"/>
        <pt x="922" y="38" on="0"/>
        <pt x="910" y="-24" on="1"/>
        <pt x="747" y="-24" on="1"/>
        <pt x="196" y="1225" on="1"/>
        <pt x="157" y="1236" on="0"/>
        <pt x="79" y="1264" on="0"/>
        <pt x="50" y="1282" on="1"/>
        <pt x="50" y="1356" on="1"/>
        <pt x="695" y="1356" on="1"/>
        <pt x="695" y="1282" on="1"/>
        <pt x="662" y="1266" on="0"/>
        <pt x="581" y="1236" on="0"/>
        <pt x="536" y="1225" on="1"/>
        <pt x="834" y="501" on="1"/>
        <pt x="878" y="320" on="1"/>
        <pt x="882" y="320" on="1"/>
        <pt x="917" y="503" on="1"/>
        <pt x="935" y="557" on="0"/>
        <pt x="969" y="660" on="0"/>
        <pt x="1006" y="765" on="0"/>
        <pt x="1050" y="875" on="0"/>
        <pt x="1079" y="936" on="1"/>
        <pt x="1111" y="1003" on="0"/>
        <pt x="1180" y="1122" on="0"/>
        <pt x="1247" y="1218" on="0"/>
        <pt x="1308" y="1290" on="0"/>
        <pt x="1334" y="1311" on="1"/>
        <pt x="1368" y="1339" on="0"/>
        <pt x="1438" y="1371" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          33 48 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 0 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          33 20 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10193" xMin="44" yMin="-355" xMax="1136" yMax="935">
      <contour>
        <pt x="535" y="863" on="1"/>
        <pt x="515" y="851" on="0"/>
        <pt x="470" y="829" on="0"/>
        <pt x="432" y="817" on="1"/>
        <pt x="432" y="107" on="1"/>
        <pt x="748" y="107" on="1"/>
        <pt x="748" y="817" on="1"/>
        <pt x="708" y="827" on="0"/>
        <pt x="664" y="849" on="0"/>
        <pt x="645" y="863" on="1"/>
        <pt x="645" y="935" on="1"/>
        <pt x="1136" y="935" on="1"/>
        <pt x="1136" y="863" on="1"/>
        <pt x="1106" y="846" on="0"/>
        <pt x="1050" y="823" on="0"/>
        <pt x="1018" y="817" on="1"/>
        <pt x="1018" y="118" on="1"/>
        <pt x="1053" y="113" on="0"/>
        <pt x="1111" y="88" on="0"/>
        <pt x="1136" y="73" on="1"/>
        <pt x="1136" y="0" on="1"/>
        <pt x="722" y="0" on="1"/>
        <pt x="712" y="-91" on="0"/>
        <pt x="659" y="-270" on="0"/>
        <pt x="631" y="-355" on="1"/>
        <pt x="548" y="-355" on="1"/>
        <pt x="519" y="-265" on="0"/>
        <pt x="472" y="-91" on="0"/>
        <pt x="457" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="67" y="86" on="0"/>
        <pt x="124" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="134" y="821" on="0"/>
        <pt x="68" y="846" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="535" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10194" xMin="22" yMin="-8" xMax="1187" yMax="1377">
      <contour>
        <pt x="627" y="829" on="1"/>
        <pt x="627" y="554" on="1"/>
        <pt x="659" y="559" on="0"/>
        <pt x="752" y="569" on="0"/>
        <pt x="812" y="569" on="1"/>
        <pt x="890" y="569" on="0"/>
        <pt x="1036" y="539" on="0"/>
        <pt x="1090" y="500" on="1"/>
        <pt x="1136" y="466" on="0"/>
        <pt x="1187" y="362" on="0"/>
        <pt x="1187" y="292" on="1"/>
        <pt x="1187" y="217" on="0"/>
        <pt x="1124" y="105" on="0"/>
        <pt x="1014" y="30" on="0"/>
        <pt x="866" y="-8" on="0"/>
        <pt x="781" y="-8" on="1"/>
        <pt x="756" y="-8" on="0"/>
        <pt x="660" y="-6" on="0"/>
        <pt x="550" y="-3" on="0"/>
        <pt x="443" y="0" on="0"/>
        <pt x="407" y="0" on="1"/>
        <pt x="234" y="0" on="1"/>
        <pt x="234" y="73" on="1"/>
        <pt x="262" y="88" on="0"/>
        <pt x="325" y="109" on="0"/>
        <pt x="357" y="118" on="1"/>
        <pt x="357" y="829" on="1"/>
        <pt x="230" y="829" on="1"/>
        <pt x="148" y="571" on="1"/>
        <pt x="69" y="571" on="1"/>
        <pt x="59" y="610" on="0"/>
        <pt x="43" y="707" on="0"/>
        <pt x="31" y="806" on="0"/>
        <pt x="23" y="899" on="0"/>
        <pt x="22" y="935" on="1"/>
        <pt x="357" y="935" on="1"/>
        <pt x="357" y="1222" on="1"/>
        <pt x="214" y="1237" on="1"/>
        <pt x="214" y="1310" on="1"/>
        <pt x="239" y="1322" on="0"/>
        <pt x="325" y="1344" on="0"/>
        <pt x="424" y="1361" on="0"/>
        <pt x="524" y="1374" on="0"/>
        <pt x="562" y="1377" on="1"/>
        <pt x="627" y="1377" on="1"/>
        <pt x="627" y="935" on="1"/>
        <pt x="999" y="935" on="1"/>
        <pt x="999" y="866" on="0"/>
        <pt x="983" y="733" on="0"/>
        <pt x="971" y="655" on="1"/>
        <pt x="890" y="655" on="1"/>
        <pt x="761" y="829" on="1"/>
      </contour>
      <contour>
        <pt x="627" y="107" on="1"/>
        <pt x="665" y="99" on="0"/>
        <pt x="709" y="99" on="1"/>
        <pt x="748" y="99" on="0"/>
        <pt x="816" y="117" on="0"/>
        <pt x="865" y="161" on="0"/>
        <pt x="894" y="236" on="0"/>
        <pt x="894" y="292" on="1"/>
        <pt x="894" y="341" on="0"/>
        <pt x="864" y="407" on="0"/>
        <pt x="816" y="446" on="0"/>
        <pt x="754" y="462" on="0"/>
        <pt x="721" y="462" on="1"/>
        <pt x="699" y="462" on="0"/>
        <pt x="648" y="458" on="0"/>
        <pt x="627" y="453" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 45 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          22 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          28 26 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          50 51 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          64 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10195" xMin="44" yMin="-23" xMax="980" yMax="958">
      <contour>
        <pt x="44" y="468" on="1"/>
        <pt x="44" y="579" on="0"/>
        <pt x="108" y="759" on="0"/>
        <pt x="228" y="888" on="0"/>
        <pt x="402" y="958" on="0"/>
        <pt x="512" y="958" on="1"/>
        <pt x="639" y="958" on="0"/>
        <pt x="817" y="879" on="0"/>
        <pt x="929" y="745" on="0"/>
        <pt x="980" y="567" on="0"/>
        <pt x="980" y="468" on="1"/>
        <pt x="980" y="361" on="0"/>
        <pt x="915" y="181" on="0"/>
        <pt x="793" y="50" on="0"/>
        <pt x="620" y="-23" on="0"/>
        <pt x="512" y="-23" on="1"/>
        <pt x="393" y="-23" on="0"/>
        <pt x="217" y="53" on="0"/>
        <pt x="101" y="185" on="0"/>
        <pt x="44" y="364" on="0"/>
      </contour>
      <contour>
        <pt x="399" y="430" on="1"/>
        <pt x="379" y="430" on="0"/>
        <pt x="336" y="406" on="0"/>
        <pt x="319" y="387" on="1"/>
        <pt x="324" y="325" on="0"/>
        <pt x="348" y="217" on="0"/>
        <pt x="396" y="138" on="0"/>
        <pt x="472" y="92" on="0"/>
        <pt x="528" y="92" on="1"/>
        <pt x="562" y="92" on="0"/>
        <pt x="626" y="132" on="0"/>
        <pt x="675" y="215" on="0"/>
        <pt x="706" y="343" on="0"/>
        <pt x="709" y="431" on="1"/>
        <pt x="683" y="402" on="0"/>
        <pt x="620" y="356" on="0"/>
        <pt x="583" y="356" on="1"/>
        <pt x="553" y="356" on="0"/>
        <pt x="508" y="379" on="0"/>
        <pt x="466" y="407" on="0"/>
        <pt x="424" y="430" on="0"/>
      </contour>
      <contour>
        <pt x="631" y="511" on="1"/>
        <pt x="645" y="511" on="0"/>
        <pt x="686" y="525" on="0"/>
        <pt x="707" y="541" on="1"/>
        <pt x="702" y="605" on="0"/>
        <pt x="676" y="715" on="0"/>
        <pt x="627" y="797" on="0"/>
        <pt x="554" y="844" on="0"/>
        <pt x="503" y="844" on="1"/>
        <pt x="463" y="844" on="0"/>
        <pt x="397" y="803" on="0"/>
        <pt x="347" y="719" on="0"/>
        <pt x="318" y="589" on="0"/>
        <pt x="316" y="501" on="1"/>
        <pt x="349" y="540" on="0"/>
        <pt x="411" y="585" on="0"/>
        <pt x="445" y="585" on="1"/>
        <pt x="475" y="585" on="0"/>
        <pt x="520" y="562" on="0"/>
        <pt x="562" y="534" on="0"/>
        <pt x="604" y="511" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          57 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          36 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          20 57 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          41 36 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii10196" xMin="42" yMin="-23" xMax="1209" yMax="953">
      <contour>
        <pt x="687" y="0" on="1"/>
        <pt x="526" y="-23" on="1"/>
        <pt x="142" y="817" on="1"/>
        <pt x="87" y="837" on="0"/>
        <pt x="42" y="863" on="1"/>
        <pt x="42" y="935" on="1"/>
        <pt x="534" y="935" on="1"/>
        <pt x="534" y="865" on="1"/>
        <pt x="511" y="851" on="0"/>
        <pt x="459" y="827" on="0"/>
        <pt x="428" y="817" on="1"/>
        <pt x="617" y="339" on="1"/>
        <pt x="645" y="233" on="1"/>
        <pt x="649" y="233" on="1"/>
        <pt x="670" y="348" on="1"/>
        <pt x="688" y="420" on="0"/>
        <pt x="743" y="570" on="0"/>
        <pt x="810" y="708" on="0"/>
        <pt x="885" y="826" on="0"/>
        <pt x="924" y="865" on="1"/>
        <pt x="938" y="880" on="0"/>
        <pt x="980" y="910" on="0"/>
        <pt x="1025" y="935" on="0"/>
        <pt x="1068" y="951" on="0"/>
        <pt x="1082" y="953" on="1"/>
        <pt x="1103" y="939" on="0"/>
        <pt x="1144" y="885" on="0"/>
        <pt x="1178" y="821" on="0"/>
        <pt x="1204" y="756" on="0"/>
        <pt x="1209" y="733" on="1"/>
        <pt x="1156" y="661" on="1"/>
        <pt x="998" y="707" on="1"/>
        <pt x="961" y="678" on="0"/>
        <pt x="891" y="572" on="0"/>
        <pt x="831" y="447" on="0"/>
        <pt x="783" y="317" on="0"/>
        <pt x="769" y="266" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          14 37 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            1
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            1 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 0 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          30 24 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          31 30 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii57929" xMin="169" yMin="802" xMax="518" yMax="1354">
      <component glyphName="quotesinglbase" x="5" y="1090" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii61289" xMin="-7" yMin="-27" xMax="743" yMax="1311">
      <contour>
        <pt x="-7" y="302" on="1"/>
        <pt x="174" y="484" on="1"/>
        <pt x="174" y="937" on="1"/>
        <pt x="174" y="1033" on="0"/>
        <pt x="217" y="1173" on="0"/>
        <pt x="288" y="1266" on="0"/>
        <pt x="387" y="1311" on="0"/>
        <pt x="445" y="1311" on="1"/>
        <pt x="532" y="1311" on="0"/>
        <pt x="631" y="1210" on="0"/>
        <pt x="631" y="1127" on="1"/>
        <pt x="631" y="1033" on="0"/>
        <pt x="571" y="918" on="1"/>
        <pt x="540" y="861" on="0"/>
        <pt x="416" y="697" on="0"/>
        <pt x="321" y="591" on="1"/>
        <pt x="321" y="281" on="1"/>
        <pt x="321" y="137" on="0"/>
        <pt x="410" y="29" on="0"/>
        <pt x="481" y="29" on="1"/>
        <pt x="546" y="29" on="0"/>
        <pt x="666" y="135" on="0"/>
        <pt x="710" y="273" on="1"/>
        <pt x="743" y="273" on="1"/>
        <pt x="706" y="120" on="0"/>
        <pt x="614" y="39" on="1"/>
        <pt x="546" y="-27" on="0"/>
        <pt x="441" y="-27" on="1"/>
        <pt x="357" y="-27" on="0"/>
        <pt x="226" y="64" on="0"/>
        <pt x="197" y="142" on="1"/>
        <pt x="174" y="200" on="0"/>
        <pt x="174" y="340" on="1"/>
        <pt x="174" y="434" on="1"/>
        <pt x="17" y="279" on="1"/>
      </contour>
      <contour>
        <pt x="321" y="643" on="1"/>
        <pt x="581" y="930" on="0"/>
        <pt x="581" y="1092" on="1"/>
        <pt x="581" y="1173" on="0"/>
        <pt x="505" y="1259" on="0"/>
        <pt x="451" y="1259" on="1"/>
        <pt x="424" y="1259" on="0"/>
        <pt x="377" y="1236" on="0"/>
        <pt x="342" y="1177" on="0"/>
        <pt x="321" y="1079" on="0"/>
        <pt x="321" y="1003" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 7 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 23
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 19 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 23
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="afii61352" xMin="40" yMin="-24" xMax="2038" yMax="1379">
      <contour>
        <pt x="1433" y="683" on="1"/>
        <pt x="1966" y="683" on="1"/>
        <pt x="1966" y="513" on="1"/>
        <pt x="1433" y="513" on="1"/>
      </contour>
      <contour>
        <pt x="873" y="1356" on="1"/>
        <pt x="1344" y="1356" on="1"/>
        <pt x="1344" y="1282" on="1"/>
        <pt x="1307" y="1253" on="0"/>
        <pt x="1228" y="1208" on="0"/>
        <pt x="1189" y="1197" on="1"/>
        <pt x="1189" y="-24" on="1"/>
        <pt x="1025" y="-24" on="1"/>
        <pt x="412" y="951" on="1"/>
        <pt x="334" y="1100" on="1"/>
        <pt x="329" y="1100" on="1"/>
        <pt x="346" y="945" on="1"/>
        <pt x="346" y="151" on="1"/>
        <pt x="390" y="140" on="0"/>
        <pt x="475" y="100" on="0"/>
        <pt x="513" y="74" on="1"/>
        <pt x="513" y="0" on="1"/>
        <pt x="40" y="0" on="1"/>
        <pt x="40" y="74" on="1"/>
        <pt x="75" y="96" on="0"/>
        <pt x="152" y="137" on="0"/>
        <pt x="197" y="151" on="1"/>
        <pt x="197" y="1208" on="1"/>
        <pt x="158" y="1224" on="0"/>
        <pt x="86" y="1262" on="0"/>
        <pt x="55" y="1284" on="1"/>
        <pt x="55" y="1356" on="1"/>
        <pt x="468" y="1356" on="1"/>
        <pt x="953" y="593" on="1"/>
        <pt x="1042" y="427" on="1"/>
        <pt x="1050" y="427" on="1"/>
        <pt x="1040" y="593" on="1"/>
        <pt x="1040" y="1197" on="1"/>
        <pt x="992" y="1212" on="0"/>
        <pt x="906" y="1257" on="0"/>
        <pt x="873" y="1282" on="1"/>
      </contour>
      <contour>
        <pt x="1363" y="1080" on="1"/>
        <pt x="1363" y="1149" on="0"/>
        <pt x="1410" y="1260" on="0"/>
        <pt x="1497" y="1337" on="0"/>
        <pt x="1622" y="1379" on="0"/>
        <pt x="1700" y="1379" on="1"/>
        <pt x="1772" y="1379" on="0"/>
        <pt x="1896" y="1344" on="0"/>
        <pt x="1987" y="1271" on="0"/>
        <pt x="2038" y="1158" on="0"/>
        <pt x="2038" y="1080" on="1"/>
        <pt x="2038" y="1009" on="0"/>
        <pt x="1989" y="898" on="0"/>
        <pt x="1901" y="821" on="0"/>
        <pt x="1776" y="781" on="0"/>
        <pt x="1700" y="781" on="1"/>
        <pt x="1625" y="781" on="0"/>
        <pt x="1501" y="816" on="0"/>
        <pt x="1412" y="889" on="0"/>
        <pt x="1363" y="1002" on="0"/>
      </contour>
      <contour>
        <pt x="1590" y="1080" on="1"/>
        <pt x="1590" y="977" on="0"/>
        <pt x="1643" y="879" on="0"/>
        <pt x="1700" y="879" on="1"/>
        <pt x="1725" y="879" on="0"/>
        <pt x="1765" y="897" on="0"/>
        <pt x="1794" y="942" on="0"/>
        <pt x="1809" y="1020" on="0"/>
        <pt x="1809" y="1080" on="1"/>
        <pt x="1809" y="1140" on="0"/>
        <pt x="1794" y="1217" on="0"/>
        <pt x="1765" y="1262" on="0"/>
        <pt x="1725" y="1280" on="0"/>
        <pt x="1700" y="1280" on="1"/>
        <pt x="1675" y="1280" on="0"/>
        <pt x="1634" y="1262" on="0"/>
        <pt x="1606" y="1217" on="0"/>
        <pt x="1590" y="1140" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          55 45 79
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 55 79
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 19 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          33 6 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          63 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          73 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="agrave" xMin="44" yMin="-23" xMax="1000" yMax="1482">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="121" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          73
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="amacron" xMin="44" yMin="-23" xMax="1000" yMax="1334">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-24" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="142" yMin="-24" xMax="1585" yMax="1379">
      <contour>
        <pt x="963" y="225" on="1"/>
        <pt x="901" y="277" on="0"/>
        <pt x="774" y="412" on="0"/>
        <pt x="659" y="552" on="0"/>
        <pt x="566" y="684" on="0"/>
        <pt x="539" y="730" on="1"/>
        <pt x="482" y="660" on="0"/>
        <pt x="432" y="534" on="0"/>
        <pt x="432" y="449" on="1"/>
        <pt x="432" y="377" on="0"/>
        <pt x="478" y="257" on="0"/>
        <pt x="562" y="170" on="0"/>
        <pt x="674" y="122" on="0"/>
        <pt x="740" y="122" on="1"/>
        <pt x="798" y="122" on="0"/>
        <pt x="920" y="170" on="0"/>
      </contour>
      <contour>
        <pt x="566" y="1127" on="1"/>
        <pt x="566" y="1098" on="0"/>
        <pt x="589" y="1028" on="0"/>
        <pt x="626" y="959" on="0"/>
        <pt x="670" y="893" on="0"/>
        <pt x="692" y="868" on="1"/>
        <pt x="757" y="918" on="0"/>
        <pt x="820" y="1061" on="0"/>
        <pt x="816" y="1142" on="1"/>
        <pt x="812" y="1197" on="0"/>
        <pt x="752" y="1273" on="0"/>
        <pt x="690" y="1273" on="1"/>
        <pt x="626" y="1273" on="0"/>
        <pt x="566" y="1183" on="0"/>
      </contour>
      <contour>
        <pt x="1247" y="0" on="1"/>
        <pt x="1208" y="24" on="0"/>
        <pt x="1104" y="87" on="0"/>
        <pt x="1054" y="137" on="1"/>
        <pt x="994" y="76" on="0"/>
        <pt x="777" y="-24" on="0"/>
        <pt x="637" y="-24" on="1"/>
        <pt x="508" y="-24" on="0"/>
        <pt x="320" y="48" on="0"/>
        <pt x="200" y="163" on="0"/>
        <pt x="142" y="306" on="0"/>
        <pt x="142" y="379" on="1"/>
        <pt x="142" y="469" on="0"/>
        <pt x="210" y="617" on="0"/>
        <pt x="306" y="734" on="0"/>
        <pt x="417" y="817" on="0"/>
        <pt x="458" y="841" on="1"/>
        <pt x="409" y="893" on="0"/>
        <pt x="339" y="1040" on="0"/>
        <pt x="339" y="1112" on="1"/>
        <pt x="339" y="1160" on="0"/>
        <pt x="380" y="1257" on="0"/>
        <pt x="463" y="1332" on="0"/>
        <pt x="585" y="1379" on="0"/>
        <pt x="667" y="1379" on="1"/>
        <pt x="807" y="1379" on="0"/>
        <pt x="981" y="1255" on="0"/>
        <pt x="981" y="1139" on="1"/>
        <pt x="981" y="1083" on="0"/>
        <pt x="942" y="982" on="0"/>
        <pt x="878" y="893" on="0"/>
        <pt x="794" y="813" on="0"/>
        <pt x="748" y="780" on="1"/>
        <pt x="881" y="597" on="0"/>
        <pt x="1114" y="390" on="1"/>
        <pt x="1130" y="410" on="0"/>
        <pt x="1168" y="512" on="0"/>
        <pt x="1195" y="639" on="0"/>
        <pt x="1203" y="782" on="0"/>
        <pt x="1188" y="846" on="1"/>
        <pt x="1156" y="852" on="0"/>
        <pt x="1110" y="876" on="0"/>
        <pt x="1085" y="893" on="1"/>
        <pt x="1085" y="968" on="1"/>
        <pt x="1526" y="968" on="1"/>
        <pt x="1526" y="893" on="1"/>
        <pt x="1474" y="860" on="0"/>
        <pt x="1399" y="846" on="1"/>
        <pt x="1389" y="763" on="0"/>
        <pt x="1350" y="600" on="0"/>
        <pt x="1298" y="457" on="0"/>
        <pt x="1240" y="345" on="0"/>
        <pt x="1211" y="314" on="1"/>
        <pt x="1278" y="253" on="0"/>
        <pt x="1418" y="161" on="0"/>
        <pt x="1486" y="122" on="1"/>
        <pt x="1585" y="76" on="1"/>
        <pt x="1585" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            54
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            54 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            87
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            87 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          0 13 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          5 54 87
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          21 54 87
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          82
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          33 82 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          46 54 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          62 5 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          73 54 87
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          73
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          72 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          75
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aogonek" xMin="44" yMin="-423" xMax="1000" yMax="958">
      <contour>
        <pt x="866" y="271" on="1"/>
        <pt x="866" y="230" on="0"/>
        <pt x="868" y="170" on="0"/>
        <pt x="871" y="137" on="1"/>
        <pt x="1000" y="118" on="1"/>
        <pt x="1000" y="52" on="1"/>
        <pt x="987" y="46" on="0"/>
        <pt x="955" y="35" on="0"/>
        <pt x="944" y="30" on="1"/>
        <pt x="863" y="-14" on="0"/>
        <pt x="817" y="-84" on="1"/>
        <pt x="770" y="-155" on="0"/>
        <pt x="770" y="-223" on="1"/>
        <pt x="770" y="-259" on="0"/>
        <pt x="817" y="-316" on="0"/>
        <pt x="859" y="-316" on="1"/>
        <pt x="903" y="-316" on="0"/>
        <pt x="954" y="-299" on="1"/>
        <pt x="954" y="-385" on="1"/>
        <pt x="940" y="-393" on="0"/>
        <pt x="897" y="-406" on="0"/>
        <pt x="850" y="-417" on="0"/>
        <pt x="804" y="-423" on="0"/>
        <pt x="788" y="-423" on="1"/>
        <pt x="657" y="-423" on="0"/>
        <pt x="597" y="-372" on="1"/>
        <pt x="537" y="-323" on="0"/>
        <pt x="537" y="-250" on="1"/>
        <pt x="537" y="-213" on="0"/>
        <pt x="566" y="-147" on="0"/>
        <pt x="619" y="-89" on="0"/>
        <pt x="691" y="-38" on="0"/>
        <pt x="735" y="-15" on="1"/>
        <pt x="703" y="-18" on="1"/>
        <pt x="639" y="-18" on="1"/>
        <pt x="629" y="4" on="0"/>
        <pt x="618" y="46" on="0"/>
        <pt x="616" y="67" on="1"/>
        <pt x="614" y="89" on="0"/>
        <pt x="612" y="141" on="0"/>
        <pt x="611" y="172" on="1"/>
        <pt x="602" y="172" on="1"/>
        <pt x="593" y="136" on="0"/>
        <pt x="548" y="66" on="0"/>
        <pt x="478" y="11" on="0"/>
        <pt x="384" y="-23" on="0"/>
        <pt x="327" y="-23" on="1"/>
        <pt x="266" y="-23" on="0"/>
        <pt x="163" y="14" on="0"/>
        <pt x="87" y="82" on="0"/>
        <pt x="44" y="178" on="0"/>
        <pt x="44" y="238" on="1"/>
        <pt x="44" y="321" on="0"/>
        <pt x="116" y="432" on="0"/>
        <pt x="258" y="501" on="0"/>
        <pt x="467" y="535" on="0"/>
        <pt x="605" y="541" on="1"/>
        <pt x="620" y="702" on="0"/>
        <pt x="592" y="776" on="1"/>
        <pt x="565" y="851" on="0"/>
        <pt x="470" y="851" on="1"/>
        <pt x="412" y="851" on="0"/>
        <pt x="365" y="832" on="1"/>
        <pt x="276" y="609" on="1"/>
        <pt x="194" y="609" on="1"/>
        <pt x="179" y="631" on="0"/>
        <pt x="150" y="689" on="0"/>
        <pt x="127" y="753" on="0"/>
        <pt x="110" y="821" on="0"/>
        <pt x="106" y="853" on="1"/>
        <pt x="175" y="900" on="0"/>
        <pt x="289" y="929" on="1"/>
        <pt x="403" y="958" on="0"/>
        <pt x="527" y="958" on="1"/>
        <pt x="633" y="958" on="0"/>
        <pt x="768" y="911" on="0"/>
        <pt x="846" y="831" on="0"/>
        <pt x="875" y="722" on="0"/>
        <pt x="875" y="661" on="1"/>
        <pt x="875" y="604" on="0"/>
        <pt x="872" y="504" on="0"/>
        <pt x="869" y="410" on="0"/>
        <pt x="866" y="319" on="0"/>
      </contour>
      <contour>
        <pt x="445" y="127" on="1"/>
        <pt x="484" y="127" on="0"/>
        <pt x="540" y="156" on="0"/>
        <pt x="578" y="199" on="0"/>
        <pt x="600" y="247" on="0"/>
        <pt x="605" y="266" on="1"/>
        <pt x="605" y="453" on="1"/>
        <pt x="456" y="453" on="0"/>
        <pt x="325" y="371" on="0"/>
        <pt x="325" y="277" on="1"/>
        <pt x="325" y="205" on="0"/>
        <pt x="387" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          73 95 96
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          73
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          84
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            73
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            73 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          4 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 33 73
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          56 73 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          73
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 60 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          203 63 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          11 63 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          139 63 155 63 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 7 values pushed */
          10 63 26 63 42 63 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 11 values pushed */
          57 63 73 63 89 63 105 63 121 63 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          83 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          89 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="approxequal" xMin="141" yMin="363" xMax="984" yMax="1000">
      <component glyphName="asciitilde" x="30" y="165" flags="0x4"/>
      <component glyphName="asciitilde" x="30" y="-164" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          NPUSHW[ ]	/* 7 values pushed */
          112 41 128 41 144 41 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="aring" xMin="44" yMin="-23" xMax="1000" yMax="1480">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="139" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          81
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          84
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="196" yMin="841" xMax="994" yMax="1377">
      <contour>
        <pt x="566" y="1377" on="1"/>
        <pt x="655" y="1377" on="1"/>
        <pt x="994" y="841" on="1"/>
        <pt x="762" y="841" on="1"/>
        <pt x="608" y="1102" on="1"/>
        <pt x="564" y="1197" on="1"/>
        <pt x="508" y="1100" on="1"/>
        <pt x="331" y="841" on="1"/>
        <pt x="196" y="841" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          2 0 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          5 2 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="111" yMin="527" xMax="954" yMax="835">
      <contour>
        <pt x="111" y="604" on="1"/>
        <pt x="164" y="717" on="0"/>
        <pt x="241" y="776" on="1"/>
        <pt x="320" y="835" on="0"/>
        <pt x="390" y="835" on="1"/>
        <pt x="439" y="835" on="0"/>
        <pt x="531" y="794" on="0"/>
        <pt x="621" y="744" on="0"/>
        <pt x="712" y="703" on="0"/>
        <pt x="760" y="703" on="1"/>
        <pt x="795" y="703" on="0"/>
        <pt x="871" y="732" on="0"/>
        <pt x="910" y="769" on="1"/>
        <pt x="954" y="711" on="1"/>
        <pt x="909" y="617" on="0"/>
        <pt x="782" y="527" on="0"/>
        <pt x="716" y="527" on="1"/>
        <pt x="666" y="527" on="0"/>
        <pt x="571" y="568" on="0"/>
        <pt x="477" y="617" on="0"/>
        <pt x="385" y="658" on="0"/>
        <pt x="338" y="658" on="1"/>
        <pt x="296" y="658" on="0"/>
        <pt x="209" y="612" on="0"/>
        <pt x="164" y="552" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          143 16 159 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          95 16 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          0 16 16 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          9 16 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          12 4 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          21 4 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          24 16 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="164" yMin="730" xMax="860" yMax="1452">
      <contour>
        <pt x="176" y="1156" on="1"/>
        <pt x="164" y="1172" on="0"/>
        <pt x="178" y="1236" on="0"/>
        <pt x="213" y="1299" on="0"/>
        <pt x="263" y="1347" on="0"/>
        <pt x="287" y="1349" on="1"/>
        <pt x="463" y="1144" on="1"/>
        <pt x="463" y="1116" on="0"/>
        <pt x="437" y="1102" on="1"/>
      </contour>
      <contour>
        <pt x="293" y="831" on="1"/>
        <pt x="271" y="831" on="0"/>
        <pt x="223" y="879" on="0"/>
        <pt x="184" y="943" on="0"/>
        <pt x="164" y="1009" on="0"/>
        <pt x="175" y="1026" on="1"/>
        <pt x="436" y="1077" on="1"/>
        <pt x="463" y="1061" on="0"/>
        <pt x="463" y="1036" on="1"/>
      </contour>
      <contour>
        <pt x="628" y="765" on="1"/>
        <pt x="620" y="750" on="0"/>
        <pt x="556" y="732" on="0"/>
        <pt x="482" y="730" on="0"/>
        <pt x="417" y="745" on="0"/>
        <pt x="406" y="761" on="1"/>
        <pt x="490" y="1015" on="1"/>
        <pt x="517" y="1031" on="0"/>
        <pt x="542" y="1015" on="1"/>
      </contour>
      <contour>
        <pt x="848" y="1026" on="1"/>
        <pt x="860" y="1005" on="0"/>
        <pt x="846" y="939" on="0"/>
        <pt x="814" y="878" on="0"/>
        <pt x="765" y="833" on="0"/>
        <pt x="742" y="833" on="1"/>
        <pt x="572" y="1033" on="1"/>
        <pt x="572" y="1057" on="0"/>
        <pt x="594" y="1073" on="1"/>
      </contour>
      <contour>
        <pt x="746" y="1347" on="1"/>
        <pt x="768" y="1349" on="0"/>
        <pt x="814" y="1309" on="0"/>
        <pt x="844" y="1249" on="0"/>
        <pt x="858" y="1181" on="0"/>
        <pt x="853" y="1158" on="1"/>
        <pt x="593" y="1100" on="1"/>
        <pt x="570" y="1118" on="0"/>
        <pt x="570" y="1142" on="1"/>
      </contour>
      <contour>
        <pt x="406" y="1416" on="1"/>
        <pt x="415" y="1434" on="0"/>
        <pt x="476" y="1452" on="0"/>
        <pt x="550" y="1452" on="0"/>
        <pt x="614" y="1435" on="0"/>
        <pt x="624" y="1416" on="1"/>
        <pt x="541" y="1162" on="1"/>
        <pt x="515" y="1146" on="0"/>
        <pt x="490" y="1162" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          144 20 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          36 47 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          32 36 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          41 36 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 5 values pushed */
          121 41 137 41 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          42 36 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          27 32 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 5 values pushed */
          118 27 134 27 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          35 32 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="105" yMin="-337" xMax="1800" yMax="1332">
      <contour>
        <pt x="1164" y="869" on="1"/>
        <pt x="1209" y="891" on="0"/>
        <pt x="1334" y="909" on="0"/>
        <pt x="1398" y="907" on="1"/>
        <pt x="1307" y="387" on="1"/>
        <pt x="1284" y="268" on="0"/>
        <pt x="1289" y="150" on="0"/>
        <pt x="1343" y="150" on="1"/>
        <pt x="1385" y="150" on="0"/>
        <pt x="1496" y="206" on="0"/>
        <pt x="1593" y="320" on="0"/>
        <pt x="1660" y="495" on="0"/>
        <pt x="1660" y="611" on="1"/>
        <pt x="1660" y="752" on="0"/>
        <pt x="1557" y="977" on="0"/>
        <pt x="1375" y="1130" on="0"/>
        <pt x="1127" y="1210" on="0"/>
        <pt x="982" y="1210" on="1"/>
        <pt x="820" y="1210" on="0"/>
        <pt x="548" y="1096" on="0"/>
        <pt x="354" y="895" on="0"/>
        <pt x="245" y="615" on="0"/>
        <pt x="245" y="453" on="1"/>
        <pt x="245" y="286" on="0"/>
        <pt x="356" y="38" on="0"/>
        <pt x="550" y="-130" on="0"/>
        <pt x="818" y="-215" on="0"/>
        <pt x="975" y="-215" on="1"/>
        <pt x="1030" y="-215" on="0"/>
        <pt x="1168" y="-189" on="0"/>
        <pt x="1225" y="-162" on="1"/>
        <pt x="1254" y="-270" on="1"/>
        <pt x="1189" y="-307" on="0"/>
        <pt x="1031" y="-337" on="0"/>
        <pt x="936" y="-337" on="1"/>
        <pt x="770" y="-337" on="0"/>
        <pt x="468" y="-240" on="0"/>
        <pt x="239" y="-44" on="0"/>
        <pt x="105" y="246" on="0"/>
        <pt x="105" y="441" on="1"/>
        <pt x="105" y="646" on="0"/>
        <pt x="245" y="975" on="0"/>
        <pt x="488" y="1207" on="0"/>
        <pt x="809" y="1332" on="0"/>
        <pt x="993" y="1332" on="1"/>
        <pt x="1170" y="1332" on="0"/>
        <pt x="1467" y="1234" on="0"/>
        <pt x="1681" y="1048" on="0"/>
        <pt x="1800" y="781" on="0"/>
        <pt x="1800" y="611" on="1"/>
        <pt x="1800" y="478" on="0"/>
        <pt x="1705" y="264" on="0"/>
        <pt x="1551" y="109" on="0"/>
        <pt x="1357" y="25" on="0"/>
        <pt x="1258" y="25" on="1"/>
        <pt x="1201" y="25" on="0"/>
        <pt x="1119" y="52" on="0"/>
        <pt x="1067" y="120" on="0"/>
        <pt x="1050" y="228" on="0"/>
        <pt x="1061" y="309" on="1"/>
        <pt x="1054" y="309" on="1"/>
        <pt x="1037" y="259" on="0"/>
        <pt x="972" y="156" on="0"/>
        <pt x="888" y="75" on="0"/>
        <pt x="786" y="25" on="0"/>
        <pt x="734" y="25" on="1"/>
        <pt x="607" y="25" on="0"/>
        <pt x="477" y="189" on="0"/>
        <pt x="477" y="316" on="1"/>
        <pt x="477" y="427" on="0"/>
        <pt x="550" y="644" on="0"/>
        <pt x="680" y="814" on="0"/>
        <pt x="860" y="921" on="0"/>
        <pt x="966" y="921" on="1"/>
        <pt x="1031" y="921" on="0"/>
        <pt x="1119" y="896" on="0"/>
      </contour>
      <contour>
        <pt x="1127" y="777" on="1"/>
        <pt x="1107" y="791" on="0"/>
        <pt x="1061" y="807" on="0"/>
        <pt x="1030" y="807" on="1"/>
        <pt x="966" y="807" on="0"/>
        <pt x="858" y="709" on="0"/>
        <pt x="778" y="559" on="0"/>
        <pt x="734" y="385" on="0"/>
        <pt x="734" y="311" on="1"/>
        <pt x="734" y="246" on="0"/>
        <pt x="778" y="174" on="0"/>
        <pt x="833" y="174" on="1"/>
        <pt x="864" y="174" on="0"/>
        <pt x="930" y="227" on="0"/>
        <pt x="993" y="311" on="0"/>
        <pt x="1050" y="417" on="0"/>
        <pt x="1075" y="469" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          73 93 94
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          73
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          80
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          73 44 93
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          73
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          65 73 93
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          65
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          87 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          65
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 87 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          65
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          27 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          59 93 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          73
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          79 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          90 87 73
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="atilde" xMin="44" yMin="-23" xMax="1000" yMax="1406">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="153" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="10" yMin="-16" xMax="1063" yMax="1377">
      <contour>
        <pt x="151" y="1222" on="1"/>
        <pt x="10" y="1237" on="1"/>
        <pt x="10" y="1310" on="1"/>
        <pt x="37" y="1322" on="0"/>
        <pt x="128" y="1344" on="0"/>
        <pt x="228" y="1362" on="0"/>
        <pt x="324" y="1374" on="0"/>
        <pt x="356" y="1377" on="1"/>
        <pt x="420" y="1377" on="1"/>
        <pt x="420" y="759" on="1"/>
        <pt x="424" y="759" on="1"/>
        <pt x="462" y="853" on="0"/>
        <pt x="608" y="958" on="0"/>
        <pt x="714" y="958" on="1"/>
        <pt x="879" y="958" on="0"/>
        <pt x="1052" y="730" on="0"/>
        <pt x="1052" y="497" on="1"/>
        <pt x="1063" y="-16" on="0"/>
        <pt x="534" y="-16" on="1"/>
        <pt x="487" y="-16" on="0"/>
        <pt x="372" y="-4" on="0"/>
        <pt x="263" y="15" on="0"/>
        <pt x="173" y="40" on="0"/>
        <pt x="151" y="54" on="1"/>
      </contour>
      <contour>
        <pt x="593" y="809" on="1"/>
        <pt x="562" y="809" on="0"/>
        <pt x="509" y="781" on="0"/>
        <pt x="465" y="732" on="0"/>
        <pt x="432" y="665" on="0"/>
        <pt x="420" y="627" on="1"/>
        <pt x="420" y="130" on="1"/>
        <pt x="446" y="116" on="0"/>
        <pt x="507" y="90" on="0"/>
        <pt x="554" y="90" on="1"/>
        <pt x="599" y="90" on="0"/>
        <pt x="680" y="127" on="0"/>
        <pt x="708" y="173" on="1"/>
        <pt x="738" y="223" on="0"/>
        <pt x="762" y="381" on="0"/>
        <pt x="762" y="484" on="1"/>
        <pt x="762" y="559" on="0"/>
        <pt x="743" y="687" on="0"/>
        <pt x="721" y="729" on="1"/>
        <pt x="701" y="767" on="0"/>
        <pt x="642" y="809" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 18 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="-161" yMin="-261" xMax="726" yMax="1387">
      <contour>
        <pt x="726" y="-207" on="1"/>
        <pt x="615" y="-261" on="1"/>
        <pt x="-161" y="1333" on="1"/>
        <pt x="-48" y="1387" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bacute" xMin="10" yMin="-16" xMax="1093" yMax="1482">
      <component glyphName="b" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="547" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="bar" xMin="158" yMin="-252" xMax="293" yMax="1356">
      <contour>
        <pt x="158" y="1356" on="1"/>
        <pt x="293" y="1356" on="1"/>
        <pt x="293" y="-252" on="1"/>
        <pt x="158" y="-252" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="142" yMin="-445" xMax="717" yMax="1356">
      <contour>
        <pt x="297" y="198" on="1"/>
        <pt x="297" y="296" on="0"/>
        <pt x="216" y="408" on="0"/>
        <pt x="142" y="408" on="1"/>
        <pt x="142" y="501" on="1"/>
        <pt x="216" y="501" on="0"/>
        <pt x="297" y="619" on="0"/>
        <pt x="297" y="704" on="1"/>
        <pt x="297" y="1151" on="1"/>
        <pt x="297" y="1243" on="0"/>
        <pt x="390" y="1356" on="0"/>
        <pt x="483" y="1356" on="1"/>
        <pt x="717" y="1356" on="1"/>
        <pt x="717" y="1249" on="1"/>
        <pt x="650" y="1249" on="1"/>
        <pt x="597" y="1249" on="0"/>
        <pt x="549" y="1195" on="0"/>
        <pt x="549" y="1133" on="1"/>
        <pt x="549" y="707" on="1"/>
        <pt x="549" y="643" on="0"/>
        <pt x="508" y="554" on="0"/>
        <pt x="445" y="497" on="0"/>
        <pt x="371" y="469" on="0"/>
        <pt x="336" y="465" on="1"/>
        <pt x="336" y="453" on="1"/>
        <pt x="369" y="449" on="0"/>
        <pt x="445" y="418" on="0"/>
        <pt x="508" y="356" on="0"/>
        <pt x="549" y="266" on="0"/>
        <pt x="549" y="203" on="1"/>
        <pt x="549" y="-223" on="1"/>
        <pt x="549" y="-283" on="0"/>
        <pt x="595" y="-339" on="0"/>
        <pt x="652" y="-339" on="1"/>
        <pt x="717" y="-339" on="1"/>
        <pt x="717" y="-445" on="1"/>
        <pt x="483" y="-445" on="1"/>
        <pt x="395" y="-445" on="0"/>
        <pt x="297" y="-342" on="0"/>
        <pt x="297" y="-242" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 11 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 4 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="91" yMin="-445" xMax="667" yMax="1356">
      <contour>
        <pt x="512" y="715" on="1"/>
        <pt x="512" y="616" on="0"/>
        <pt x="593" y="503" on="0"/>
        <pt x="667" y="503" on="1"/>
        <pt x="667" y="410" on="1"/>
        <pt x="593" y="410" on="0"/>
        <pt x="512" y="292" on="0"/>
        <pt x="512" y="207" on="1"/>
        <pt x="512" y="-240" on="1"/>
        <pt x="512" y="-333" on="0"/>
        <pt x="418" y="-445" on="0"/>
        <pt x="325" y="-445" on="1"/>
        <pt x="91" y="-445" on="1"/>
        <pt x="91" y="-339" on="1"/>
        <pt x="159" y="-339" on="1"/>
        <pt x="211" y="-339" on="0"/>
        <pt x="259" y="-285" on="0"/>
        <pt x="259" y="-223" on="1"/>
        <pt x="259" y="205" on="1"/>
        <pt x="259" y="269" on="0"/>
        <pt x="294" y="358" on="0"/>
        <pt x="351" y="414" on="0"/>
        <pt x="418" y="443" on="0"/>
        <pt x="453" y="447" on="1"/>
        <pt x="453" y="459" on="1"/>
        <pt x="420" y="462" on="0"/>
        <pt x="351" y="494" on="0"/>
        <pt x="294" y="556" on="0"/>
        <pt x="259" y="647" on="0"/>
        <pt x="259" y="709" on="1"/>
        <pt x="259" y="1133" on="1"/>
        <pt x="259" y="1193" on="0"/>
        <pt x="213" y="1249" on="0"/>
        <pt x="157" y="1249" on="1"/>
        <pt x="91" y="1249" on="1"/>
        <pt x="91" y="1356" on="1"/>
        <pt x="327" y="1356" on="1"/>
        <pt x="414" y="1356" on="0"/>
        <pt x="512" y="1253" on="0"/>
        <pt x="512" y="1153" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          3 35 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 3 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="158" yMin="-445" xMax="611" yMax="1356">
      <contour>
        <pt x="158" y="1356" on="1"/>
        <pt x="611" y="1356" on="1"/>
        <pt x="611" y="1249" on="1"/>
        <pt x="410" y="1249" on="1"/>
        <pt x="410" y="-339" on="1"/>
        <pt x="611" y="-339" on="1"/>
        <pt x="611" y="-445" on="1"/>
        <pt x="158" y="-445" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="71" yMin="-445" xMax="524" yMax="1356">
      <contour>
        <pt x="524" y="-445" on="1"/>
        <pt x="71" y="-445" on="1"/>
        <pt x="71" y="-339" on="1"/>
        <pt x="273" y="-339" on="1"/>
        <pt x="273" y="1249" on="1"/>
        <pt x="71" y="1249" on="1"/>
        <pt x="71" y="1356" on="1"/>
        <pt x="524" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="breve" xMin="43" yMin="1160" xMax="639" yMax="1478">
      <contour>
        <pt x="639" y="1431" on="1"/>
        <pt x="621" y="1378" on="0"/>
        <pt x="567" y="1280" on="0"/>
        <pt x="492" y="1204" on="0"/>
        <pt x="399" y="1160" on="0"/>
        <pt x="344" y="1160" on="1"/>
        <pt x="288" y="1160" on="0"/>
        <pt x="192" y="1202" on="0"/>
        <pt x="115" y="1278" on="0"/>
        <pt x="58" y="1378" on="0"/>
        <pt x="43" y="1435" on="1"/>
        <pt x="115" y="1478" on="1"/>
        <pt x="153" y="1428" on="0"/>
        <pt x="277" y="1361" on="0"/>
        <pt x="346" y="1359" on="1"/>
        <pt x="492" y="1356" on="0"/>
        <pt x="575" y="1470" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          128 5 144 5 160 5 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          223 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          128 5 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          80 5 96 5 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 11 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          224 11 240 11 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          14 5 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="brokenbar" xMin="158" yMin="-252" xMax="293" yMax="1356">
      <contour>
        <pt x="158" y="368" on="1"/>
        <pt x="293" y="368" on="1"/>
        <pt x="293" y="-252" on="1"/>
        <pt x="158" y="-252" on="1"/>
      </contour>
      <contour>
        <pt x="293" y="736" on="1"/>
        <pt x="158" y="736" on="1"/>
        <pt x="158" y="1356" on="1"/>
        <pt x="293" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 6 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          4 6 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="bullet" xMin="58" yMin="302" xMax="658" yMax="902">
      <contour>
        <pt x="58" y="602" on="1"/>
        <pt x="58" y="669" on="0"/>
        <pt x="104" y="780" on="0"/>
        <pt x="185" y="858" on="0"/>
        <pt x="296" y="902" on="0"/>
        <pt x="359" y="902" on="1"/>
        <pt x="420" y="902" on="0"/>
        <pt x="531" y="861" on="0"/>
        <pt x="612" y="784" on="0"/>
        <pt x="658" y="672" on="0"/>
        <pt x="658" y="602" on="1"/>
        <pt x="658" y="532" on="0"/>
        <pt x="612" y="420" on="0"/>
        <pt x="531" y="342" on="0"/>
        <pt x="420" y="302" on="0"/>
        <pt x="359" y="302" on="1"/>
        <pt x="296" y="302" on="0"/>
        <pt x="185" y="342" on="0"/>
        <pt x="104" y="420" on="0"/>
        <pt x="58" y="532" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="69" yMin="-23" xMax="860" yMax="958">
      <contour>
        <pt x="860" y="152" on="1"/>
        <pt x="839" y="116" on="0"/>
        <pt x="773" y="52" on="0"/>
        <pt x="689" y="5" on="0"/>
        <pt x="588" y="-23" on="0"/>
        <pt x="530" y="-23" on="1"/>
        <pt x="414" y="-23" on="0"/>
        <pt x="241" y="47" on="0"/>
        <pt x="126" y="176" on="0"/>
        <pt x="69" y="357" on="0"/>
        <pt x="69" y="468" on="1"/>
        <pt x="69" y="579" on="0"/>
        <pt x="137" y="760" on="0"/>
        <pt x="267" y="888" on="0"/>
        <pt x="455" y="958" on="0"/>
        <pt x="575" y="958" on="1"/>
        <pt x="668" y="958" on="0"/>
        <pt x="805" y="919" on="0"/>
        <pt x="856" y="893" on="1"/>
        <pt x="853" y="861" on="0"/>
        <pt x="841" y="783" on="0"/>
        <pt x="825" y="705" on="0"/>
        <pt x="805" y="635" on="0"/>
        <pt x="793" y="611" on="1"/>
        <pt x="702" y="611" on="1"/>
        <pt x="624" y="832" on="1"/>
        <pt x="609" y="840" on="0"/>
        <pt x="579" y="851" on="0"/>
        <pt x="550" y="851" on="1"/>
        <pt x="512" y="851" on="0"/>
        <pt x="443" y="815" on="0"/>
        <pt x="391" y="729" on="0"/>
        <pt x="360" y="588" on="0"/>
        <pt x="360" y="482" on="1"/>
        <pt x="360" y="407" on="0"/>
        <pt x="393" y="277" on="0"/>
        <pt x="460" y="181" on="0"/>
        <pt x="563" y="127" on="0"/>
        <pt x="634" y="127" on="1"/>
        <pt x="700" y="127" on="0"/>
        <pt x="797" y="166" on="0"/>
        <pt x="830" y="191" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 28 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          41 38 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cacute" xMin="69" yMin="-23" xMax="865" yMax="1482">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="319" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="caron" xMin="45" yMin="1125" xMax="638" yMax="1494">
      <contour>
        <pt x="557" y="1494" on="1"/>
        <pt x="576" y="1494" on="0"/>
        <pt x="634" y="1457" on="0"/>
        <pt x="638" y="1446" on="1"/>
        <pt x="390" y="1135" on="1"/>
        <pt x="375" y="1125" on="0"/>
        <pt x="308" y="1125" on="0"/>
        <pt x="289" y="1135" on="1"/>
        <pt x="45" y="1444" on="1"/>
        <pt x="47" y="1449" on="0"/>
        <pt x="71" y="1466" on="0"/>
        <pt x="99" y="1482" on="0"/>
        <pt x="129" y="1494" on="0"/>
        <pt x="138" y="1494" on="1"/>
        <pt x="354" y="1344" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          14 7 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="caron.L" xMin="635" yMin="913" xMax="1007" yMax="1388">
      <contour>
        <pt x="635" y="951" on="1"/>
        <pt x="654" y="994" on="0"/>
        <pt x="687" y="1098" on="0"/>
        <pt x="709" y="1205" on="0"/>
        <pt x="719" y="1301" on="0"/>
        <pt x="719" y="1340" on="1"/>
        <pt x="759" y="1388" on="1"/>
        <pt x="784" y="1388" on="0"/>
        <pt x="860" y="1375" on="0"/>
        <pt x="933" y="1352" on="0"/>
        <pt x="994" y="1321" on="0"/>
        <pt x="1007" y="1307" on="1"/>
        <pt x="1001" y="1257" on="0"/>
        <pt x="935" y="1135" on="0"/>
        <pt x="843" y="1022" on="0"/>
        <pt x="738" y="931" on="0"/>
        <pt x="691" y="913" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="caron.l" xMin="442" yMin="996" xMax="784" yMax="1464">
      <contour>
        <pt x="442" y="1034" on="1"/>
        <pt x="461" y="1077" on="0"/>
        <pt x="494" y="1177" on="0"/>
        <pt x="513" y="1278" on="0"/>
        <pt x="525" y="1375" on="0"/>
        <pt x="525" y="1414" on="1"/>
        <pt x="565" y="1462" on="1"/>
        <pt x="579" y="1464" on="0"/>
        <pt x="639" y="1454" on="0"/>
        <pt x="707" y="1437" on="0"/>
        <pt x="769" y="1414" on="0"/>
        <pt x="784" y="1400" on="1"/>
        <pt x="774" y="1346" on="0"/>
        <pt x="715" y="1224" on="0"/>
        <pt x="632" y="1110" on="0"/>
        <pt x="538" y="1018" on="0"/>
        <pt x="497" y="996" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ccaron" xMin="69" yMin="-23" xMax="860" yMax="1494">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="197" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          46
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ccedilla" xMin="69" yMin="-480" xMax="860" yMax="958">
      <contour>
        <pt x="860" y="152" on="1"/>
        <pt x="839" y="116" on="0"/>
        <pt x="773" y="53" on="0"/>
        <pt x="689" y="5" on="0"/>
        <pt x="588" y="-23" on="0"/>
        <pt x="531" y="-23" on="1"/>
        <pt x="491" y="-127" on="1"/>
        <pt x="603" y="-132" on="0"/>
        <pt x="720" y="-201" on="0"/>
        <pt x="722" y="-270" on="1"/>
        <pt x="722" y="-324" on="0"/>
        <pt x="658" y="-403" on="0"/>
        <pt x="555" y="-455" on="0"/>
        <pt x="424" y="-480" on="0"/>
        <pt x="358" y="-480" on="1"/>
        <pt x="358" y="-408" on="1"/>
        <pt x="488" y="-387" on="0"/>
        <pt x="488" y="-301" on="1"/>
        <pt x="486" y="-259" on="0"/>
        <pt x="418" y="-221" on="0"/>
        <pt x="352" y="-213" on="1"/>
        <pt x="423" y="-14" on="1"/>
        <pt x="334" y="1" on="0"/>
        <pt x="201" y="82" on="0"/>
        <pt x="113" y="207" on="0"/>
        <pt x="69" y="370" on="0"/>
        <pt x="69" y="468" on="1"/>
        <pt x="69" y="579" on="0"/>
        <pt x="137" y="760" on="0"/>
        <pt x="267" y="888" on="0"/>
        <pt x="455" y="958" on="0"/>
        <pt x="575" y="958" on="1"/>
        <pt x="668" y="958" on="0"/>
        <pt x="805" y="919" on="0"/>
        <pt x="856" y="893" on="1"/>
        <pt x="853" y="861" on="0"/>
        <pt x="841" y="783" on="0"/>
        <pt x="825" y="705" on="0"/>
        <pt x="805" y="635" on="0"/>
        <pt x="793" y="611" on="1"/>
        <pt x="702" y="611" on="1"/>
        <pt x="624" y="832" on="1"/>
        <pt x="609" y="840" on="0"/>
        <pt x="579" y="851" on="0"/>
        <pt x="550" y="851" on="1"/>
        <pt x="512" y="851" on="0"/>
        <pt x="443" y="815" on="0"/>
        <pt x="391" y="729" on="0"/>
        <pt x="360" y="588" on="0"/>
        <pt x="360" y="482" on="1"/>
        <pt x="360" y="407" on="0"/>
        <pt x="393" y="277" on="0"/>
        <pt x="460" y="181" on="0"/>
        <pt x="563" y="127" on="0"/>
        <pt x="634" y="127" on="1"/>
        <pt x="700" y="127" on="0"/>
        <pt x="797" y="166" on="0"/>
        <pt x="830" y="191" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          30 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 5 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 44 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ccircumflex" xMin="69" yMin="-23" xMax="860" yMax="1487">
      <component glyphName="c" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="209" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cedilla" xMin="130" yMin="-497" xMax="513" yMax="2">
      <contour>
        <pt x="273" y="-131" on="1"/>
        <pt x="390" y="-137" on="0"/>
        <pt x="512" y="-209" on="0"/>
        <pt x="513" y="-279" on="1"/>
        <pt x="513" y="-335" on="0"/>
        <pt x="448" y="-416" on="0"/>
        <pt x="339" y="-471" on="0"/>
        <pt x="204" y="-497" on="0"/>
        <pt x="136" y="-497" on="1"/>
        <pt x="136" y="-422" on="1"/>
        <pt x="271" y="-401" on="0"/>
        <pt x="271" y="-312" on="1"/>
        <pt x="269" y="-268" on="0"/>
        <pt x="199" y="-229" on="0"/>
        <pt x="130" y="-220" on="1"/>
        <pt x="210" y="2" on="1"/>
        <pt x="324" y="2" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 17 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 15 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 0 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cent" xMin="73" yMin="-318" xMax="944" yMax="1235">
      <contour>
        <pt x="944" y="152" on="1"/>
        <pt x="919" y="86" on="0"/>
        <pt x="774" y="-8" on="0"/>
        <pt x="672" y="-16" on="1"/>
        <pt x="672" y="-318" on="1"/>
        <pt x="527" y="-318" on="1"/>
        <pt x="527" y="-16" on="1"/>
        <pt x="302" y="8" on="0"/>
        <pt x="73" y="264" on="0"/>
        <pt x="73" y="468" on="1"/>
        <pt x="73" y="677" on="0"/>
        <pt x="307" y="923" on="0"/>
        <pt x="527" y="950" on="1"/>
        <pt x="527" y="1235" on="1"/>
        <pt x="672" y="1235" on="1"/>
        <pt x="672" y="956" on="1"/>
        <pt x="756" y="952" on="0"/>
        <pt x="895" y="917" on="0"/>
        <pt x="944" y="893" on="1"/>
        <pt x="940" y="861" on="0"/>
        <pt x="927" y="783" on="0"/>
        <pt x="910" y="707" on="0"/>
        <pt x="888" y="634" on="0"/>
        <pt x="876" y="611" on="1"/>
        <pt x="812" y="611" on="1"/>
        <pt x="745" y="832" on="1"/>
        <pt x="736" y="836" on="0"/>
        <pt x="715" y="846" on="0"/>
        <pt x="689" y="848" on="1"/>
        <pt x="660" y="849" on="1"/>
        <pt x="660" y="130" on="1"/>
        <pt x="674" y="127" on="0"/>
        <pt x="688" y="127" on="1"/>
        <pt x="717" y="127" on="1"/>
        <pt x="783" y="127" on="0"/>
        <pt x="879" y="164" on="0"/>
        <pt x="913" y="191" on="1"/>
      </contour>
      <contour>
        <pt x="363" y="482" on="1"/>
        <pt x="363" y="373" on="0"/>
        <pt x="447" y="202" on="0"/>
        <pt x="542" y="159" on="1"/>
        <pt x="542" y="834" on="1"/>
        <pt x="465" y="807" on="0"/>
        <pt x="363" y="641" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 44 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 29 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 30 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="circumflex" xMin="52" yMin="1118" xMax="645" yMax="1487">
      <contour>
        <pt x="133" y="1118" on="1"/>
        <pt x="114" y="1118" on="0"/>
        <pt x="56" y="1155" on="0"/>
        <pt x="52" y="1166" on="1"/>
        <pt x="300" y="1477" on="1"/>
        <pt x="315" y="1487" on="0"/>
        <pt x="382" y="1487" on="0"/>
        <pt x="401" y="1477" on="1"/>
        <pt x="645" y="1168" on="1"/>
        <pt x="643" y="1163" on="0"/>
        <pt x="619" y="1146" on="0"/>
        <pt x="591" y="1130" on="0"/>
        <pt x="561" y="1118" on="0"/>
        <pt x="552" y="1118" on="1"/>
        <pt x="336" y="1268" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          14 0 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="177" yMin="-15" xMax="506" yMax="985">
      <component glyphName="period" x="85" y="693" flags="0x4"/>
      <component glyphName="period" x="85" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="comma" xMin="64" yMin="-339" xMax="426" yMax="296">
      <contour>
        <pt x="64" y="-253" on="1"/>
        <pt x="103" y="-242" on="0"/>
        <pt x="164" y="-196" on="0"/>
        <pt x="209" y="-137" on="0"/>
        <pt x="233" y="-72" on="0"/>
        <pt x="231" y="-41" on="1"/>
        <pt x="203" y="-6" on="0"/>
        <pt x="128" y="37" on="0"/>
        <pt x="85" y="50" on="1"/>
        <pt x="76" y="91" on="0"/>
        <pt x="89" y="172" on="0"/>
        <pt x="128" y="242" on="0"/>
        <pt x="180" y="290" on="0"/>
        <pt x="209" y="296" on="1"/>
        <pt x="250" y="294" on="0"/>
        <pt x="327" y="261" on="0"/>
        <pt x="390" y="201" on="0"/>
        <pt x="426" y="109" on="0"/>
        <pt x="426" y="46" on="1"/>
        <pt x="426" y="-13" on="0"/>
        <pt x="377" y="-137" on="0"/>
        <pt x="294" y="-244" on="0"/>
        <pt x="178" y="-323" on="0"/>
        <pt x="109" y="-339" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          13 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="commaaccent" xMin="116" yMin="-527" xMax="436" yMax="-81">
      <contour>
        <pt x="153" y="-445" on="1"/>
        <pt x="211" y="-430" on="0"/>
        <pt x="261" y="-360" on="0"/>
        <pt x="261" y="-327" on="1"/>
        <pt x="240" y="-304" on="0"/>
        <pt x="165" y="-277" on="0"/>
        <pt x="126" y="-264" on="1"/>
        <pt x="116" y="-233" on="0"/>
        <pt x="131" y="-170" on="0"/>
        <pt x="166" y="-120" on="0"/>
        <pt x="215" y="-85" on="0"/>
        <pt x="242" y="-81" on="1"/>
        <pt x="279" y="-81" on="0"/>
        <pt x="351" y="-105" on="0"/>
        <pt x="403" y="-148" on="0"/>
        <pt x="436" y="-213" on="0"/>
        <pt x="436" y="-259" on="1"/>
        <pt x="436" y="-306" on="0"/>
        <pt x="401" y="-397" on="0"/>
        <pt x="335" y="-469" on="0"/>
        <pt x="238" y="-519" on="0"/>
        <pt x="174" y="-527" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 21 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          48 21 64 21 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          11 22 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          0 11 16 11 32 11 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 11 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 11 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 13 values pushed */
          58 6 74 6 90 6 106 6 122 6 138 6 6
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="copyright" xMin="79" yMin="-120" xMax="1450" yMax="1243">
      <contour>
        <pt x="79" y="562" on="1"/>
        <pt x="79" y="722" on="0"/>
        <pt x="192" y="976" on="0"/>
        <pt x="384" y="1151" on="0"/>
        <pt x="630" y="1243" on="0"/>
        <pt x="764" y="1243" on="1"/>
        <pt x="898" y="1243" on="0"/>
        <pt x="1144" y="1151" on="0"/>
        <pt x="1336" y="976" on="0"/>
        <pt x="1450" y="722" on="0"/>
        <pt x="1450" y="562" on="1"/>
        <pt x="1450" y="401" on="0"/>
        <pt x="1336" y="148" on="0"/>
        <pt x="1144" y="-27" on="0"/>
        <pt x="898" y="-120" on="0"/>
        <pt x="764" y="-120" on="1"/>
        <pt x="624" y="-120" on="0"/>
        <pt x="375" y="-27" on="0"/>
        <pt x="187" y="148" on="0"/>
        <pt x="79" y="401" on="0"/>
      </contour>
      <contour>
        <pt x="208" y="562" on="1"/>
        <pt x="208" y="432" on="0"/>
        <pt x="297" y="223" on="0"/>
        <pt x="449" y="78" on="0"/>
        <pt x="650" y="-2" on="0"/>
        <pt x="764" y="-2" on="1"/>
        <pt x="883" y="-2" on="0"/>
        <pt x="1086" y="78" on="0"/>
        <pt x="1234" y="223" on="0"/>
        <pt x="1320" y="432" on="0"/>
        <pt x="1320" y="562" on="1"/>
        <pt x="1320" y="695" on="0"/>
        <pt x="1227" y="904" on="0"/>
        <pt x="1074" y="1050" on="0"/>
        <pt x="872" y="1125" on="0"/>
        <pt x="764" y="1125" on="1"/>
        <pt x="642" y="1125" on="0"/>
        <pt x="439" y="1046" on="0"/>
        <pt x="292" y="900" on="0"/>
        <pt x="208" y="691" on="0"/>
      </contour>
      <contour>
        <pt x="970" y="426" on="1"/>
        <pt x="1035" y="426" on="1"/>
        <pt x="1039" y="410" on="0"/>
        <pt x="1049" y="362" on="0"/>
        <pt x="1055" y="304" on="0"/>
        <pt x="1057" y="246" on="0"/>
        <pt x="1055" y="223" on="1"/>
        <pt x="1022" y="196" on="0"/>
        <pt x="885" y="159" on="0"/>
        <pt x="805" y="159" on="1"/>
        <pt x="710" y="159" on="0"/>
        <pt x="553" y="211" on="0"/>
        <pt x="439" y="314" on="0"/>
        <pt x="375" y="465" on="0"/>
        <pt x="375" y="564" on="1"/>
        <pt x="375" y="664" on="0"/>
        <pt x="447" y="815" on="0"/>
        <pt x="561" y="916" on="0"/>
        <pt x="706" y="968" on="0"/>
        <pt x="780" y="968" on="1"/>
        <pt x="872" y="968" on="0"/>
        <pt x="1008" y="935" on="0"/>
        <pt x="1049" y="911" on="1"/>
        <pt x="1051" y="893" on="0"/>
        <pt x="1047" y="835" on="0"/>
        <pt x="1039" y="771" on="0"/>
        <pt x="1029" y="709" on="0"/>
        <pt x="1024" y="689" on="1"/>
        <pt x="957" y="689" on="1"/>
        <pt x="900" y="850" on="1"/>
        <pt x="886" y="860" on="0"/>
        <pt x="840" y="861" on="0"/>
        <pt x="816" y="861" on="1"/>
        <pt x="729" y="861" on="0"/>
        <pt x="636" y="715" on="0"/>
        <pt x="636" y="564" on="1"/>
        <pt x="636" y="499" on="0"/>
        <pt x="658" y="390" on="0"/>
        <pt x="704" y="310" on="0"/>
        <pt x="778" y="266" on="0"/>
        <pt x="830" y="266" on="1"/>
        <pt x="861" y="266" on="0"/>
        <pt x="907" y="275" on="0"/>
        <pt x="915" y="283" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 84 85
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 15 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          25 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          49 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 49 31 49 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          15 49 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          80 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          59 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          0 59 16 59 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 59 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          40 80 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          72 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          68 72 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="currency" xMin="36" yMin="194" xMax="988" yMax="1146">
      <contour>
        <pt x="36" y="345" on="1"/>
        <pt x="180" y="488" on="1"/>
        <pt x="258" y="515" on="1"/>
        <pt x="233" y="548" on="0"/>
        <pt x="212" y="619" on="0"/>
        <pt x="212" y="670" on="1"/>
        <pt x="212" y="759" on="0"/>
        <pt x="258" y="823" on="1"/>
        <pt x="180" y="852" on="1"/>
        <pt x="38" y="996" on="1"/>
        <pt x="189" y="1146" on="1"/>
        <pt x="330" y="1003" on="1"/>
        <pt x="361" y="926" on="1"/>
        <pt x="392" y="947" on="0"/>
        <pt x="461" y="970" on="0"/>
        <pt x="512" y="970" on="1"/>
        <pt x="612" y="968" on="0"/>
        <pt x="666" y="928" on="1"/>
        <pt x="698" y="1003" on="1"/>
        <pt x="837" y="1142" on="1"/>
        <pt x="988" y="994" on="1"/>
        <pt x="845" y="852" on="1"/>
        <pt x="771" y="825" on="1"/>
        <pt x="790" y="792" on="0"/>
        <pt x="810" y="719" on="0"/>
        <pt x="812" y="669" on="1"/>
        <pt x="812" y="581" on="0"/>
        <pt x="771" y="515" on="1"/>
        <pt x="845" y="488" on="1"/>
        <pt x="986" y="345" on="1"/>
        <pt x="836" y="194" on="1"/>
        <pt x="694" y="335" on="1"/>
        <pt x="666" y="410" on="1"/>
        <pt x="638" y="393" on="0"/>
        <pt x="559" y="370" on="0"/>
        <pt x="514" y="370" on="1"/>
        <pt x="463" y="372" on="0"/>
        <pt x="387" y="393" on="0"/>
        <pt x="357" y="410" on="1"/>
        <pt x="330" y="337" on="1"/>
        <pt x="186" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="512" y="512" on="1"/>
        <pt x="581" y="512" on="0"/>
        <pt x="677" y="600" on="0"/>
        <pt x="677" y="670" on="1"/>
        <pt x="677" y="739" on="0"/>
        <pt x="581" y="831" on="0"/>
        <pt x="512" y="831" on="1"/>
        <pt x="442" y="833" on="0"/>
        <pt x="347" y="739" on="0"/>
        <pt x="347" y="670" on="1"/>
        <pt x="347" y="600" on="0"/>
        <pt x="442" y="512" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 53 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 15 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrAE" xMin="24" yMin="0" xMax="1928" yMax="1356">
      <contour>
        <pt x="790" y="74" on="1"/>
        <pt x="821" y="89" on="0"/>
        <pt x="897" y="120" on="0"/>
        <pt x="939" y="130" on="1"/>
        <pt x="939" y="473" on="1"/>
        <pt x="560" y="473" on="1"/>
        <pt x="344" y="130" on="1"/>
        <pt x="384" y="122" on="0"/>
        <pt x="458" y="94" on="0"/>
        <pt x="493" y="74" on="1"/>
        <pt x="493" y="0" on="1"/>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="74" on="1"/>
        <pt x="55" y="93" on="0"/>
        <pt x="125" y="122" on="0"/>
        <pt x="160" y="130" on="1"/>
        <pt x="875" y="1236" on="1"/>
        <pt x="846" y="1245" on="0"/>
        <pt x="788" y="1266" on="0"/>
        <pt x="763" y="1282" on="1"/>
        <pt x="763" y="1356" on="1"/>
        <pt x="1898" y="1356" on="1"/>
        <pt x="1895" y="1268" on="0"/>
        <pt x="1876" y="1083" on="0"/>
        <pt x="1860" y="1001" on="1"/>
        <pt x="1778" y="1001" on="1"/>
        <pt x="1689" y="1229" on="1"/>
        <pt x="1229" y="1229" on="1"/>
        <pt x="1229" y="756" on="1"/>
        <pt x="1565" y="756" on="1"/>
        <pt x="1651" y="904" on="1"/>
        <pt x="1711" y="904" on="1"/>
        <pt x="1716" y="856" on="0"/>
        <pt x="1721" y="751" on="0"/>
        <pt x="1721" y="693" on="1"/>
        <pt x="1721" y="635" on="0"/>
        <pt x="1716" y="528" on="0"/>
        <pt x="1711" y="477" on="1"/>
        <pt x="1651" y="477" on="1"/>
        <pt x="1565" y="630" on="1"/>
        <pt x="1229" y="630" on="1"/>
        <pt x="1229" y="126" on="1"/>
        <pt x="1704" y="126" on="1"/>
        <pt x="1808" y="372" on="1"/>
        <pt x="1889" y="372" on="1"/>
        <pt x="1896" y="334" on="0"/>
        <pt x="1910" y="242" on="0"/>
        <pt x="1921" y="143" on="0"/>
        <pt x="1928" y="44" on="0"/>
        <pt x="1928" y="0" on="1"/>
        <pt x="790" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="639" y="599" on="1"/>
        <pt x="939" y="599" on="1"/>
        <pt x="939" y="965" on="1"/>
        <pt x="948" y="1128" on="1"/>
        <pt x="945" y="1128" on="1"/>
        <pt x="875" y="973" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 57 58
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            49
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            49 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          51 20 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 26 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          28 20 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 28 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 28 31 28 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          30 28 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          39 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 39 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          43 41 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          54 20 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrAcyrbreve" xMin="24" yMin="0" xMax="1455" yMax="1747">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="200" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrAdieresis" xMin="24" yMin="0" xMax="1455" yMax="1720">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="198" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrAmacron" xMin="24" yMin="0" xMax="1455" yMax="1654">
      <component glyphName="A" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="285" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrBreve" xMin="146" yMin="1445" xMax="932" yMax="1747">
      <contour>
        <pt x="542" y="1445" on="1"/>
        <pt x="452" y="1445" on="0"/>
        <pt x="307" y="1478" on="0"/>
        <pt x="202" y="1542" on="0"/>
        <pt x="146" y="1638" on="0"/>
        <pt x="146" y="1701" on="1"/>
        <pt x="181" y="1726" on="0"/>
        <pt x="296" y="1741" on="0"/>
        <pt x="344" y="1743" on="1"/>
        <pt x="409" y="1708" on="1"/>
        <pt x="409" y="1557" on="1"/>
        <pt x="437" y="1544" on="0"/>
        <pt x="508" y="1534" on="0"/>
        <pt x="543" y="1534" on="1"/>
        <pt x="570" y="1534" on="0"/>
        <pt x="649" y="1542" on="0"/>
        <pt x="677" y="1551" on="1"/>
        <pt x="677" y="1708" on="1"/>
        <pt x="743" y="1743" on="1"/>
        <pt x="778" y="1747" on="0"/>
        <pt x="890" y="1726" on="0"/>
        <pt x="932" y="1701" on="1"/>
        <pt x="932" y="1577" on="0"/>
        <pt x="723" y="1445" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          63 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          143 8 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 8 31 8 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 16
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrChedesc" xMin="46" yMin="-316" xMax="1483" yMax="1356">
      <contour>
        <pt x="792" y="74" on="1"/>
        <pt x="837" y="95" on="0"/>
        <pt x="925" y="126" on="0"/>
        <pt x="970" y="130" on="1"/>
        <pt x="970" y="587" on="1"/>
        <pt x="937" y="567" on="0"/>
        <pt x="854" y="535" on="0"/>
        <pt x="762" y="512" on="0"/>
        <pt x="664" y="499" on="0"/>
        <pt x="616" y="499" on="1"/>
        <pt x="539" y="499" on="0"/>
        <pt x="385" y="533" on="0"/>
        <pt x="262" y="617" on="0"/>
        <pt x="186" y="758" on="0"/>
        <pt x="186" y="866" on="1"/>
        <pt x="186" y="1225" on="1"/>
        <pt x="149" y="1232" on="0"/>
        <pt x="75" y="1262" on="0"/>
        <pt x="46" y="1282" on="1"/>
        <pt x="46" y="1356" on="1"/>
        <pt x="594" y="1356" on="1"/>
        <pt x="594" y="1282" on="1"/>
        <pt x="573" y="1266" on="0"/>
        <pt x="513" y="1236" on="0"/>
        <pt x="476" y="1225" on="1"/>
        <pt x="476" y="913" on="1"/>
        <pt x="476" y="768" on="0"/>
        <pt x="602" y="635" on="0"/>
        <pt x="730" y="635" on="1"/>
        <pt x="762" y="635" on="0"/>
        <pt x="828" y="647" on="0"/>
        <pt x="891" y="666" on="0"/>
        <pt x="947" y="691" on="0"/>
        <pt x="970" y="703" on="1"/>
        <pt x="970" y="1225" on="1"/>
        <pt x="937" y="1236" on="0"/>
        <pt x="875" y="1264" on="0"/>
        <pt x="850" y="1282" on="1"/>
        <pt x="850" y="1356" on="1"/>
        <pt x="1388" y="1356" on="1"/>
        <pt x="1388" y="1282" on="1"/>
        <pt x="1363" y="1264" on="0"/>
        <pt x="1298" y="1236" on="0"/>
        <pt x="1261" y="1225" on="1"/>
        <pt x="1261" y="126" on="1"/>
        <pt x="1483" y="126" on="1"/>
        <pt x="1481" y="76" on="0"/>
        <pt x="1473" y="-43" on="0"/>
        <pt x="1459" y="-163" on="0"/>
        <pt x="1442" y="-274" on="0"/>
        <pt x="1431" y="-316" on="1"/>
        <pt x="1355" y="-316" on="1"/>
        <pt x="1251" y="0" on="1"/>
        <pt x="792" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 38 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrChedescleft" xMin="60" yMin="-316" xMax="1413" yMax="1356">
      <contour>
        <pt x="995" y="126" on="1"/>
        <pt x="995" y="587" on="1"/>
        <pt x="968" y="572" on="0"/>
        <pt x="889" y="540" on="0"/>
        <pt x="794" y="515" on="0"/>
        <pt x="687" y="499" on="0"/>
        <pt x="633" y="499" on="1"/>
        <pt x="555" y="499" on="0"/>
        <pt x="400" y="535" on="0"/>
        <pt x="277" y="620" on="0"/>
        <pt x="200" y="763" on="0"/>
        <pt x="200" y="871" on="1"/>
        <pt x="200" y="1225" on="1"/>
        <pt x="163" y="1232" on="0"/>
        <pt x="89" y="1262" on="0"/>
        <pt x="60" y="1282" on="1"/>
        <pt x="60" y="1356" on="1"/>
        <pt x="608" y="1356" on="1"/>
        <pt x="608" y="1282" on="1"/>
        <pt x="586" y="1266" on="0"/>
        <pt x="527" y="1236" on="0"/>
        <pt x="490" y="1225" on="1"/>
        <pt x="490" y="921" on="1"/>
        <pt x="490" y="855" on="0"/>
        <pt x="520" y="749" on="0"/>
        <pt x="585" y="675" on="0"/>
        <pt x="689" y="635" on="0"/>
        <pt x="763" y="635" on="1"/>
        <pt x="791" y="635" on="0"/>
        <pt x="852" y="647" on="0"/>
        <pt x="913" y="666" on="0"/>
        <pt x="971" y="690" on="0"/>
        <pt x="995" y="703" on="1"/>
        <pt x="995" y="1225" on="1"/>
        <pt x="962" y="1236" on="0"/>
        <pt x="900" y="1264" on="0"/>
        <pt x="875" y="1282" on="1"/>
        <pt x="875" y="1356" on="1"/>
        <pt x="1413" y="1356" on="1"/>
        <pt x="1413" y="1282" on="1"/>
        <pt x="1388" y="1264" on="0"/>
        <pt x="1322" y="1236" on="0"/>
        <pt x="1285" y="1225" on="1"/>
        <pt x="1285" y="130" on="1"/>
        <pt x="1324" y="122" on="0"/>
        <pt x="1389" y="89" on="0"/>
        <pt x="1413" y="74" on="1"/>
        <pt x="1413" y="0" on="1"/>
        <pt x="1003" y="0" on="1"/>
        <pt x="898" y="-316" on="1"/>
        <pt x="822" y="-316" on="1"/>
        <pt x="813" y="-274" on="0"/>
        <pt x="796" y="-163" on="0"/>
        <pt x="782" y="-43" on="0"/>
        <pt x="773" y="76" on="0"/>
        <pt x="772" y="126" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            37
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            37 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            47 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 16 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrChedieresis" xMin="60" yMin="0" xMax="1413" yMax="1720">
      <component glyphName="afii10041" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="224" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          61
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrChehook" xMin="60" yMin="-408" xMax="1341" yMax="1356">
      <contour>
        <pt x="923" y="587" on="1"/>
        <pt x="868" y="554" on="0"/>
        <pt x="777" y="526" on="1"/>
        <pt x="685" y="499" on="0"/>
        <pt x="578" y="499" on="1"/>
        <pt x="500" y="499" on="0"/>
        <pt x="363" y="532" on="0"/>
        <pt x="260" y="615" on="0"/>
        <pt x="200" y="755" on="0"/>
        <pt x="200" y="863" on="1"/>
        <pt x="200" y="1225" on="1"/>
        <pt x="164" y="1232" on="0"/>
        <pt x="90" y="1262" on="0"/>
        <pt x="60" y="1282" on="1"/>
        <pt x="60" y="1356" on="1"/>
        <pt x="609" y="1356" on="1"/>
        <pt x="609" y="1282" on="1"/>
        <pt x="587" y="1266" on="0"/>
        <pt x="528" y="1236" on="0"/>
        <pt x="491" y="1225" on="1"/>
        <pt x="491" y="931" on="1"/>
        <pt x="491" y="865" on="0"/>
        <pt x="507" y="756" on="0"/>
        <pt x="552" y="678" on="0"/>
        <pt x="632" y="635" on="0"/>
        <pt x="696" y="635" on="1"/>
        <pt x="760" y="635" on="0"/>
        <pt x="874" y="672" on="0"/>
        <pt x="923" y="703" on="1"/>
        <pt x="923" y="1225" on="1"/>
        <pt x="890" y="1236" on="0"/>
        <pt x="827" y="1264" on="0"/>
        <pt x="803" y="1282" on="1"/>
        <pt x="803" y="1356" on="1"/>
        <pt x="1341" y="1356" on="1"/>
        <pt x="1341" y="1282" on="1"/>
        <pt x="1315" y="1264" on="0"/>
        <pt x="1250" y="1236" on="0"/>
        <pt x="1213" y="1225" on="1"/>
        <pt x="1213" y="0" on="1"/>
        <pt x="1213" y="-131" on="0"/>
        <pt x="1152" y="-292" on="0"/>
        <pt x="1032" y="-379" on="0"/>
        <pt x="852" y="-408" on="0"/>
        <pt x="733" y="-408" on="1"/>
        <pt x="721" y="-322" on="1"/>
        <pt x="774" y="-310" on="0"/>
        <pt x="851" y="-271" on="0"/>
        <pt x="900" y="-199" on="0"/>
        <pt x="923" y="-85" on="0"/>
        <pt x="923" y="2" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 14 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          45 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrChevertbar" xMin="59" yMin="0" xMax="1423" yMax="1356">
      <contour>
        <pt x="697" y="506" on="1"/>
        <pt x="641" y="499" on="0"/>
        <pt x="582" y="499" on="1"/>
        <pt x="505" y="499" on="0"/>
        <pt x="366" y="532" on="0"/>
        <pt x="261" y="614" on="0"/>
        <pt x="199" y="756" on="0"/>
        <pt x="199" y="863" on="1"/>
        <pt x="199" y="1225" on="1"/>
        <pt x="162" y="1232" on="0"/>
        <pt x="88" y="1262" on="0"/>
        <pt x="59" y="1282" on="1"/>
        <pt x="59" y="1356" on="1"/>
        <pt x="617" y="1356" on="1"/>
        <pt x="617" y="1282" on="1"/>
        <pt x="596" y="1266" on="0"/>
        <pt x="526" y="1236" on="0"/>
        <pt x="489" y="1225" on="1"/>
        <pt x="489" y="931" on="1"/>
        <pt x="489" y="865" on="0"/>
        <pt x="508" y="757" on="0"/>
        <pt x="558" y="682" on="0"/>
        <pt x="637" y="637" on="0"/>
        <pt x="697" y="635" on="1"/>
        <pt x="697" y="920" on="1"/>
        <pt x="820" y="920" on="1"/>
        <pt x="820" y="645" on="1"/>
        <pt x="874" y="654" on="0"/>
        <pt x="974" y="684" on="0"/>
        <pt x="1005" y="703" on="1"/>
        <pt x="1005" y="1225" on="1"/>
        <pt x="974" y="1236" on="0"/>
        <pt x="911" y="1264" on="0"/>
        <pt x="885" y="1282" on="1"/>
        <pt x="885" y="1356" on="1"/>
        <pt x="1423" y="1356" on="1"/>
        <pt x="1423" y="1282" on="1"/>
        <pt x="1397" y="1264" on="0"/>
        <pt x="1332" y="1236" on="0"/>
        <pt x="1295" y="1225" on="1"/>
        <pt x="1295" y="130" on="1"/>
        <pt x="1334" y="122" on="0"/>
        <pt x="1399" y="89" on="0"/>
        <pt x="1423" y="74" on="1"/>
        <pt x="1423" y="0" on="1"/>
        <pt x="826" y="0" on="1"/>
        <pt x="826" y="74" on="1"/>
        <pt x="871" y="95" on="0"/>
        <pt x="960" y="126" on="0"/>
        <pt x="1005" y="130" on="1"/>
        <pt x="1005" y="587" on="1"/>
        <pt x="975" y="571" on="0"/>
        <pt x="879" y="538" on="0"/>
        <pt x="820" y="525" on="1"/>
        <pt x="820" y="257" on="1"/>
        <pt x="697" y="257" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 56 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          2 34 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 34 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          55 2 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrDze" xMin="41" yMin="-24" xMax="1020" yMax="1356">
      <contour>
        <pt x="560" y="767" on="1"/>
        <pt x="766" y="767" on="0"/>
        <pt x="890" y="679" on="1"/>
        <pt x="1014" y="590" on="0"/>
        <pt x="1019" y="412" on="1"/>
        <pt x="1020" y="351" on="0"/>
        <pt x="994" y="248" on="0"/>
        <pt x="945" y="164" on="0"/>
        <pt x="877" y="97" on="0"/>
        <pt x="837" y="72" on="1"/>
        <pt x="796" y="47" on="0"/>
        <pt x="704" y="11" on="0"/>
        <pt x="606" y="-13" on="0"/>
        <pt x="506" y="-24" on="0"/>
        <pt x="458" y="-24" on="1"/>
        <pt x="403" y="-24" on="0"/>
        <pt x="284" y="-12" on="0"/>
        <pt x="171" y="9" on="0"/>
        <pt x="74" y="37" on="0"/>
        <pt x="41" y="52" on="1"/>
        <pt x="41" y="82" on="0"/>
        <pt x="54" y="172" on="0"/>
        <pt x="75" y="271" on="0"/>
        <pt x="101" y="366" on="0"/>
        <pt x="113" y="401" on="1"/>
        <pt x="192" y="401" on="1"/>
        <pt x="272" y="126" on="1"/>
        <pt x="292" y="114" on="0"/>
        <pt x="382" y="103" on="0"/>
        <pt x="432" y="103" on="1"/>
        <pt x="502" y="103" on="0"/>
        <pt x="606" y="152" on="0"/>
        <pt x="675" y="230" on="0"/>
        <pt x="709" y="328" on="0"/>
        <pt x="709" y="377" on="1"/>
        <pt x="709" y="457" on="0"/>
        <pt x="664" y="560" on="0"/>
        <pt x="588" y="620" on="0"/>
        <pt x="485" y="643" on="0"/>
        <pt x="428" y="643" on="1"/>
        <pt x="301" y="616" on="1"/>
        <pt x="290" y="651" on="0"/>
        <pt x="285" y="729" on="0"/>
        <pt x="299" y="771" on="1"/>
        <pt x="419" y="773" on="1"/>
        <pt x="661" y="1107" on="1"/>
        <pt x="728" y="1177" on="1"/>
        <pt x="728" y="1185" on="1"/>
        <pt x="591" y="1170" on="1"/>
        <pt x="252" y="1170" on="1"/>
        <pt x="175" y="957" on="1"/>
        <pt x="109" y="957" on="1"/>
        <pt x="98" y="1000" on="0"/>
        <pt x="77" y="1109" on="0"/>
        <pt x="62" y="1220" on="0"/>
        <pt x="53" y="1321" on="0"/>
        <pt x="53" y="1356" on="1"/>
        <pt x="955" y="1356" on="1"/>
        <pt x="955" y="1260" on="1"/>
        <pt x="647" y="861" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 56 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          39 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 39 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          50 48 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          58 56 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEcyrbreve" xMin="94" yMin="-24" xMax="1291" yMax="1747">
      <component glyphName="afii10047" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="32" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEdieresis" xMin="94" yMin="-24" xMax="1291" yMax="1720">
      <component glyphName="afii10047" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="1" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          74
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          77
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEdotaccent" xMin="94" yMin="-24" xMax="1291" yMax="1723">
      <component glyphName="afii10047" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="260" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          74
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEldesc" xMin="56" yMin="-316" xMax="1449" yMax="1356">
      <contour>
        <pt x="789" y="74" on="1"/>
        <pt x="823" y="91" on="0"/>
        <pt x="898" y="120" on="0"/>
        <pt x="937" y="130" on="1"/>
        <pt x="937" y="1229" on="1"/>
        <pt x="621" y="1229" on="1"/>
        <pt x="615" y="935" on="0"/>
        <pt x="573" y="542" on="0"/>
        <pt x="510" y="287" on="0"/>
        <pt x="435" y="137" on="0"/>
        <pt x="394" y="83" on="1"/>
        <pt x="357" y="33" on="0"/>
        <pt x="245" y="-24" on="0"/>
        <pt x="193" y="-24" on="1"/>
        <pt x="167" y="-13" on="0"/>
        <pt x="121" y="46" on="0"/>
        <pt x="82" y="124" on="0"/>
        <pt x="58" y="209" on="0"/>
        <pt x="56" y="246" on="1"/>
        <pt x="108" y="320" on="1"/>
        <pt x="338" y="264" on="1"/>
        <pt x="363" y="318" on="0"/>
        <pt x="412" y="471" on="0"/>
        <pt x="451" y="695" on="0"/>
        <pt x="474" y="1001" on="0"/>
        <pt x="474" y="1207" on="1"/>
        <pt x="414" y="1216" on="0"/>
        <pt x="307" y="1259" on="0"/>
        <pt x="268" y="1282" on="1"/>
        <pt x="268" y="1356" on="1"/>
        <pt x="1386" y="1356" on="1"/>
        <pt x="1386" y="1282" on="1"/>
        <pt x="1357" y="1264" on="0"/>
        <pt x="1274" y="1234" on="0"/>
        <pt x="1227" y="1225" on="1"/>
        <pt x="1227" y="126" on="1"/>
        <pt x="1449" y="126" on="1"/>
        <pt x="1448" y="76" on="0"/>
        <pt x="1438" y="-43" on="0"/>
        <pt x="1427" y="-163" on="0"/>
        <pt x="1409" y="-273" on="0"/>
        <pt x="1397" y="-316" on="1"/>
        <pt x="1322" y="-316" on="1"/>
        <pt x="1218" y="0" on="1"/>
        <pt x="789" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          19 13 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          20 19 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEltail" xMin="62" yMin="-290" xMax="1486" yMax="1356">
      <contour>
        <pt x="480" y="1207" on="1"/>
        <pt x="420" y="1216" on="0"/>
        <pt x="313" y="1259" on="0"/>
        <pt x="274" y="1282" on="1"/>
        <pt x="274" y="1356" on="1"/>
        <pt x="1423" y="1356" on="1"/>
        <pt x="1423" y="1282" on="1"/>
        <pt x="1394" y="1264" on="0"/>
        <pt x="1312" y="1234" on="0"/>
        <pt x="1264" y="1225" on="1"/>
        <pt x="1264" y="128" on="1"/>
        <pt x="1468" y="128" on="1"/>
        <pt x="1486" y="100" on="1"/>
        <pt x="1479" y="64" on="0"/>
        <pt x="1434" y="-39" on="0"/>
        <pt x="1370" y="-149" on="0"/>
        <pt x="1293" y="-253" on="0"/>
        <pt x="1255" y="-290" on="1"/>
        <pt x="1150" y="-290" on="1"/>
        <pt x="1216" y="0" on="1"/>
        <pt x="826" y="0" on="1"/>
        <pt x="826" y="74" on="1"/>
        <pt x="860" y="91" on="0"/>
        <pt x="935" y="120" on="0"/>
        <pt x="974" y="130" on="1"/>
        <pt x="974" y="1229" on="1"/>
        <pt x="627" y="1229" on="1"/>
        <pt x="621" y="934" on="0"/>
        <pt x="600" y="738" on="1"/>
        <pt x="589" y="639" on="0"/>
        <pt x="563" y="478" on="0"/>
        <pt x="547" y="414" on="1"/>
        <pt x="516" y="287" on="0"/>
        <pt x="478" y="212" on="1"/>
        <pt x="440" y="137" on="0"/>
        <pt x="400" y="83" on="1"/>
        <pt x="382" y="58" on="0"/>
        <pt x="334" y="18" on="0"/>
        <pt x="280" y="-9" on="0"/>
        <pt x="225" y="-24" on="0"/>
        <pt x="199" y="-24" on="1"/>
        <pt x="174" y="-14" on="0"/>
        <pt x="126" y="46" on="0"/>
        <pt x="88" y="124" on="0"/>
        <pt x="64" y="209" on="0"/>
        <pt x="62" y="246" on="1"/>
        <pt x="114" y="320" on="1"/>
        <pt x="344" y="264" on="1"/>
        <pt x="369" y="318" on="0"/>
        <pt x="418" y="471" on="0"/>
        <pt x="456" y="695" on="0"/>
        <pt x="480" y="1001" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 52 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          46 40 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 46 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEmacron" xMin="94" yMin="-24" xMax="1291" yMax="1654">
      <component glyphName="afii10047" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="122" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEmtail" xMin="70" yMin="-290" xMax="1897" yMax="1356">
      <contour>
        <pt x="1670" y="126" on="1"/>
        <pt x="1877" y="126" on="1"/>
        <pt x="1897" y="100" on="1"/>
        <pt x="1889" y="64" on="0"/>
        <pt x="1844" y="-39" on="0"/>
        <pt x="1780" y="-149" on="0"/>
        <pt x="1704" y="-253" on="0"/>
        <pt x="1665" y="-290" on="1"/>
        <pt x="1560" y="-290" on="1"/>
        <pt x="1626" y="0" on="1"/>
        <pt x="1236" y="0" on="1"/>
        <pt x="1236" y="74" on="1"/>
        <pt x="1275" y="93" on="0"/>
        <pt x="1349" y="120" on="0"/>
        <pt x="1391" y="130" on="1"/>
        <pt x="1391" y="929" on="1"/>
        <pt x="1401" y="1156" on="1"/>
        <pt x="1386" y="1156" on="1"/>
        <pt x="1319" y="949" on="1"/>
        <pt x="934" y="0" on="1"/>
        <pt x="845" y="0" on="1"/>
        <pt x="465" y="951" on="1"/>
        <pt x="393" y="1177" on="1"/>
        <pt x="376" y="1177" on="1"/>
        <pt x="378" y="931" on="1"/>
        <pt x="378" y="137" on="1"/>
        <pt x="415" y="130" on="0"/>
        <pt x="504" y="95" on="0"/>
        <pt x="543" y="74" on="1"/>
        <pt x="543" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="146" y="110" on="1"/>
        <pt x="194" y="132" on="0"/>
        <pt x="233" y="139" on="1"/>
        <pt x="233" y="1225" on="1"/>
        <pt x="194" y="1234" on="0"/>
        <pt x="107" y="1260" on="0"/>
        <pt x="74" y="1282" on="1"/>
        <pt x="74" y="1356" on="1"/>
        <pt x="599" y="1356" on="1"/>
        <pt x="905" y="577" on="1"/>
        <pt x="961" y="391" on="1"/>
        <pt x="963" y="391" on="1"/>
        <pt x="1023" y="581" on="1"/>
        <pt x="1338" y="1356" on="1"/>
        <pt x="1818" y="1356" on="1"/>
        <pt x="1818" y="1282" on="1"/>
        <pt x="1785" y="1262" on="0"/>
        <pt x="1709" y="1234" on="0"/>
        <pt x="1670" y="1225" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          42 51 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          16 47 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          22 12
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          42 9 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEnGe" xMin="70" yMin="0" xMax="1865" yMax="1356">
      <contour>
        <pt x="1313" y="130" on="1"/>
        <pt x="1361" y="122" on="0"/>
        <pt x="1456" y="91" on="0"/>
        <pt x="1499" y="74" on="1"/>
        <pt x="1499" y="0" on="1"/>
        <pt x="884" y="0" on="1"/>
        <pt x="884" y="74" on="1"/>
        <pt x="921" y="95" on="0"/>
        <pt x="984" y="116" on="0"/>
        <pt x="1022" y="130" on="1"/>
        <pt x="1022" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="657" y="74" on="1"/>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="181" y="1234" on="0"/>
        <pt x="97" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1022" y="757" on="1"/>
        <pt x="1022" y="1225" on="1"/>
        <pt x="1004" y="1227" on="0"/>
        <pt x="965" y="1237" on="0"/>
        <pt x="945" y="1245" on="1"/>
        <pt x="904" y="1261" on="0"/>
        <pt x="884" y="1282" on="1"/>
        <pt x="884" y="1356" on="1"/>
        <pt x="1865" y="1356" on="1"/>
        <pt x="1865" y="1261" on="0"/>
        <pt x="1847" y="1046" on="0"/>
        <pt x="1831" y="948" on="1"/>
        <pt x="1751" y="948" on="1"/>
        <pt x="1624" y="1229" on="1"/>
        <pt x="1313" y="1229" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          32 40 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 32 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          10 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          45 46 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEndesc" xMin="70" yMin="-316" xMax="1563" yMax="1356">
      <contour>
        <pt x="658" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="183" y="1234" on="0"/>
        <pt x="98" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="658" y="1356" on="1"/>
        <pt x="658" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1060" y="757" on="1"/>
        <pt x="1060" y="1225" on="1"/>
        <pt x="1017" y="1234" on="0"/>
        <pt x="949" y="1264" on="0"/>
        <pt x="922" y="1282" on="1"/>
        <pt x="922" y="1356" on="1"/>
        <pt x="1509" y="1356" on="1"/>
        <pt x="1509" y="1282" on="1"/>
        <pt x="1476" y="1260" on="0"/>
        <pt x="1391" y="1234" on="0"/>
        <pt x="1350" y="1225" on="1"/>
        <pt x="1350" y="126" on="1"/>
        <pt x="1563" y="126" on="1"/>
        <pt x="1561" y="76" on="0"/>
        <pt x="1552" y="-43" on="0"/>
        <pt x="1540" y="-163" on="0"/>
        <pt x="1522" y="-273" on="0"/>
        <pt x="1511" y="-316" on="1"/>
        <pt x="1435" y="-316" on="1"/>
        <pt x="1331" y="0" on="1"/>
        <pt x="922" y="0" on="1"/>
        <pt x="922" y="74" on="1"/>
        <pt x="951" y="91" on="0"/>
        <pt x="1021" y="122" on="0"/>
        <pt x="1060" y="130" on="1"/>
        <pt x="1060" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="658" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 48 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 16 31 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEnhook" xMin="70" yMin="-408" xMax="1523" yMax="1356">
      <contour>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="183" y="1234" on="0"/>
        <pt x="98" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1074" y="757" on="1"/>
        <pt x="1074" y="1225" on="1"/>
        <pt x="1031" y="1234" on="0"/>
        <pt x="963" y="1264" on="0"/>
        <pt x="936" y="1282" on="1"/>
        <pt x="936" y="1356" on="1"/>
        <pt x="1523" y="1356" on="1"/>
        <pt x="1523" y="1282" on="1"/>
        <pt x="1490" y="1260" on="0"/>
        <pt x="1405" y="1234" on="0"/>
        <pt x="1364" y="1225" on="1"/>
        <pt x="1364" y="0" on="1"/>
        <pt x="1364" y="-131" on="0"/>
        <pt x="1302" y="-292" on="0"/>
        <pt x="1185" y="-379" on="0"/>
        <pt x="1004" y="-408" on="0"/>
        <pt x="884" y="-408" on="1"/>
        <pt x="872" y="-322" on="1"/>
        <pt x="924" y="-310" on="0"/>
        <pt x="1002" y="-271" on="0"/>
        <pt x="1050" y="-200" on="0"/>
        <pt x="1074" y="-87" on="0"/>
        <pt x="1074" y="0" on="1"/>
        <pt x="1074" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="657" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          34 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 16 31 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          47 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEntail" xMin="70" yMin="-290" xMax="1573" yMax="1356">
      <contour>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="103" y="91" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="182" y="1234" on="0"/>
        <pt x="97" y="1264" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="628" y="1262" on="0"/>
        <pt x="556" y="1232" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="757" on="1"/>
        <pt x="1050" y="757" on="1"/>
        <pt x="1050" y="1225" on="1"/>
        <pt x="1007" y="1234" on="0"/>
        <pt x="939" y="1264" on="0"/>
        <pt x="912" y="1282" on="1"/>
        <pt x="912" y="1356" on="1"/>
        <pt x="1499" y="1356" on="1"/>
        <pt x="1499" y="1282" on="1"/>
        <pt x="1466" y="1260" on="0"/>
        <pt x="1381" y="1234" on="0"/>
        <pt x="1340" y="1225" on="1"/>
        <pt x="1340" y="128" on="1"/>
        <pt x="1553" y="128" on="1"/>
        <pt x="1573" y="100" on="1"/>
        <pt x="1565" y="64" on="0"/>
        <pt x="1520" y="-39" on="0"/>
        <pt x="1456" y="-149" on="0"/>
        <pt x="1379" y="-253" on="0"/>
        <pt x="1340" y="-290" on="1"/>
        <pt x="1235" y="-290" on="1"/>
        <pt x="1301" y="0" on="1"/>
        <pt x="912" y="0" on="1"/>
        <pt x="912" y="74" on="1"/>
        <pt x="941" y="91" on="0"/>
        <pt x="1011" y="122" on="0"/>
        <pt x="1050" y="130" on="1"/>
        <pt x="1050" y="632" on="1"/>
        <pt x="519" y="632" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="122" on="0"/>
        <pt x="624" y="95" on="0"/>
        <pt x="657" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          21 49 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            37
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            37 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          48 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEpsilon" xMin="70" yMin="-24" xMax="1029" yMax="1379">
      <contour>
        <pt x="618" y="-24" on="1"/>
        <pt x="491" y="-24" on="0"/>
        <pt x="288" y="26" on="0"/>
        <pt x="146" y="126" on="0"/>
        <pt x="70" y="274" on="0"/>
        <pt x="70" y="372" on="1"/>
        <pt x="70" y="448" on="0"/>
        <pt x="119" y="568" on="0"/>
        <pt x="204" y="655" on="0"/>
        <pt x="316" y="709" on="0"/>
        <pt x="379" y="719" on="1"/>
        <pt x="379" y="726" on="1"/>
        <pt x="311" y="742" on="0"/>
        <pt x="210" y="804" on="0"/>
        <pt x="141" y="886" on="0"/>
        <pt x="107" y="982" on="0"/>
        <pt x="107" y="1031" on="1"/>
        <pt x="107" y="1133" on="0"/>
        <pt x="194" y="1268" on="0"/>
        <pt x="335" y="1347" on="0"/>
        <pt x="515" y="1379" on="0"/>
        <pt x="608" y="1379" on="1"/>
        <pt x="649" y="1379" on="0"/>
        <pt x="746" y="1371" on="0"/>
        <pt x="845" y="1351" on="0"/>
        <pt x="938" y="1319" on="0"/>
        <pt x="976" y="1295" on="1"/>
        <pt x="976" y="1252" on="0"/>
        <pt x="967" y="1160" on="0"/>
        <pt x="954" y="1073" on="0"/>
        <pt x="939" y="996" on="0"/>
        <pt x="932" y="968" on="1"/>
        <pt x="850" y="968" on="1"/>
        <pt x="755" y="1219" on="1"/>
        <pt x="732" y="1233" on="0"/>
        <pt x="668" y="1253" on="0"/>
        <pt x="631" y="1253" on="1"/>
        <pt x="522" y="1253" on="0"/>
        <pt x="413" y="1124" on="0"/>
        <pt x="413" y="1009" on="1"/>
        <pt x="413" y="921" on="0"/>
        <pt x="496" y="802" on="0"/>
        <pt x="571" y="771" on="1"/>
        <pt x="587" y="769" on="0"/>
        <pt x="626" y="765" on="0"/>
        <pt x="667" y="763" on="0"/>
        <pt x="706" y="762" on="0"/>
        <pt x="723" y="763" on="1"/>
        <pt x="784" y="763" on="1"/>
        <pt x="796" y="726" on="0"/>
        <pt x="793" y="637" on="0"/>
        <pt x="782" y="602" on="1"/>
        <pt x="634" y="628" on="1"/>
        <pt x="575" y="628" on="0"/>
        <pt x="481" y="598" on="0"/>
        <pt x="415" y="533" on="0"/>
        <pt x="379" y="433" on="0"/>
        <pt x="379" y="364" on="1"/>
        <pt x="379" y="237" on="0"/>
        <pt x="518" y="103" on="0"/>
        <pt x="647" y="103" on="1"/>
        <pt x="685" y="103" on="0"/>
        <pt x="763" y="120" on="0"/>
        <pt x="800" y="135" on="1"/>
        <pt x="878" y="410" on="1"/>
        <pt x="959" y="410" on="1"/>
        <pt x="970" y="372" on="0"/>
        <pt x="994" y="276" on="0"/>
        <pt x="1015" y="180" on="0"/>
        <pt x="1029" y="93" on="0"/>
        <pt x="1029" y="62" on="1"/>
        <pt x="996" y="46" on="0"/>
        <pt x="899" y="15" on="0"/>
        <pt x="789" y="-9" on="0"/>
        <pt x="672" y="-24" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          47 21 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          52 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 47 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          32 47 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          64 60 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEpsilondieresis" xMin="70" yMin="-24" xMax="1029" yMax="1720">
      <component glyphName="cyrEpsilon" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="30" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          84
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          87
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrErcrossed" xMin="65" yMin="0" xMax="1213" yMax="1371">
      <contour>
        <pt x="515" y="130" on="1"/>
        <pt x="567" y="122" on="0"/>
        <pt x="670" y="93" on="0"/>
        <pt x="710" y="74" on="1"/>
        <pt x="710" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="74" on="1"/>
        <pt x="102" y="95" on="0"/>
        <pt x="185" y="122" on="0"/>
        <pt x="224" y="130" on="1"/>
        <pt x="224" y="1225" on="1"/>
        <pt x="180" y="1234" on="0"/>
        <pt x="98" y="1262" on="0"/>
        <pt x="65" y="1282" on="1"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="269" y="1356" on="1"/>
        <pt x="306" y="1356" on="0"/>
        <pt x="402" y="1360" on="0"/>
        <pt x="511" y="1365" on="0"/>
        <pt x="621" y="1371" on="0"/>
        <pt x="670" y="1371" on="1"/>
        <pt x="772" y="1371" on="0"/>
        <pt x="968" y="1330" on="0"/>
        <pt x="1121" y="1234" on="0"/>
        <pt x="1213" y="1073" on="0"/>
        <pt x="1213" y="953" on="1"/>
        <pt x="1213" y="874" on="0"/>
        <pt x="1169" y="748" on="0"/>
        <pt x="1091" y="649" on="0"/>
        <pt x="985" y="577" on="0"/>
        <pt x="923" y="554" on="1"/>
        <pt x="995" y="432" on="1"/>
        <pt x="840" y="349" on="1"/>
        <pt x="743" y="521" on="1"/>
        <pt x="714" y="515" on="0"/>
        <pt x="653" y="512" on="0"/>
        <pt x="620" y="512" on="1"/>
        <pt x="600" y="512" on="0"/>
        <pt x="528" y="513" on="0"/>
        <pt x="515" y="517" on="1"/>
      </contour>
      <contour>
        <pt x="620" y="1245" on="1"/>
        <pt x="581" y="1245" on="0"/>
        <pt x="536" y="1240" on="0"/>
        <pt x="515" y="1234" on="1"/>
        <pt x="515" y="645" on="1"/>
        <pt x="533" y="639" on="0"/>
        <pt x="602" y="637" on="0"/>
        <pt x="623" y="637" on="1"/>
        <pt x="666" y="637" on="0"/>
        <pt x="710" y="649" on="1"/>
        <pt x="605" y="829" on="1"/>
        <pt x="699" y="879" on="1"/>
        <pt x="799" y="701" on="1"/>
        <pt x="842" y="738" on="0"/>
        <pt x="895" y="856" on="0"/>
        <pt x="895" y="943" on="1"/>
        <pt x="895" y="1098" on="0"/>
        <pt x="743" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          36 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 20 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          32 36 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          51 47 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEstail" xMin="130" yMin="-388" xMax="1329" yMax="1379">
      <contour>
        <pt x="1215" y="407" on="1"/>
        <pt x="1294" y="407" on="1"/>
        <pt x="1301" y="376" on="0"/>
        <pt x="1314" y="288" on="0"/>
        <pt x="1323" y="191" on="0"/>
        <pt x="1329" y="94" on="0"/>
        <pt x="1329" y="54" on="1"/>
        <pt x="1251" y="14" on="0"/>
        <pt x="1087" y="-17" on="0"/>
        <pt x="1003" y="-22" on="1"/>
        <pt x="986" y="-124" on="0"/>
        <pt x="943" y="-302" on="0"/>
        <pt x="917" y="-388" on="1"/>
        <pt x="831" y="-388" on="1"/>
        <pt x="799" y="-294" on="0"/>
        <pt x="756" y="-103" on="0"/>
        <pt x="740" y="-12" on="1"/>
        <pt x="609" y="7" on="0"/>
        <pt x="386" y="107" on="0"/>
        <pt x="223" y="277" on="0"/>
        <pt x="130" y="519" on="0"/>
        <pt x="130" y="680" on="1"/>
        <pt x="130" y="803" on="0"/>
        <pt x="191" y="1002" on="0"/>
        <pt x="298" y="1157" on="0"/>
        <pt x="442" y="1270" on="0"/>
        <pt x="609" y="1344" on="0"/>
        <pt x="791" y="1379" on="0"/>
        <pt x="882" y="1379" on="1"/>
        <pt x="945" y="1379" on="0"/>
        <pt x="1075" y="1368" on="0"/>
        <pt x="1193" y="1349" on="0"/>
        <pt x="1291" y="1324" on="0"/>
        <pt x="1324" y="1311" on="1"/>
        <pt x="1324" y="1284" on="0"/>
        <pt x="1316" y="1188" on="0"/>
        <pt x="1303" y="1080" on="0"/>
        <pt x="1287" y="975" on="0"/>
        <pt x="1279" y="939" on="1"/>
        <pt x="1197" y="939" on="1"/>
        <pt x="1091" y="1232" on="1"/>
        <pt x="1082" y="1236" on="0"/>
        <pt x="1040" y="1243" on="0"/>
        <pt x="988" y="1249" on="0"/>
        <pt x="935" y="1253" on="0"/>
        <pt x="914" y="1253" on="1"/>
        <pt x="862" y="1253" on="0"/>
        <pt x="753" y="1225" on="0"/>
        <pt x="650" y="1165" on="0"/>
        <pt x="559" y="1073" on="0"/>
        <pt x="491" y="945" on="0"/>
        <pt x="451" y="779" on="0"/>
        <pt x="451" y="677" on="1"/>
        <pt x="451" y="537" on="0"/>
        <pt x="526" y="320" on="0"/>
        <pt x="588" y="248" on="1"/>
        <pt x="619" y="212" on="0"/>
        <pt x="699" y="158" on="0"/>
        <pt x="791" y="122" on="0"/>
        <pt x="888" y="103" on="0"/>
        <pt x="936" y="103" on="1"/>
        <pt x="963" y="103" on="0"/>
        <pt x="1020" y="110" on="0"/>
        <pt x="1071" y="119" on="0"/>
        <pt x="1111" y="130" on="0"/>
        <pt x="1120" y="135" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          16 66 67
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          60 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 60 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          45 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          39 45 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEstail.alt" xMin="130" yMin="-453" xMax="1329" yMax="1379">
      <contour>
        <pt x="1215" y="407" on="1"/>
        <pt x="1294" y="407" on="1"/>
        <pt x="1301" y="376" on="0"/>
        <pt x="1314" y="288" on="0"/>
        <pt x="1323" y="191" on="0"/>
        <pt x="1329" y="94" on="0"/>
        <pt x="1329" y="54" on="1"/>
        <pt x="1239" y="8" on="0"/>
        <pt x="1047" y="-22" on="0"/>
        <pt x="951" y="-24" on="1"/>
        <pt x="1004" y="-64" on="0"/>
        <pt x="1071" y="-181" on="0"/>
        <pt x="1071" y="-250" on="1"/>
        <pt x="1071" y="-348" on="0"/>
        <pt x="1017" y="-400" on="1"/>
        <pt x="964" y="-453" on="0"/>
        <pt x="884" y="-453" on="1"/>
        <pt x="800" y="-453" on="0"/>
        <pt x="704" y="-366" on="0"/>
        <pt x="704" y="-296" on="1"/>
        <pt x="704" y="-262" on="0"/>
        <pt x="727" y="-208" on="0"/>
        <pt x="767" y="-170" on="0"/>
        <pt x="821" y="-151" on="0"/>
        <pt x="853" y="-151" on="1"/>
        <pt x="867" y="-151" on="0"/>
        <pt x="886" y="-153" on="0"/>
        <pt x="896" y="-153" on="1"/>
        <pt x="885" y="-113" on="0"/>
        <pt x="836" y="-44" on="0"/>
        <pt x="795" y="-18" on="1"/>
        <pt x="654" y="-5" on="0"/>
        <pt x="411" y="89" on="0"/>
        <pt x="232" y="260" on="0"/>
        <pt x="130" y="511" on="0"/>
        <pt x="130" y="680" on="1"/>
        <pt x="130" y="803" on="0"/>
        <pt x="191" y="1002" on="0"/>
        <pt x="298" y="1157" on="0"/>
        <pt x="442" y="1270" on="0"/>
        <pt x="609" y="1344" on="0"/>
        <pt x="791" y="1379" on="0"/>
        <pt x="882" y="1379" on="1"/>
        <pt x="945" y="1379" on="0"/>
        <pt x="1075" y="1368" on="0"/>
        <pt x="1193" y="1349" on="0"/>
        <pt x="1291" y="1324" on="0"/>
        <pt x="1324" y="1311" on="1"/>
        <pt x="1324" y="1284" on="0"/>
        <pt x="1316" y="1188" on="0"/>
        <pt x="1303" y="1080" on="0"/>
        <pt x="1287" y="975" on="0"/>
        <pt x="1279" y="939" on="1"/>
        <pt x="1197" y="939" on="1"/>
        <pt x="1091" y="1232" on="1"/>
        <pt x="1082" y="1236" on="0"/>
        <pt x="1040" y="1243" on="0"/>
        <pt x="988" y="1249" on="0"/>
        <pt x="935" y="1253" on="0"/>
        <pt x="914" y="1253" on="1"/>
        <pt x="862" y="1253" on="0"/>
        <pt x="753" y="1225" on="0"/>
        <pt x="650" y="1165" on="0"/>
        <pt x="559" y="1073" on="0"/>
        <pt x="491" y="945" on="0"/>
        <pt x="451" y="779" on="0"/>
        <pt x="451" y="677" on="1"/>
        <pt x="451" y="537" on="0"/>
        <pt x="526" y="320" on="0"/>
        <pt x="588" y="248" on="1"/>
        <pt x="619" y="212" on="0"/>
        <pt x="699" y="158" on="0"/>
        <pt x="791" y="122" on="0"/>
        <pt x="888" y="103" on="0"/>
        <pt x="936" y="103" on="1"/>
        <pt x="963" y="103" on="0"/>
        <pt x="1020" y="110" on="0"/>
        <pt x="1071" y="119" on="0"/>
        <pt x="1111" y="130" on="0"/>
        <pt x="1120" y="135" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          74 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 74 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          207 16 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          24 16 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          52 59 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrEstail.alt02" xMin="130" yMin="-529" xMax="1329" yMax="1379">
      <component glyphName="Ccedilla" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrGebar" xMin="100" yMin="0" xMax="1223" yMax="1356">
      <contour>
        <pt x="100" y="743" on="1"/>
        <pt x="259" y="743" on="1"/>
        <pt x="259" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="137" y="1260" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
        <pt x="1222" y="1356" on="1"/>
        <pt x="1223" y="1261" on="0"/>
        <pt x="1206" y="1048" on="0"/>
        <pt x="1189" y="950" on="1"/>
        <pt x="1109" y="950" on="1"/>
        <pt x="979" y="1229" on="1"/>
        <pt x="550" y="1229" on="1"/>
        <pt x="550" y="743" on="1"/>
        <pt x="811" y="743" on="1"/>
        <pt x="811" y="608" on="1"/>
        <pt x="550" y="608" on="1"/>
        <pt x="550" y="130" on="1"/>
        <pt x="598" y="122" on="0"/>
        <pt x="693" y="91" on="0"/>
        <pt x="735" y="74" on="1"/>
        <pt x="735" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="74" on="1"/>
        <pt x="187" y="117" on="0"/>
        <pt x="259" y="130" on="1"/>
        <pt x="259" y="608" on="1"/>
        <pt x="100" y="608" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 6 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 12 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrGebar.alt" xMin="95" yMin="0" xMax="1181" yMax="1356">
      <component glyphName="F" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrGehook" xMin="90" yMin="-204" xMax="1388" yMax="1356">
      <contour>
        <pt x="539" y="130" on="1"/>
        <pt x="578" y="120" on="0"/>
        <pt x="652" y="89" on="0"/>
        <pt x="683" y="74" on="1"/>
        <pt x="683" y="0" on="1"/>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="74" on="1"/>
        <pt x="177" y="117" on="0"/>
        <pt x="249" y="130" on="1"/>
        <pt x="249" y="1225" on="1"/>
        <pt x="210" y="1234" on="0"/>
        <pt x="127" y="1260" on="0"/>
        <pt x="90" y="1282" on="1"/>
        <pt x="90" y="1356" on="1"/>
        <pt x="1192" y="1356" on="1"/>
        <pt x="1192" y="1309" on="0"/>
        <pt x="1188" y="1207" on="0"/>
        <pt x="1179" y="1102" on="0"/>
        <pt x="1166" y="998" on="0"/>
        <pt x="1157" y="949" on="1"/>
        <pt x="1077" y="949" on="1"/>
        <pt x="947" y="1229" on="1"/>
        <pt x="539" y="1229" on="1"/>
        <pt x="539" y="693" on="1"/>
        <pt x="566" y="709" on="0"/>
        <pt x="643" y="741" on="0"/>
        <pt x="736" y="765" on="0"/>
        <pt x="841" y="780" on="0"/>
        <pt x="896" y="780" on="1"/>
        <pt x="943" y="780" on="0"/>
        <pt x="1042" y="769" on="0"/>
        <pt x="1140" y="742" on="0"/>
        <pt x="1230" y="696" on="0"/>
        <pt x="1268" y="661" on="1"/>
        <pt x="1330" y="603" on="0"/>
        <pt x="1388" y="423" on="0"/>
        <pt x="1388" y="317" on="1"/>
        <pt x="1388" y="57" on="0"/>
        <pt x="1113" y="-204" on="0"/>
        <pt x="848" y="-203" on="1"/>
        <pt x="836" y="-116" on="1"/>
        <pt x="914" y="-93" on="0"/>
        <pt x="1016" y="-22" on="0"/>
        <pt x="1076" y="79" on="0"/>
        <pt x="1099" y="213" on="0"/>
        <pt x="1097" y="298" on="1"/>
        <pt x="1095" y="376" on="0"/>
        <pt x="1060" y="509" on="0"/>
        <pt x="1027" y="554" on="1"/>
        <pt x="1009" y="578" on="0"/>
        <pt x="958" y="613" on="0"/>
        <pt x="896" y="635" on="0"/>
        <pt x="829" y="645" on="0"/>
        <pt x="796" y="645" on="1"/>
        <pt x="764" y="645" on="0"/>
        <pt x="693" y="632" on="0"/>
        <pt x="624" y="612" on="0"/>
        <pt x="562" y="588" on="0"/>
        <pt x="539" y="577" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 21 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          28 13 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          53 28
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrH" xMin="90" yMin="0" xMax="1443" yMax="1356">
      <contour>
        <pt x="90" y="1356" on="1"/>
        <pt x="687" y="1356" on="1"/>
        <pt x="687" y="1282" on="1"/>
        <pt x="642" y="1261" on="0"/>
        <pt x="553" y="1230" on="0"/>
        <pt x="508" y="1226" on="1"/>
        <pt x="508" y="769" on="1"/>
        <pt x="537" y="784" on="0"/>
        <pt x="616" y="816" on="0"/>
        <pt x="711" y="841" on="0"/>
        <pt x="816" y="857" on="0"/>
        <pt x="870" y="857" on="1"/>
        <pt x="948" y="857" on="0"/>
        <pt x="1103" y="825" on="0"/>
        <pt x="1226" y="743" on="0"/>
        <pt x="1303" y="603" on="0"/>
        <pt x="1303" y="495" on="1"/>
        <pt x="1303" y="131" on="1"/>
        <pt x="1340" y="124" on="0"/>
        <pt x="1414" y="94" on="0"/>
        <pt x="1443" y="74" on="1"/>
        <pt x="1443" y="0" on="1"/>
        <pt x="895" y="0" on="1"/>
        <pt x="895" y="74" on="1"/>
        <pt x="917" y="90" on="0"/>
        <pt x="976" y="120" on="0"/>
        <pt x="1013" y="131" on="1"/>
        <pt x="1013" y="445" on="1"/>
        <pt x="1013" y="511" on="0"/>
        <pt x="983" y="614" on="0"/>
        <pt x="918" y="685" on="0"/>
        <pt x="814" y="721" on="0"/>
        <pt x="740" y="721" on="1"/>
        <pt x="712" y="721" on="0"/>
        <pt x="649" y="710" on="0"/>
        <pt x="587" y="692" on="0"/>
        <pt x="530" y="667" on="0"/>
        <pt x="508" y="653" on="1"/>
        <pt x="508" y="131" on="1"/>
        <pt x="541" y="120" on="0"/>
        <pt x="603" y="92" on="0"/>
        <pt x="628" y="74" on="1"/>
        <pt x="628" y="0" on="1"/>
        <pt x="90" y="0" on="1"/>
        <pt x="90" y="74" on="1"/>
        <pt x="115" y="92" on="0"/>
        <pt x="181" y="120" on="0"/>
        <pt x="218" y="131" on="1"/>
        <pt x="218" y="1226" on="1"/>
        <pt x="179" y="1234" on="0"/>
        <pt x="114" y="1267" on="0"/>
        <pt x="90" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          32 52 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 0 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrHadesc" xMin="38" yMin="-316" xMax="1464" yMax="1356">
      <contour>
        <pt x="784" y="74" on="1"/>
        <pt x="816" y="91" on="0"/>
        <pt x="883" y="120" on="0"/>
        <pt x="922" y="130" on="1"/>
        <pt x="647" y="556" on="1"/>
        <pt x="391" y="128" on="1"/>
        <pt x="432" y="122" on="0"/>
        <pt x="502" y="95" on="0"/>
        <pt x="535" y="74" on="1"/>
        <pt x="535" y="0" on="1"/>
        <pt x="38" y="0" on="1"/>
        <pt x="38" y="74" on="1"/>
        <pt x="103" y="113" on="0"/>
        <pt x="171" y="130" on="1"/>
        <pt x="559" y="682" on="1"/>
        <pt x="195" y="1225" on="1"/>
        <pt x="158" y="1236" on="0"/>
        <pt x="93" y="1266" on="0"/>
        <pt x="62" y="1282" on="1"/>
        <pt x="62" y="1356" on="1"/>
        <pt x="676" y="1356" on="1"/>
        <pt x="676" y="1282" on="1"/>
        <pt x="653" y="1268" on="0"/>
        <pt x="583" y="1240" on="0"/>
        <pt x="537" y="1225" on="1"/>
        <pt x="773" y="837" on="1"/>
        <pt x="1005" y="1225" on="1"/>
        <pt x="966" y="1234" on="0"/>
        <pt x="889" y="1266" on="0"/>
        <pt x="858" y="1282" on="1"/>
        <pt x="858" y="1356" on="1"/>
        <pt x="1339" y="1356" on="1"/>
        <pt x="1339" y="1282" on="1"/>
        <pt x="1309" y="1266" on="0"/>
        <pt x="1245" y="1236" on="0"/>
        <pt x="1206" y="1225" on="1"/>
        <pt x="862" y="721" on="1"/>
        <pt x="1269" y="126" on="1"/>
        <pt x="1464" y="126" on="1"/>
        <pt x="1462" y="76" on="0"/>
        <pt x="1452" y="-43" on="0"/>
        <pt x="1440" y="-163" on="0"/>
        <pt x="1423" y="-273" on="0"/>
        <pt x="1412" y="-316" on="1"/>
        <pt x="1336" y="-316" on="1"/>
        <pt x="1231" y="0" on="1"/>
        <pt x="784" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 47 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 45 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 45 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          14 4 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          36 25 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrHahook" xMin="42" yMin="-408" xMax="1367" yMax="1356">
      <contour>
        <pt x="867" y="746" on="1"/>
        <pt x="928" y="662" on="0"/>
        <pt x="1027" y="535" on="0"/>
        <pt x="1106" y="433" on="0"/>
        <pt x="1171" y="349" on="0"/>
        <pt x="1199" y="307" on="1"/>
        <pt x="1211" y="290" on="0"/>
        <pt x="1266" y="215" on="0"/>
        <pt x="1323" y="120" on="0"/>
        <pt x="1367" y="14" on="0"/>
        <pt x="1367" y="-35" on="1"/>
        <pt x="1367" y="-138" on="0"/>
        <pt x="1286" y="-280" on="0"/>
        <pt x="1151" y="-369" on="0"/>
        <pt x="974" y="-408" on="0"/>
        <pt x="878" y="-408" on="1"/>
        <pt x="865" y="-322" on="1"/>
        <pt x="916" y="-308" on="0"/>
        <pt x="995" y="-269" on="0"/>
        <pt x="1049" y="-213" on="0"/>
        <pt x="1076" y="-139" on="0"/>
        <pt x="1076" y="-89" on="1"/>
        <pt x="1076" y="-45" on="0"/>
        <pt x="1018" y="74" on="0"/>
        <pt x="957" y="163" on="1"/>
        <pt x="907" y="236" on="0"/>
        <pt x="769" y="422" on="0"/>
        <pt x="673" y="550" on="1"/>
        <pt x="374" y="128" on="1"/>
        <pt x="414" y="122" on="0"/>
        <pt x="494" y="95" on="0"/>
        <pt x="526" y="74" on="1"/>
        <pt x="526" y="0" on="1"/>
        <pt x="42" y="0" on="1"/>
        <pt x="42" y="74" on="1"/>
        <pt x="75" y="95" on="0"/>
        <pt x="147" y="120" on="0"/>
        <pt x="182" y="130" on="1"/>
        <pt x="584" y="658" on="1"/>
        <pt x="187" y="1225" on="1"/>
        <pt x="151" y="1236" on="0"/>
        <pt x="85" y="1266" on="0"/>
        <pt x="53" y="1282" on="1"/>
        <pt x="53" y="1356" on="1"/>
        <pt x="667" y="1356" on="1"/>
        <pt x="667" y="1282" on="1"/>
        <pt x="644" y="1268" on="0"/>
        <pt x="574" y="1240" on="0"/>
        <pt x="528" y="1225" on="1"/>
        <pt x="778" y="851" on="1"/>
        <pt x="1036" y="1225" on="1"/>
        <pt x="1017" y="1229" on="0"/>
        <pt x="975" y="1243" on="0"/>
        <pt x="934" y="1258" on="0"/>
        <pt x="895" y="1274" on="0"/>
        <pt x="880" y="1282" on="1"/>
        <pt x="880" y="1356" on="1"/>
        <pt x="1360" y="1356" on="1"/>
        <pt x="1360" y="1282" on="1"/>
        <pt x="1331" y="1266" on="0"/>
        <pt x="1257" y="1236" on="0"/>
        <pt x="1218" y="1225" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          49 32 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          27 32 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          0 49 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          38 27 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          58 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrHcrossed" xMin="73" yMin="0" xMax="1443" yMax="1356">
      <contour>
        <pt x="135" y="1356" on="1"/>
        <pt x="731" y="1356" on="1"/>
        <pt x="731" y="1282" on="1"/>
        <pt x="686" y="1260" on="0"/>
        <pt x="599" y="1229" on="0"/>
        <pt x="554" y="1225" on="1"/>
        <pt x="554" y="1098" on="1"/>
        <pt x="955" y="1098" on="1"/>
        <pt x="955" y="972" on="1"/>
        <pt x="554" y="972" on="1"/>
        <pt x="554" y="769" on="1"/>
        <pt x="606" y="799" on="0"/>
        <pt x="698" y="827" on="1"/>
        <pt x="744" y="841" on="0"/>
        <pt x="863" y="854" on="0"/>
        <pt x="918" y="854" on="1"/>
        <pt x="995" y="854" on="0"/>
        <pt x="1135" y="821" on="0"/>
        <pt x="1241" y="739" on="0"/>
        <pt x="1304" y="599" on="0"/>
        <pt x="1304" y="492" on="1"/>
        <pt x="1304" y="130" on="1"/>
        <pt x="1340" y="124" on="0"/>
        <pt x="1414" y="93" on="0"/>
        <pt x="1443" y="74" on="1"/>
        <pt x="1443" y="0" on="1"/>
        <pt x="895" y="0" on="1"/>
        <pt x="895" y="74" on="1"/>
        <pt x="916" y="89" on="0"/>
        <pt x="976" y="120" on="0"/>
        <pt x="1013" y="130" on="1"/>
        <pt x="1013" y="452" on="1"/>
        <pt x="1013" y="519" on="0"/>
        <pt x="988" y="619" on="0"/>
        <pt x="932" y="686" on="0"/>
        <pt x="844" y="719" on="0"/>
        <pt x="780" y="719" on="1"/>
        <pt x="716" y="719" on="0"/>
        <pt x="602" y="682" on="0"/>
        <pt x="554" y="652" on="1"/>
        <pt x="554" y="130" on="1"/>
        <pt x="586" y="120" on="0"/>
        <pt x="648" y="89" on="0"/>
        <pt x="674" y="74" on="1"/>
        <pt x="674" y="0" on="1"/>
        <pt x="135" y="0" on="1"/>
        <pt x="135" y="74" on="1"/>
        <pt x="160" y="89" on="0"/>
        <pt x="227" y="120" on="0"/>
        <pt x="262" y="130" on="1"/>
        <pt x="262" y="972" on="1"/>
        <pt x="73" y="972" on="1"/>
        <pt x="73" y="1098" on="1"/>
        <pt x="262" y="1098" on="1"/>
        <pt x="262" y="1225" on="1"/>
        <pt x="224" y="1234" on="0"/>
        <pt x="158" y="1266" on="0"/>
        <pt x="135" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 0 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 0 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrI" xMin="96" yMin="0" xMax="700" yMax="1356">
      <component glyphName="I" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrIdieresis" xMin="81" yMin="0" xMax="1512" yMax="1720">
      <component glyphName="afii10026" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="255" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          56
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIecyrbreve" xMin="100" yMin="0" xMax="1244" yMax="1747">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="174" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIedieresiscyrbreve" xMin="100" yMin="0" xMax="1244" yMax="1954">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="DieresisCyrBreve" x="174" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIedieresismacron" xMin="100" yMin="0" xMax="1244" yMax="1863">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="169" y="0" flags="0x4"/>
      <component glyphName="Macron" x="247" y="209" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIehook" xMin="4" yMin="-24" xMax="1713" yMax="1379">
      <contour>
        <pt x="1083" y="1379" on="1"/>
        <pt x="1209" y="1379" on="0"/>
        <pt x="1437" y="1305" on="0"/>
        <pt x="1610" y="1161" on="0"/>
        <pt x="1713" y="946" on="0"/>
        <pt x="1713" y="805" on="1"/>
        <pt x="1713" y="755" on="0"/>
        <pt x="1707" y="671" on="0"/>
        <pt x="1700" y="641" on="1"/>
        <pt x="698" y="641" on="1"/>
        <pt x="703" y="512" on="0"/>
        <pt x="779" y="325" on="0"/>
        <pt x="909" y="204" on="0"/>
        <pt x="1088" y="145" on="0"/>
        <pt x="1195" y="145" on="1"/>
        <pt x="1296" y="145" on="0"/>
        <pt x="1479" y="202" on="0"/>
        <pt x="1572" y="267" on="1"/>
        <pt x="1606" y="204" on="1"/>
        <pt x="1562" y="140" on="0"/>
        <pt x="1442" y="53" on="0"/>
        <pt x="1307" y="-1" on="0"/>
        <pt x="1167" y="-24" on="0"/>
        <pt x="1104" y="-24" on="1"/>
        <pt x="1009" y="-24" on="0"/>
        <pt x="830" y="15" on="0"/>
        <pt x="672" y="92" on="0"/>
        <pt x="540" y="205" on="0"/>
        <pt x="443" y="353" on="0"/>
        <pt x="385" y="534" on="0"/>
        <pt x="380" y="641" on="1"/>
        <pt x="292" y="643" on="0"/>
        <pt x="152" y="691" on="0"/>
        <pt x="55" y="771" on="0"/>
        <pt x="4" y="877" on="0"/>
        <pt x="4" y="937" on="1"/>
        <pt x="4" y="962" on="0"/>
        <pt x="14" y="1022" on="0"/>
        <pt x="34" y="1082" on="0"/>
        <pt x="66" y="1139" on="0"/>
        <pt x="89" y="1160" on="1"/>
        <pt x="133" y="1155" on="0"/>
        <pt x="193" y="1130" on="1"/>
        <pt x="254" y="1104" on="0"/>
        <pt x="298" y="1067" on="1"/>
        <pt x="313" y="1011" on="1"/>
        <pt x="150" y="874" on="1"/>
        <pt x="161" y="848" on="0"/>
        <pt x="210" y="808" on="0"/>
        <pt x="275" y="780" on="0"/>
        <pt x="348" y="766" on="0"/>
        <pt x="382" y="767" on="1"/>
        <pt x="403" y="930" on="0"/>
        <pt x="534" y="1163" on="0"/>
        <pt x="725" y="1310" on="0"/>
        <pt x="959" y="1379" on="0"/>
      </contour>
      <contour>
        <pt x="1072" y="1253" on="1"/>
        <pt x="995" y="1253" on="0"/>
        <pt x="863" y="1198" on="0"/>
        <pt x="763" y="1081" on="0"/>
        <pt x="703" y="897" on="0"/>
        <pt x="698" y="767" on="1"/>
        <pt x="1393" y="767" on="1"/>
        <pt x="1395" y="789" on="0"/>
        <pt x="1397" y="826" on="0"/>
        <pt x="1397" y="846" on="1"/>
        <pt x="1397" y="944" on="0"/>
        <pt x="1343" y="1096" on="0"/>
        <pt x="1253" y="1199" on="0"/>
        <pt x="1135" y="1253" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          61 0 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 14 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          40 61 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          61
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          56 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIehookogonek" xMin="4" yMin="-388" xMax="1713" yMax="1379">
      <contour>
        <pt x="1083" y="1379" on="1"/>
        <pt x="1209" y="1379" on="0"/>
        <pt x="1437" y="1305" on="0"/>
        <pt x="1610" y="1161" on="0"/>
        <pt x="1713" y="946" on="0"/>
        <pt x="1713" y="805" on="1"/>
        <pt x="1713" y="755" on="0"/>
        <pt x="1707" y="671" on="0"/>
        <pt x="1700" y="641" on="1"/>
        <pt x="698" y="641" on="1"/>
        <pt x="703" y="512" on="0"/>
        <pt x="779" y="325" on="0"/>
        <pt x="909" y="204" on="0"/>
        <pt x="1088" y="145" on="0"/>
        <pt x="1195" y="145" on="1"/>
        <pt x="1296" y="145" on="0"/>
        <pt x="1479" y="202" on="0"/>
        <pt x="1572" y="267" on="1"/>
        <pt x="1606" y="204" on="1"/>
        <pt x="1570" y="152" on="0"/>
        <pt x="1477" y="76" on="0"/>
        <pt x="1372" y="22" on="0"/>
        <pt x="1260" y="-10" on="0"/>
        <pt x="1205" y="-17" on="1"/>
        <pt x="1199" y="-61" on="0"/>
        <pt x="1181" y="-155" on="0"/>
        <pt x="1158" y="-251" on="0"/>
        <pt x="1132" y="-345" on="0"/>
        <pt x="1118" y="-388" on="1"/>
        <pt x="1033" y="-388" on="1"/>
        <pt x="1000" y="-294" on="0"/>
        <pt x="957" y="-99" on="0"/>
        <pt x="942" y="-9" on="1"/>
        <pt x="827" y="13" on="0"/>
        <pt x="627" y="119" on="0"/>
        <pt x="477" y="283" on="0"/>
        <pt x="386" y="504" on="0"/>
        <pt x="380" y="641" on="1"/>
        <pt x="292" y="643" on="0"/>
        <pt x="152" y="691" on="0"/>
        <pt x="55" y="771" on="0"/>
        <pt x="4" y="877" on="0"/>
        <pt x="4" y="937" on="1"/>
        <pt x="4" y="962" on="0"/>
        <pt x="14" y="1022" on="0"/>
        <pt x="34" y="1082" on="0"/>
        <pt x="66" y="1139" on="0"/>
        <pt x="89" y="1160" on="1"/>
        <pt x="133" y="1155" on="0"/>
        <pt x="193" y="1130" on="1"/>
        <pt x="254" y="1104" on="0"/>
        <pt x="298" y="1067" on="1"/>
        <pt x="313" y="1011" on="1"/>
        <pt x="150" y="874" on="1"/>
        <pt x="161" y="848" on="0"/>
        <pt x="210" y="808" on="0"/>
        <pt x="275" y="780" on="0"/>
        <pt x="348" y="766" on="0"/>
        <pt x="382" y="767" on="1"/>
        <pt x="403" y="930" on="0"/>
        <pt x="534" y="1163" on="0"/>
        <pt x="725" y="1310" on="0"/>
        <pt x="959" y="1379" on="0"/>
      </contour>
      <contour>
        <pt x="1072" y="1253" on="1"/>
        <pt x="995" y="1253" on="0"/>
        <pt x="863" y="1198" on="0"/>
        <pt x="763" y="1081" on="0"/>
        <pt x="703" y="897" on="0"/>
        <pt x="698" y="767" on="1"/>
        <pt x="1393" y="767" on="1"/>
        <pt x="1395" y="789" on="0"/>
        <pt x="1397" y="826" on="0"/>
        <pt x="1397" y="846" on="1"/>
        <pt x="1397" y="944" on="0"/>
        <pt x="1343" y="1096" on="0"/>
        <pt x="1253" y="1199" on="0"/>
        <pt x="1135" y="1253" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          68 0 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          68
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          17 14 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          47 68 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          68
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          63 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrIemacron" xMin="100" yMin="0" xMax="1244" yMax="1654">
      <component glyphName="E" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="247" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrImacron" xMin="81" yMin="0" xMax="1512" yMax="1654">
      <component glyphName="afii10026" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="342" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrKaback" xMin="30" yMin="0" xMax="1677" yMax="1356">
      <contour>
        <pt x="1085" y="1356" on="1"/>
        <pt x="1585" y="1356" on="1"/>
        <pt x="1585" y="1282" on="1"/>
        <pt x="1552" y="1260" on="0"/>
        <pt x="1467" y="1232" on="0"/>
        <pt x="1432" y="1225" on="1"/>
        <pt x="1081" y="776" on="1"/>
        <pt x="1123" y="712" on="0"/>
        <pt x="1241" y="550" on="0"/>
        <pt x="1374" y="376" on="0"/>
        <pt x="1517" y="200" on="0"/>
        <pt x="1585" y="122" on="1"/>
        <pt x="1677" y="66" on="1"/>
        <pt x="1677" y="0" on="1"/>
        <pt x="1343" y="0" on="1"/>
        <pt x="1263" y="54" on="1"/>
        <pt x="1218" y="112" on="0"/>
        <pt x="1116" y="255" on="0"/>
        <pt x="1015" y="408" on="0"/>
        <pt x="922" y="564" on="0"/>
        <pt x="885" y="635" on="1"/>
        <pt x="749" y="635" on="1"/>
        <pt x="749" y="130" on="1"/>
        <pt x="791" y="122" on="0"/>
        <pt x="861" y="91" on="0"/>
        <pt x="887" y="74" on="1"/>
        <pt x="887" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="74" on="1"/>
        <pt x="339" y="93" on="0"/>
        <pt x="420" y="122" on="0"/>
        <pt x="459" y="130" on="1"/>
        <pt x="459" y="1229" on="1"/>
        <pt x="257" y="1229" on="1"/>
        <pt x="155" y="950" on="1"/>
        <pt x="74" y="950" on="1"/>
        <pt x="62" y="999" on="0"/>
        <pt x="46" y="1108" on="0"/>
        <pt x="36" y="1216" on="0"/>
        <pt x="31" y="1317" on="0"/>
        <pt x="30" y="1356" on="1"/>
        <pt x="887" y="1356" on="1"/>
        <pt x="887" y="1282" on="1"/>
        <pt x="861" y="1266" on="0"/>
        <pt x="791" y="1236" on="0"/>
        <pt x="749" y="1225" on="1"/>
        <pt x="749" y="734" on="1"/>
        <pt x="914" y="761" on="1"/>
        <pt x="1226" y="1225" on="1"/>
        <pt x="1188" y="1234" on="0"/>
        <pt x="1112" y="1266" on="0"/>
        <pt x="1085" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 52 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 26 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 20 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 32 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrKabar" xMin="20" yMin="0" xMax="1455" yMax="1356">
      <contour>
        <pt x="20" y="1112" on="1"/>
        <pt x="237" y="1112" on="1"/>
        <pt x="237" y="1225" on="1"/>
        <pt x="192" y="1232" on="0"/>
        <pt x="110" y="1262" on="0"/>
        <pt x="79" y="1282" on="1"/>
        <pt x="79" y="1356" on="1"/>
        <pt x="665" y="1356" on="1"/>
        <pt x="665" y="1282" on="1"/>
        <pt x="640" y="1266" on="0"/>
        <pt x="568" y="1236" on="0"/>
        <pt x="528" y="1225" on="1"/>
        <pt x="528" y="1112" on="1"/>
        <pt x="704" y="1112" on="1"/>
        <pt x="704" y="990" on="1"/>
        <pt x="528" y="990" on="1"/>
        <pt x="528" y="730" on="1"/>
        <pt x="705" y="757" on="1"/>
        <pt x="1008" y="1225" on="1"/>
        <pt x="969" y="1234" on="0"/>
        <pt x="894" y="1266" on="0"/>
        <pt x="866" y="1282" on="1"/>
        <pt x="866" y="1356" on="1"/>
        <pt x="1366" y="1356" on="1"/>
        <pt x="1366" y="1282" on="1"/>
        <pt x="1333" y="1260" on="0"/>
        <pt x="1248" y="1232" on="0"/>
        <pt x="1213" y="1225" on="1"/>
        <pt x="872" y="776" on="1"/>
        <pt x="914" y="713" on="0"/>
        <pt x="1027" y="551" on="0"/>
        <pt x="1156" y="376" on="0"/>
        <pt x="1294" y="200" on="0"/>
        <pt x="1362" y="122" on="1"/>
        <pt x="1455" y="66" on="1"/>
        <pt x="1455" y="0" on="1"/>
        <pt x="1118" y="0" on="1"/>
        <pt x="1041" y="54" on="1"/>
        <pt x="995" y="112" on="0"/>
        <pt x="897" y="254" on="0"/>
        <pt x="802" y="407" on="0"/>
        <pt x="713" y="563" on="0"/>
        <pt x="677" y="635" on="1"/>
        <pt x="528" y="635" on="1"/>
        <pt x="528" y="130" on="1"/>
        <pt x="570" y="122" on="0"/>
        <pt x="640" y="91" on="0"/>
        <pt x="665" y="74" on="1"/>
        <pt x="665" y="0" on="1"/>
        <pt x="79" y="0" on="1"/>
        <pt x="79" y="74" on="1"/>
        <pt x="117" y="93" on="0"/>
        <pt x="199" y="122" on="0"/>
        <pt x="237" y="130" on="1"/>
        <pt x="237" y="990" on="1"/>
        <pt x="20" y="990" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          28 56 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            48
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            48 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 6 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          42 48 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          17 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          28 42 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrKadesc" xMin="70" yMin="-316" xMax="1469" yMax="1356">
      <contour>
        <pt x="823" y="1356" on="1"/>
        <pt x="1342" y="1356" on="1"/>
        <pt x="1342" y="1282" on="1"/>
        <pt x="1309" y="1260" on="0"/>
        <pt x="1223" y="1232" on="0"/>
        <pt x="1189" y="1225" on="1"/>
        <pt x="802" y="759" on="1"/>
        <pt x="846" y="697" on="0"/>
        <pt x="966" y="541" on="0"/>
        <pt x="1102" y="373" on="0"/>
        <pt x="1245" y="202" on="0"/>
        <pt x="1313" y="126" on="1"/>
        <pt x="1469" y="126" on="1"/>
        <pt x="1467" y="76" on="0"/>
        <pt x="1458" y="-43" on="0"/>
        <pt x="1445" y="-163" on="0"/>
        <pt x="1428" y="-274" on="0"/>
        <pt x="1418" y="-316" on="1"/>
        <pt x="1343" y="-316" on="1"/>
        <pt x="1238" y="0" on="1"/>
        <pt x="1073" y="0" on="1"/>
        <pt x="996" y="54" on="1"/>
        <pt x="950" y="113" on="0"/>
        <pt x="848" y="255" on="0"/>
        <pt x="745" y="407" on="0"/>
        <pt x="645" y="562" on="0"/>
        <pt x="602" y="635" on="1"/>
        <pt x="519" y="635" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="561" y="122" on="0"/>
        <pt x="631" y="91" on="0"/>
        <pt x="657" y="74" on="1"/>
        <pt x="657" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="109" y="93" on="0"/>
        <pt x="190" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="184" y="1232" on="0"/>
        <pt x="101" y="1262" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="657" y="1356" on="1"/>
        <pt x="657" y="1282" on="1"/>
        <pt x="631" y="1266" on="0"/>
        <pt x="561" y="1236" on="0"/>
        <pt x="519" y="1225" on="1"/>
        <pt x="519" y="734" on="1"/>
        <pt x="633" y="761" on="1"/>
        <pt x="964" y="1225" on="1"/>
        <pt x="926" y="1234" on="0"/>
        <pt x="850" y="1266" on="0"/>
        <pt x="823" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          6 54 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          26 32 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 26 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrKahook" xMin="80" yMin="-408" xMax="1424" yMax="1356">
      <contour>
        <pt x="1123" y="13" on="1"/>
        <pt x="1123" y="107" on="0"/>
        <pt x="1035" y="292" on="0"/>
        <pt x="962" y="381" on="1"/>
        <pt x="921" y="431" on="0"/>
        <pt x="837" y="517" on="0"/>
        <pt x="763" y="583" on="0"/>
        <pt x="709" y="627" on="0"/>
        <pt x="698" y="635" on="1"/>
        <pt x="529" y="635" on="1"/>
        <pt x="529" y="130" on="1"/>
        <pt x="572" y="122" on="0"/>
        <pt x="642" y="91" on="0"/>
        <pt x="667" y="74" on="1"/>
        <pt x="667" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="74" on="1"/>
        <pt x="119" y="93" on="0"/>
        <pt x="200" y="122" on="0"/>
        <pt x="239" y="130" on="1"/>
        <pt x="239" y="1225" on="1"/>
        <pt x="194" y="1232" on="0"/>
        <pt x="111" y="1262" on="0"/>
        <pt x="80" y="1282" on="1"/>
        <pt x="80" y="1356" on="1"/>
        <pt x="667" y="1356" on="1"/>
        <pt x="667" y="1282" on="1"/>
        <pt x="642" y="1266" on="0"/>
        <pt x="571" y="1236" on="0"/>
        <pt x="529" y="1225" on="1"/>
        <pt x="529" y="734" on="1"/>
        <pt x="704" y="761" on="1"/>
        <pt x="1045" y="1225" on="1"/>
        <pt x="1006" y="1234" on="0"/>
        <pt x="941" y="1266" on="0"/>
        <pt x="914" y="1282" on="1"/>
        <pt x="914" y="1356" on="1"/>
        <pt x="1414" y="1356" on="1"/>
        <pt x="1414" y="1282" on="1"/>
        <pt x="1381" y="1260" on="0"/>
        <pt x="1296" y="1232" on="0"/>
        <pt x="1261" y="1225" on="1"/>
        <pt x="878" y="767" on="1"/>
        <pt x="913" y="750" on="0"/>
        <pt x="1008" y="683" on="0"/>
        <pt x="1107" y="601" on="0"/>
        <pt x="1201" y="512" on="0"/>
        <pt x="1235" y="473" on="1"/>
        <pt x="1278" y="422" on="0"/>
        <pt x="1348" y="324" on="0"/>
        <pt x="1398" y="224" on="0"/>
        <pt x="1424" y="118" on="0"/>
        <pt x="1424" y="59" on="1"/>
        <pt x="1424" y="-54" on="0"/>
        <pt x="1340" y="-228" on="0"/>
        <pt x="1190" y="-346" on="0"/>
        <pt x="985" y="-407" on="0"/>
        <pt x="864" y="-408" on="1"/>
        <pt x="853" y="-322" on="1"/>
        <pt x="881" y="-316" on="0"/>
        <pt x="939" y="-296" on="0"/>
        <pt x="991" y="-270" on="0"/>
        <pt x="1037" y="-237" on="0"/>
        <pt x="1053" y="-217" on="1"/>
        <pt x="1086" y="-178" on="0"/>
        <pt x="1123" y="-63" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          42 66 67
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            57
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            57 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 14 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          42 8 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          58 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrKavertbar" xMin="65" yMin="0" xMax="1470" yMax="1356">
      <contour>
        <pt x="884" y="1356" on="1"/>
        <pt x="1384" y="1356" on="1"/>
        <pt x="1384" y="1282" on="1"/>
        <pt x="1351" y="1260" on="0"/>
        <pt x="1266" y="1232" on="0"/>
        <pt x="1231" y="1225" on="1"/>
        <pt x="928" y="772" on="1"/>
        <pt x="970" y="708" on="0"/>
        <pt x="1071" y="547" on="0"/>
        <pt x="1184" y="374" on="0"/>
        <pt x="1309" y="199" on="0"/>
        <pt x="1377" y="122" on="1"/>
        <pt x="1470" y="66" on="1"/>
        <pt x="1470" y="0" on="1"/>
        <pt x="1141" y="0" on="1"/>
        <pt x="1064" y="54" on="1"/>
        <pt x="1017" y="116" on="0"/>
        <pt x="924" y="272" on="0"/>
        <pt x="837" y="432" on="0"/>
        <pt x="761" y="582" on="0"/>
        <pt x="732" y="637" on="1"/>
        <pt x="707" y="637" on="1"/>
        <pt x="707" y="356" on="1"/>
        <pt x="583" y="356" on="1"/>
        <pt x="583" y="637" on="1"/>
        <pt x="501" y="637" on="1"/>
        <pt x="501" y="130" on="1"/>
        <pt x="543" y="122" on="0"/>
        <pt x="613" y="91" on="0"/>
        <pt x="638" y="74" on="1"/>
        <pt x="638" y="0" on="1"/>
        <pt x="65" y="0" on="1"/>
        <pt x="65" y="74" on="1"/>
        <pt x="104" y="93" on="0"/>
        <pt x="176" y="122" on="0"/>
        <pt x="214" y="130" on="1"/>
        <pt x="214" y="1225" on="1"/>
        <pt x="169" y="1232" on="0"/>
        <pt x="97" y="1262" on="0"/>
        <pt x="65" y="1282" on="1"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="638" y="1356" on="1"/>
        <pt x="638" y="1282" on="1"/>
        <pt x="613" y="1266" on="0"/>
        <pt x="541" y="1236" on="0"/>
        <pt x="501" y="1225" on="1"/>
        <pt x="501" y="732" on="1"/>
        <pt x="583" y="741" on="1"/>
        <pt x="583" y="1028" on="1"/>
        <pt x="707" y="1028" on="1"/>
        <pt x="707" y="752" on="1"/>
        <pt x="763" y="759" on="1"/>
        <pt x="1026" y="1225" on="1"/>
        <pt x="987" y="1234" on="0"/>
        <pt x="911" y="1266" on="0"/>
        <pt x="884" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 30 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 21 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 21 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          49 50 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrObar" xMin="88" yMin="-24" xMax="1505" yMax="1379">
      <contour>
        <pt x="88" y="678" on="1"/>
        <pt x="88" y="829" on="0"/>
        <pt x="187" y="1086" on="0"/>
        <pt x="371" y="1274" on="0"/>
        <pt x="634" y="1379" on="0"/>
        <pt x="798" y="1379" on="1"/>
        <pt x="962" y="1379" on="0"/>
        <pt x="1224" y="1274" on="0"/>
        <pt x="1407" y="1086" on="0"/>
        <pt x="1505" y="829" on="0"/>
        <pt x="1505" y="678" on="1"/>
        <pt x="1505" y="526" on="0"/>
        <pt x="1407" y="269" on="0"/>
        <pt x="1224" y="81" on="0"/>
        <pt x="962" y="-24" on="0"/>
        <pt x="798" y="-24" on="1"/>
        <pt x="634" y="-24" on="0"/>
        <pt x="372" y="81" on="0"/>
        <pt x="187" y="269" on="0"/>
        <pt x="88" y="526" on="0"/>
      </contour>
      <contour>
        <pt x="816" y="103" on="1"/>
        <pt x="898" y="103" on="0"/>
        <pt x="1026" y="179" on="0"/>
        <pt x="1116" y="314" on="0"/>
        <pt x="1168" y="502" on="0"/>
        <pt x="1174" y="614" on="1"/>
        <pt x="419" y="614" on="1"/>
        <pt x="425" y="502" on="0"/>
        <pt x="484" y="314" on="0"/>
        <pt x="585" y="179" on="0"/>
        <pt x="726" y="103" on="0"/>
      </contour>
      <contour>
        <pt x="783" y="1253" on="1"/>
        <pt x="697" y="1253" on="0"/>
        <pt x="567" y="1181" on="0"/>
        <pt x="477" y="1051" on="0"/>
        <pt x="427" y="871" on="0"/>
        <pt x="420" y="763" on="1"/>
        <pt x="1173" y="763" on="1"/>
        <pt x="1165" y="871" on="0"/>
        <pt x="1108" y="1051" on="0"/>
        <pt x="1011" y="1181" on="0"/>
        <pt x="872" y="1253" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 36 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          25 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrObarcyrbreve" xMin="88" yMin="-24" xMax="1505" yMax="1747">
      <component glyphName="cyrObar" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="257" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrObardieresis" xMin="88" yMin="-24" xMax="1505" yMax="1720">
      <component glyphName="cyrObar" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="255" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrObardieresiscyrbreve" xMin="88" yMin="-24" xMax="1505" yMax="1954">
      <component glyphName="cyrObar" x="0" y="0" flags="0x204"/>
      <component glyphName="DieresisCyrBreve" x="285" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          66
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrOcyrbreve" xMin="88" yMin="-24" xMax="1505" yMax="1747">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="257" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrOdieresis" xMin="88" yMin="-24" xMax="1505" yMax="1720">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="267" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrOdotaccent" xMin="88" yMin="-24" xMax="1505" yMax="1723">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Dotaccent" x="506" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrOhook" xMin="60" yMin="-24" xMax="1478" yMax="1379">
      <contour>
        <pt x="1478" y="137" on="1"/>
        <pt x="1458" y="69" on="0"/>
        <pt x="1385" y="23" on="1"/>
        <pt x="1348" y="0" on="0"/>
        <pt x="1274" y="-24" on="0"/>
        <pt x="1216" y="-24" on="1"/>
        <pt x="1171" y="-24" on="0"/>
        <pt x="1100" y="-11" on="0"/>
        <pt x="1062" y="2" on="1"/>
        <pt x="1024" y="16" on="0"/>
        <pt x="979" y="36" on="0"/>
        <pt x="962" y="52" on="1"/>
        <pt x="936" y="31" on="0"/>
        <pt x="868" y="2" on="0"/>
        <pt x="796" y="-16" on="0"/>
        <pt x="725" y="-24" on="0"/>
        <pt x="696" y="-24" on="1"/>
        <pt x="533" y="-24" on="0"/>
        <pt x="294" y="87" on="0"/>
        <pt x="137" y="279" on="0"/>
        <pt x="60" y="538" on="0"/>
        <pt x="60" y="686" on="1"/>
        <pt x="60" y="831" on="0"/>
        <pt x="137" y="1083" on="0"/>
        <pt x="273" y="1271" on="0"/>
        <pt x="460" y="1379" on="0"/>
        <pt x="571" y="1379" on="1"/>
        <pt x="654" y="1379" on="0"/>
        <pt x="751" y="1333" on="0"/>
        <pt x="776" y="1284" on="1"/>
        <pt x="759" y="1240" on="1"/>
        <pt x="734" y="1249" on="0"/>
        <pt x="690" y="1253" on="0"/>
        <pt x="675" y="1253" on="1"/>
        <pt x="600" y="1253" on="0"/>
        <pt x="486" y="1165" on="0"/>
        <pt x="408" y="1009" on="0"/>
        <pt x="369" y="795" on="0"/>
        <pt x="369" y="669" on="1"/>
        <pt x="369" y="544" on="0"/>
        <pt x="415" y="336" on="0"/>
        <pt x="504" y="186" on="0"/>
        <pt x="636" y="103" on="0"/>
        <pt x="722" y="103" on="1"/>
        <pt x="757" y="103" on="0"/>
        <pt x="829" y="108" on="0"/>
        <pt x="856" y="118" on="1"/>
        <pt x="802" y="150" on="0"/>
        <pt x="703" y="254" on="0"/>
        <pt x="628" y="399" on="0"/>
        <pt x="583" y="584" on="0"/>
        <pt x="583" y="697" on="1"/>
        <pt x="583" y="826" on="0"/>
        <pt x="647" y="1038" on="0"/>
        <pt x="763" y="1189" on="0"/>
        <pt x="921" y="1273" on="0"/>
        <pt x="1016" y="1273" on="1"/>
        <pt x="1106" y="1273" on="0"/>
        <pt x="1257" y="1202" on="0"/>
        <pt x="1367" y="1059" on="0"/>
        <pt x="1428" y="846" on="0"/>
        <pt x="1428" y="704" on="1"/>
        <pt x="1428" y="609" on="0"/>
        <pt x="1373" y="428" on="0"/>
        <pt x="1289" y="277" on="0"/>
        <pt x="1187" y="164" on="0"/>
        <pt x="1139" y="137" on="1"/>
        <pt x="1160" y="123" on="0"/>
        <pt x="1223" y="103" on="0"/>
        <pt x="1254" y="103" on="1"/>
        <pt x="1312" y="103" on="0"/>
        <pt x="1399" y="139" on="0"/>
        <pt x="1443" y="180" on="1"/>
      </contour>
      <contour>
        <pt x="869" y="682" on="1"/>
        <pt x="869" y="507" on="0"/>
        <pt x="943" y="267" on="0"/>
        <pt x="1005" y="203" on="1"/>
        <pt x="1034" y="230" on="0"/>
        <pt x="1084" y="327" on="0"/>
        <pt x="1121" y="458" on="0"/>
        <pt x="1142" y="618" on="0"/>
        <pt x="1142" y="709" on="1"/>
        <pt x="1142" y="795" on="0"/>
        <pt x="1134" y="953" on="0"/>
        <pt x="1108" y="1074" on="0"/>
        <pt x="1058" y="1146" on="0"/>
        <pt x="1016" y="1146" on="1"/>
        <pt x="971" y="1146" on="0"/>
        <pt x="913" y="1076" on="0"/>
        <pt x="881" y="951" on="0"/>
        <pt x="869" y="781" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          56 26 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          76
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          86 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrOmacron" xMin="88" yMin="-24" xMax="1505" yMax="1654">
      <component glyphName="O" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="342" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrPehook" xMin="80" yMin="-203" xMax="2223" yMax="1356">
      <contour>
        <pt x="660" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="74" on="1"/>
        <pt x="109" y="89" on="0"/>
        <pt x="186" y="122" on="0"/>
        <pt x="238" y="130" on="1"/>
        <pt x="238" y="1225" on="1"/>
        <pt x="200" y="1234" on="0"/>
        <pt x="116" y="1260" on="0"/>
        <pt x="80" y="1282" on="1"/>
        <pt x="80" y="1356" on="1"/>
        <pt x="1516" y="1356" on="1"/>
        <pt x="1516" y="1282" on="1"/>
        <pt x="1480" y="1259" on="0"/>
        <pt x="1397" y="1234" on="0"/>
        <pt x="1357" y="1225" on="1"/>
        <pt x="1357" y="693" on="1"/>
        <pt x="1385" y="705" on="0"/>
        <pt x="1459" y="735" on="0"/>
        <pt x="1552" y="762" on="0"/>
        <pt x="1661" y="780" on="0"/>
        <pt x="1724" y="780" on="1"/>
        <pt x="1771" y="780" on="0"/>
        <pt x="1862" y="772" on="0"/>
        <pt x="1949" y="751" on="0"/>
        <pt x="2031" y="713" on="0"/>
        <pt x="2069" y="683" on="1"/>
        <pt x="2100" y="658" on="0"/>
        <pt x="2156" y="582" on="0"/>
        <pt x="2198" y="489" on="0"/>
        <pt x="2223" y="382" on="0"/>
        <pt x="2223" y="327" on="1"/>
        <pt x="2223" y="185" on="0"/>
        <pt x="2160" y="-11" on="0"/>
        <pt x="2091" y="-76" on="1"/>
        <pt x="2025" y="-138" on="0"/>
        <pt x="1826" y="-201" on="0"/>
        <pt x="1686" y="-203" on="1"/>
        <pt x="1675" y="-116" on="1"/>
        <pt x="1755" y="-93" on="0"/>
        <pt x="1859" y="-22" on="0"/>
        <pt x="1888" y="32" on="1"/>
        <pt x="1916" y="83" on="0"/>
        <pt x="1935" y="215" on="0"/>
        <pt x="1933" y="298" on="1"/>
        <pt x="1931" y="370" on="0"/>
        <pt x="1896" y="492" on="0"/>
        <pt x="1864" y="537" on="1"/>
        <pt x="1824" y="592" on="0"/>
        <pt x="1701" y="645" on="0"/>
        <pt x="1628" y="645" on="1"/>
        <pt x="1589" y="645" on="0"/>
        <pt x="1515" y="632" on="0"/>
        <pt x="1447" y="612" on="0"/>
        <pt x="1385" y="588" on="0"/>
        <pt x="1357" y="577" on="1"/>
        <pt x="1357" y="130" on="1"/>
        <pt x="1394" y="120" on="0"/>
        <pt x="1456" y="91" on="0"/>
        <pt x="1487" y="74" on="1"/>
        <pt x="1487" y="0" on="1"/>
        <pt x="935" y="0" on="1"/>
        <pt x="935" y="74" on="1"/>
        <pt x="955" y="89" on="0"/>
        <pt x="1015" y="118" on="0"/>
        <pt x="1066" y="130" on="1"/>
        <pt x="1066" y="1229" on="1"/>
        <pt x="529" y="1229" on="1"/>
        <pt x="529" y="130" on="1"/>
        <pt x="567" y="120" on="0"/>
        <pt x="630" y="93" on="0"/>
        <pt x="660" y="74" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          65 72 73
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            60
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            60 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          66 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          71
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrTeTse" xMin="30" yMin="-316" xMax="1746" yMax="1356">
      <contour>
        <pt x="242" y="0" on="1"/>
        <pt x="242" y="74" on="1"/>
        <pt x="280" y="89" on="0"/>
        <pt x="379" y="122" on="0"/>
        <pt x="430" y="130" on="1"/>
        <pt x="430" y="1240" on="1"/>
        <pt x="270" y="1240" on="1"/>
        <pt x="154" y="948" on="1"/>
        <pt x="73" y="948" on="1"/>
        <pt x="66" y="988" on="0"/>
        <pt x="51" y="1091" on="0"/>
        <pt x="39" y="1201" on="0"/>
        <pt x="30" y="1310" on="0"/>
        <pt x="30" y="1356" on="1"/>
        <pt x="1078" y="1356" on="1"/>
        <pt x="1078" y="1309" on="0"/>
        <pt x="1070" y="1200" on="0"/>
        <pt x="1058" y="1092" on="0"/>
        <pt x="1043" y="989" on="0"/>
        <pt x="1036" y="948" on="1"/>
        <pt x="955" y="948" on="1"/>
        <pt x="846" y="1240" on="1"/>
        <pt x="714" y="1240" on="1"/>
        <pt x="714" y="126" on="1"/>
        <pt x="1252" y="126" on="1"/>
        <pt x="1252" y="1225" on="1"/>
        <pt x="1188" y="1243" on="0"/>
        <pt x="1148" y="1282" on="1"/>
        <pt x="1148" y="1356" on="1"/>
        <pt x="1696" y="1356" on="1"/>
        <pt x="1696" y="1282" on="1"/>
        <pt x="1659" y="1259" on="0"/>
        <pt x="1579" y="1234" on="0"/>
        <pt x="1537" y="1225" on="1"/>
        <pt x="1537" y="126" on="1"/>
        <pt x="1746" y="126" on="1"/>
        <pt x="1744" y="76" on="0"/>
        <pt x="1736" y="-43" on="0"/>
        <pt x="1722" y="-163" on="0"/>
        <pt x="1705" y="-274" on="0"/>
        <pt x="1694" y="-316" on="1"/>
        <pt x="1618" y="-316" on="1"/>
        <pt x="1513" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          21 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          7 5 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrTedesc" xMin="65" yMin="-316" xMax="1301" yMax="1356">
      <contour>
        <pt x="349" y="74" on="1"/>
        <pt x="388" y="89" on="0"/>
        <pt x="485" y="122" on="0"/>
        <pt x="536" y="130" on="1"/>
        <pt x="536" y="1229" on="1"/>
        <pt x="319" y="1229" on="1"/>
        <pt x="301" y="1170" on="0"/>
        <pt x="284" y="1116" on="1"/>
        <pt x="269" y="1070" on="0"/>
        <pt x="237" y="976" on="0"/>
        <pt x="226" y="948" on="1"/>
        <pt x="144" y="948" on="1"/>
        <pt x="131" y="987" on="0"/>
        <pt x="105" y="1091" on="0"/>
        <pt x="84" y="1201" on="0"/>
        <pt x="68" y="1311" on="0"/>
        <pt x="65" y="1356" on="1"/>
        <pt x="1301" y="1356" on="1"/>
        <pt x="1296" y="1308" on="0"/>
        <pt x="1280" y="1201" on="0"/>
        <pt x="1259" y="1094" on="0"/>
        <pt x="1234" y="992" on="0"/>
        <pt x="1220" y="948" on="1"/>
        <pt x="1138" y="948" on="1"/>
        <pt x="1135" y="954" on="0"/>
        <pt x="1124" y="984" on="0"/>
        <pt x="1110" y="1025" on="0"/>
        <pt x="1094" y="1075" on="0"/>
        <pt x="1086" y="1100" on="1"/>
        <pt x="1068" y="1158" on="0"/>
        <pt x="1045" y="1229" on="1"/>
        <pt x="827" y="1229" on="1"/>
        <pt x="827" y="130" on="1"/>
        <pt x="843" y="128" on="0"/>
        <pt x="876" y="128" on="0"/>
        <pt x="891" y="128" on="1"/>
        <pt x="1050" y="128" on="1"/>
        <pt x="1048" y="77" on="0"/>
        <pt x="1039" y="-42" on="0"/>
        <pt x="1025" y="-161" on="0"/>
        <pt x="1009" y="-272" on="0"/>
        <pt x="1000" y="-316" on="1"/>
        <pt x="924" y="-316" on="1"/>
        <pt x="819" y="0" on="1"/>
        <pt x="349" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          23 30 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrUacute" xMin="58" yMin="-9" xMax="1485" yMax="1751">
      <component glyphName="afii10037" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="545" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrUdblacute" xMin="58" yMin="-9" xMax="1485" yMax="1732">
      <component glyphName="afii10037" x="0" y="0" flags="0x204"/>
      <component glyphName="Hungarumlaut" x="424" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrUdieresis" xMin="58" yMin="-9" xMax="1485" yMax="1720">
      <component glyphName="afii10037" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="293" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrUmacron" xMin="58" yMin="-9" xMax="1485" yMax="1654">
      <component glyphName="afii10037" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="394" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYacyrbreve" xMin="50" yMin="0" xMax="1409" yMax="1747">
      <component glyphName="afii10049" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="278" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          71
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYamacron" xMin="50" yMin="0" xMax="1409" yMax="1654">
      <component glyphName="afii10049" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="404" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          71
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYerucyrbreve" xMin="80" yMin="-6" xMax="1931" yMax="1747">
      <component glyphName="afii10045" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="463" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          76
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYerudieresis" xMin="80" yMin="-6" xMax="1931" yMax="1720">
      <component glyphName="afii10045" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="464" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          85
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          88
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYerumacron" xMin="80" yMin="-6" xMax="1931" yMax="1654">
      <component glyphName="afii10045" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="551" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          76
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYucyrbreve" xMin="88" yMin="-24" xMax="2202" yMax="1747">
      <component glyphName="afii10048" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="652" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrYumacron" xMin="88" yMin="-24" xMax="2202" yMax="1654">
      <component glyphName="afii10048" x="0" y="0" flags="0x204"/>
      <component glyphName="Macron" x="798" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZecaron" xMin="52" yMin="-24" xMax="1019" yMax="1757">
      <component glyphName="afii10025" x="0" y="0" flags="0x204"/>
      <component glyphName="Caron" x="78" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZedieresis" xMin="52" yMin="-24" xMax="1019" yMax="1720">
      <component glyphName="afii10025" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="-23" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          84
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          87
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZetail" xMin="52" yMin="-388" xMax="1019" yMax="1379">
      <contour>
        <pt x="535" y="-388" on="1"/>
        <pt x="450" y="-388" on="1"/>
        <pt x="419" y="-296" on="0"/>
        <pt x="376" y="-110" on="0"/>
        <pt x="360" y="-19" on="1"/>
        <pt x="268" y="-11" on="0"/>
        <pt x="104" y="28" on="0"/>
        <pt x="52" y="52" on="1"/>
        <pt x="52" y="83" on="0"/>
        <pt x="64" y="172" on="0"/>
        <pt x="84" y="268" on="0"/>
        <pt x="109" y="363" on="0"/>
        <pt x="122" y="401" on="1"/>
        <pt x="203" y="401" on="1"/>
        <pt x="280" y="126" on="1"/>
        <pt x="318" y="112" on="0"/>
        <pt x="389" y="103" on="0"/>
        <pt x="427" y="103" on="1"/>
        <pt x="556" y="103" on="0"/>
        <pt x="632" y="176" on="1"/>
        <pt x="709" y="250" on="0"/>
        <pt x="709" y="375" on="1"/>
        <pt x="709" y="513" on="0"/>
        <pt x="641" y="570" on="1"/>
        <pt x="574" y="628" on="0"/>
        <pt x="460" y="628" on="1"/>
        <pt x="310" y="602" on="1"/>
        <pt x="301" y="637" on="0"/>
        <pt x="297" y="726" on="0"/>
        <pt x="308" y="763" on="1"/>
        <pt x="371" y="763" on="1"/>
        <pt x="387" y="762" on="0"/>
        <pt x="427" y="763" on="0"/>
        <pt x="468" y="765" on="0"/>
        <pt x="507" y="769" on="0"/>
        <pt x="522" y="771" on="1"/>
        <pt x="597" y="802" on="0"/>
        <pt x="675" y="920" on="0"/>
        <pt x="675" y="1011" on="1"/>
        <pt x="675" y="1126" on="0"/>
        <pt x="561" y="1253" on="0"/>
        <pt x="452" y="1253" on="1"/>
        <pt x="406" y="1253" on="0"/>
        <pt x="330" y="1232" on="0"/>
        <pt x="317" y="1216" on="1"/>
        <pt x="222" y="970" on="1"/>
        <pt x="140" y="970" on="1"/>
        <pt x="133" y="998" on="0"/>
        <pt x="118" y="1075" on="0"/>
        <pt x="105" y="1162" on="0"/>
        <pt x="96" y="1253" on="0"/>
        <pt x="96" y="1295" on="1"/>
        <pt x="132" y="1320" on="0"/>
        <pt x="230" y="1353" on="0"/>
        <pt x="334" y="1372" on="0"/>
        <pt x="435" y="1379" on="0"/>
        <pt x="475" y="1379" on="1"/>
        <pt x="569" y="1379" on="0"/>
        <pt x="749" y="1351" on="0"/>
        <pt x="889" y="1277" on="0"/>
        <pt x="975" y="1148" on="0"/>
        <pt x="975" y="1046" on="1"/>
        <pt x="975" y="948" on="0"/>
        <pt x="910" y="857" on="1"/>
        <pt x="845" y="767" on="0"/>
        <pt x="713" y="726" on="1"/>
        <pt x="713" y="719" on="1"/>
        <pt x="774" y="709" on="0"/>
        <pt x="885" y="659" on="0"/>
        <pt x="969" y="576" on="0"/>
        <pt x="1019" y="461" on="0"/>
        <pt x="1019" y="386" on="1"/>
        <pt x="1019" y="300" on="0"/>
        <pt x="964" y="166" on="0"/>
        <pt x="861" y="67" on="0"/>
        <pt x="715" y="3" on="0"/>
        <pt x="624" y="-11" on="1"/>
        <pt x="611" y="-103" on="0"/>
        <pt x="561" y="-300" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          17 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 17 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          30 56 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          45 41 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          66 30 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          76
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZetail.alt" xMin="52" yMin="-453" xMax="1019" yMax="1379">
      <contour>
        <pt x="506" y="-153" on="1"/>
        <pt x="495" y="-115" on="0"/>
        <pt x="447" y="-48" on="0"/>
        <pt x="412" y="-23" on="1"/>
        <pt x="361" y="-21" on="0"/>
        <pt x="258" y="-7" on="0"/>
        <pt x="163" y="13" on="0"/>
        <pt x="82" y="38" on="0"/>
        <pt x="52" y="52" on="1"/>
        <pt x="52" y="83" on="0"/>
        <pt x="64" y="172" on="0"/>
        <pt x="84" y="268" on="0"/>
        <pt x="109" y="363" on="0"/>
        <pt x="122" y="401" on="1"/>
        <pt x="203" y="401" on="1"/>
        <pt x="280" y="126" on="1"/>
        <pt x="314" y="111" on="0"/>
        <pt x="385" y="103" on="0"/>
        <pt x="427" y="103" on="1"/>
        <pt x="556" y="103" on="0"/>
        <pt x="632" y="176" on="1"/>
        <pt x="709" y="250" on="0"/>
        <pt x="709" y="375" on="1"/>
        <pt x="709" y="513" on="0"/>
        <pt x="641" y="570" on="1"/>
        <pt x="574" y="628" on="0"/>
        <pt x="460" y="628" on="1"/>
        <pt x="310" y="602" on="1"/>
        <pt x="301" y="637" on="0"/>
        <pt x="297" y="726" on="0"/>
        <pt x="308" y="763" on="1"/>
        <pt x="371" y="763" on="1"/>
        <pt x="387" y="762" on="0"/>
        <pt x="427" y="763" on="0"/>
        <pt x="468" y="765" on="0"/>
        <pt x="507" y="769" on="0"/>
        <pt x="522" y="771" on="1"/>
        <pt x="597" y="802" on="0"/>
        <pt x="675" y="920" on="0"/>
        <pt x="675" y="1011" on="1"/>
        <pt x="675" y="1126" on="0"/>
        <pt x="557" y="1253" on="0"/>
        <pt x="448" y="1253" on="1"/>
        <pt x="425" y="1253" on="0"/>
        <pt x="382" y="1245" on="0"/>
        <pt x="347" y="1234" on="0"/>
        <pt x="322" y="1221" on="0"/>
        <pt x="317" y="1216" on="1"/>
        <pt x="222" y="970" on="1"/>
        <pt x="140" y="970" on="1"/>
        <pt x="133" y="998" on="0"/>
        <pt x="118" y="1075" on="0"/>
        <pt x="105" y="1162" on="0"/>
        <pt x="96" y="1253" on="0"/>
        <pt x="96" y="1295" on="1"/>
        <pt x="132" y="1320" on="0"/>
        <pt x="229" y="1353" on="0"/>
        <pt x="331" y="1372" on="0"/>
        <pt x="431" y="1379" on="0"/>
        <pt x="471" y="1379" on="1"/>
        <pt x="565" y="1379" on="0"/>
        <pt x="746" y="1351" on="0"/>
        <pt x="888" y="1277" on="0"/>
        <pt x="975" y="1148" on="0"/>
        <pt x="975" y="1046" on="1"/>
        <pt x="975" y="948" on="0"/>
        <pt x="910" y="857" on="1"/>
        <pt x="845" y="767" on="0"/>
        <pt x="713" y="726" on="1"/>
        <pt x="713" y="719" on="1"/>
        <pt x="774" y="709" on="0"/>
        <pt x="885" y="659" on="0"/>
        <pt x="969" y="576" on="0"/>
        <pt x="1019" y="461" on="0"/>
        <pt x="1019" y="386" on="1"/>
        <pt x="1019" y="293" on="0"/>
        <pt x="954" y="150" on="0"/>
        <pt x="834" y="49" on="0"/>
        <pt x="663" y="-10" on="0"/>
        <pt x="558" y="-19" on="1"/>
        <pt x="585" y="-40" on="0"/>
        <pt x="630" y="-88" on="0"/>
        <pt x="664" y="-144" on="0"/>
        <pt x="683" y="-211" on="0"/>
        <pt x="683" y="-250" on="1"/>
        <pt x="683" y="-348" on="0"/>
        <pt x="628" y="-400" on="1"/>
        <pt x="573" y="-453" on="0"/>
        <pt x="495" y="-453" on="1"/>
        <pt x="413" y="-453" on="0"/>
        <pt x="317" y="-366" on="0"/>
        <pt x="317" y="-296" on="1"/>
        <pt x="317" y="-262" on="0"/>
        <pt x="340" y="-208" on="0"/>
        <pt x="379" y="-170" on="0"/>
        <pt x="433" y="-151" on="0"/>
        <pt x="464" y="-151" on="1"/>
        <pt x="478" y="-151" on="0"/>
        <pt x="497" y="-153" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          88
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            59
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            59 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 59 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          26 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 26 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          59
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          48 31 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          69 31 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          79
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          96 88 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          96
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZhedesc" xMin="20" yMin="-316" xMax="2005" yMax="1356">
      <contour>
        <pt x="854" y="1225" on="1"/>
        <pt x="815" y="1236" on="0"/>
        <pt x="752" y="1266" on="0"/>
        <pt x="728" y="1282" on="1"/>
        <pt x="728" y="1356" on="1"/>
        <pt x="1232" y="1356" on="1"/>
        <pt x="1232" y="1282" on="1"/>
        <pt x="1193" y="1254" on="0"/>
        <pt x="1118" y="1225" on="1"/>
        <pt x="1118" y="732" on="1"/>
        <pt x="1245" y="761" on="1"/>
        <pt x="1524" y="1225" on="1"/>
        <pt x="1485" y="1236" on="0"/>
        <pt x="1413" y="1266" on="0"/>
        <pt x="1382" y="1282" on="1"/>
        <pt x="1382" y="1356" on="1"/>
        <pt x="1896" y="1356" on="1"/>
        <pt x="1896" y="1282" on="1"/>
        <pt x="1866" y="1266" on="0"/>
        <pt x="1795" y="1236" on="0"/>
        <pt x="1757" y="1225" on="1"/>
        <pt x="1408" y="752" on="1"/>
        <pt x="1456" y="687" on="0"/>
        <pt x="1560" y="532" on="0"/>
        <pt x="1674" y="367" on="0"/>
        <pt x="1798" y="201" on="0"/>
        <pt x="1866" y="126" on="1"/>
        <pt x="2005" y="126" on="1"/>
        <pt x="2003" y="76" on="0"/>
        <pt x="1995" y="-43" on="0"/>
        <pt x="1982" y="-163" on="0"/>
        <pt x="1964" y="-274" on="0"/>
        <pt x="1952" y="-316" on="1"/>
        <pt x="1877" y="-316" on="1"/>
        <pt x="1772" y="0" on="1"/>
        <pt x="1632" y="0" on="1"/>
        <pt x="1549" y="66" on="1"/>
        <pt x="1504" y="125" on="0"/>
        <pt x="1421" y="262" on="0"/>
        <pt x="1340" y="409" on="0"/>
        <pt x="1260" y="563" on="0"/>
        <pt x="1218" y="639" on="1"/>
        <pt x="1118" y="639" on="1"/>
        <pt x="1118" y="130" on="1"/>
        <pt x="1151" y="120" on="0"/>
        <pt x="1212" y="91" on="0"/>
        <pt x="1241" y="74" on="1"/>
        <pt x="1241" y="0" on="1"/>
        <pt x="719" y="0" on="1"/>
        <pt x="719" y="74" on="1"/>
        <pt x="745" y="91" on="0"/>
        <pt x="812" y="120" on="0"/>
        <pt x="854" y="130" on="1"/>
        <pt x="854" y="656" on="1"/>
        <pt x="747" y="628" on="1"/>
        <pt x="706" y="549" on="0"/>
        <pt x="635" y="402" on="0"/>
        <pt x="597" y="333" on="1"/>
        <pt x="560" y="264" on="0"/>
        <pt x="481" y="135" on="0"/>
        <pt x="430" y="66" on="1"/>
        <pt x="347" y="0" on="1"/>
        <pt x="20" y="0" on="1"/>
        <pt x="20" y="66" on="1"/>
        <pt x="99" y="113" on="1"/>
        <pt x="169" y="190" on="0"/>
        <pt x="296" y="356" on="0"/>
        <pt x="410" y="519" on="0"/>
        <pt x="510" y="670" on="0"/>
        <pt x="554" y="732" on="1"/>
        <pt x="207" y="1225" on="1"/>
        <pt x="168" y="1236" on="0"/>
        <pt x="102" y="1266" on="0"/>
        <pt x="78" y="1282" on="1"/>
        <pt x="78" y="1356" on="1"/>
        <pt x="588" y="1356" on="1"/>
        <pt x="588" y="1282" on="1"/>
        <pt x="564" y="1266" on="0"/>
        <pt x="494" y="1236" on="0"/>
        <pt x="455" y="1225" on="1"/>
        <pt x="734" y="750" on="1"/>
        <pt x="854" y="750" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 82 83
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            74
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            74 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            47 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            61
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            61 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          80 4 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          80
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          47 80 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          80
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 10 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          61
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          63 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          69 80 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          73
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          76
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrZhedieresis" xMin="26" yMin="0" xMax="1999" yMax="1720">
      <component glyphName="afii10024" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="471" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          85
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          88
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyracyrbreve" xMin="44" yMin="-23" xMax="1000" yMax="1444">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="4" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyradieresis" xMin="44" yMin="-23" xMax="1000" yMax="1422">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="156" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="cyrae" xMin="44" yMin="-23" xMax="1440" yMax="958">
      <contour>
        <pt x="781" y="869" on="1"/>
        <pt x="833" y="921" on="0"/>
        <pt x="972" y="958" on="0"/>
        <pt x="1047" y="958" on="1"/>
        <pt x="1095" y="958" on="0"/>
        <pt x="1173" y="948" on="0"/>
        <pt x="1240" y="925" on="0"/>
        <pt x="1300" y="890" on="0"/>
        <pt x="1329" y="865" on="1"/>
        <pt x="1354" y="843" on="0"/>
        <pt x="1395" y="782" on="0"/>
        <pt x="1425" y="708" on="0"/>
        <pt x="1440" y="625" on="0"/>
        <pt x="1440" y="581" on="1"/>
        <pt x="1440" y="521" on="0"/>
        <pt x="1428" y="451" on="1"/>
        <pt x="872" y="451" on="1"/>
        <pt x="873" y="304" on="0"/>
        <pt x="949" y="215" on="1"/>
        <pt x="986" y="171" on="0"/>
        <pt x="1077" y="127" on="0"/>
        <pt x="1148" y="127" on="1"/>
        <pt x="1212" y="127" on="0"/>
        <pt x="1277" y="145" on="1"/>
        <pt x="1344" y="165" on="0"/>
        <pt x="1380" y="194" on="1"/>
        <pt x="1416" y="157" on="1"/>
        <pt x="1400" y="125" on="0"/>
        <pt x="1338" y="60" on="0"/>
        <pt x="1246" y="9" on="0"/>
        <pt x="1125" y="-23" on="0"/>
        <pt x="1051" y="-23" on="1"/>
        <pt x="927" y="-23" on="0"/>
        <pt x="723" y="70" on="0"/>
        <pt x="657" y="177" on="1"/>
        <pt x="639" y="132" on="0"/>
        <pt x="577" y="58" on="0"/>
        <pt x="493" y="6" on="0"/>
        <pt x="391" y="-23" on="0"/>
        <pt x="333" y="-23" on="1"/>
        <pt x="271" y="-23" on="0"/>
        <pt x="166" y="14" on="0"/>
        <pt x="88" y="82" on="0"/>
        <pt x="44" y="178" on="0"/>
        <pt x="44" y="238" on="1"/>
        <pt x="44" y="321" on="0"/>
        <pt x="110" y="432" on="0"/>
        <pt x="247" y="501" on="0"/>
        <pt x="460" y="535" on="0"/>
        <pt x="607" y="541" on="1"/>
        <pt x="609" y="569" on="0"/>
        <pt x="612" y="619" on="0"/>
        <pt x="612" y="642" on="1"/>
        <pt x="612" y="658" on="0"/>
        <pt x="611" y="703" on="0"/>
        <pt x="604" y="749" on="0"/>
        <pt x="591" y="792" on="0"/>
        <pt x="579" y="808" on="1"/>
        <pt x="548" y="851" on="0"/>
        <pt x="477" y="851" on="1"/>
        <pt x="448" y="851" on="0"/>
        <pt x="395" y="840" on="0"/>
        <pt x="371" y="832" on="1"/>
        <pt x="282" y="609" on="1"/>
        <pt x="200" y="609" on="1"/>
        <pt x="187" y="630" on="0"/>
        <pt x="160" y="688" on="0"/>
        <pt x="136" y="753" on="0"/>
        <pt x="117" y="821" on="0"/>
        <pt x="113" y="853" on="1"/>
        <pt x="142" y="873" on="0"/>
        <pt x="239" y="915" on="0"/>
        <pt x="296" y="929" on="1"/>
        <pt x="353" y="943" on="0"/>
        <pt x="468" y="958" on="0"/>
        <pt x="531" y="958" on="1"/>
        <pt x="563" y="958" on="0"/>
        <pt x="633" y="953" on="0"/>
        <pt x="700" y="935" on="0"/>
        <pt x="760" y="900" on="0"/>
      </contour>
      <contour>
        <pt x="449" y="127" on="1"/>
        <pt x="489" y="127" on="0"/>
        <pt x="546" y="158" on="0"/>
        <pt x="584" y="201" on="0"/>
        <pt x="604" y="247" on="0"/>
        <pt x="607" y="262" on="1"/>
        <pt x="607" y="453" on="1"/>
        <pt x="529" y="452" on="0"/>
        <pt x="422" y="432" on="0"/>
        <pt x="354" y="390" on="0"/>
        <pt x="324" y="324" on="0"/>
        <pt x="324" y="277" on="1"/>
        <pt x="324" y="205" on="0"/>
        <pt x="392" y="127" on="0"/>
      </contour>
      <contour>
        <pt x="1040" y="851" on="1"/>
        <pt x="1007" y="851" on="0"/>
        <pt x="948" y="819" on="0"/>
        <pt x="904" y="747" on="0"/>
        <pt x="878" y="631" on="0"/>
        <pt x="878" y="548" on="1"/>
        <pt x="1161" y="548" on="1"/>
        <pt x="1164" y="569" on="0"/>
        <pt x="1166" y="618" on="0"/>
        <pt x="1166" y="638" on="1"/>
        <pt x="1167" y="743" on="0"/>
        <pt x="1103" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            75
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            75 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          99 3 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          99
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          15 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 15 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          99
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          75
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 59 99
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 21 values pushed */
          9 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 10
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          80
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          86
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          59
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          94
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyramacron" xMin="44" yMin="-23" xMax="1000" yMax="1334">
      <component glyphName="a" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-8" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrbreve" xMin="144" yMin="1137" xMax="872" yMax="1444">
      <contour>
        <pt x="510" y="1137" on="1"/>
        <pt x="318" y="1137" on="0"/>
        <pt x="144" y="1276" on="0"/>
        <pt x="144" y="1392" on="1"/>
        <pt x="172" y="1416" on="0"/>
        <pt x="276" y="1441" on="0"/>
        <pt x="332" y="1444" on="1"/>
        <pt x="398" y="1420" on="1"/>
        <pt x="398" y="1247" on="1"/>
        <pt x="446" y="1226" on="0"/>
        <pt x="512" y="1226" on="1"/>
        <pt x="531" y="1226" on="0"/>
        <pt x="599" y="1233" on="0"/>
        <pt x="627" y="1241" on="1"/>
        <pt x="627" y="1420" on="1"/>
        <pt x="692" y="1444" on="1"/>
        <pt x="745" y="1441" on="0"/>
        <pt x="845" y="1418" on="0"/>
        <pt x="872" y="1392" on="1"/>
        <pt x="872" y="1276" on="0"/>
        <pt x="697" y="1137" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          223 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          144 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 15 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          80 15 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 16
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrchedesc" xMin="30" yMin="-277" xMax="1140" yMax="935">
      <contour>
        <pt x="553" y="73" on="1"/>
        <pt x="630" y="105" on="0"/>
        <pt x="703" y="118" on="1"/>
        <pt x="703" y="411" on="1"/>
        <pt x="657" y="361" on="0"/>
        <pt x="512" y="299" on="0"/>
        <pt x="427" y="299" on="1"/>
        <pt x="297" y="299" on="0"/>
        <pt x="149" y="441" on="0"/>
        <pt x="149" y="562" on="1"/>
        <pt x="149" y="817" on="1"/>
        <pt x="77" y="831" on="0"/>
        <pt x="30" y="863" on="1"/>
        <pt x="30" y="935" on="1"/>
        <pt x="516" y="935" on="1"/>
        <pt x="516" y="863" on="1"/>
        <pt x="478" y="832" on="0"/>
        <pt x="418" y="817" on="1"/>
        <pt x="418" y="611" on="1"/>
        <pt x="418" y="531" on="0"/>
        <pt x="472" y="440" on="0"/>
        <pt x="539" y="440" on="1"/>
        <pt x="588" y="440" on="0"/>
        <pt x="670" y="469" on="0"/>
        <pt x="703" y="491" on="1"/>
        <pt x="703" y="817" on="1"/>
        <pt x="672" y="823" on="0"/>
        <pt x="628" y="846" on="0"/>
        <pt x="603" y="863" on="1"/>
        <pt x="603" y="935" on="1"/>
        <pt x="1095" y="935" on="1"/>
        <pt x="1095" y="863" on="1"/>
        <pt x="1044" y="831" on="0"/>
        <pt x="972" y="817" on="1"/>
        <pt x="972" y="107" on="1"/>
        <pt x="1140" y="107" on="1"/>
        <pt x="1136" y="16" on="0"/>
        <pt x="1112" y="-189" on="0"/>
        <pt x="1102" y="-277" on="1"/>
        <pt x="1029" y="-277" on="1"/>
        <pt x="929" y="0" on="1"/>
        <pt x="553" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 29 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrchedescleft" xMin="37" yMin="-277" xMax="1107" yMax="935">
      <contour>
        <pt x="37" y="935" on="1"/>
        <pt x="528" y="935" on="1"/>
        <pt x="528" y="863" on="1"/>
        <pt x="490" y="832" on="0"/>
        <pt x="430" y="817" on="1"/>
        <pt x="430" y="611" on="1"/>
        <pt x="430" y="531" on="0"/>
        <pt x="484" y="440" on="0"/>
        <pt x="551" y="440" on="1"/>
        <pt x="600" y="440" on="0"/>
        <pt x="682" y="469" on="0"/>
        <pt x="715" y="491" on="1"/>
        <pt x="715" y="817" on="1"/>
        <pt x="684" y="823" on="0"/>
        <pt x="640" y="846" on="0"/>
        <pt x="615" y="863" on="1"/>
        <pt x="615" y="935" on="1"/>
        <pt x="1107" y="935" on="1"/>
        <pt x="1107" y="863" on="1"/>
        <pt x="1056" y="831" on="0"/>
        <pt x="984" y="817" on="1"/>
        <pt x="984" y="118" on="1"/>
        <pt x="1021" y="109" on="0"/>
        <pt x="1081" y="88" on="0"/>
        <pt x="1107" y="73" on="1"/>
        <pt x="1107" y="0" on="1"/>
        <pt x="708" y="0" on="1"/>
        <pt x="608" y="-277" on="1"/>
        <pt x="535" y="-277" on="1"/>
        <pt x="526" y="-189" on="0"/>
        <pt x="501" y="16" on="0"/>
        <pt x="497" y="107" on="1"/>
        <pt x="715" y="107" on="1"/>
        <pt x="715" y="411" on="1"/>
        <pt x="669" y="361" on="0"/>
        <pt x="524" y="299" on="0"/>
        <pt x="439" y="299" on="1"/>
        <pt x="309" y="299" on="0"/>
        <pt x="161" y="441" on="0"/>
        <pt x="161" y="562" on="1"/>
        <pt x="161" y="817" on="1"/>
        <pt x="89" y="831" on="0"/>
        <pt x="37" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 0 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrchedieresis" xMin="37" yMin="0" xMax="1107" yMax="1422">
      <component glyphName="afii10089" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="252" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrchehook" xMin="10" yMin="-396" xMax="1155" yMax="935">
      <contour>
        <pt x="762" y="414" on="1"/>
        <pt x="697" y="352" on="0"/>
        <pt x="541" y="299" on="0"/>
        <pt x="456" y="299" on="1"/>
        <pt x="393" y="299" on="0"/>
        <pt x="279" y="322" on="0"/>
        <pt x="231" y="354" on="1"/>
        <pt x="186" y="384" on="0"/>
        <pt x="132" y="497" on="0"/>
        <pt x="132" y="572" on="1"/>
        <pt x="132" y="817" on="1"/>
        <pt x="97" y="824" on="0"/>
        <pt x="36" y="847" on="0"/>
        <pt x="10" y="863" on="1"/>
        <pt x="10" y="935" on="1"/>
        <pt x="505" y="935" on="1"/>
        <pt x="505" y="863" on="1"/>
        <pt x="486" y="847" on="0"/>
        <pt x="433" y="825" on="0"/>
        <pt x="402" y="817" on="1"/>
        <pt x="402" y="601" on="1"/>
        <pt x="402" y="551" on="0"/>
        <pt x="428" y="489" on="0"/>
        <pt x="473" y="453" on="0"/>
        <pt x="533" y="440" on="0"/>
        <pt x="566" y="440" on="1"/>
        <pt x="594" y="440" on="0"/>
        <pt x="650" y="450" on="0"/>
        <pt x="701" y="467" on="0"/>
        <pt x="745" y="488" on="0"/>
        <pt x="762" y="499" on="1"/>
        <pt x="762" y="817" on="1"/>
        <pt x="732" y="823" on="0"/>
        <pt x="684" y="846" on="0"/>
        <pt x="658" y="863" on="1"/>
        <pt x="658" y="935" on="1"/>
        <pt x="1155" y="935" on="1"/>
        <pt x="1155" y="863" on="1"/>
        <pt x="1129" y="847" on="0"/>
        <pt x="1068" y="824" on="0"/>
        <pt x="1031" y="817" on="1"/>
        <pt x="1031" y="0" on="1"/>
        <pt x="1031" y="-117" on="0"/>
        <pt x="977" y="-270" on="0"/>
        <pt x="869" y="-360" on="0"/>
        <pt x="704" y="-396" on="0"/>
        <pt x="593" y="-396" on="1"/>
        <pt x="584" y="-311" on="1"/>
        <pt x="635" y="-298" on="0"/>
        <pt x="703" y="-256" on="0"/>
        <pt x="745" y="-184" on="0"/>
        <pt x="762" y="-77" on="0"/>
        <pt x="762" y="2" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          3 35 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrchevertbar" xMin="25" yMin="0" xMax="1111" yMax="935">
      <contour>
        <pt x="509" y="306" on="1"/>
        <pt x="501" y="304" on="0"/>
        <pt x="490" y="302" on="0"/>
        <pt x="479" y="300" on="0"/>
        <pt x="465" y="299" on="0"/>
        <pt x="454" y="299" on="1"/>
        <pt x="378" y="299" on="0"/>
        <pt x="284" y="319" on="0"/>
        <pt x="247" y="341" on="1"/>
        <pt x="187" y="377" on="0"/>
        <pt x="133" y="499" on="0"/>
        <pt x="133" y="572" on="1"/>
        <pt x="133" y="817" on="1"/>
        <pt x="98" y="824" on="0"/>
        <pt x="51" y="847" on="0"/>
        <pt x="25" y="863" on="1"/>
        <pt x="25" y="935" on="1"/>
        <pt x="497" y="935" on="1"/>
        <pt x="497" y="863" on="1"/>
        <pt x="460" y="832" on="0"/>
        <pt x="400" y="817" on="1"/>
        <pt x="400" y="591" on="1"/>
        <pt x="400" y="558" on="0"/>
        <pt x="408" y="504" on="0"/>
        <pt x="431" y="465" on="0"/>
        <pt x="474" y="444" on="0"/>
        <pt x="509" y="444" on="1"/>
        <pt x="509" y="731" on="1"/>
        <pt x="619" y="731" on="1"/>
        <pt x="619" y="450" on="1"/>
        <pt x="648" y="455" on="0"/>
        <pt x="696" y="474" on="0"/>
        <pt x="722" y="491" on="1"/>
        <pt x="722" y="817" on="1"/>
        <pt x="692" y="823" on="0"/>
        <pt x="647" y="846" on="0"/>
        <pt x="623" y="863" on="1"/>
        <pt x="623" y="935" on="1"/>
        <pt x="1111" y="935" on="1"/>
        <pt x="1111" y="863" on="1"/>
        <pt x="1086" y="847" on="0"/>
        <pt x="1028" y="824" on="0"/>
        <pt x="991" y="817" on="1"/>
        <pt x="991" y="118" on="1"/>
        <pt x="1029" y="109" on="0"/>
        <pt x="1086" y="88" on="0"/>
        <pt x="1111" y="73" on="1"/>
        <pt x="1111" y="0" on="1"/>
        <pt x="572" y="0" on="1"/>
        <pt x="572" y="73" on="1"/>
        <pt x="648" y="104" on="0"/>
        <pt x="722" y="118" on="1"/>
        <pt x="722" y="411" on="1"/>
        <pt x="716" y="403" on="0"/>
        <pt x="692" y="380" on="0"/>
        <pt x="663" y="357" on="0"/>
        <pt x="632" y="337" on="0"/>
        <pt x="619" y="332" on="1"/>
        <pt x="619" y="182" on="1"/>
        <pt x="509" y="182" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          48 60 61
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            37
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            37 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            47 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 37 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          28 26 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          59 5 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrdze" xMin="44" yMin="-396" xMax="872" yMax="935">
      <contour>
        <pt x="500" y="355" on="1"/>
        <pt x="591" y="355" on="0"/>
        <pt x="731" y="303" on="0"/>
        <pt x="825" y="210" on="0"/>
        <pt x="872" y="82" on="0"/>
        <pt x="872" y="8" on="1"/>
        <pt x="872" y="-92" on="0"/>
        <pt x="805" y="-243" on="0"/>
        <pt x="681" y="-344" on="0"/>
        <pt x="507" y="-396" on="0"/>
        <pt x="400" y="-396" on="1"/>
        <pt x="286" y="-396" on="0"/>
        <pt x="97" y="-333" on="0"/>
        <pt x="44" y="-284" on="1"/>
        <pt x="94" y="-109" on="1"/>
        <pt x="148" y="-109" on="1"/>
        <pt x="177" y="-134" on="0"/>
        <pt x="244" y="-225" on="0"/>
        <pt x="270" y="-260" on="1"/>
        <pt x="288" y="-268" on="0"/>
        <pt x="333" y="-275" on="0"/>
        <pt x="364" y="-275" on="1"/>
        <pt x="421" y="-275" on="0"/>
        <pt x="504" y="-234" on="0"/>
        <pt x="560" y="-162" on="0"/>
        <pt x="588" y="-64" on="0"/>
        <pt x="588" y="-8" on="1"/>
        <pt x="588" y="116" on="0"/>
        <pt x="474" y="250" on="0"/>
        <pt x="386" y="255" on="1"/>
        <pt x="264" y="230" on="1"/>
        <pt x="255" y="255" on="0"/>
        <pt x="250" y="335" on="0"/>
        <pt x="262" y="361" on="1"/>
        <pt x="368" y="361" on="1"/>
        <pt x="550" y="679" on="1"/>
        <pt x="605" y="750" on="1"/>
        <pt x="605" y="757" on="1"/>
        <pt x="504" y="747" on="1"/>
        <pt x="252" y="747" on="1"/>
        <pt x="178" y="557" on="1"/>
        <pt x="116" y="557" on="1"/>
        <pt x="104" y="596" on="0"/>
        <pt x="86" y="699" on="0"/>
        <pt x="68" y="805" on="0"/>
        <pt x="59" y="901" on="0"/>
        <pt x="59" y="935" on="1"/>
        <pt x="827" y="935" on="1"/>
        <pt x="827" y="844" on="1"/>
        <pt x="575" y="443" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 50 51
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 46 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 21 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 38 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          48 38 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrecyrbreve" xMin="30" yMin="-23" xMax="841" yMax="1444">
      <component glyphName="afii10095" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="-85" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyredieresis" xMin="30" yMin="-23" xMax="841" yMax="1422">
      <component glyphName="afii10095" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="50" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyredotaccent" xMin="30" yMin="-23" xMax="841" yMax="1431">
      <component glyphName="afii10095" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="63" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyreldesc" xMin="16" yMin="-277" xMax="1172" yMax="935">
      <contour>
        <pt x="602" y="73" on="1"/>
        <pt x="625" y="88" on="0"/>
        <pt x="671" y="110" on="0"/>
        <pt x="705" y="118" on="1"/>
        <pt x="705" y="829" on="1"/>
        <pt x="469" y="829" on="1"/>
        <pt x="467" y="733" on="0"/>
        <pt x="449" y="526" on="0"/>
        <pt x="431" y="426" on="1"/>
        <pt x="411" y="318" on="0"/>
        <pt x="342" y="130" on="0"/>
        <pt x="294" y="64" on="1"/>
        <pt x="256" y="10" on="0"/>
        <pt x="168" y="-34" on="0"/>
        <pt x="132" y="-26" on="1"/>
        <pt x="107" y="-13" on="0"/>
        <pt x="66" y="43" on="0"/>
        <pt x="36" y="109" on="0"/>
        <pt x="18" y="173" on="0"/>
        <pt x="16" y="194" on="1"/>
        <pt x="58" y="259" on="1"/>
        <pt x="235" y="211" on="1"/>
        <pt x="258" y="256" on="0"/>
        <pt x="297" y="376" on="0"/>
        <pt x="310" y="457" on="1"/>
        <pt x="323" y="536" on="0"/>
        <pt x="333" y="706" on="0"/>
        <pt x="334" y="798" on="1"/>
        <pt x="296" y="810" on="0"/>
        <pt x="228" y="844" on="0"/>
        <pt x="202" y="863" on="1"/>
        <pt x="202" y="935" on="1"/>
        <pt x="1097" y="935" on="1"/>
        <pt x="1097" y="863" on="1"/>
        <pt x="1038" y="829" on="0"/>
        <pt x="974" y="817" on="1"/>
        <pt x="974" y="118" on="1"/>
        <pt x="1013" y="107" on="1"/>
        <pt x="1172" y="107" on="1"/>
        <pt x="1171" y="84" on="0"/>
        <pt x="1168" y="31" on="0"/>
        <pt x="1161" y="-53" on="0"/>
        <pt x="1147" y="-180" on="0"/>
        <pt x="1135" y="-277" on="1"/>
        <pt x="1062" y="-277" on="1"/>
        <pt x="961" y="0" on="1"/>
        <pt x="602" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          46 47 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 14 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          21 20 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyreltail" xMin="16" yMin="-277" xMax="1124" yMax="935">
      <contour>
        <pt x="235" y="211" on="1"/>
        <pt x="259" y="256" on="0"/>
        <pt x="294" y="382" on="0"/>
        <pt x="316" y="534" on="0"/>
        <pt x="327" y="706" on="0"/>
        <pt x="329" y="798" on="1"/>
        <pt x="292" y="810" on="0"/>
        <pt x="223" y="844" on="0"/>
        <pt x="196" y="863" on="1"/>
        <pt x="196" y="935" on="1"/>
        <pt x="1062" y="935" on="1"/>
        <pt x="1062" y="863" on="1"/>
        <pt x="1003" y="829" on="0"/>
        <pt x="938" y="817" on="1"/>
        <pt x="938" y="107" on="1"/>
        <pt x="1113" y="107" on="1"/>
        <pt x="1124" y="88" on="1"/>
        <pt x="1113" y="46" on="0"/>
        <pt x="1057" y="-60" on="0"/>
        <pt x="989" y="-163" on="0"/>
        <pt x="917" y="-252" on="0"/>
        <pt x="890" y="-277" on="1"/>
        <pt x="799" y="-277" on="1"/>
        <pt x="857" y="0" on="1"/>
        <pt x="566" y="0" on="1"/>
        <pt x="566" y="73" on="1"/>
        <pt x="589" y="88" on="0"/>
        <pt x="635" y="110" on="0"/>
        <pt x="669" y="118" on="1"/>
        <pt x="669" y="829" on="1"/>
        <pt x="463" y="829" on="1"/>
        <pt x="461" y="730" on="0"/>
        <pt x="443" y="514" on="0"/>
        <pt x="403" y="308" on="0"/>
        <pt x="341" y="128" on="0"/>
        <pt x="296" y="64" on="1"/>
        <pt x="258" y="10" on="0"/>
        <pt x="168" y="-34" on="0"/>
        <pt x="132" y="-26" on="1"/>
        <pt x="108" y="-12" on="0"/>
        <pt x="68" y="44" on="0"/>
        <pt x="38" y="109" on="0"/>
        <pt x="19" y="173" on="0"/>
        <pt x="16" y="194" on="1"/>
        <pt x="60" y="259" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          24 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 9 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 44 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyremacron" xMin="30" yMin="-23" xMax="841" yMax="1334">
      <component glyphName="afii10095" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-104" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyremtail" xMin="22" yMin="-277" xMax="1383" yMax="935">
      <contour>
        <pt x="385" y="0" on="1"/>
        <pt x="22" y="0" on="1"/>
        <pt x="22" y="73" on="1"/>
        <pt x="53" y="88" on="0"/>
        <pt x="104" y="110" on="0"/>
        <pt x="135" y="118" on="1"/>
        <pt x="159" y="798" on="1"/>
        <pt x="120" y="814" on="0"/>
        <pt x="70" y="848" on="0"/>
        <pt x="46" y="863" on="1"/>
        <pt x="46" y="935" on="1"/>
        <pt x="498" y="935" on="1"/>
        <pt x="626" y="495" on="1"/>
        <pt x="658" y="372" on="1"/>
        <pt x="664" y="372" on="1"/>
        <pt x="701" y="497" on="1"/>
        <pt x="844" y="935" on="1"/>
        <pt x="1316" y="935" on="1"/>
        <pt x="1316" y="863" on="1"/>
        <pt x="1292" y="848" on="0"/>
        <pt x="1232" y="825" on="0"/>
        <pt x="1192" y="817" on="1"/>
        <pt x="1219" y="107" on="1"/>
        <pt x="1373" y="107" on="1"/>
        <pt x="1383" y="88" on="1"/>
        <pt x="1373" y="42" on="0"/>
        <pt x="1318" y="-65" on="0"/>
        <pt x="1250" y="-166" on="0"/>
        <pt x="1177" y="-252" on="0"/>
        <pt x="1149" y="-277" on="1"/>
        <pt x="1057" y="-277" on="1"/>
        <pt x="1115" y="0" on="1"/>
        <pt x="843" y="0" on="1"/>
        <pt x="843" y="73" on="1"/>
        <pt x="861" y="82" on="0"/>
        <pt x="913" y="105" on="0"/>
        <pt x="955" y="118" on="1"/>
        <pt x="930" y="771" on="1"/>
        <pt x="915" y="771" on="1"/>
        <pt x="664" y="0" on="1"/>
        <pt x="554" y="0" on="1"/>
        <pt x="302" y="771" on="1"/>
        <pt x="286" y="771" on="1"/>
        <pt x="272" y="118" on="1"/>
        <pt x="337" y="98" on="0"/>
        <pt x="385" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          14 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          37 18 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrendesc" xMin="44" yMin="-277" xMax="1170" yMax="935">
      <contour>
        <pt x="531" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="71" y="88" on="0"/>
        <pt x="129" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="129" y="827" on="0"/>
        <pt x="71" y="848" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="531" y="935" on="1"/>
        <pt x="531" y="863" on="1"/>
        <pt x="509" y="849" on="0"/>
        <pt x="461" y="827" on="0"/>
        <pt x="432" y="817" on="1"/>
        <pt x="432" y="526" on="1"/>
        <pt x="733" y="526" on="1"/>
        <pt x="733" y="817" on="1"/>
        <pt x="706" y="823" on="0"/>
        <pt x="659" y="846" on="0"/>
        <pt x="635" y="863" on="1"/>
        <pt x="635" y="935" on="1"/>
        <pt x="1122" y="935" on="1"/>
        <pt x="1122" y="863" on="1"/>
        <pt x="1097" y="847" on="0"/>
        <pt x="1040" y="824" on="0"/>
        <pt x="1003" y="817" on="1"/>
        <pt x="1003" y="107" on="1"/>
        <pt x="1170" y="107" on="1"/>
        <pt x="1169" y="84" on="0"/>
        <pt x="1164" y="3" on="0"/>
        <pt x="1154" y="-101" on="0"/>
        <pt x="1141" y="-218" on="0"/>
        <pt x="1132" y="-277" on="1"/>
        <pt x="1059" y="-277" on="1"/>
        <pt x="957" y="0" on="1"/>
        <pt x="635" y="0" on="1"/>
        <pt x="635" y="73" on="1"/>
        <pt x="659" y="91" on="0"/>
        <pt x="706" y="113" on="0"/>
        <pt x="733" y="118" on="1"/>
        <pt x="733" y="419" on="1"/>
        <pt x="432" y="419" on="1"/>
        <pt x="432" y="118" on="1"/>
        <pt x="492" y="102" on="0"/>
        <pt x="531" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          21 47 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 16 79 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 16 143 16 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrenge" xMin="44" yMin="0" xMax="1336" yMax="935">
      <contour>
        <pt x="626" y="0" on="1"/>
        <pt x="626" y="73" on="1"/>
        <pt x="650" y="91" on="0"/>
        <pt x="697" y="113" on="0"/>
        <pt x="724" y="118" on="1"/>
        <pt x="724" y="419" on="1"/>
        <pt x="428" y="419" on="1"/>
        <pt x="428" y="118" on="1"/>
        <pt x="459" y="110" on="0"/>
        <pt x="507" y="88" on="0"/>
        <pt x="526" y="73" on="1"/>
        <pt x="526" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="70" y="88" on="0"/>
        <pt x="125" y="109" on="0"/>
        <pt x="159" y="118" on="1"/>
        <pt x="159" y="817" on="1"/>
        <pt x="125" y="827" on="0"/>
        <pt x="70" y="848" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="526" y="935" on="1"/>
        <pt x="526" y="863" on="1"/>
        <pt x="504" y="849" on="0"/>
        <pt x="457" y="827" on="0"/>
        <pt x="428" y="817" on="1"/>
        <pt x="428" y="526" on="1"/>
        <pt x="724" y="526" on="1"/>
        <pt x="724" y="817" on="1"/>
        <pt x="697" y="823" on="0"/>
        <pt x="650" y="846" on="0"/>
        <pt x="626" y="863" on="1"/>
        <pt x="626" y="935" on="1"/>
        <pt x="1336" y="935" on="1"/>
        <pt x="1335" y="900" on="0"/>
        <pt x="1327" y="806" on="0"/>
        <pt x="1314" y="706" on="0"/>
        <pt x="1297" y="608" on="0"/>
        <pt x="1287" y="571" on="1"/>
        <pt x="1210" y="571" on="1"/>
        <pt x="1134" y="829" on="1"/>
        <pt x="990" y="829" on="1"/>
        <pt x="990" y="118" on="1"/>
        <pt x="1044" y="107" on="0"/>
        <pt x="1117" y="85" on="0"/>
        <pt x="1149" y="73" on="1"/>
        <pt x="1149" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            47 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          27 33 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 27 79 27 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          5 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 41 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrenhook" xMin="44" yMin="-396" xMax="1145" yMax="935">
      <contour>
        <pt x="535" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="70" y="88" on="0"/>
        <pt x="129" y="109" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="129" y="827" on="0"/>
        <pt x="70" y="848" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="535" y="935" on="1"/>
        <pt x="535" y="863" on="1"/>
        <pt x="492" y="836" on="0"/>
        <pt x="431" y="817" on="1"/>
        <pt x="431" y="526" on="1"/>
        <pt x="758" y="526" on="1"/>
        <pt x="758" y="817" on="1"/>
        <pt x="703" y="829" on="0"/>
        <pt x="656" y="863" on="1"/>
        <pt x="656" y="935" on="1"/>
        <pt x="1145" y="935" on="1"/>
        <pt x="1145" y="863" on="1"/>
        <pt x="1120" y="847" on="0"/>
        <pt x="1064" y="824" on="0"/>
        <pt x="1027" y="817" on="1"/>
        <pt x="1027" y="0" on="1"/>
        <pt x="1027" y="-117" on="0"/>
        <pt x="974" y="-270" on="0"/>
        <pt x="866" y="-360" on="0"/>
        <pt x="702" y="-396" on="0"/>
        <pt x="591" y="-396" on="1"/>
        <pt x="582" y="-311" on="1"/>
        <pt x="632" y="-298" on="0"/>
        <pt x="700" y="-255" on="0"/>
        <pt x="741" y="-184" on="0"/>
        <pt x="758" y="-77" on="0"/>
        <pt x="758" y="0" on="1"/>
        <pt x="758" y="419" on="1"/>
        <pt x="431" y="419" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="495" y="102" on="0"/>
        <pt x="535" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          32 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          15 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          32 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrentail" xMin="42" yMin="-277" xMax="1172" yMax="935">
      <contour>
        <pt x="533" y="0" on="1"/>
        <pt x="42" y="0" on="1"/>
        <pt x="42" y="73" on="1"/>
        <pt x="68" y="88" on="0"/>
        <pt x="127" y="109" on="0"/>
        <pt x="161" y="118" on="1"/>
        <pt x="161" y="817" on="1"/>
        <pt x="127" y="827" on="0"/>
        <pt x="68" y="848" on="0"/>
        <pt x="42" y="863" on="1"/>
        <pt x="42" y="935" on="1"/>
        <pt x="533" y="935" on="1"/>
        <pt x="533" y="863" on="1"/>
        <pt x="493" y="837" on="0"/>
        <pt x="429" y="817" on="1"/>
        <pt x="429" y="526" on="1"/>
        <pt x="734" y="526" on="1"/>
        <pt x="734" y="817" on="1"/>
        <pt x="680" y="829" on="0"/>
        <pt x="632" y="863" on="1"/>
        <pt x="632" y="935" on="1"/>
        <pt x="1121" y="935" on="1"/>
        <pt x="1121" y="863" on="1"/>
        <pt x="1095" y="847" on="0"/>
        <pt x="1038" y="824" on="0"/>
        <pt x="1002" y="817" on="1"/>
        <pt x="1002" y="107" on="1"/>
        <pt x="1160" y="107" on="1"/>
        <pt x="1172" y="88" on="1"/>
        <pt x="1163" y="42" on="0"/>
        <pt x="1107" y="-65" on="0"/>
        <pt x="1037" y="-166" on="0"/>
        <pt x="964" y="-252" on="0"/>
        <pt x="938" y="-277" on="1"/>
        <pt x="846" y="-277" on="1"/>
        <pt x="904" y="0" on="1"/>
        <pt x="632" y="0" on="1"/>
        <pt x="632" y="73" on="1"/>
        <pt x="680" y="109" on="0"/>
        <pt x="734" y="118" on="1"/>
        <pt x="734" y="419" on="1"/>
        <pt x="429" y="419" on="1"/>
        <pt x="429" y="118" on="1"/>
        <pt x="461" y="110" on="0"/>
        <pt x="513" y="88" on="0"/>
        <pt x="533" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          19 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          15 10 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrepsilon" xMin="48" yMin="-23" xMax="788" yMax="958">
      <contour>
        <pt x="508" y="127" on="1"/>
        <pt x="561" y="127" on="0"/>
        <pt x="638" y="138" on="0"/>
        <pt x="696" y="157" on="0"/>
        <pt x="739" y="182" on="0"/>
        <pt x="758" y="195" on="1"/>
        <pt x="788" y="156" on="1"/>
        <pt x="743" y="72" on="0"/>
        <pt x="563" y="-23" on="0"/>
        <pt x="432" y="-23" on="1"/>
        <pt x="360" y="-23" on="0"/>
        <pt x="217" y="7" on="0"/>
        <pt x="161" y="45" on="1"/>
        <pt x="106" y="84" on="0"/>
        <pt x="48" y="196" on="0"/>
        <pt x="48" y="262" on="1"/>
        <pt x="48" y="311" on="0"/>
        <pt x="84" y="391" on="0"/>
        <pt x="145" y="450" on="0"/>
        <pt x="224" y="488" on="0"/>
        <pt x="267" y="496" on="1"/>
        <pt x="235" y="503" on="0"/>
        <pt x="167" y="536" on="0"/>
        <pt x="111" y="591" on="0"/>
        <pt x="75" y="670" on="0"/>
        <pt x="75" y="723" on="1"/>
        <pt x="75" y="758" on="0"/>
        <pt x="97" y="817" on="0"/>
        <pt x="134" y="865" on="0"/>
        <pt x="184" y="902" on="0"/>
        <pt x="211" y="915" on="1"/>
        <pt x="268" y="942" on="0"/>
        <pt x="395" y="958" on="0"/>
        <pt x="460" y="958" on="1"/>
        <pt x="522" y="958" on="0"/>
        <pt x="618" y="944" on="0"/>
        <pt x="693" y="921" on="0"/>
        <pt x="749" y="893" on="0"/>
        <pt x="771" y="880" on="1"/>
        <pt x="765" y="820" on="0"/>
        <pt x="729" y="696" on="0"/>
        <pt x="706" y="639" on="1"/>
        <pt x="622" y="639" on="1"/>
        <pt x="558" y="838" on="1"/>
        <pt x="549" y="842" on="0"/>
        <pt x="521" y="851" on="0"/>
        <pt x="495" y="851" on="1"/>
        <pt x="417" y="851" on="0"/>
        <pt x="344" y="769" on="0"/>
        <pt x="344" y="687" on="1"/>
        <pt x="344" y="621" on="0"/>
        <pt x="384" y="532" on="0"/>
        <pt x="410" y="514" on="1"/>
        <pt x="582" y="539" on="1"/>
        <pt x="595" y="512" on="0"/>
        <pt x="594" y="473" on="1"/>
        <pt x="592" y="433" on="0"/>
        <pt x="582" y="411" on="1"/>
        <pt x="425" y="413" on="1"/>
        <pt x="383" y="399" on="0"/>
        <pt x="329" y="337" on="0"/>
        <pt x="329" y="278" on="1"/>
        <pt x="329" y="243" on="0"/>
        <pt x="357" y="187" on="0"/>
        <pt x="406" y="148" on="0"/>
        <pt x="471" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          52 33 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 52 79 52 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          143 52 159 52 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          58 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 58 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 5 values pushed */
          58 5 74 5 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          138 5 154 5 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          42 46 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrepsilondieresis" xMin="48" yMin="-23" xMax="788" yMax="1422">
      <component glyphName="cyrepsilon" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="97" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          78
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrercrossed" xMin="44" yMin="-375" xMax="1077" yMax="958">
      <contour>
        <pt x="560" y="-375" on="1"/>
        <pt x="44" y="-375" on="1"/>
        <pt x="44" y="-301" on="1"/>
        <pt x="111" y="-270" on="0"/>
        <pt x="167" y="-257" on="1"/>
        <pt x="167" y="803" on="1"/>
        <pt x="44" y="817" on="1"/>
        <pt x="44" y="891" on="1"/>
        <pt x="74" y="903" on="0"/>
        <pt x="164" y="927" on="0"/>
        <pt x="261" y="946" on="0"/>
        <pt x="352" y="958" on="0"/>
        <pt x="384" y="958" on="1"/>
        <pt x="437" y="958" on="1"/>
        <pt x="437" y="748" on="1"/>
        <pt x="452" y="790" on="0"/>
        <pt x="492" y="860" on="0"/>
        <pt x="547" y="912" on="0"/>
        <pt x="620" y="946" on="0"/>
        <pt x="690" y="956" on="0"/>
        <pt x="713" y="956" on="1"/>
        <pt x="736" y="956" on="0"/>
        <pt x="758" y="953" on="1"/>
        <pt x="830" y="949" on="0"/>
        <pt x="948" y="889" on="0"/>
        <pt x="1031" y="775" on="0"/>
        <pt x="1077" y="604" on="0"/>
        <pt x="1077" y="489" on="1"/>
        <pt x="1077" y="313" on="0"/>
        <pt x="940" y="75" on="0"/>
        <pt x="816" y="18" on="1"/>
        <pt x="908" y="-126" on="1"/>
        <pt x="769" y="-198" on="1"/>
        <pt x="654" y="-14" on="1"/>
        <pt x="640" y="-16" on="0"/>
        <pt x="615" y="-19" on="0"/>
        <pt x="601" y="-19" on="1"/>
        <pt x="559" y="-19" on="0"/>
        <pt x="479" y="-5" on="0"/>
        <pt x="437" y="14" on="1"/>
        <pt x="437" y="-257" on="1"/>
        <pt x="466" y="-260" on="0"/>
        <pt x="526" y="-280" on="0"/>
        <pt x="560" y="-301" on="1"/>
      </contour>
      <contour>
        <pt x="612" y="809" on="1"/>
        <pt x="579" y="809" on="0"/>
        <pt x="525" y="780" on="0"/>
        <pt x="500" y="751" on="1"/>
        <pt x="479" y="726" on="0"/>
        <pt x="442" y="641" on="0"/>
        <pt x="437" y="595" on="1"/>
        <pt x="437" y="127" on="1"/>
        <pt x="457" y="114" on="0"/>
        <pt x="524" y="84" on="0"/>
        <pt x="578" y="84" on="1"/>
        <pt x="599" y="84" on="0"/>
        <pt x="620" y="90" on="1"/>
        <pt x="518" y="252" on="1"/>
        <pt x="612" y="311" on="1"/>
        <pt x="709" y="156" on="1"/>
        <pt x="746" y="204" on="0"/>
        <pt x="786" y="374" on="0"/>
        <pt x="786" y="489" on="1"/>
        <pt x="786" y="641" on="0"/>
        <pt x="747" y="725" on="1"/>
        <pt x="709" y="809" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 66 67
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          43 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 36 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrestail" xMin="69" yMin="-337" xMax="860" yMax="958">
      <contour>
        <pt x="860" y="152" on="1"/>
        <pt x="825" y="92" on="0"/>
        <pt x="696" y="0" on="0"/>
        <pt x="609" y="-16" on="1"/>
        <pt x="598" y="-101" on="0"/>
        <pt x="564" y="-260" on="0"/>
        <pt x="539" y="-337" on="1"/>
        <pt x="457" y="-337" on="1"/>
        <pt x="433" y="-250" on="0"/>
        <pt x="399" y="-92" on="0"/>
        <pt x="384" y="-6" on="1"/>
        <pt x="305" y="14" on="0"/>
        <pt x="187" y="98" on="0"/>
        <pt x="108" y="220" on="0"/>
        <pt x="69" y="376" on="0"/>
        <pt x="69" y="468" on="1"/>
        <pt x="69" y="579" on="0"/>
        <pt x="137" y="760" on="0"/>
        <pt x="267" y="888" on="0"/>
        <pt x="455" y="958" on="0"/>
        <pt x="575" y="958" on="1"/>
        <pt x="668" y="958" on="0"/>
        <pt x="805" y="919" on="0"/>
        <pt x="856" y="893" on="1"/>
        <pt x="853" y="861" on="0"/>
        <pt x="841" y="783" on="0"/>
        <pt x="825" y="705" on="0"/>
        <pt x="805" y="635" on="0"/>
        <pt x="793" y="611" on="1"/>
        <pt x="702" y="611" on="1"/>
        <pt x="624" y="832" on="1"/>
        <pt x="609" y="840" on="0"/>
        <pt x="579" y="851" on="0"/>
        <pt x="550" y="851" on="1"/>
        <pt x="512" y="851" on="0"/>
        <pt x="443" y="815" on="0"/>
        <pt x="391" y="729" on="0"/>
        <pt x="360" y="588" on="0"/>
        <pt x="360" y="482" on="1"/>
        <pt x="360" y="407" on="0"/>
        <pt x="393" y="277" on="0"/>
        <pt x="460" y="181" on="0"/>
        <pt x="563" y="127" on="0"/>
        <pt x="634" y="127" on="1"/>
        <pt x="700" y="127" on="0"/>
        <pt x="797" y="166" on="0"/>
        <pt x="830" y="191" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          29 33 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrestail.alt" xMin="69" yMin="-385" xMax="860" yMax="958">
      <contour>
        <pt x="860" y="152" on="1"/>
        <pt x="840" y="119" on="0"/>
        <pt x="781" y="59" on="0"/>
        <pt x="705" y="13" on="0"/>
        <pt x="614" y="-17" on="0"/>
        <pt x="562" y="-21" on="1"/>
        <pt x="610" y="-58" on="0"/>
        <pt x="666" y="-155" on="0"/>
        <pt x="666" y="-215" on="1"/>
        <pt x="666" y="-256" on="0"/>
        <pt x="642" y="-319" on="0"/>
        <pt x="599" y="-362" on="0"/>
        <pt x="542" y="-385" on="0"/>
        <pt x="509" y="-385" on="1"/>
        <pt x="440" y="-385" on="0"/>
        <pt x="357" y="-312" on="0"/>
        <pt x="357" y="-255" on="1"/>
        <pt x="357" y="-225" on="0"/>
        <pt x="377" y="-179" on="0"/>
        <pt x="410" y="-148" on="0"/>
        <pt x="454" y="-132" on="0"/>
        <pt x="478" y="-132" on="1"/>
        <pt x="491" y="-132" on="0"/>
        <pt x="503" y="-134" on="0"/>
        <pt x="511" y="-134" on="1"/>
        <pt x="499" y="-58" on="0"/>
        <pt x="423" y="-14" on="1"/>
        <pt x="334" y="1" on="0"/>
        <pt x="201" y="82" on="0"/>
        <pt x="113" y="207" on="0"/>
        <pt x="69" y="370" on="0"/>
        <pt x="69" y="468" on="1"/>
        <pt x="69" y="579" on="0"/>
        <pt x="137" y="760" on="0"/>
        <pt x="267" y="888" on="0"/>
        <pt x="455" y="958" on="0"/>
        <pt x="575" y="958" on="1"/>
        <pt x="668" y="958" on="0"/>
        <pt x="805" y="919" on="0"/>
        <pt x="856" y="893" on="1"/>
        <pt x="853" y="861" on="0"/>
        <pt x="841" y="783" on="0"/>
        <pt x="825" y="705" on="0"/>
        <pt x="805" y="635" on="0"/>
        <pt x="793" y="611" on="1"/>
        <pt x="702" y="611" on="1"/>
        <pt x="624" y="832" on="1"/>
        <pt x="609" y="840" on="0"/>
        <pt x="579" y="851" on="0"/>
        <pt x="550" y="851" on="1"/>
        <pt x="512" y="851" on="0"/>
        <pt x="443" y="815" on="0"/>
        <pt x="391" y="729" on="0"/>
        <pt x="360" y="588" on="0"/>
        <pt x="360" y="482" on="1"/>
        <pt x="360" y="407" on="0"/>
        <pt x="393" y="277" on="0"/>
        <pt x="460" y="181" on="0"/>
        <pt x="563" y="127" on="0"/>
        <pt x="634" y="127" on="1"/>
        <pt x="700" y="127" on="0"/>
        <pt x="797" y="166" on="0"/>
        <pt x="830" y="191" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 5 values pushed */
          48 13 64 13 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          208 13 224 13 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          21 26 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          45 49 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          62 59 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrestail.alt02" xMin="69" yMin="-480" xMax="860" yMax="958">
      <component glyphName="ccedilla" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrgebar" xMin="48" yMin="0" xMax="884" yMax="935">
      <contour>
        <pt x="884" y="935" on="1"/>
        <pt x="882" y="900" on="0"/>
        <pt x="872" y="806" on="0"/>
        <pt x="858" y="706" on="0"/>
        <pt x="841" y="609" on="0"/>
        <pt x="832" y="571" on="1"/>
        <pt x="756" y="571" on="1"/>
        <pt x="672" y="829" on="1"/>
        <pt x="446" y="829" on="1"/>
        <pt x="446" y="484" on="1"/>
        <pt x="622" y="484" on="1"/>
        <pt x="622" y="354" on="1"/>
        <pt x="446" y="354" on="1"/>
        <pt x="446" y="118" on="1"/>
        <pt x="555" y="97" on="0"/>
        <pt x="615" y="73" on="1"/>
        <pt x="615" y="0" on="1"/>
        <pt x="53" y="0" on="1"/>
        <pt x="53" y="73" on="1"/>
        <pt x="85" y="92" on="0"/>
        <pt x="145" y="110" on="0"/>
        <pt x="177" y="118" on="1"/>
        <pt x="177" y="354" on="1"/>
        <pt x="48" y="354" on="1"/>
        <pt x="48" y="484" on="1"/>
        <pt x="177" y="484" on="1"/>
        <pt x="177" y="819" on="1"/>
        <pt x="110" y="831" on="0"/>
        <pt x="53" y="863" on="1"/>
        <pt x="53" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 29 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 29 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          11 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrgebar.alt" xMin="64" yMin="0" xMax="904" yMax="935">
      <contour>
        <pt x="904" y="935" on="1"/>
        <pt x="900" y="866" on="0"/>
        <pt x="886" y="774" on="1"/>
        <pt x="879" y="728" on="0"/>
        <pt x="862" y="646" on="0"/>
        <pt x="852" y="609" on="1"/>
        <pt x="775" y="609" on="1"/>
        <pt x="692" y="829" on="1"/>
        <pt x="456" y="829" on="1"/>
        <pt x="456" y="495" on="1"/>
        <pt x="729" y="528" on="1"/>
        <pt x="736" y="516" on="0"/>
        <pt x="742" y="476" on="0"/>
        <pt x="742" y="433" on="0"/>
        <pt x="736" y="394" on="0"/>
        <pt x="729" y="382" on="1"/>
        <pt x="456" y="382" on="1"/>
        <pt x="456" y="118" on="1"/>
        <pt x="563" y="97" on="0"/>
        <pt x="625" y="73" on="1"/>
        <pt x="625" y="0" on="1"/>
        <pt x="64" y="0" on="1"/>
        <pt x="64" y="73" on="1"/>
        <pt x="96" y="92" on="0"/>
        <pt x="156" y="110" on="0"/>
        <pt x="188" y="118" on="1"/>
        <pt x="188" y="819" on="1"/>
        <pt x="121" y="831" on="0"/>
        <pt x="64" y="863" on="1"/>
        <pt x="64" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 29 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          10 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 7 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          9 10 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrgehook" xMin="56" yMin="-396" xMax="1083" yMax="935">
      <contour>
        <pt x="895" y="935" on="1"/>
        <pt x="894" y="900" on="0"/>
        <pt x="888" y="821" on="0"/>
        <pt x="880" y="739" on="0"/>
        <pt x="868" y="656" on="0"/>
        <pt x="861" y="617" on="1"/>
        <pt x="784" y="617" on="1"/>
        <pt x="683" y="829" on="1"/>
        <pt x="448" y="829" on="1"/>
        <pt x="448" y="415" on="1"/>
        <pt x="474" y="436" on="0"/>
        <pt x="546" y="475" on="0"/>
        <pt x="628" y="506" on="0"/>
        <pt x="716" y="524" on="0"/>
        <pt x="758" y="524" on="1"/>
        <pt x="823" y="524" on="0"/>
        <pt x="947" y="488" on="0"/>
        <pt x="986" y="453" on="1"/>
        <pt x="1026" y="418" on="0"/>
        <pt x="1083" y="295" on="0"/>
        <pt x="1083" y="220" on="1"/>
        <pt x="1083" y="0" on="1"/>
        <pt x="1083" y="-117" on="0"/>
        <pt x="1020" y="-270" on="0"/>
        <pt x="901" y="-360" on="0"/>
        <pt x="727" y="-396" on="0"/>
        <pt x="616" y="-396" on="1"/>
        <pt x="606" y="-311" on="1"/>
        <pt x="657" y="-298" on="0"/>
        <pt x="735" y="-256" on="0"/>
        <pt x="787" y="-184" on="0"/>
        <pt x="814" y="-77" on="0"/>
        <pt x="814" y="2" on="1"/>
        <pt x="814" y="183" on="1"/>
        <pt x="814" y="227" on="0"/>
        <pt x="792" y="313" on="0"/>
        <pt x="763" y="342" on="1"/>
        <pt x="734" y="371" on="0"/>
        <pt x="665" y="388" on="0"/>
        <pt x="632" y="388" on="1"/>
        <pt x="608" y="388" on="0"/>
        <pt x="554" y="376" on="0"/>
        <pt x="505" y="359" on="0"/>
        <pt x="462" y="338" on="0"/>
        <pt x="448" y="329" on="1"/>
        <pt x="448" y="118" on="1"/>
        <pt x="493" y="109" on="0"/>
        <pt x="557" y="88" on="0"/>
        <pt x="589" y="73" on="1"/>
        <pt x="589" y="0" on="1"/>
        <pt x="56" y="0" on="1"/>
        <pt x="56" y="73" on="1"/>
        <pt x="88" y="92" on="0"/>
        <pt x="148" y="110" on="0"/>
        <pt x="179" y="118" on="1"/>
        <pt x="179" y="819" on="1"/>
        <pt x="113" y="831" on="0"/>
        <pt x="56" y="863" on="1"/>
        <pt x="56" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          48 59 60
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            58
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            58 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            49
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            49 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            26 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 58 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 7 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          9 14 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 28
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 39 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          48 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          57 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrh" xMin="25" yMin="0" xMax="1119" yMax="1377">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrhadesc" xMin="14" yMin="-277" xMax="1010" yMax="935">
      <contour>
        <pt x="887" y="107" on="1"/>
        <pt x="1010" y="107" on="1"/>
        <pt x="1008" y="61" on="0"/>
        <pt x="1000" y="-35" on="0"/>
        <pt x="993" y="-86" on="1"/>
        <pt x="972" y="-277" on="1"/>
        <pt x="899" y="-277" on="1"/>
        <pt x="798" y="0" on="1"/>
        <pt x="493" y="0" on="1"/>
        <pt x="493" y="71" on="1"/>
        <pt x="534" y="101" on="0"/>
        <pt x="578" y="118" on="1"/>
        <pt x="441" y="358" on="1"/>
        <pt x="284" y="118" on="1"/>
        <pt x="311" y="109" on="0"/>
        <pt x="350" y="86" on="0"/>
        <pt x="369" y="73" on="1"/>
        <pt x="369" y="0" on="1"/>
        <pt x="14" y="0" on="1"/>
        <pt x="14" y="73" on="1"/>
        <pt x="41" y="88" on="0"/>
        <pt x="84" y="110" on="0"/>
        <pt x="112" y="118" on="1"/>
        <pt x="373" y="447" on="1"/>
        <pt x="111" y="817" on="1"/>
        <pt x="84" y="827" on="0"/>
        <pt x="43" y="848" on="0"/>
        <pt x="27" y="863" on="1"/>
        <pt x="27" y="935" on="1"/>
        <pt x="496" y="935" on="1"/>
        <pt x="496" y="865" on="1"/>
        <pt x="473" y="849" on="0"/>
        <pt x="437" y="825" on="0"/>
        <pt x="412" y="817" on="1"/>
        <pt x="533" y="611" on="1"/>
        <pt x="678" y="817" on="1"/>
        <pt x="646" y="827" on="0"/>
        <pt x="609" y="849" on="0"/>
        <pt x="594" y="863" on="1"/>
        <pt x="594" y="935" on="1"/>
        <pt x="940" y="935" on="1"/>
        <pt x="940" y="863" on="1"/>
        <pt x="921" y="849" on="0"/>
        <pt x="876" y="827" on="0"/>
        <pt x="842" y="817" on="1"/>
        <pt x="595" y="527" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          34 46 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 17 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          34 17 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          23 12 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          45 34 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrhahook" xMin="15" yMin="-396" xMax="993" yMax="935">
      <contour>
        <pt x="699" y="-73" on="1"/>
        <pt x="699" y="-22" on="0"/>
        <pt x="654" y="88" on="0"/>
        <pt x="622" y="142" on="1"/>
        <pt x="600" y="178" on="0"/>
        <pt x="554" y="246" on="0"/>
        <pt x="511" y="306" on="0"/>
        <pt x="473" y="357" on="0"/>
        <pt x="460" y="375" on="1"/>
        <pt x="285" y="118" on="1"/>
        <pt x="312" y="109" on="0"/>
        <pt x="351" y="86" on="0"/>
        <pt x="370" y="73" on="1"/>
        <pt x="370" y="0" on="1"/>
        <pt x="15" y="0" on="1"/>
        <pt x="15" y="73" on="1"/>
        <pt x="42" y="88" on="0"/>
        <pt x="85" y="110" on="0"/>
        <pt x="113" y="118" on="1"/>
        <pt x="392" y="464" on="1"/>
        <pt x="116" y="817" on="1"/>
        <pt x="94" y="824" on="0"/>
        <pt x="46" y="852" on="0"/>
        <pt x="32" y="863" on="1"/>
        <pt x="32" y="935" on="1"/>
        <pt x="501" y="935" on="1"/>
        <pt x="501" y="865" on="1"/>
        <pt x="488" y="855" on="0"/>
        <pt x="440" y="825" on="0"/>
        <pt x="417" y="817" on="1"/>
        <pt x="576" y="585" on="1"/>
        <pt x="731" y="817" on="1"/>
        <pt x="699" y="827" on="0"/>
        <pt x="662" y="849" on="0"/>
        <pt x="647" y="863" on="1"/>
        <pt x="647" y="935" on="1"/>
        <pt x="993" y="935" on="1"/>
        <pt x="993" y="863" on="1"/>
        <pt x="974" y="849" on="0"/>
        <pt x="929" y="827" on="0"/>
        <pt x="895" y="817" on="1"/>
        <pt x="638" y="501" on="1"/>
        <pt x="686" y="444" on="0"/>
        <pt x="785" y="318" on="0"/>
        <pt x="834" y="250" on="1"/>
        <pt x="861" y="213" on="0"/>
        <pt x="909" y="135" on="0"/>
        <pt x="947" y="54" on="0"/>
        <pt x="969" y="-28" on="0"/>
        <pt x="969" y="-70" on="1"/>
        <pt x="969" y="-155" on="0"/>
        <pt x="920" y="-278" on="0"/>
        <pt x="815" y="-358" on="0"/>
        <pt x="652" y="-396" on="0"/>
        <pt x="538" y="-396" on="1"/>
        <pt x="529" y="-311" on="1"/>
        <pt x="581" y="-297" on="0"/>
        <pt x="645" y="-254" on="0"/>
        <pt x="663" y="-223" on="1"/>
        <pt x="699" y="-162" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            54
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            54 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 13 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          30 13 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          19 8 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          41 30 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrhcrossed" xMin="25" yMin="0" xMax="1124" yMax="1406">
      <contour>
        <pt x="25" y="1160" on="1"/>
        <pt x="166" y="1160" on="1"/>
        <pt x="166" y="1251" on="1"/>
        <pt x="28" y="1266" on="1"/>
        <pt x="28" y="1339" on="1"/>
        <pt x="56" y="1351" on="0"/>
        <pt x="142" y="1373" on="0"/>
        <pt x="238" y="1390" on="0"/>
        <pt x="334" y="1403" on="0"/>
        <pt x="371" y="1406" on="1"/>
        <pt x="435" y="1406" on="1"/>
        <pt x="435" y="1160" on="1"/>
        <pt x="725" y="1160" on="1"/>
        <pt x="725" y="1046" on="1"/>
        <pt x="435" y="1046" on="1"/>
        <pt x="435" y="747" on="1"/>
        <pt x="437" y="747" on="1"/>
        <pt x="453" y="789" on="0"/>
        <pt x="503" y="866" on="0"/>
        <pt x="571" y="924" on="0"/>
        <pt x="657" y="958" on="0"/>
        <pt x="708" y="958" on="1"/>
        <pt x="784" y="958" on="0"/>
        <pt x="897" y="920" on="0"/>
        <pt x="972" y="829" on="0"/>
        <pt x="1010" y="677" on="0"/>
        <pt x="1010" y="564" on="1"/>
        <pt x="1010" y="118" on="1"/>
        <pt x="1039" y="112" on="0"/>
        <pt x="1096" y="92" on="0"/>
        <pt x="1124" y="73" on="1"/>
        <pt x="1124" y="0" on="1"/>
        <pt x="638" y="0" on="1"/>
        <pt x="638" y="73" on="1"/>
        <pt x="660" y="86" on="0"/>
        <pt x="709" y="109" on="0"/>
        <pt x="740" y="118" on="1"/>
        <pt x="740" y="496" on="1"/>
        <pt x="740" y="577" on="0"/>
        <pt x="738" y="695" on="0"/>
        <pt x="722" y="733" on="1"/>
        <pt x="707" y="771" on="0"/>
        <pt x="661" y="809" on="0"/>
        <pt x="623" y="809" on="1"/>
        <pt x="585" y="809" on="0"/>
        <pt x="536" y="784" on="0"/>
        <pt x="510" y="757" on="1"/>
        <pt x="498" y="744" on="0"/>
        <pt x="475" y="712" on="0"/>
        <pt x="455" y="679" on="0"/>
        <pt x="440" y="649" on="0"/>
        <pt x="435" y="638" on="1"/>
        <pt x="435" y="118" on="1"/>
        <pt x="466" y="110" on="0"/>
        <pt x="512" y="92" on="0"/>
        <pt x="538" y="73" on="1"/>
        <pt x="538" y="0" on="1"/>
        <pt x="47" y="0" on="1"/>
        <pt x="47" y="73" on="1"/>
        <pt x="76" y="88" on="0"/>
        <pt x="133" y="110" on="0"/>
        <pt x="166" y="118" on="1"/>
        <pt x="166" y="1046" on="1"/>
        <pt x="25" y="1046" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 9 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 31 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyridieresis" xMin="44" yMin="0" xMax="1137" yMax="1422">
      <component glyphName="afii10074" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="249" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriecyrbreve" xMin="45" yMin="-23" xMax="871" yMax="1444">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="-11" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriedieresiscyrbreve" xMin="45" yMin="-23" xMax="891" yMax="1747">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="143" y="-27" flags="0x4"/>
      <component glyphName="cyrBreve" x="-41" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriedieresismacron" xMin="45" yMin="-23" xMax="871" yMax="1654">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="143" y="-27" flags="0x4"/>
      <component glyphName="Macron" x="53" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriehook" xMin="6" yMin="-23" xMax="1113" yMax="958">
      <contour>
        <pt x="1099" y="157" on="1"/>
        <pt x="1081" y="124" on="0"/>
        <pt x="1016" y="60" on="0"/>
        <pt x="923" y="9" on="0"/>
        <pt x="803" y="-23" on="0"/>
        <pt x="730" y="-23" on="1"/>
        <pt x="616" y="-23" on="0"/>
        <pt x="450" y="49" on="0"/>
        <pt x="341" y="175" on="0"/>
        <pt x="287" y="349" on="0"/>
        <pt x="286" y="451" on="1"/>
        <pt x="209" y="453" on="0"/>
        <pt x="103" y="494" on="0"/>
        <pt x="36" y="562" on="0"/>
        <pt x="6" y="649" on="0"/>
        <pt x="6" y="697" on="1"/>
        <pt x="6" y="752" on="0"/>
        <pt x="48" y="863" on="0"/>
        <pt x="88" y="901" on="1"/>
        <pt x="110" y="903" on="0"/>
        <pt x="161" y="883" on="0"/>
        <pt x="209" y="849" on="0"/>
        <pt x="248" y="806" on="0"/>
        <pt x="259" y="785" on="1"/>
        <pt x="261" y="777" on="0"/>
        <pt x="263" y="762" on="0"/>
        <pt x="265" y="753" on="1"/>
        <pt x="128" y="638" on="1"/>
        <pt x="135" y="614" on="0"/>
        <pt x="168" y="582" on="0"/>
        <pt x="211" y="561" on="0"/>
        <pt x="264" y="550" on="0"/>
        <pt x="291" y="548" on="1"/>
        <pt x="295" y="592" on="0"/>
        <pt x="322" y="688" on="0"/>
        <pt x="368" y="779" on="0"/>
        <pt x="436" y="861" on="0"/>
        <pt x="528" y="922" on="0"/>
        <pt x="646" y="958" on="0"/>
        <pt x="719" y="958" on="1"/>
        <pt x="800" y="958" on="0"/>
        <pt x="940" y="918" on="0"/>
        <pt x="1046" y="831" on="0"/>
        <pt x="1109" y="693" on="0"/>
        <pt x="1112" y="595" on="1"/>
        <pt x="1113" y="561" on="0"/>
        <pt x="1105" y="489" on="0"/>
        <pt x="1097" y="451" on="1"/>
        <pt x="571" y="451" on="1"/>
        <pt x="572" y="394" on="0"/>
        <pt x="598" y="278" on="0"/>
        <pt x="663" y="185" on="0"/>
        <pt x="770" y="127" on="0"/>
        <pt x="852" y="127" on="1"/>
        <pt x="910" y="127" on="0"/>
        <pt x="1016" y="157" on="0"/>
        <pt x="1067" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="723" y="851" on="1"/>
        <pt x="650" y="851" on="0"/>
        <pt x="580" y="704" on="0"/>
        <pt x="578" y="548" on="1"/>
        <pt x="841" y="548" on="1"/>
        <pt x="846" y="577" on="0"/>
        <pt x="849" y="632" on="0"/>
        <pt x="849" y="657" on="1"/>
        <pt x="849" y="751" on="0"/>
        <pt x="791" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          60 39 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          47 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          18 60 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          60
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          53 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          56 53 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          57 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriehookogonek" xMin="6" yMin="-337" xMax="1113" yMax="958">
      <contour>
        <pt x="1099" y="157" on="1"/>
        <pt x="1084" y="131" on="0"/>
        <pt x="1037" y="79" on="0"/>
        <pt x="972" y="34" on="0"/>
        <pt x="890" y="-2" on="0"/>
        <pt x="840" y="-12" on="1"/>
        <pt x="830" y="-97" on="0"/>
        <pt x="797" y="-260" on="0"/>
        <pt x="771" y="-337" on="1"/>
        <pt x="689" y="-337" on="1"/>
        <pt x="666" y="-251" on="0"/>
        <pt x="633" y="-95" on="0"/>
        <pt x="618" y="-13" on="1"/>
        <pt x="534" y="3" on="0"/>
        <pt x="410" y="86" on="0"/>
        <pt x="328" y="208" on="0"/>
        <pt x="287" y="362" on="0"/>
        <pt x="286" y="451" on="1"/>
        <pt x="209" y="453" on="0"/>
        <pt x="103" y="494" on="0"/>
        <pt x="36" y="562" on="0"/>
        <pt x="6" y="649" on="0"/>
        <pt x="6" y="697" on="1"/>
        <pt x="6" y="752" on="0"/>
        <pt x="48" y="863" on="0"/>
        <pt x="88" y="901" on="1"/>
        <pt x="110" y="903" on="0"/>
        <pt x="161" y="883" on="0"/>
        <pt x="209" y="849" on="0"/>
        <pt x="248" y="806" on="0"/>
        <pt x="259" y="785" on="1"/>
        <pt x="261" y="777" on="0"/>
        <pt x="263" y="762" on="0"/>
        <pt x="265" y="753" on="1"/>
        <pt x="128" y="638" on="1"/>
        <pt x="135" y="614" on="0"/>
        <pt x="168" y="582" on="0"/>
        <pt x="211" y="561" on="0"/>
        <pt x="264" y="550" on="0"/>
        <pt x="291" y="548" on="1"/>
        <pt x="295" y="592" on="0"/>
        <pt x="322" y="688" on="0"/>
        <pt x="368" y="779" on="0"/>
        <pt x="436" y="861" on="0"/>
        <pt x="528" y="922" on="0"/>
        <pt x="646" y="958" on="0"/>
        <pt x="719" y="958" on="1"/>
        <pt x="800" y="958" on="0"/>
        <pt x="940" y="918" on="0"/>
        <pt x="1046" y="831" on="0"/>
        <pt x="1109" y="693" on="0"/>
        <pt x="1112" y="595" on="1"/>
        <pt x="1113" y="561" on="0"/>
        <pt x="1105" y="489" on="0"/>
        <pt x="1097" y="451" on="1"/>
        <pt x="571" y="451" on="1"/>
        <pt x="572" y="394" on="0"/>
        <pt x="598" y="278" on="0"/>
        <pt x="663" y="185" on="0"/>
        <pt x="770" y="127" on="0"/>
        <pt x="852" y="127" on="1"/>
        <pt x="910" y="127" on="0"/>
        <pt x="1016" y="157" on="0"/>
        <pt x="1067" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="723" y="851" on="1"/>
        <pt x="650" y="851" on="0"/>
        <pt x="580" y="704" on="0"/>
        <pt x="578" y="548" on="1"/>
        <pt x="841" y="548" on="1"/>
        <pt x="846" y="577" on="0"/>
        <pt x="849" y="632" on="0"/>
        <pt x="849" y="657" on="1"/>
        <pt x="849" y="751" on="0"/>
        <pt x="791" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          67 46 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          67
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          54 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 67 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 60 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          64 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyriemacron" xMin="45" yMin="-23" xMax="871" yMax="1334">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-4" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrimacron" xMin="44" yMin="0" xMax="1137" yMax="1334">
      <component glyphName="afii10074" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="106" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrinvE" xMin="88" yMin="-26" xMax="1413" yMax="1379">
      <contour>
        <pt x="727" y="-24" on="1"/>
        <pt x="589" y="-23" on="0"/>
        <pt x="355" y="57" on="0"/>
        <pt x="184" y="215" on="0"/>
        <pt x="88" y="450" on="0"/>
        <pt x="88" y="607" on="1"/>
        <pt x="88" y="633" on="0"/>
        <pt x="93" y="699" on="0"/>
        <pt x="97" y="732" on="1"/>
        <pt x="1098" y="732" on="1"/>
        <pt x="1090" y="877" on="0"/>
        <pt x="1012" y="1077" on="0"/>
        <pt x="884" y="1199" on="0"/>
        <pt x="715" y="1253" on="0"/>
        <pt x="616" y="1253" on="1"/>
        <pt x="596" y="1253" on="0"/>
        <pt x="543" y="1249" on="0"/>
        <pt x="489" y="1241" on="0"/>
        <pt x="439" y="1231" on="0"/>
        <pt x="420" y="1224" on="1"/>
        <pt x="312" y="926" on="1"/>
        <pt x="230" y="926" on="1"/>
        <pt x="221" y="970" on="0"/>
        <pt x="205" y="1073" on="0"/>
        <pt x="194" y="1173" on="0"/>
        <pt x="189" y="1261" on="0"/>
        <pt x="190" y="1290" on="1"/>
        <pt x="239" y="1312" on="0"/>
        <pt x="364" y="1346" on="0"/>
        <pt x="496" y="1368" on="0"/>
        <pt x="626" y="1379" on="0"/>
        <pt x="682" y="1379" on="1"/>
        <pt x="847" y="1379" on="0"/>
        <pt x="1117" y="1287" on="0"/>
        <pt x="1308" y="1112" on="0"/>
        <pt x="1413" y="860" on="0"/>
        <pt x="1413" y="700" on="1"/>
        <pt x="1413" y="526" on="0"/>
        <pt x="1316" y="255" on="0"/>
        <pt x="1137" y="69" on="0"/>
        <pt x="883" y="-26" on="0"/>
      </contour>
      <contour>
        <pt x="732" y="103" on="1"/>
        <pt x="823" y="103" on="0"/>
        <pt x="959" y="179" on="0"/>
        <pt x="1050" y="313" on="0"/>
        <pt x="1096" y="498" on="0"/>
        <pt x="1098" y="606" on="1"/>
        <pt x="413" y="606" on="1"/>
        <pt x="411" y="587" on="0"/>
        <pt x="409" y="529" on="0"/>
        <pt x="409" y="510" on="1"/>
        <pt x="409" y="427" on="0"/>
        <pt x="444" y="279" on="0"/>
        <pt x="520" y="168" on="0"/>
        <pt x="643" y="103" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          41 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 31 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 14 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrinvEdieresis" xMin="88" yMin="-26" xMax="1413" yMax="1720">
      <component glyphName="cyrinvE" x="0" y="0" flags="0x204"/>
      <component glyphName="Dieresis" x="135" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrinve" xMin="45" yMin="-23" xMax="864" yMax="958">
      <contour>
        <pt x="407" y="844" on="1"/>
        <pt x="375" y="844" on="0"/>
        <pt x="331" y="830" on="0"/>
        <pt x="311" y="823" on="1"/>
        <pt x="212" y="617" on="1"/>
        <pt x="139" y="617" on="1"/>
        <pt x="120" y="675" on="0"/>
        <pt x="96" y="805" on="0"/>
        <pt x="93" y="863" on="1"/>
        <pt x="161" y="906" on="0"/>
        <pt x="335" y="958" on="0"/>
        <pt x="432" y="958" on="1"/>
        <pt x="517" y="958" on="0"/>
        <pt x="651" y="921" on="0"/>
        <pt x="710" y="875" on="1"/>
        <pt x="792" y="811" on="0"/>
        <pt x="864" y="600" on="0"/>
        <pt x="864" y="470" on="1"/>
        <pt x="864" y="359" on="0"/>
        <pt x="808" y="177" on="0"/>
        <pt x="697" y="48" on="0"/>
        <pt x="532" y="-23" on="0"/>
        <pt x="424" y="-23" on="1"/>
        <pt x="341" y="-23" on="0"/>
        <pt x="201" y="36" on="0"/>
        <pt x="101" y="142" on="0"/>
        <pt x="45" y="287" on="0"/>
        <pt x="45" y="374" on="1"/>
        <pt x="45" y="406" on="0"/>
        <pt x="48" y="475" on="0"/>
        <pt x="55" y="509" on="1"/>
        <pt x="578" y="509" on="1"/>
        <pt x="578" y="578" on="0"/>
        <pt x="562" y="699" on="0"/>
        <pt x="523" y="791" on="0"/>
        <pt x="457" y="844" on="0"/>
      </contour>
      <contour>
        <pt x="443" y="84" on="1"/>
        <pt x="491" y="84" on="0"/>
        <pt x="545" y="144" on="0"/>
        <pt x="571" y="239" on="0"/>
        <pt x="575" y="356" on="0"/>
        <pt x="574" y="412" on="1"/>
        <pt x="319" y="412" on="1"/>
        <pt x="318" y="406" on="0"/>
        <pt x="316" y="385" on="0"/>
        <pt x="315" y="360" on="0"/>
        <pt x="315" y="333" on="0"/>
        <pt x="315" y="322" on="1"/>
        <pt x="315" y="209" on="0"/>
        <pt x="378" y="84" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          36 50 51
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 11 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          4 0 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrinvedieresis" xMin="45" yMin="-23" xMax="864" yMax="1422">
      <component glyphName="cyrinve" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="111" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          59
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrkaback" xMin="16" yMin="0" xMax="1253" yMax="935">
      <contour>
        <pt x="684" y="935" on="1"/>
        <pt x="684" y="863" on="1"/>
        <pt x="665" y="849" on="0"/>
        <pt x="629" y="827" on="0"/>
        <pt x="599" y="817" on="1"/>
        <pt x="599" y="512" on="1"/>
        <pt x="686" y="531" on="1"/>
        <pt x="740" y="588" on="0"/>
        <pt x="841" y="734" on="0"/>
        <pt x="883" y="812" on="1"/>
        <pt x="851" y="825" on="0"/>
        <pt x="807" y="848" on="0"/>
        <pt x="782" y="863" on="1"/>
        <pt x="782" y="935" on="1"/>
        <pt x="1211" y="935" on="1"/>
        <pt x="1211" y="863" on="1"/>
        <pt x="1192" y="848" on="0"/>
        <pt x="1138" y="827" on="0"/>
        <pt x="1093" y="812" on="1"/>
        <pt x="1030" y="734" on="0"/>
        <pt x="905" y="595" on="0"/>
        <pt x="841" y="535" on="1"/>
        <pt x="883" y="490" on="0"/>
        <pt x="964" y="385" on="0"/>
        <pt x="1046" y="275" on="0"/>
        <pt x="1130" y="166" on="0"/>
        <pt x="1175" y="118" on="1"/>
        <pt x="1253" y="73" on="1"/>
        <pt x="1253" y="0" on="1"/>
        <pt x="960" y="0" on="1"/>
        <pt x="900" y="43" on="1"/>
        <pt x="861" y="92" on="0"/>
        <pt x="805" y="189" on="0"/>
        <pt x="778" y="238" on="1"/>
        <pt x="751" y="287" on="0"/>
        <pt x="700" y="382" on="0"/>
        <pt x="674" y="430" on="1"/>
        <pt x="599" y="430" on="1"/>
        <pt x="599" y="118" on="1"/>
        <pt x="657" y="102" on="0"/>
        <pt x="705" y="73" on="1"/>
        <pt x="705" y="0" on="1"/>
        <pt x="206" y="0" on="1"/>
        <pt x="206" y="73" on="1"/>
        <pt x="257" y="103" on="0"/>
        <pt x="330" y="118" on="1"/>
        <pt x="330" y="829" on="1"/>
        <pt x="219" y="829" on="1"/>
        <pt x="126" y="589" on="1"/>
        <pt x="63" y="589" on="1"/>
        <pt x="55" y="624" on="0"/>
        <pt x="38" y="715" on="0"/>
        <pt x="25" y="809" on="0"/>
        <pt x="16" y="900" on="0"/>
        <pt x="16" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          36 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            54
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            54 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          1 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 41 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          6 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 36 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          48 46 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrkabar" xMin="26" yMin="0" xMax="1145" yMax="1406">
      <contour>
        <pt x="441" y="512" on="1"/>
        <pt x="541" y="531" on="1"/>
        <pt x="551" y="540" on="0"/>
        <pt x="589" y="583" on="0"/>
        <pt x="635" y="638" on="0"/>
        <pt x="685" y="700" on="0"/>
        <pt x="729" y="756" on="0"/>
        <pt x="763" y="801" on="0"/>
        <pt x="771" y="812" on="1"/>
        <pt x="739" y="825" on="0"/>
        <pt x="695" y="848" on="0"/>
        <pt x="669" y="863" on="1"/>
        <pt x="669" y="935" on="1"/>
        <pt x="1098" y="935" on="1"/>
        <pt x="1098" y="863" on="1"/>
        <pt x="1074" y="848" on="0"/>
        <pt x="1007" y="818" on="0"/>
        <pt x="980" y="812" on="1"/>
        <pt x="945" y="773" on="0"/>
        <pt x="867" y="692" on="0"/>
        <pt x="790" y="618" on="0"/>
        <pt x="722" y="555" on="0"/>
        <pt x="697" y="535" on="1"/>
        <pt x="737" y="490" on="0"/>
        <pt x="827" y="385" on="0"/>
        <pt x="920" y="275" on="0"/>
        <pt x="1014" y="166" on="0"/>
        <pt x="1059" y="118" on="1"/>
        <pt x="1145" y="73" on="1"/>
        <pt x="1145" y="0" on="1"/>
        <pt x="851" y="0" on="1"/>
        <pt x="783" y="43" on="1"/>
        <pt x="768" y="61" on="0"/>
        <pt x="732" y="109" on="0"/>
        <pt x="696" y="161" on="0"/>
        <pt x="660" y="214" on="0"/>
        <pt x="645" y="238" on="1"/>
        <pt x="630" y="260" on="0"/>
        <pt x="598" y="313" on="0"/>
        <pt x="566" y="364" on="0"/>
        <pt x="536" y="412" on="0"/>
        <pt x="525" y="430" on="1"/>
        <pt x="441" y="430" on="1"/>
        <pt x="441" y="118" on="1"/>
        <pt x="498" y="101" on="0"/>
        <pt x="546" y="73" on="1"/>
        <pt x="546" y="0" on="1"/>
        <pt x="48" y="0" on="1"/>
        <pt x="48" y="73" on="1"/>
        <pt x="97" y="103" on="0"/>
        <pt x="172" y="118" on="1"/>
        <pt x="172" y="1046" on="1"/>
        <pt x="26" y="1046" on="1"/>
        <pt x="26" y="1160" on="1"/>
        <pt x="172" y="1160" on="1"/>
        <pt x="172" y="1251" on="1"/>
        <pt x="29" y="1266" on="1"/>
        <pt x="29" y="1339" on="1"/>
        <pt x="56" y="1351" on="0"/>
        <pt x="146" y="1373" on="0"/>
        <pt x="247" y="1390" on="0"/>
        <pt x="344" y="1403" on="0"/>
        <pt x="377" y="1406" on="1"/>
        <pt x="441" y="1406" on="1"/>
        <pt x="441" y="1160" on="1"/>
        <pt x="693" y="1160" on="1"/>
        <pt x="693" y="1046" on="1"/>
        <pt x="441" y="1046" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          41 46 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          22 11 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          53 62 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          51 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          62
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          56 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          53
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrkadesc" xMin="54" yMin="-277" xMax="1152" yMax="935">
      <contour>
        <pt x="756" y="43" on="1"/>
        <pt x="716" y="92" on="0"/>
        <pt x="653" y="189" on="0"/>
        <pt x="626" y="238" on="1"/>
        <pt x="599" y="287" on="0"/>
        <pt x="548" y="382" on="0"/>
        <pt x="522" y="430" on="1"/>
        <pt x="446" y="430" on="1"/>
        <pt x="446" y="118" on="1"/>
        <pt x="507" y="102" on="0"/>
        <pt x="552" y="73" on="1"/>
        <pt x="552" y="0" on="1"/>
        <pt x="54" y="0" on="1"/>
        <pt x="54" y="73" on="1"/>
        <pt x="105" y="103" on="0"/>
        <pt x="178" y="118" on="1"/>
        <pt x="178" y="817" on="1"/>
        <pt x="145" y="824" on="0"/>
        <pt x="83" y="847" on="0"/>
        <pt x="54" y="863" on="1"/>
        <pt x="54" y="935" on="1"/>
        <pt x="531" y="935" on="1"/>
        <pt x="531" y="863" on="1"/>
        <pt x="512" y="849" on="0"/>
        <pt x="477" y="827" on="0"/>
        <pt x="446" y="817" on="1"/>
        <pt x="446" y="512" on="1"/>
        <pt x="533" y="531" on="1"/>
        <pt x="587" y="594" on="0"/>
        <pt x="696" y="734" on="0"/>
        <pt x="741" y="812" on="1"/>
        <pt x="709" y="825" on="0"/>
        <pt x="664" y="848" on="0"/>
        <pt x="640" y="863" on="1"/>
        <pt x="640" y="935" on="1"/>
        <pt x="1068" y="935" on="1"/>
        <pt x="1068" y="863" on="1"/>
        <pt x="1049" y="848" on="0"/>
        <pt x="996" y="827" on="0"/>
        <pt x="950" y="812" on="1"/>
        <pt x="887" y="734" on="0"/>
        <pt x="752" y="595" on="0"/>
        <pt x="689" y="535" on="1"/>
        <pt x="730" y="491" on="0"/>
        <pt x="818" y="382" on="0"/>
        <pt x="909" y="267" on="0"/>
        <pt x="1000" y="155" on="0"/>
        <pt x="1045" y="107" on="1"/>
        <pt x="1152" y="107" on="1"/>
        <pt x="1150" y="62" on="0"/>
        <pt x="1141" y="-37" on="0"/>
        <pt x="1131" y="-136" on="0"/>
        <pt x="1119" y="-233" on="0"/>
        <pt x="1114" y="-277" on="1"/>
        <pt x="1041" y="-277" on="1"/>
        <pt x="940" y="0" on="1"/>
        <pt x="816" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 11 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          42 6 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrkahook" xMin="60" yMin="-396" xMax="1143" yMax="935">
      <contour>
        <pt x="865" y="-40" on="1"/>
        <pt x="865" y="33" on="0"/>
        <pt x="801" y="176" on="0"/>
        <pt x="710" y="300" on="0"/>
        <pt x="612" y="399" on="0"/>
        <pt x="578" y="430" on="1"/>
        <pt x="452" y="430" on="1"/>
        <pt x="452" y="118" on="1"/>
        <pt x="513" y="102" on="0"/>
        <pt x="558" y="73" on="1"/>
        <pt x="558" y="0" on="1"/>
        <pt x="60" y="0" on="1"/>
        <pt x="60" y="73" on="1"/>
        <pt x="111" y="103" on="0"/>
        <pt x="184" y="118" on="1"/>
        <pt x="184" y="817" on="1"/>
        <pt x="151" y="824" on="0"/>
        <pt x="89" y="847" on="0"/>
        <pt x="60" y="863" on="1"/>
        <pt x="60" y="935" on="1"/>
        <pt x="537" y="935" on="1"/>
        <pt x="537" y="863" on="1"/>
        <pt x="519" y="849" on="0"/>
        <pt x="483" y="827" on="0"/>
        <pt x="452" y="817" on="1"/>
        <pt x="452" y="512" on="1"/>
        <pt x="589" y="531" on="1"/>
        <pt x="643" y="594" on="0"/>
        <pt x="757" y="734" on="0"/>
        <pt x="802" y="812" on="1"/>
        <pt x="770" y="825" on="0"/>
        <pt x="726" y="848" on="0"/>
        <pt x="701" y="863" on="1"/>
        <pt x="701" y="935" on="1"/>
        <pt x="1128" y="935" on="1"/>
        <pt x="1128" y="863" on="1"/>
        <pt x="1111" y="848" on="0"/>
        <pt x="1057" y="827" on="0"/>
        <pt x="1011" y="812" on="1"/>
        <pt x="948" y="734" on="0"/>
        <pt x="808" y="595" on="0"/>
        <pt x="745" y="535" on="1"/>
        <pt x="775" y="517" on="0"/>
        <pt x="857" y="456" on="0"/>
        <pt x="945" y="375" on="0"/>
        <pt x="1032" y="277" on="0"/>
        <pt x="1101" y="165" on="0"/>
        <pt x="1143" y="42" on="0"/>
        <pt x="1143" y="-23" on="1"/>
        <pt x="1143" y="-205" on="0"/>
        <pt x="914" y="-396" on="0"/>
        <pt x="688" y="-396" on="1"/>
        <pt x="679" y="-311" on="1"/>
        <pt x="865" y="-262" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            51
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            51 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 10 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          41 35 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          52 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrkavertbar" xMin="44" yMin="0" xMax="1160" yMax="935">
      <contour>
        <pt x="709" y="935" on="1"/>
        <pt x="1132" y="935" on="1"/>
        <pt x="1132" y="863" on="1"/>
        <pt x="1113" y="848" on="0"/>
        <pt x="1056" y="825" on="0"/>
        <pt x="1014" y="812" on="1"/>
        <pt x="1000" y="795" on="0"/>
        <pt x="953" y="721" on="0"/>
        <pt x="899" y="636" on="0"/>
        <pt x="843" y="552" on="0"/>
        <pt x="821" y="525" on="1"/>
        <pt x="833" y="510" on="0"/>
        <pt x="868" y="453" on="0"/>
        <pt x="911" y="380" on="0"/>
        <pt x="960" y="297" on="0"/>
        <pt x="1010" y="217" on="0"/>
        <pt x="1059" y="144" on="0"/>
        <pt x="1082" y="118" on="1"/>
        <pt x="1160" y="73" on="1"/>
        <pt x="1160" y="0" on="1"/>
        <pt x="872" y="0" on="1"/>
        <pt x="811" y="43" on="1"/>
        <pt x="791" y="79" on="0"/>
        <pt x="748" y="176" on="0"/>
        <pt x="706" y="282" on="0"/>
        <pt x="668" y="387" on="0"/>
        <pt x="655" y="430" on="1"/>
        <pt x="627" y="430" on="1"/>
        <pt x="627" y="210" on="1"/>
        <pt x="517" y="210" on="1"/>
        <pt x="517" y="430" on="1"/>
        <pt x="423" y="430" on="1"/>
        <pt x="423" y="118" on="1"/>
        <pt x="453" y="110" on="0"/>
        <pt x="509" y="87" on="0"/>
        <pt x="532" y="73" on="1"/>
        <pt x="532" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="70" y="88" on="0"/>
        <pt x="122" y="110" on="0"/>
        <pt x="159" y="118" on="1"/>
        <pt x="159" y="817" on="1"/>
        <pt x="126" y="824" on="0"/>
        <pt x="73" y="847" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="512" y="935" on="1"/>
        <pt x="512" y="863" on="1"/>
        <pt x="493" y="849" on="0"/>
        <pt x="453" y="827" on="0"/>
        <pt x="423" y="817" on="1"/>
        <pt x="423" y="496" on="1"/>
        <pt x="517" y="509" on="1"/>
        <pt x="517" y="759" on="1"/>
        <pt x="627" y="759" on="1"/>
        <pt x="627" y="524" on="1"/>
        <pt x="672" y="531" on="1"/>
        <pt x="679" y="542" on="0"/>
        <pt x="701" y="584" on="0"/>
        <pt x="727" y="636" on="0"/>
        <pt x="755" y="694" on="0"/>
        <pt x="781" y="749" on="0"/>
        <pt x="803" y="796" on="0"/>
        <pt x="810" y="812" on="1"/>
        <pt x="778" y="825" on="0"/>
        <pt x="734" y="848" on="0"/>
        <pt x="709" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          26 68 69
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          67 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          26 0 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          10 26 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          28 26 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          53 26 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          54 53 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          53
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrobar" xMin="44" yMin="-23" xMax="980" yMax="958">
      <contour>
        <pt x="44" y="468" on="1"/>
        <pt x="44" y="579" on="0"/>
        <pt x="108" y="759" on="0"/>
        <pt x="228" y="888" on="0"/>
        <pt x="402" y="958" on="0"/>
        <pt x="512" y="958" on="1"/>
        <pt x="639" y="958" on="0"/>
        <pt x="817" y="879" on="0"/>
        <pt x="929" y="745" on="0"/>
        <pt x="980" y="567" on="0"/>
        <pt x="980" y="468" on="1"/>
        <pt x="980" y="361" on="0"/>
        <pt x="915" y="181" on="0"/>
        <pt x="793" y="50" on="0"/>
        <pt x="620" y="-23" on="0"/>
        <pt x="512" y="-23" on="1"/>
        <pt x="393" y="-23" on="0"/>
        <pt x="217" y="53" on="0"/>
        <pt x="101" y="185" on="0"/>
        <pt x="44" y="364" on="0"/>
      </contour>
      <contour>
        <pt x="535" y="92" on="1"/>
        <pt x="599" y="92" on="0"/>
        <pt x="681" y="242" on="0"/>
        <pt x="688" y="404" on="1"/>
        <pt x="336" y="404" on="1"/>
        <pt x="338" y="338" on="0"/>
        <pt x="357" y="224" on="0"/>
        <pt x="401" y="140" on="0"/>
        <pt x="476" y="92" on="0"/>
      </contour>
      <contour>
        <pt x="497" y="844" on="1"/>
        <pt x="421" y="844" on="0"/>
        <pt x="343" y="695" on="0"/>
        <pt x="336" y="535" on="1"/>
        <pt x="688" y="535" on="1"/>
        <pt x="685" y="601" on="0"/>
        <pt x="664" y="714" on="0"/>
        <pt x="620" y="797" on="0"/>
        <pt x="549" y="844" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          20 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          32 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 32 79 32 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          23 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrobarcyrbreve" xMin="44" yMin="-23" xMax="980" yMax="1444">
      <component glyphName="cyrobar" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="4" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrobardieresis" xMin="44" yMin="-23" xMax="980" yMax="1422">
      <component glyphName="cyrobar" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="171" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrobardieresiscyrbreve" xMin="44" yMin="-23" xMax="980" yMax="1747">
      <component glyphName="cyrobar" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrBreve" x="-26" y="0" flags="0x4"/>
      <component glyphName="dieresis" x="171" y="-27" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          71
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          77
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          71
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrocyrbreve" xMin="48" yMin="-23" xMax="976" yMax="1444">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="4" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          36
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrodieresis" xMin="48" yMin="-23" xMax="976" yMax="1422">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="171" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrodotaccent" xMin="48" yMin="-23" xMax="976" yMax="1431">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="171" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrohook" xMin="50" yMin="-23" xMax="1086" yMax="958">
      <contour>
        <pt x="1086" y="102" on="1"/>
        <pt x="1075" y="70" on="0"/>
        <pt x="1035" y="23" on="0"/>
        <pt x="987" y="-8" on="0"/>
        <pt x="935" y="-23" on="0"/>
        <pt x="912" y="-23" on="1"/>
        <pt x="867" y="-23" on="0"/>
        <pt x="789" y="2" on="0"/>
        <pt x="748" y="30" on="1"/>
        <pt x="702" y="4" on="0"/>
        <pt x="583" y="-23" on="0"/>
        <pt x="516" y="-23" on="1"/>
        <pt x="407" y="-23" on="0"/>
        <pt x="245" y="45" on="0"/>
        <pt x="183" y="108" on="1"/>
        <pt x="119" y="172" on="0"/>
        <pt x="50" y="353" on="0"/>
        <pt x="50" y="468" on="1"/>
        <pt x="50" y="571" on="0"/>
        <pt x="107" y="751" on="0"/>
        <pt x="158" y="817" on="1"/>
        <pt x="206" y="880" on="0"/>
        <pt x="340" y="958" on="0"/>
        <pt x="412" y="958" on="1"/>
        <pt x="451" y="958" on="0"/>
        <pt x="500" y="941" on="0"/>
        <pt x="531" y="912" on="0"/>
        <pt x="550" y="876" on="0"/>
        <pt x="558" y="858" on="1"/>
        <pt x="549" y="845" on="1"/>
        <pt x="538" y="848" on="0"/>
        <pt x="523" y="850" on="0"/>
        <pt x="509" y="851" on="0"/>
        <pt x="495" y="851" on="0"/>
        <pt x="485" y="851" on="1"/>
        <pt x="438" y="851" on="0"/>
        <pt x="372" y="797" on="0"/>
        <pt x="330" y="699" on="0"/>
        <pt x="311" y="562" on="0"/>
        <pt x="311" y="478" on="1"/>
        <pt x="311" y="397" on="0"/>
        <pt x="343" y="254" on="0"/>
        <pt x="408" y="146" on="0"/>
        <pt x="506" y="84" on="0"/>
        <pt x="572" y="84" on="1"/>
        <pt x="598" y="84" on="0"/>
        <pt x="640" y="95" on="0"/>
        <pt x="648" y="100" on="1"/>
        <pt x="605" y="120" on="0"/>
        <pt x="535" y="191" on="0"/>
        <pt x="485" y="287" on="0"/>
        <pt x="457" y="404" on="0"/>
        <pt x="457" y="469" on="1"/>
        <pt x="457" y="569" on="0"/>
        <pt x="507" y="709" on="0"/>
        <pt x="587" y="796" on="0"/>
        <pt x="684" y="836" on="0"/>
        <pt x="732" y="836" on="1"/>
        <pt x="792" y="836" on="0"/>
        <pt x="897" y="800" on="0"/>
        <pt x="975" y="718" on="0"/>
        <pt x="1020" y="586" on="0"/>
        <pt x="1020" y="490" on="1"/>
        <pt x="1020" y="460" on="0"/>
        <pt x="1013" y="397" on="0"/>
        <pt x="1000" y="334" on="0"/>
        <pt x="981" y="274" on="0"/>
        <pt x="969" y="249" on="1"/>
        <pt x="954" y="217" on="0"/>
        <pt x="918" y="165" on="0"/>
        <pt x="884" y="125" on="0"/>
        <pt x="856" y="99" on="0"/>
        <pt x="848" y="93" on="1"/>
        <pt x="870" y="86" on="0"/>
        <pt x="905" y="80" on="0"/>
        <pt x="935" y="80" on="1"/>
        <pt x="967" y="80" on="0"/>
        <pt x="1040" y="107" on="0"/>
        <pt x="1065" y="127" on="1"/>
      </contour>
      <contour>
        <pt x="645" y="467" on="1"/>
        <pt x="645" y="423" on="0"/>
        <pt x="656" y="332" on="0"/>
        <pt x="680" y="246" on="0"/>
        <pt x="718" y="170" on="0"/>
        <pt x="745" y="142" on="1"/>
        <pt x="764" y="169" on="0"/>
        <pt x="797" y="229" on="0"/>
        <pt x="819" y="309" on="0"/>
        <pt x="832" y="411" on="0"/>
        <pt x="832" y="480" on="1"/>
        <pt x="832" y="531" on="0"/>
        <pt x="825" y="622" on="0"/>
        <pt x="804" y="689" on="0"/>
        <pt x="767" y="729" on="0"/>
        <pt x="737" y="729" on="1"/>
        <pt x="705" y="729" on="0"/>
        <pt x="669" y="670" on="0"/>
        <pt x="650" y="586" on="0"/>
        <pt x="645" y="497" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          57 23 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          72
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          75
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          84
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          94 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyromacron" xMin="48" yMin="-23" xMax="976" yMax="1334">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="0" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          36
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrpehook" xMin="50" yMin="-396" xMax="1661" yMax="935">
      <contour>
        <pt x="1391" y="196" on="1"/>
        <pt x="1391" y="357" on="0"/>
        <pt x="1319" y="491" on="0"/>
        <pt x="1233" y="491" on="1"/>
        <pt x="1165" y="491" on="0"/>
        <pt x="1074" y="419" on="0"/>
        <pt x="1051" y="357" on="1"/>
        <pt x="1051" y="118" on="1"/>
        <pt x="1115" y="107" on="0"/>
        <pt x="1174" y="73" on="1"/>
        <pt x="1174" y="0" on="1"/>
        <pt x="680" y="0" on="1"/>
        <pt x="680" y="73" on="1"/>
        <pt x="698" y="86" on="0"/>
        <pt x="740" y="109" on="0"/>
        <pt x="782" y="118" on="1"/>
        <pt x="782" y="829" on="1"/>
        <pt x="443" y="829" on="1"/>
        <pt x="443" y="118" on="1"/>
        <pt x="481" y="107" on="0"/>
        <pt x="526" y="84" on="0"/>
        <pt x="546" y="73" on="1"/>
        <pt x="546" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="73" on="1"/>
        <pt x="85" y="93" on="0"/>
        <pt x="145" y="114" on="0"/>
        <pt x="174" y="118" on="1"/>
        <pt x="174" y="817" on="1"/>
        <pt x="135" y="827" on="0"/>
        <pt x="71" y="849" on="0"/>
        <pt x="50" y="863" on="1"/>
        <pt x="50" y="935" on="1"/>
        <pt x="1174" y="935" on="1"/>
        <pt x="1174" y="863" on="1"/>
        <pt x="1151" y="848" on="0"/>
        <pt x="1090" y="821" on="0"/>
        <pt x="1051" y="817" on="1"/>
        <pt x="1051" y="462" on="1"/>
        <pt x="1088" y="539" on="0"/>
        <pt x="1242" y="639" on="0"/>
        <pt x="1336" y="639" on="1"/>
        <pt x="1418" y="639" on="0"/>
        <pt x="1538" y="598" on="0"/>
        <pt x="1620" y="501" on="0"/>
        <pt x="1661" y="344" on="0"/>
        <pt x="1661" y="228" on="1"/>
        <pt x="1661" y="66" on="1"/>
        <pt x="1659" y="-168" on="0"/>
        <pt x="1447" y="-396" on="0"/>
        <pt x="1222" y="-396" on="1"/>
        <pt x="1214" y="-311" on="1"/>
        <pt x="1315" y="-284" on="0"/>
        <pt x="1391" y="-90" on="0"/>
        <pt x="1391" y="66" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            50
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            50 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          41 32 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrstraightU" xMin="33" yMin="0" xMax="1445" yMax="1356">
      <component glyphName="Y" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="cyrstraightUbar" xMin="33" yMin="0" xMax="1445" yMax="1356">
      <contour>
        <pt x="970" y="1356" on="1"/>
        <pt x="1445" y="1356" on="1"/>
        <pt x="1445" y="1282" on="1"/>
        <pt x="1416" y="1264" on="0"/>
        <pt x="1344" y="1232" on="0"/>
        <pt x="1307" y="1225" on="1"/>
        <pt x="901" y="568" on="1"/>
        <pt x="1175" y="568" on="1"/>
        <pt x="1175" y="439" on="1"/>
        <pt x="901" y="439" on="1"/>
        <pt x="901" y="130" on="1"/>
        <pt x="940" y="126" on="0"/>
        <pt x="1016" y="93" on="0"/>
        <pt x="1048" y="74" on="1"/>
        <pt x="1048" y="0" on="1"/>
        <pt x="452" y="0" on="1"/>
        <pt x="452" y="74" on="1"/>
        <pt x="484" y="91" on="0"/>
        <pt x="566" y="122" on="0"/>
        <pt x="611" y="130" on="1"/>
        <pt x="611" y="439" on="1"/>
        <pt x="338" y="439" on="1"/>
        <pt x="338" y="568" on="1"/>
        <pt x="609" y="568" on="1"/>
        <pt x="190" y="1225" on="1"/>
        <pt x="145" y="1234" on="0"/>
        <pt x="66" y="1264" on="0"/>
        <pt x="33" y="1282" on="1"/>
        <pt x="33" y="1356" on="1"/>
        <pt x="668" y="1356" on="1"/>
        <pt x="668" y="1282" on="1"/>
        <pt x="641" y="1266" on="0"/>
        <pt x="572" y="1236" on="0"/>
        <pt x="524" y="1225" on="1"/>
        <pt x="831" y="707" on="1"/>
        <pt x="1125" y="1225" on="1"/>
        <pt x="1080" y="1236" on="0"/>
        <pt x="999" y="1266" on="0"/>
        <pt x="970" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          34 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 0 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          34 14 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrstraightu" xMin="10" yMin="-375" xMax="1014" yMax="935">
      <contour>
        <pt x="782" y="-375" on="1"/>
        <pt x="266" y="-375" on="1"/>
        <pt x="266" y="-301" on="1"/>
        <pt x="293" y="-286" on="0"/>
        <pt x="354" y="-266" on="0"/>
        <pt x="389" y="-257" on="1"/>
        <pt x="389" y="73" on="1"/>
        <pt x="108" y="817" on="1"/>
        <pt x="82" y="827" on="0"/>
        <pt x="33" y="849" on="0"/>
        <pt x="10" y="863" on="1"/>
        <pt x="10" y="935" on="1"/>
        <pt x="502" y="935" on="1"/>
        <pt x="502" y="865" on="1"/>
        <pt x="477" y="851" on="0"/>
        <pt x="426" y="827" on="0"/>
        <pt x="394" y="817" on="1"/>
        <pt x="542" y="368" on="1"/>
        <pt x="582" y="226" on="1"/>
        <pt x="586" y="226" on="1"/>
        <pt x="624" y="370" on="1"/>
        <pt x="766" y="817" on="1"/>
        <pt x="707" y="833" on="0"/>
        <pt x="664" y="863" on="1"/>
        <pt x="664" y="935" on="1"/>
        <pt x="1014" y="935" on="1"/>
        <pt x="1014" y="863" on="1"/>
        <pt x="996" y="849" on="0"/>
        <pt x="951" y="827" on="0"/>
        <pt x="918" y="817" on="1"/>
        <pt x="658" y="72" on="1"/>
        <pt x="658" y="-257" on="1"/>
        <pt x="696" y="-266" on="0"/>
        <pt x="756" y="-286" on="0"/>
        <pt x="782" y="-301" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          17 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          34 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          18 35 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrstraightubar" xMin="10" yMin="-375" xMax="1014" yMax="935">
      <contour>
        <pt x="782" y="-375" on="1"/>
        <pt x="266" y="-375" on="1"/>
        <pt x="266" y="-301" on="1"/>
        <pt x="293" y="-286" on="0"/>
        <pt x="354" y="-266" on="0"/>
        <pt x="389" y="-257" on="1"/>
        <pt x="389" y="0" on="1"/>
        <pt x="189" y="0" on="1"/>
        <pt x="189" y="114" on="1"/>
        <pt x="373" y="114" on="1"/>
        <pt x="108" y="817" on="1"/>
        <pt x="82" y="827" on="0"/>
        <pt x="33" y="849" on="0"/>
        <pt x="10" y="863" on="1"/>
        <pt x="10" y="935" on="1"/>
        <pt x="502" y="935" on="1"/>
        <pt x="502" y="865" on="1"/>
        <pt x="477" y="851" on="0"/>
        <pt x="426" y="827" on="0"/>
        <pt x="394" y="817" on="1"/>
        <pt x="542" y="368" on="1"/>
        <pt x="582" y="226" on="1"/>
        <pt x="586" y="226" on="1"/>
        <pt x="624" y="370" on="1"/>
        <pt x="766" y="817" on="1"/>
        <pt x="707" y="833" on="0"/>
        <pt x="664" y="863" on="1"/>
        <pt x="664" y="935" on="1"/>
        <pt x="1014" y="935" on="1"/>
        <pt x="1014" y="863" on="1"/>
        <pt x="996" y="849" on="0"/>
        <pt x="951" y="827" on="0"/>
        <pt x="918" y="817" on="1"/>
        <pt x="672" y="114" on="1"/>
        <pt x="858" y="114" on="1"/>
        <pt x="858" y="0" on="1"/>
        <pt x="658" y="0" on="1"/>
        <pt x="658" y="-257" on="1"/>
        <pt x="696" y="-266" on="0"/>
        <pt x="756" y="-286" on="0"/>
        <pt x="782" y="-301" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          40 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 6 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrtedesc" xMin="28" yMin="-277" xMax="977" yMax="935">
      <contour>
        <pt x="235" y="73" on="1"/>
        <pt x="265" y="88" on="0"/>
        <pt x="337" y="110" on="0"/>
        <pt x="369" y="118" on="1"/>
        <pt x="369" y="829" on="1"/>
        <pt x="235" y="829" on="1"/>
        <pt x="153" y="571" on="1"/>
        <pt x="74" y="571" on="1"/>
        <pt x="65" y="611" on="0"/>
        <pt x="48" y="707" on="0"/>
        <pt x="37" y="807" on="0"/>
        <pt x="28" y="899" on="0"/>
        <pt x="28" y="935" on="1"/>
        <pt x="977" y="935" on="1"/>
        <pt x="977" y="901" on="0"/>
        <pt x="970" y="809" on="0"/>
        <pt x="957" y="709" on="0"/>
        <pt x="939" y="611" on="0"/>
        <pt x="931" y="571" on="1"/>
        <pt x="851" y="571" on="1"/>
        <pt x="769" y="829" on="1"/>
        <pt x="637" y="829" on="1"/>
        <pt x="637" y="107" on="1"/>
        <pt x="827" y="107" on="1"/>
        <pt x="824" y="16" on="0"/>
        <pt x="800" y="-189" on="0"/>
        <pt x="791" y="-277" on="1"/>
        <pt x="718" y="-277" on="1"/>
        <pt x="617" y="0" on="1"/>
        <pt x="235" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 4 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrtetse" xMin="14" yMin="-277" xMax="1235" yMax="935">
      <contour>
        <pt x="487" y="107" on="1"/>
        <pt x="824" y="107" on="1"/>
        <pt x="824" y="817" on="1"/>
        <pt x="798" y="827" on="0"/>
        <pt x="762" y="846" on="0"/>
        <pt x="740" y="863" on="1"/>
        <pt x="740" y="935" on="1"/>
        <pt x="1196" y="935" on="1"/>
        <pt x="1196" y="863" on="1"/>
        <pt x="1171" y="849" on="0"/>
        <pt x="1122" y="827" on="0"/>
        <pt x="1082" y="817" on="1"/>
        <pt x="1082" y="107" on="1"/>
        <pt x="1235" y="107" on="1"/>
        <pt x="1230" y="7" on="0"/>
        <pt x="1209" y="-182" on="0"/>
        <pt x="1197" y="-277" on="1"/>
        <pt x="1126" y="-277" on="1"/>
        <pt x="1024" y="0" on="1"/>
        <pt x="107" y="0" on="1"/>
        <pt x="107" y="73" on="1"/>
        <pt x="156" y="103" on="0"/>
        <pt x="229" y="118" on="1"/>
        <pt x="229" y="829" on="1"/>
        <pt x="188" y="829" on="1"/>
        <pt x="111" y="581" on="1"/>
        <pt x="41" y="581" on="1"/>
        <pt x="35" y="620" on="0"/>
        <pt x="26" y="714" on="0"/>
        <pt x="18" y="809" on="0"/>
        <pt x="14" y="899" on="0"/>
        <pt x="14" y="935" on="1"/>
        <pt x="702" y="935" on="1"/>
        <pt x="702" y="902" on="0"/>
        <pt x="698" y="813" on="0"/>
        <pt x="691" y="717" on="0"/>
        <pt x="682" y="621" on="0"/>
        <pt x="676" y="581" on="1"/>
        <pt x="606" y="581" on="1"/>
        <pt x="528" y="829" on="1"/>
        <pt x="487" y="829" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          38 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 23 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyruacute" xMin="15" yMin="-402" xMax="1016" yMax="1482">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="309" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrudblacute" xMin="15" yMin="-402" xMax="1016" yMax="1481">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="298" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrudieresis" xMin="15" yMin="-402" xMax="1016" yMax="1422">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="220" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrumacron" xMin="15" yMin="-402" xMax="1016" yMax="1334">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="35" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryacyrbreve" xMin="24" yMin="0" xMax="1064" yMax="1444">
      <component glyphName="afii10097" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="82" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryamacron" xMin="24" yMin="0" xMax="1064" yMax="1334">
      <component glyphName="afii10097" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="122" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryerucyrbreve" xMin="50" yMin="-8" xMax="1549" yMax="1444">
      <component glyphName="afii10093" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="291" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          74
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryerudieresis" xMin="50" yMin="-8" xMax="1549" yMax="1422">
      <component glyphName="afii10093" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="458" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          86
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryerumacron" xMin="50" yMin="-8" xMax="1549" yMax="1334">
      <component glyphName="afii10093" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="287" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          74
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryucyrbreve" xMin="48" yMin="-23" xMax="1517" yMax="1444">
      <component glyphName="afii10096" x="0" y="0" flags="0x204"/>
      <component glyphName="cyrbreve" x="310" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyryumacron" xMin="48" yMin="-23" xMax="1517" yMax="1334">
      <component glyphName="afii10096" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="360" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzecaron" xMin="16" yMin="-23" xMax="779" yMax="1494">
      <component glyphName="afii10073" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="46" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzedieresis" xMin="16" yMin="-23" xMax="779" yMax="1422">
      <component glyphName="afii10073" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="67" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          80
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzetail" xMin="16" yMin="-337" xMax="779" yMax="958">
      <contour>
        <pt x="334" y="99" on="1"/>
        <pt x="371" y="99" on="0"/>
        <pt x="434" y="133" on="0"/>
        <pt x="456" y="159" on="1"/>
        <pt x="476" y="183" on="0"/>
        <pt x="493" y="246" on="0"/>
        <pt x="493" y="278" on="1"/>
        <pt x="493" y="343" on="0"/>
        <pt x="423" y="420" on="0"/>
        <pt x="372" y="427" on="1"/>
        <pt x="220" y="398" on="1"/>
        <pt x="210" y="422" on="0"/>
        <pt x="209" y="461" on="1"/>
        <pt x="207" y="503" on="0"/>
        <pt x="220" y="528" on="1"/>
        <pt x="391" y="528" on="1"/>
        <pt x="405" y="539" on="0"/>
        <pt x="427" y="560" on="0"/>
        <pt x="436" y="571" on="1"/>
        <pt x="442" y="578" on="0"/>
        <pt x="454" y="606" on="0"/>
        <pt x="463" y="641" on="0"/>
        <pt x="469" y="679" on="0"/>
        <pt x="469" y="697" on="1"/>
        <pt x="469" y="769" on="0"/>
        <pt x="408" y="851" on="0"/>
        <pt x="340" y="851" on="1"/>
        <pt x="315" y="851" on="0"/>
        <pt x="275" y="846" on="0"/>
        <pt x="255" y="840" on="1"/>
        <pt x="190" y="639" on="1"/>
        <pt x="127" y="639" on="1"/>
        <pt x="96" y="701" on="0"/>
        <pt x="77" y="765" on="1"/>
        <pt x="69" y="794" on="0"/>
        <pt x="56" y="858" on="0"/>
        <pt x="52" y="892" on="1"/>
        <pt x="73" y="902" on="0"/>
        <pt x="131" y="925" on="0"/>
        <pt x="212" y="945" on="0"/>
        <pt x="317" y="958" on="0"/>
        <pt x="385" y="958" on="1"/>
        <pt x="570" y="958" on="0"/>
        <pt x="741" y="838" on="0"/>
        <pt x="741" y="729" on="1"/>
        <pt x="741" y="680" on="0"/>
        <pt x="708" y="605" on="0"/>
        <pt x="650" y="549" on="0"/>
        <pt x="572" y="510" on="0"/>
        <pt x="527" y="497" on="1"/>
        <pt x="556" y="497" on="0"/>
        <pt x="642" y="473" on="0"/>
        <pt x="722" y="420" on="0"/>
        <pt x="779" y="337" on="0"/>
        <pt x="779" y="278" on="1"/>
        <pt x="779" y="155" on="0"/>
        <pt x="645" y="8" on="0"/>
        <pt x="502" y="-14" on="1"/>
        <pt x="490" y="-99" on="0"/>
        <pt x="458" y="-259" on="0"/>
        <pt x="431" y="-337" on="1"/>
        <pt x="348" y="-337" on="1"/>
        <pt x="324" y="-253" on="0"/>
        <pt x="291" y="-102" on="0"/>
        <pt x="277" y="-18" on="1"/>
        <pt x="189" y="-9" on="0"/>
        <pt x="61" y="38" on="0"/>
        <pt x="16" y="69" on="1"/>
        <pt x="67" y="245" on="1"/>
        <pt x="122" y="245" on="1"/>
        <pt x="135" y="234" on="0"/>
        <pt x="171" y="201" on="0"/>
        <pt x="190" y="180" on="1"/>
        <pt x="205" y="163" on="0"/>
        <pt x="234" y="128" on="0"/>
        <pt x="249" y="110" on="1"/>
        <pt x="269" y="103" on="0"/>
        <pt x="302" y="99" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            64 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 41 64
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          143 15 159 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 5 values pushed */
          159 15 175 15 2
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 2 values pushed */
          9 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 26 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          64
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          69 9 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzetail.alt" xMin="16" yMin="-385" xMax="779" yMax="958">
      <contour>
        <pt x="334" y="99" on="1"/>
        <pt x="371" y="99" on="0"/>
        <pt x="434" y="133" on="0"/>
        <pt x="456" y="159" on="1"/>
        <pt x="476" y="183" on="0"/>
        <pt x="493" y="246" on="0"/>
        <pt x="493" y="278" on="1"/>
        <pt x="493" y="343" on="0"/>
        <pt x="423" y="420" on="0"/>
        <pt x="372" y="427" on="1"/>
        <pt x="220" y="398" on="1"/>
        <pt x="210" y="422" on="0"/>
        <pt x="209" y="461" on="1"/>
        <pt x="207" y="503" on="0"/>
        <pt x="220" y="528" on="1"/>
        <pt x="391" y="528" on="1"/>
        <pt x="405" y="539" on="0"/>
        <pt x="427" y="560" on="0"/>
        <pt x="436" y="571" on="1"/>
        <pt x="442" y="578" on="0"/>
        <pt x="454" y="606" on="0"/>
        <pt x="463" y="641" on="0"/>
        <pt x="469" y="679" on="0"/>
        <pt x="469" y="697" on="1"/>
        <pt x="469" y="769" on="0"/>
        <pt x="408" y="851" on="0"/>
        <pt x="340" y="851" on="1"/>
        <pt x="315" y="851" on="0"/>
        <pt x="275" y="846" on="0"/>
        <pt x="255" y="840" on="1"/>
        <pt x="190" y="639" on="1"/>
        <pt x="127" y="639" on="1"/>
        <pt x="96" y="701" on="0"/>
        <pt x="77" y="765" on="1"/>
        <pt x="69" y="794" on="0"/>
        <pt x="56" y="858" on="0"/>
        <pt x="52" y="892" on="1"/>
        <pt x="73" y="902" on="0"/>
        <pt x="131" y="925" on="0"/>
        <pt x="212" y="945" on="0"/>
        <pt x="317" y="958" on="0"/>
        <pt x="385" y="958" on="1"/>
        <pt x="570" y="958" on="0"/>
        <pt x="741" y="838" on="0"/>
        <pt x="741" y="729" on="1"/>
        <pt x="741" y="680" on="0"/>
        <pt x="708" y="605" on="0"/>
        <pt x="650" y="549" on="0"/>
        <pt x="572" y="510" on="0"/>
        <pt x="527" y="497" on="1"/>
        <pt x="556" y="497" on="0"/>
        <pt x="642" y="473" on="0"/>
        <pt x="722" y="420" on="0"/>
        <pt x="779" y="337" on="0"/>
        <pt x="779" y="278" on="1"/>
        <pt x="779" y="144" on="0"/>
        <pt x="619" y="-7" on="0"/>
        <pt x="448" y="-20" on="1"/>
        <pt x="495" y="-58" on="0"/>
        <pt x="550" y="-156" on="0"/>
        <pt x="550" y="-215" on="1"/>
        <pt x="550" y="-256" on="0"/>
        <pt x="526" y="-319" on="0"/>
        <pt x="483" y="-362" on="0"/>
        <pt x="426" y="-385" on="0"/>
        <pt x="393" y="-385" on="1"/>
        <pt x="359" y="-385" on="0"/>
        <pt x="303" y="-366" on="0"/>
        <pt x="264" y="-331" on="0"/>
        <pt x="242" y="-284" on="0"/>
        <pt x="242" y="-255" on="1"/>
        <pt x="242" y="-225" on="0"/>
        <pt x="262" y="-179" on="0"/>
        <pt x="295" y="-148" on="0"/>
        <pt x="339" y="-132" on="0"/>
        <pt x="363" y="-132" on="1"/>
        <pt x="375" y="-132" on="0"/>
        <pt x="388" y="-134" on="0"/>
        <pt x="395" y="-134" on="1"/>
        <pt x="385" y="-62" on="0"/>
        <pt x="317" y="-21" on="1"/>
        <pt x="213" y="-15" on="0"/>
        <pt x="67" y="35" on="0"/>
        <pt x="16" y="69" on="1"/>
        <pt x="67" y="245" on="1"/>
        <pt x="122" y="245" on="1"/>
        <pt x="135" y="234" on="0"/>
        <pt x="171" y="201" on="0"/>
        <pt x="190" y="180" on="1"/>
        <pt x="205" y="163" on="0"/>
        <pt x="234" y="128" on="0"/>
        <pt x="249" y="110" on="1"/>
        <pt x="269" y="103" on="0"/>
        <pt x="302" y="99" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            65
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            65 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            80
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            80 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 41 80
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          143 15 159 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 15 79 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          127 15 143 15 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          9 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 26 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          49 15 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          80
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          75 65 80
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          75
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          85 9 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzhedesc" xMin="15" yMin="-277" xMax="1470" yMax="935">
      <contour>
        <pt x="1100" y="43" on="1"/>
        <pt x="1074" y="79" on="0"/>
        <pt x="1020" y="184" on="0"/>
        <pt x="970" y="295" on="0"/>
        <pt x="926" y="395" on="0"/>
        <pt x="911" y="427" on="1"/>
        <pt x="848" y="427" on="1"/>
        <pt x="848" y="118" on="1"/>
        <pt x="907" y="103" on="0"/>
        <pt x="961" y="73" on="1"/>
        <pt x="961" y="0" on="1"/>
        <pt x="500" y="0" on="1"/>
        <pt x="500" y="73" on="1"/>
        <pt x="526" y="86" on="0"/>
        <pt x="576" y="109" on="0"/>
        <pt x="605" y="118" on="1"/>
        <pt x="605" y="438" on="1"/>
        <pt x="531" y="419" on="1"/>
        <pt x="517" y="393" on="0"/>
        <pt x="476" y="303" on="0"/>
        <pt x="425" y="197" on="0"/>
        <pt x="365" y="88" on="0"/>
        <pt x="332" y="43" on="1"/>
        <pt x="277" y="0" on="1"/>
        <pt x="15" y="0" on="1"/>
        <pt x="15" y="73" on="1"/>
        <pt x="94" y="118" on="1"/>
        <pt x="140" y="172" on="0"/>
        <pt x="218" y="288" on="0"/>
        <pt x="286" y="396" on="0"/>
        <pt x="344" y="491" on="0"/>
        <pt x="370" y="524" on="1"/>
        <pt x="336" y="560" on="0"/>
        <pt x="275" y="629" on="0"/>
        <pt x="217" y="700" on="0"/>
        <pt x="161" y="775" on="0"/>
        <pt x="131" y="817" on="1"/>
        <pt x="81" y="829" on="0"/>
        <pt x="37" y="863" on="1"/>
        <pt x="37" y="935" on="1"/>
        <pt x="427" y="935" on="1"/>
        <pt x="427" y="863" on="1"/>
        <pt x="394" y="837" on="0"/>
        <pt x="335" y="817" on="1"/>
        <pt x="360" y="772" on="0"/>
        <pt x="404" y="701" on="0"/>
        <pt x="451" y="634" on="0"/>
        <pt x="503" y="564" on="0"/>
        <pt x="536" y="520" on="1"/>
        <pt x="605" y="520" on="1"/>
        <pt x="605" y="817" on="1"/>
        <pt x="574" y="825" on="0"/>
        <pt x="530" y="848" on="0"/>
        <pt x="510" y="863" on="1"/>
        <pt x="510" y="935" on="1"/>
        <pt x="941" y="935" on="1"/>
        <pt x="941" y="863" on="1"/>
        <pt x="921" y="848" on="0"/>
        <pt x="882" y="825" on="0"/>
        <pt x="848" y="817" on="1"/>
        <pt x="848" y="509" on="1"/>
        <pt x="925" y="528" on="1"/>
        <pt x="957" y="572" on="0"/>
        <pt x="1007" y="640" on="0"/>
        <pt x="1050" y="705" on="0"/>
        <pt x="1094" y="773" on="0"/>
        <pt x="1120" y="817" on="1"/>
        <pt x="1094" y="827" on="0"/>
        <pt x="1048" y="846" on="0"/>
        <pt x="1026" y="863" on="1"/>
        <pt x="1026" y="935" on="1"/>
        <pt x="1416" y="935" on="1"/>
        <pt x="1416" y="863" on="1"/>
        <pt x="1400" y="852" on="0"/>
        <pt x="1348" y="828" on="0"/>
        <pt x="1311" y="817" on="1"/>
        <pt x="1250" y="739" on="0"/>
        <pt x="1135" y="607" on="0"/>
        <pt x="1077" y="535" on="1"/>
        <pt x="1101" y="501" on="0"/>
        <pt x="1164" y="400" on="0"/>
        <pt x="1238" y="283" on="0"/>
        <pt x="1322" y="161" on="0"/>
        <pt x="1368" y="107" on="1"/>
        <pt x="1470" y="107" on="1"/>
        <pt x="1467" y="16" on="0"/>
        <pt x="1455" y="-86" on="1"/>
        <pt x="1434" y="-277" on="1"/>
        <pt x="1361" y="-277" on="1"/>
        <pt x="1260" y="0" on="1"/>
        <pt x="1153" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          6 91 92
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          87
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            54
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            54 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            70
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            70 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            89
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            89 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          48 39 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          143 48 159 48 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          63 48 79 48 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          5 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          31 48 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          38 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          72
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          78 61 70
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          89
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          83 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="cyrzhedieresis" xMin="21" yMin="0" xMax="1464" yMax="1422">
      <component glyphName="afii10072" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="401" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          97
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          100
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="76" yMin="-23" xMax="1103" yMax="1377">
      <contour>
        <pt x="705" y="185" on="1"/>
        <pt x="695" y="144" on="0"/>
        <pt x="648" y="69" on="0"/>
        <pt x="579" y="12" on="0"/>
        <pt x="492" y="-23" on="0"/>
        <pt x="444" y="-23" on="1"/>
        <pt x="258" y="-23" on="0"/>
        <pt x="76" y="222" on="0"/>
        <pt x="76" y="463" on="1"/>
        <pt x="76" y="586" on="0"/>
        <pt x="141" y="770" on="0"/>
        <pt x="260" y="891" on="0"/>
        <pt x="428" y="952" on="0"/>
        <pt x="532" y="952" on="1"/>
        <pt x="587" y="952" on="0"/>
        <pt x="667" y="936" on="0"/>
        <pt x="711" y="923" on="1"/>
        <pt x="711" y="1222" on="1"/>
        <pt x="568" y="1237" on="1"/>
        <pt x="568" y="1310" on="1"/>
        <pt x="595" y="1321" on="0"/>
        <pt x="686" y="1341" on="0"/>
        <pt x="787" y="1358" on="0"/>
        <pt x="884" y="1372" on="0"/>
        <pt x="916" y="1377" on="1"/>
        <pt x="980" y="1377" on="1"/>
        <pt x="980" y="132" on="1"/>
        <pt x="1103" y="118" on="1"/>
        <pt x="1103" y="52" on="1"/>
        <pt x="1077" y="39" on="0"/>
        <pt x="995" y="17" on="0"/>
        <pt x="905" y="-1" on="0"/>
        <pt x="821" y="-15" on="0"/>
        <pt x="793" y="-18" on="1"/>
        <pt x="729" y="-18" on="1"/>
        <pt x="713" y="185" on="1"/>
      </contour>
      <contour>
        <pt x="534" y="127" on="1"/>
        <pt x="591" y="127" on="0"/>
        <pt x="683" y="213" on="0"/>
        <pt x="711" y="309" on="1"/>
        <pt x="711" y="812" on="1"/>
        <pt x="687" y="825" on="0"/>
        <pt x="614" y="846" on="0"/>
        <pt x="566" y="846" on="1"/>
        <pt x="457" y="846" on="0"/>
        <pt x="367" y="659" on="0"/>
        <pt x="367" y="472" on="1"/>
        <pt x="367" y="434" on="0"/>
        <pt x="371" y="359" on="0"/>
        <pt x="380" y="292" on="0"/>
        <pt x="394" y="236" on="0"/>
        <pt x="403" y="218" on="1"/>
        <pt x="425" y="173" on="0"/>
        <pt x="489" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          13 54 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          27 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          35 33 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dacute" xMin="76" yMin="-23" xMax="1531" yMax="1482">
      <component glyphName="d" x="0" y="0" flags="0x4"/>
      <component glyphName="acute" x="985" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="dagger" xMin="80" yMin="-388" xMax="944" yMax="1362">
      <contour>
        <pt x="106" y="745" on="1"/>
        <pt x="94" y="761" on="0"/>
        <pt x="80" y="841" on="0"/>
        <pt x="80" y="930" on="0"/>
        <pt x="92" y="1011" on="0"/>
        <pt x="106" y="1031" on="1"/>
        <pt x="156" y="1031" on="1"/>
        <pt x="468" y="931" on="1"/>
        <pt x="363" y="1284" on="1"/>
        <pt x="363" y="1336" on="1"/>
        <pt x="384" y="1347" on="0"/>
        <pt x="470" y="1362" on="0"/>
        <pt x="562" y="1362" on="0"/>
        <pt x="645" y="1347" on="0"/>
        <pt x="663" y="1336" on="1"/>
        <pt x="663" y="1284" on="1"/>
        <pt x="558" y="931" on="1"/>
        <pt x="871" y="1031" on="1"/>
        <pt x="921" y="1031" on="1"/>
        <pt x="930" y="1009" on="0"/>
        <pt x="942" y="928" on="0"/>
        <pt x="944" y="839" on="0"/>
        <pt x="932" y="761" on="0"/>
        <pt x="921" y="745" on="1"/>
        <pt x="867" y="745" on="1"/>
        <pt x="558" y="844" on="1"/>
        <pt x="647" y="608" on="1"/>
        <pt x="647" y="542" on="1"/>
        <pt x="547" y="-388" on="1"/>
        <pt x="479" y="-388" on="1"/>
        <pt x="379" y="544" on="1"/>
        <pt x="379" y="608" on="1"/>
        <pt x="468" y="844" on="1"/>
        <pt x="156" y="745" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          29 34 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 12 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          23 5 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          16 17 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 17 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="daggerdbl" xMin="79" yMin="-381" xMax="945" yMax="1360">
      <contour>
        <pt x="378" y="521" on="1"/>
        <pt x="467" y="844" on="1"/>
        <pt x="155" y="745" on="1"/>
        <pt x="105" y="745" on="1"/>
        <pt x="95" y="761" on="0"/>
        <pt x="83" y="841" on="0"/>
        <pt x="81" y="930" on="0"/>
        <pt x="93" y="1011" on="0"/>
        <pt x="105" y="1031" on="1"/>
        <pt x="155" y="1031" on="1"/>
        <pt x="467" y="931" on="1"/>
        <pt x="362" y="1284" on="1"/>
        <pt x="362" y="1336" on="1"/>
        <pt x="384" y="1347" on="0"/>
        <pt x="469" y="1360" on="0"/>
        <pt x="561" y="1360" on="0"/>
        <pt x="645" y="1347" on="0"/>
        <pt x="663" y="1336" on="1"/>
        <pt x="663" y="1284" on="1"/>
        <pt x="558" y="931" on="1"/>
        <pt x="870" y="1031" on="1"/>
        <pt x="920" y="1031" on="1"/>
        <pt x="929" y="1013" on="0"/>
        <pt x="942" y="935" on="0"/>
        <pt x="943" y="846" on="0"/>
        <pt x="931" y="765" on="0"/>
        <pt x="920" y="745" on="1"/>
        <pt x="866" y="745" on="1"/>
        <pt x="558" y="844" on="1"/>
        <pt x="646" y="521" on="1"/>
        <pt x="646" y="465" on="1"/>
        <pt x="558" y="139" on="1"/>
        <pt x="866" y="238" on="1"/>
        <pt x="920" y="238" on="1"/>
        <pt x="933" y="218" on="0"/>
        <pt x="945" y="137" on="0"/>
        <pt x="943" y="48" on="0"/>
        <pt x="931" y="-29" on="0"/>
        <pt x="920" y="-46" on="1"/>
        <pt x="870" y="-46" on="1"/>
        <pt x="558" y="52" on="1"/>
        <pt x="663" y="-300" on="1"/>
        <pt x="663" y="-353" on="1"/>
        <pt x="645" y="-366" on="0"/>
        <pt x="561" y="-381" on="0"/>
        <pt x="469" y="-381" on="0"/>
        <pt x="384" y="-368" on="0"/>
        <pt x="362" y="-353" on="1"/>
        <pt x="362" y="-300" on="1"/>
        <pt x="467" y="52" on="1"/>
        <pt x="155" y="-46" on="1"/>
        <pt x="105" y="-46" on="1"/>
        <pt x="91" y="-27" on="0"/>
        <pt x="79" y="54" on="0"/>
        <pt x="81" y="144" on="0"/>
        <pt x="93" y="223" on="0"/>
        <pt x="105" y="238" on="1"/>
        <pt x="155" y="238" on="1"/>
        <pt x="467" y="139" on="1"/>
        <pt x="378" y="467" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 14 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          2 8 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          1 2 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          10 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          38 44 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          32 38 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          31 32 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          40 38 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dcaron" xMin="80" yMin="-23" xMax="1462" yMax="1464">
      <component glyphName="d" x="4" y="0" flags="0x4"/>
      <component glyphName="caron.l" x="678" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="dcroat" xMin="76" yMin="-23" xMax="1129" yMax="1406">
      <contour>
        <pt x="442" y="1160" on="1"/>
        <pt x="711" y="1160" on="1"/>
        <pt x="711" y="1251" on="1"/>
        <pt x="568" y="1266" on="1"/>
        <pt x="568" y="1339" on="1"/>
        <pt x="595" y="1350" on="0"/>
        <pt x="686" y="1370" on="0"/>
        <pt x="787" y="1387" on="0"/>
        <pt x="884" y="1401" on="0"/>
        <pt x="916" y="1406" on="1"/>
        <pt x="980" y="1406" on="1"/>
        <pt x="980" y="1160" on="1"/>
        <pt x="1129" y="1160" on="1"/>
        <pt x="1129" y="1046" on="1"/>
        <pt x="980" y="1046" on="1"/>
        <pt x="980" y="132" on="1"/>
        <pt x="1103" y="118" on="1"/>
        <pt x="1103" y="52" on="1"/>
        <pt x="1077" y="39" on="0"/>
        <pt x="995" y="17" on="0"/>
        <pt x="905" y="-1" on="0"/>
        <pt x="821" y="-15" on="0"/>
        <pt x="793" y="-18" on="1"/>
        <pt x="729" y="-18" on="1"/>
        <pt x="713" y="185" on="1"/>
        <pt x="705" y="185" on="1"/>
        <pt x="695" y="144" on="0"/>
        <pt x="648" y="69" on="0"/>
        <pt x="579" y="12" on="0"/>
        <pt x="492" y="-23" on="0"/>
        <pt x="444" y="-23" on="1"/>
        <pt x="258" y="-23" on="0"/>
        <pt x="76" y="222" on="0"/>
        <pt x="76" y="463" on="1"/>
        <pt x="76" y="586" on="0"/>
        <pt x="141" y="770" on="0"/>
        <pt x="260" y="891" on="0"/>
        <pt x="428" y="952" on="0"/>
        <pt x="532" y="952" on="1"/>
        <pt x="587" y="952" on="0"/>
        <pt x="667" y="936" on="0"/>
        <pt x="711" y="923" on="1"/>
        <pt x="711" y="1046" on="1"/>
        <pt x="442" y="1046" on="1"/>
      </contour>
      <contour>
        <pt x="534" y="127" on="1"/>
        <pt x="591" y="127" on="0"/>
        <pt x="683" y="213" on="0"/>
        <pt x="711" y="309" on="1"/>
        <pt x="711" y="812" on="1"/>
        <pt x="687" y="825" on="0"/>
        <pt x="614" y="846" on="0"/>
        <pt x="566" y="846" on="1"/>
        <pt x="457" y="846" on="0"/>
        <pt x="367" y="659" on="0"/>
        <pt x="367" y="472" on="1"/>
        <pt x="367" y="434" on="0"/>
        <pt x="371" y="359" on="0"/>
        <pt x="380" y="292" on="0"/>
        <pt x="394" y="236" on="0"/>
        <pt x="403" y="218" on="1"/>
        <pt x="425" y="173" on="0"/>
        <pt x="489" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 38 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 15 values pushed */
          127 4 143 4 159 4 175 4 191 4 207 4 223 4 7
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          16 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          47 44 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="degree" xMin="130" yMin="833" xMax="688" yMax="1379">
      <contour>
        <pt x="130" y="1105" on="1"/>
        <pt x="130" y="1166" on="0"/>
        <pt x="175" y="1266" on="0"/>
        <pt x="250" y="1338" on="0"/>
        <pt x="353" y="1379" on="0"/>
        <pt x="409" y="1379" on="1"/>
        <pt x="466" y="1379" on="0"/>
        <pt x="568" y="1344" on="0"/>
        <pt x="644" y="1277" on="0"/>
        <pt x="688" y="1173" on="0"/>
        <pt x="688" y="1105" on="1"/>
        <pt x="688" y="1042" on="0"/>
        <pt x="644" y="941" on="0"/>
        <pt x="568" y="870" on="0"/>
        <pt x="466" y="833" on="0"/>
        <pt x="409" y="833" on="1"/>
        <pt x="353" y="833" on="0"/>
        <pt x="250" y="870" on="0"/>
        <pt x="175" y="941" on="0"/>
        <pt x="130" y="1042" on="0"/>
      </contour>
      <contour>
        <pt x="264" y="1105" on="1"/>
        <pt x="264" y="1033" on="0"/>
        <pt x="353" y="951" on="0"/>
        <pt x="409" y="951" on="1"/>
        <pt x="471" y="951" on="0"/>
        <pt x="555" y="1026" on="0"/>
        <pt x="555" y="1105" on="1"/>
        <pt x="555" y="1181" on="0"/>
        <pt x="471" y="1260" on="0"/>
        <pt x="409" y="1260" on="1"/>
        <pt x="346" y="1260" on="0"/>
        <pt x="264" y="1179" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 5 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          23 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dieresis" xMin="0" yMin="1154" xMax="682" yMax="1422">
      <contour>
        <pt x="0" y="1287" on="1"/>
        <pt x="0" y="1348" on="0"/>
        <pt x="77" y="1422" on="0"/>
        <pt x="141" y="1422" on="1"/>
        <pt x="203" y="1422" on="0"/>
        <pt x="283" y="1348" on="0"/>
        <pt x="283" y="1287" on="1"/>
        <pt x="283" y="1228" on="0"/>
        <pt x="203" y="1154" on="0"/>
        <pt x="141" y="1154" on="1"/>
        <pt x="77" y="1154" on="0"/>
        <pt x="0" y="1228" on="0"/>
      </contour>
      <contour>
        <pt x="399" y="1287" on="1"/>
        <pt x="399" y="1348" on="0"/>
        <pt x="477" y="1422" on="0"/>
        <pt x="539" y="1422" on="1"/>
        <pt x="603" y="1422" on="0"/>
        <pt x="682" y="1348" on="0"/>
        <pt x="682" y="1287" on="1"/>
        <pt x="682" y="1228" on="0"/>
        <pt x="603" y="1154" on="0"/>
        <pt x="539" y="1154" on="1"/>
        <pt x="477" y="1154" on="0"/>
        <pt x="399" y="1228" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          9 14
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="divide" xMin="127" yMin="148" xMax="997" yMax="1193">
      <contour>
        <pt x="127" y="748" on="1"/>
        <pt x="997" y="748" on="1"/>
        <pt x="997" y="593" on="1"/>
        <pt x="127" y="593" on="1"/>
      </contour>
      <contour>
        <pt x="397" y="1038" on="1"/>
        <pt x="397" y="1107" on="0"/>
        <pt x="487" y="1193" on="0"/>
        <pt x="560" y="1193" on="1"/>
        <pt x="633" y="1193" on="0"/>
        <pt x="727" y="1107" on="0"/>
        <pt x="727" y="1038" on="1"/>
        <pt x="727" y="968" on="0"/>
        <pt x="633" y="885" on="0"/>
        <pt x="560" y="885" on="1"/>
        <pt x="487" y="885" on="0"/>
        <pt x="397" y="968" on="0"/>
      </contour>
      <contour>
        <pt x="397" y="300" on="1"/>
        <pt x="397" y="370" on="0"/>
        <pt x="487" y="455" on="0"/>
        <pt x="560" y="455" on="1"/>
        <pt x="633" y="455" on="0"/>
        <pt x="727" y="370" on="0"/>
        <pt x="727" y="300" on="1"/>
        <pt x="727" y="231" on="0"/>
        <pt x="633" y="148" on="0"/>
        <pt x="560" y="148" on="1"/>
        <pt x="487" y="148" on="0"/>
        <pt x="397" y="231" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          7 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          19 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="division" xMin="-225" yMin="-261" xMax="563" yMax="1386">
      <component glyphName="slash" x="-115" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="70" yMin="-135" xMax="979" yMax="1471">
      <contour>
        <pt x="448" y="-24" on="1"/>
        <pt x="390" y="-24" on="0"/>
        <pt x="273" y="-6" on="0"/>
        <pt x="173" y="22" on="0"/>
        <pt x="96" y="54" on="0"/>
        <pt x="77" y="72" on="1"/>
        <pt x="80" y="148" on="0"/>
        <pt x="113" y="296" on="0"/>
        <pt x="129" y="339" on="1"/>
        <pt x="210" y="339" on="1"/>
        <pt x="308" y="151" on="1"/>
        <pt x="328" y="135" on="0"/>
        <pt x="391" y="107" on="0"/>
        <pt x="448" y="103" on="1"/>
        <pt x="448" y="593" on="1"/>
        <pt x="444" y="595" on="0"/>
        <pt x="434" y="597" on="0"/>
        <pt x="430" y="600" on="1"/>
        <pt x="386" y="619" on="1"/>
        <pt x="326" y="645" on="0"/>
        <pt x="214" y="717" on="0"/>
        <pt x="125" y="811" on="0"/>
        <pt x="70" y="939" on="0"/>
        <pt x="70" y="1020" on="1"/>
        <pt x="70" y="1100" on="0"/>
        <pt x="127" y="1225" on="0"/>
        <pt x="227" y="1315" on="0"/>
        <pt x="367" y="1369" on="0"/>
        <pt x="448" y="1375" on="1"/>
        <pt x="448" y="1471" on="1"/>
        <pt x="583" y="1471" on="1"/>
        <pt x="583" y="1377" on="1"/>
        <pt x="676" y="1373" on="0"/>
        <pt x="826" y="1338" on="0"/>
        <pt x="894" y="1309" on="1"/>
        <pt x="894" y="1280" on="0"/>
        <pt x="884" y="1216" on="0"/>
        <pt x="868" y="1156" on="0"/>
        <pt x="849" y="1105" on="0"/>
        <pt x="842" y="1092" on="1"/>
        <pt x="762" y="1092" on="1"/>
        <pt x="663" y="1242" on="1"/>
        <pt x="648" y="1245" on="0"/>
        <pt x="611" y="1251" on="0"/>
        <pt x="583" y="1251" on="1"/>
        <pt x="583" y="786" on="1"/>
        <pt x="657" y="756" on="1"/>
        <pt x="715" y="728" on="0"/>
        <pt x="831" y="660" on="0"/>
        <pt x="923" y="567" on="0"/>
        <pt x="979" y="443" on="0"/>
        <pt x="979" y="358" on="1"/>
        <pt x="979" y="205" on="0"/>
        <pt x="777" y="8" on="0"/>
        <pt x="583" y="-17" on="1"/>
        <pt x="583" y="-135" on="1"/>
        <pt x="448" y="-135" on="1"/>
      </contour>
      <contour>
        <pt x="727" y="322" on="1"/>
        <pt x="727" y="405" on="0"/>
        <pt x="634" y="503" on="0"/>
        <pt x="565" y="540" on="1"/>
        <pt x="565" y="113" on="1"/>
        <pt x="642" y="133" on="0"/>
        <pt x="727" y="238" on="0"/>
      </contour>
      <contour>
        <pt x="310" y="1057" on="1"/>
        <pt x="310" y="976" on="0"/>
        <pt x="400" y="878" on="0"/>
        <pt x="467" y="841" on="1"/>
        <pt x="467" y="1247" on="1"/>
        <pt x="393" y="1238" on="0"/>
        <pt x="310" y="1139" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          67 71 72
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          13 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 13 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          14 28 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 44 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          67 28 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          56
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          68
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dotaccent" xMin="175" yMin="1142" xMax="508" yMax="1431">
      <contour>
        <pt x="175" y="1286" on="1"/>
        <pt x="175" y="1354" on="0"/>
        <pt x="268" y="1431" on="0"/>
        <pt x="341" y="1431" on="1"/>
        <pt x="415" y="1431" on="0"/>
        <pt x="508" y="1354" on="0"/>
        <pt x="508" y="1286" on="1"/>
        <pt x="508" y="1220" on="0"/>
        <pt x="415" y="1142" on="0"/>
        <pt x="341" y="1142" on="1"/>
        <pt x="268" y="1142" on="0"/>
        <pt x="175" y="1220" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          9 8
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dotlessi" xMin="38" yMin="0" xMax="541" yMax="958">
      <contour>
        <pt x="541" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="67" y="88" on="0"/>
        <pt x="119" y="109" on="0"/>
        <pt x="154" y="118" on="1"/>
        <pt x="154" y="803" on="1"/>
        <pt x="38" y="817" on="1"/>
        <pt x="38" y="891" on="1"/>
        <pt x="66" y="902" on="0"/>
        <pt x="148" y="923" on="0"/>
        <pt x="238" y="941" on="0"/>
        <pt x="327" y="954" on="0"/>
        <pt x="360" y="958" on="1"/>
        <pt x="424" y="958" on="1"/>
        <pt x="424" y="118" on="1"/>
        <pt x="462" y="109" on="0"/>
        <pt x="514" y="88" on="0"/>
        <pt x="541" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="dotlessj" xMin="82" yMin="-396" xMax="493" yMax="958">
      <contour>
        <pt x="223" y="803" on="1"/>
        <pt x="100" y="817" on="1"/>
        <pt x="100" y="891" on="1"/>
        <pt x="127" y="904" on="0"/>
        <pt x="211" y="926" on="0"/>
        <pt x="304" y="942" on="0"/>
        <pt x="395" y="954" on="0"/>
        <pt x="429" y="958" on="1"/>
        <pt x="493" y="958" on="1"/>
        <pt x="493" y="80" on="1"/>
        <pt x="493" y="-8" on="0"/>
        <pt x="451" y="-144" on="0"/>
        <pt x="417" y="-195" on="1"/>
        <pt x="383" y="-246" on="0"/>
        <pt x="295" y="-318" on="0"/>
        <pt x="210" y="-365" on="0"/>
        <pt x="138" y="-390" on="0"/>
        <pt x="119" y="-396" on="1"/>
        <pt x="82" y="-341" on="1"/>
        <pt x="96" y="-332" on="0"/>
        <pt x="130" y="-305" on="0"/>
        <pt x="163" y="-264" on="0"/>
        <pt x="192" y="-206" on="0"/>
        <pt x="202" y="-167" on="1"/>
        <pt x="212" y="-126" on="0"/>
        <pt x="223" y="-22" on="0"/>
        <pt x="223" y="44" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="45" yMin="-23" xMax="871" yMax="958">
      <contour>
        <pt x="859" y="157" on="1"/>
        <pt x="839" y="125" on="0"/>
        <pt x="775" y="61" on="0"/>
        <pt x="685" y="10" on="0"/>
        <pt x="566" y="-23" on="0"/>
        <pt x="492" y="-23" on="1"/>
        <pt x="379" y="-23" on="0"/>
        <pt x="212" y="47" on="0"/>
        <pt x="100" y="175" on="0"/>
        <pt x="45" y="356" on="0"/>
        <pt x="45" y="467" on="1"/>
        <pt x="45" y="572" on="0"/>
        <pt x="108" y="761" on="0"/>
        <pt x="165" y="825" on="1"/>
        <pt x="283" y="958" on="0"/>
        <pt x="489" y="958" on="1"/>
        <pt x="584" y="958" on="0"/>
        <pt x="737" y="900" on="0"/>
        <pt x="788" y="838" on="1"/>
        <pt x="828" y="790" on="0"/>
        <pt x="871" y="657" on="0"/>
        <pt x="871" y="570" on="1"/>
        <pt x="871" y="508" on="0"/>
        <pt x="855" y="451" on="1"/>
        <pt x="331" y="451" on="1"/>
        <pt x="330" y="415" on="0"/>
        <pt x="340" y="347" on="0"/>
        <pt x="358" y="287" on="0"/>
        <pt x="383" y="238" on="0"/>
        <pt x="397" y="220" on="1"/>
        <pt x="472" y="127" on="0"/>
        <pt x="610" y="127" on="1"/>
        <pt x="670" y="127" on="0"/>
        <pt x="781" y="161" on="0"/>
        <pt x="826" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="851" on="1"/>
        <pt x="445" y="851" on="0"/>
        <pt x="389" y="809" on="0"/>
        <pt x="353" y="730" on="0"/>
        <pt x="336" y="618" on="0"/>
        <pt x="337" y="548" on="1"/>
        <pt x="600" y="548" on="1"/>
        <pt x="610" y="611" on="0"/>
        <pt x="609" y="666" on="1"/>
        <pt x="608" y="706" on="0"/>
        <pt x="595" y="774" on="0"/>
        <pt x="566" y="823" on="0"/>
        <pt x="518" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          35 48 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          23 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 31 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eacute" xMin="45" yMin="-23" xMax="871" yMax="1482">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="262" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ecaron" xMin="45" yMin="-23" xMax="871" yMax="1494">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="121" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          52
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ecircumflex" xMin="45" yMin="-23" xMax="871" yMax="1487">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="154" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="edieresis" xMin="45" yMin="-23" xMax="871" yMax="1422">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="156" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="edotaccent" xMin="45" yMin="-23" xMax="871" yMax="1431">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="158" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="egrave" xMin="45" yMin="-23" xMax="871" yMax="1482">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="121" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="50" yMin="-24" xMax="974" yMax="1379">
      <contour>
        <pt x="50" y="304" on="1"/>
        <pt x="50" y="371" on="0"/>
        <pt x="97" y="485" on="0"/>
        <pt x="178" y="577" on="0"/>
        <pt x="287" y="646" on="0"/>
        <pt x="350" y="669" on="1"/>
        <pt x="233" y="734" on="0"/>
        <pt x="100" y="914" on="0"/>
        <pt x="100" y="1033" on="1"/>
        <pt x="100" y="1107" on="0"/>
        <pt x="157" y="1234" on="0"/>
        <pt x="265" y="1327" on="0"/>
        <pt x="423" y="1379" on="0"/>
        <pt x="524" y="1379" on="1"/>
        <pt x="617" y="1379" on="0"/>
        <pt x="766" y="1333" on="0"/>
        <pt x="870" y="1250" on="0"/>
        <pt x="926" y="1135" on="0"/>
        <pt x="926" y="1065" on="1"/>
        <pt x="926" y="948" on="0"/>
        <pt x="848" y="863" on="1"/>
        <pt x="810" y="820" on="0"/>
        <pt x="723" y="760" on="0"/>
        <pt x="663" y="741" on="1"/>
        <pt x="745" y="697" on="0"/>
        <pt x="863" y="609" on="0"/>
        <pt x="939" y="512" on="0"/>
        <pt x="974" y="403" on="0"/>
        <pt x="974" y="339" on="1"/>
        <pt x="974" y="264" on="0"/>
        <pt x="916" y="131" on="0"/>
        <pt x="799" y="33" on="0"/>
        <pt x="623" y="-24" on="0"/>
        <pt x="506" y="-24" on="1"/>
        <pt x="396" y="-24" on="0"/>
        <pt x="227" y="26" on="0"/>
        <pt x="110" y="115" on="0"/>
        <pt x="50" y="235" on="0"/>
      </contour>
      <contour>
        <pt x="700" y="283" on="1"/>
        <pt x="699" y="348" on="0"/>
        <pt x="656" y="442" on="0"/>
        <pt x="582" y="517" on="0"/>
        <pt x="481" y="581" on="0"/>
        <pt x="422" y="616" on="1"/>
        <pt x="368" y="563" on="0"/>
        <pt x="320" y="427" on="0"/>
        <pt x="320" y="353" on="1"/>
        <pt x="320" y="306" on="0"/>
        <pt x="338" y="214" on="0"/>
        <pt x="384" y="140" on="0"/>
        <pt x="462" y="95" on="0"/>
        <pt x="522" y="95" on="1"/>
        <pt x="569" y="95" on="0"/>
        <pt x="637" y="126" on="0"/>
        <pt x="680" y="178" on="0"/>
        <pt x="700" y="246" on="0"/>
      </contour>
      <contour>
        <pt x="363" y="1073" on="1"/>
        <pt x="363" y="1026" on="0"/>
        <pt x="396" y="939" on="0"/>
        <pt x="427" y="906" on="1"/>
        <pt x="459" y="871" on="0"/>
        <pt x="540" y="811" on="0"/>
        <pt x="585" y="786" on="1"/>
        <pt x="612" y="811" on="0"/>
        <pt x="647" y="867" on="0"/>
        <pt x="667" y="929" on="0"/>
        <pt x="674" y="999" on="0"/>
        <pt x="674" y="1038" on="1"/>
        <pt x="674" y="1152" on="0"/>
        <pt x="595" y="1260" on="0"/>
        <pt x="520" y="1260" on="1"/>
        <pt x="443" y="1260" on="0"/>
        <pt x="403" y="1206" on="1"/>
        <pt x="363" y="1154" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          33 74 75
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          62 13 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          43 33 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          5 62 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          70 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ellipsis" xMin="230" yMin="-15" xMax="1818" yMax="292">
      <contour>
        <pt x="230" y="137" on="1"/>
        <pt x="230" y="207" on="0"/>
        <pt x="319" y="292" on="0"/>
        <pt x="393" y="292" on="1"/>
        <pt x="466" y="292" on="0"/>
        <pt x="559" y="207" on="0"/>
        <pt x="559" y="137" on="1"/>
        <pt x="559" y="68" on="0"/>
        <pt x="466" y="-15" on="0"/>
        <pt x="393" y="-15" on="1"/>
        <pt x="319" y="-15" on="0"/>
        <pt x="230" y="68" on="0"/>
      </contour>
      <contour>
        <pt x="860" y="137" on="1"/>
        <pt x="860" y="207" on="0"/>
        <pt x="949" y="292" on="0"/>
        <pt x="1022" y="292" on="1"/>
        <pt x="1095" y="292" on="0"/>
        <pt x="1189" y="207" on="0"/>
        <pt x="1189" y="137" on="1"/>
        <pt x="1189" y="68" on="0"/>
        <pt x="1095" y="-15" on="0"/>
        <pt x="1022" y="-15" on="1"/>
        <pt x="949" y="-15" on="0"/>
        <pt x="860" y="68" on="0"/>
      </contour>
      <contour>
        <pt x="1489" y="137" on="1"/>
        <pt x="1489" y="207" on="0"/>
        <pt x="1577" y="292" on="0"/>
        <pt x="1651" y="292" on="1"/>
        <pt x="1725" y="292" on="0"/>
        <pt x="1818" y="207" on="0"/>
        <pt x="1818" y="137" on="1"/>
        <pt x="1818" y="68" on="0"/>
        <pt x="1725" y="-15" on="0"/>
        <pt x="1651" y="-15" on="1"/>
        <pt x="1577" y="-15" on="0"/>
        <pt x="1489" y="68" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emacron" xMin="45" yMin="-23" xMax="871" yMax="1334">
      <component glyphName="e" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-9" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="emdash" xMin="306" yMin="459" xMax="1743" yMax="634">
      <contour>
        <pt x="306" y="634" on="1"/>
        <pt x="1743" y="634" on="1"/>
        <pt x="1743" y="459" on="1"/>
        <pt x="306" y="459" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="endash" xMin="45" yMin="459" xMax="979" yMax="634">
      <contour>
        <pt x="45" y="634" on="1"/>
        <pt x="979" y="634" on="1"/>
        <pt x="979" y="459" on="1"/>
        <pt x="45" y="459" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eogonek" xMin="45" yMin="-423" xMax="871" yMax="958">
      <contour>
        <pt x="859" y="157" on="1"/>
        <pt x="830" y="111" on="0"/>
        <pt x="721" y="21" on="0"/>
        <pt x="638" y="-3" on="1"/>
        <pt x="578" y="-47" on="0"/>
        <pt x="515" y="-164" on="0"/>
        <pt x="515" y="-223" on="1"/>
        <pt x="515" y="-259" on="0"/>
        <pt x="560" y="-316" on="0"/>
        <pt x="606" y="-316" on="1"/>
        <pt x="648" y="-316" on="0"/>
        <pt x="699" y="-299" on="1"/>
        <pt x="699" y="-385" on="1"/>
        <pt x="686" y="-393" on="0"/>
        <pt x="643" y="-407" on="0"/>
        <pt x="595" y="-417" on="0"/>
        <pt x="549" y="-423" on="0"/>
        <pt x="533" y="-423" on="1"/>
        <pt x="403" y="-423" on="0"/>
        <pt x="343" y="-372" on="1"/>
        <pt x="283" y="-323" on="0"/>
        <pt x="283" y="-250" on="1"/>
        <pt x="283" y="-178" on="0"/>
        <pt x="383" y="-66" on="0"/>
        <pt x="471" y="-22" on="1"/>
        <pt x="366" y="-17" on="0"/>
        <pt x="207" y="56" on="0"/>
        <pt x="100" y="183" on="0"/>
        <pt x="45" y="359" on="0"/>
        <pt x="45" y="467" on="1"/>
        <pt x="45" y="572" on="0"/>
        <pt x="108" y="761" on="0"/>
        <pt x="165" y="825" on="1"/>
        <pt x="283" y="958" on="0"/>
        <pt x="489" y="958" on="1"/>
        <pt x="584" y="958" on="0"/>
        <pt x="737" y="900" on="0"/>
        <pt x="788" y="838" on="1"/>
        <pt x="828" y="790" on="0"/>
        <pt x="871" y="657" on="0"/>
        <pt x="871" y="570" on="1"/>
        <pt x="871" y="508" on="0"/>
        <pt x="855" y="451" on="1"/>
        <pt x="331" y="451" on="1"/>
        <pt x="330" y="415" on="0"/>
        <pt x="340" y="347" on="0"/>
        <pt x="358" y="287" on="0"/>
        <pt x="383" y="238" on="0"/>
        <pt x="397" y="220" on="1"/>
        <pt x="472" y="127" on="0"/>
        <pt x="610" y="127" on="1"/>
        <pt x="670" y="127" on="0"/>
        <pt x="781" y="161" on="0"/>
        <pt x="826" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="483" y="851" on="1"/>
        <pt x="445" y="851" on="0"/>
        <pt x="389" y="809" on="0"/>
        <pt x="353" y="730" on="0"/>
        <pt x="336" y="618" on="0"/>
        <pt x="337" y="548" on="1"/>
        <pt x="600" y="548" on="1"/>
        <pt x="610" y="611" on="0"/>
        <pt x="609" y="666" on="1"/>
        <pt x="608" y="706" on="0"/>
        <pt x="595" y="774" on="0"/>
        <pt x="566" y="823" on="0"/>
        <pt x="518" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          55 67 68
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          59 34 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          42 30
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          53 50 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          54 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="148" yMin="425" xMax="1019" yMax="909">
      <contour>
        <pt x="148" y="909" on="1"/>
        <pt x="1019" y="909" on="1"/>
        <pt x="1019" y="754" on="1"/>
        <pt x="148" y="754" on="1"/>
      </contour>
      <contour>
        <pt x="148" y="579" on="1"/>
        <pt x="1019" y="579" on="1"/>
        <pt x="1019" y="425" on="1"/>
        <pt x="148" y="425" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          4 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 0 31 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          4 0 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="estimated" xMin="84" yMin="-33" xMax="1145" yMax="1036">
      <contour>
        <pt x="303" y="501" on="1"/>
        <pt x="303" y="151" on="1"/>
        <pt x="333" y="122" on="0"/>
        <pt x="408" y="80" on="0"/>
        <pt x="489" y="51" on="0"/>
        <pt x="573" y="37" on="0"/>
        <pt x="613" y="37" on="1"/>
        <pt x="673" y="37" on="0"/>
        <pt x="790" y="66" on="0"/>
        <pt x="895" y="124" on="0"/>
        <pt x="985" y="211" on="0"/>
        <pt x="1018" y="269" on="1"/>
        <pt x="1085" y="229" on="1"/>
        <pt x="989" y="92" on="0"/>
        <pt x="892" y="31" on="1"/>
        <pt x="868" y="15" on="0"/>
        <pt x="803" y="-9" on="0"/>
        <pt x="729" y="-25" on="0"/>
        <pt x="651" y="-33" on="0"/>
        <pt x="613" y="-33" on="1"/>
        <pt x="557" y="-33" on="0"/>
        <pt x="448" y="-14" on="0"/>
        <pt x="346" y="23" on="0"/>
        <pt x="257" y="80" on="0"/>
        <pt x="222" y="118" on="1"/>
        <pt x="84" y="272" on="0"/>
        <pt x="84" y="501" on="1"/>
        <pt x="84" y="736" on="0"/>
        <pt x="222" y="885" on="1"/>
        <pt x="257" y="923" on="0"/>
        <pt x="346" y="980" on="0"/>
        <pt x="448" y="1017" on="0"/>
        <pt x="557" y="1036" on="0"/>
        <pt x="613" y="1036" on="1"/>
        <pt x="665" y="1036" on="0"/>
        <pt x="769" y="1019" on="0"/>
        <pt x="867" y="985" on="0"/>
        <pt x="955" y="934" on="0"/>
        <pt x="990" y="900" on="1"/>
        <pt x="1135" y="766" on="0"/>
        <pt x="1145" y="501" on="1"/>
      </contour>
      <contour>
        <pt x="927" y="571" on="1"/>
        <pt x="927" y="852" on="1"/>
        <pt x="896" y="882" on="0"/>
        <pt x="820" y="925" on="0"/>
        <pt x="738" y="953" on="0"/>
        <pt x="652" y="966" on="0"/>
        <pt x="611" y="966" on="1"/>
        <pt x="569" y="966" on="0"/>
        <pt x="484" y="953" on="0"/>
        <pt x="403" y="924" on="0"/>
        <pt x="331" y="881" on="0"/>
        <pt x="303" y="852" on="1"/>
        <pt x="303" y="571" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          47 54 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          6 27
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          53 33 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          47 53 63 53 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          40 27
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 40 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 27
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="eth" xMin="44" yMin="-23" xMax="958" yMax="1403">
      <contour>
        <pt x="261" y="1141" on="1"/>
        <pt x="441" y="1214" on="1"/>
        <pt x="393" y="1259" on="0"/>
        <pt x="285" y="1332" on="0"/>
        <pt x="225" y="1354" on="1"/>
        <pt x="225" y="1403" on="1"/>
        <pt x="407" y="1403" on="1"/>
        <pt x="509" y="1372" on="0"/>
        <pt x="615" y="1287" on="1"/>
        <pt x="798" y="1362" on="1"/>
        <pt x="848" y="1257" on="1"/>
        <pt x="710" y="1200" on="1"/>
        <pt x="764" y="1141" on="0"/>
        <pt x="855" y="998" on="0"/>
        <pt x="921" y="832" on="0"/>
        <pt x="958" y="644" on="0"/>
        <pt x="958" y="541" on="1"/>
        <pt x="958" y="418" on="0"/>
        <pt x="895" y="211" on="0"/>
        <pt x="774" y="61" on="0"/>
        <pt x="597" y="-23" on="0"/>
        <pt x="482" y="-23" on="1"/>
        <pt x="371" y="-23" on="0"/>
        <pt x="206" y="53" on="0"/>
        <pt x="98" y="182" on="0"/>
        <pt x="44" y="355" on="0"/>
        <pt x="44" y="453" on="1"/>
        <pt x="44" y="579" on="0"/>
        <pt x="108" y="769" on="0"/>
        <pt x="216" y="895" on="0"/>
        <pt x="360" y="958" on="0"/>
        <pt x="441" y="958" on="1"/>
        <pt x="509" y="958" on="0"/>
        <pt x="619" y="900" on="0"/>
        <pt x="653" y="849" on="1"/>
        <pt x="649" y="882" on="0"/>
        <pt x="626" y="957" on="0"/>
        <pt x="591" y="1030" on="0"/>
        <pt x="547" y="1096" on="0"/>
        <pt x="521" y="1122" on="1"/>
        <pt x="314" y="1037" on="1"/>
      </contour>
      <contour>
        <pt x="334" y="453" on="1"/>
        <pt x="334" y="376" on="0"/>
        <pt x="348" y="245" on="0"/>
        <pt x="384" y="147" on="0"/>
        <pt x="446" y="92" on="0"/>
        <pt x="494" y="92" on="1"/>
        <pt x="542" y="92" on="0"/>
        <pt x="609" y="146" on="0"/>
        <pt x="651" y="253" on="0"/>
        <pt x="670" y="410" on="0"/>
        <pt x="670" y="512" on="1"/>
        <pt x="670" y="612" on="0"/>
        <pt x="653" y="728" on="0"/>
        <pt x="648" y="748" on="1"/>
        <pt x="639" y="757" on="0"/>
        <pt x="612" y="781" on="0"/>
        <pt x="576" y="802" on="0"/>
        <pt x="530" y="817" on="0"/>
        <pt x="503" y="817" on="1"/>
        <pt x="461" y="817" on="0"/>
        <pt x="397" y="780" on="0"/>
        <pt x="355" y="695" on="0"/>
        <pt x="334" y="555" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          46 64 65
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          15 5 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          9 31 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          40 9 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 11 values pushed */
          32 40 48 40 64 40 80 40 96 40 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          0 40 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          1 0 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          8 0 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          10 9 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          11 40 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          34 21 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          39 40 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="176" yMin="-15" xMax="507" yMax="1358">
      <contour>
        <pt x="297" y="422" on="1"/>
        <pt x="200" y="798" on="1"/>
        <pt x="200" y="1336" on="1"/>
        <pt x="220" y="1348" on="0"/>
        <pt x="297" y="1358" on="0"/>
        <pt x="381" y="1358" on="0"/>
        <pt x="458" y="1346" on="0"/>
        <pt x="479" y="1336" on="1"/>
        <pt x="479" y="798" on="1"/>
        <pt x="382" y="422" on="1"/>
      </contour>
      <contour>
        <pt x="176" y="137" on="1"/>
        <pt x="176" y="172" on="0"/>
        <pt x="200" y="229" on="0"/>
        <pt x="244" y="270" on="0"/>
        <pt x="305" y="292" on="0"/>
        <pt x="341" y="292" on="1"/>
        <pt x="378" y="292" on="0"/>
        <pt x="439" y="270" on="0"/>
        <pt x="483" y="229" on="0"/>
        <pt x="507" y="172" on="0"/>
        <pt x="507" y="137" on="1"/>
        <pt x="507" y="102" on="0"/>
        <pt x="483" y="46" on="0"/>
        <pt x="439" y="7" on="0"/>
        <pt x="378" y="-15" on="0"/>
        <pt x="341" y="-15" on="1"/>
        <pt x="305" y="-15" on="0"/>
        <pt x="244" y="7" on="0"/>
        <pt x="200" y="46" on="0"/>
        <pt x="176" y="102" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          15 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          15 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclamdown" xMin="177" yMin="-383" xMax="508" yMax="989">
      <component glyphName="exclam" x="684" y="975" scale="-0.99994" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="ezhcarel" xMin="50" yMin="-396" xMax="934" yMax="958">
      <contour>
        <pt x="394" y="-275" on="1"/>
        <pt x="450" y="-275" on="0"/>
        <pt x="544" y="-234" on="0"/>
        <pt x="612" y="-162" on="0"/>
        <pt x="650" y="-64" on="0"/>
        <pt x="650" y="-8" on="1"/>
        <pt x="650" y="54" on="0"/>
        <pt x="616" y="150" on="0"/>
        <pt x="557" y="216" on="0"/>
        <pt x="479" y="252" on="0"/>
        <pt x="435" y="255" on="1"/>
        <pt x="285" y="230" on="1"/>
        <pt x="280" y="243" on="0"/>
        <pt x="273" y="275" on="0"/>
        <pt x="272" y="295" on="1"/>
        <pt x="271" y="333" on="0"/>
        <pt x="282" y="361" on="1"/>
        <pt x="452" y="361" on="1"/>
        <pt x="479" y="377" on="0"/>
        <pt x="530" y="430" on="0"/>
        <pt x="568" y="500" on="0"/>
        <pt x="591" y="584" on="0"/>
        <pt x="591" y="632" on="1"/>
        <pt x="591" y="678" on="0"/>
        <pt x="566" y="758" on="0"/>
        <pt x="520" y="817" on="0"/>
        <pt x="454" y="851" on="0"/>
        <pt x="414" y="851" on="1"/>
        <pt x="387" y="851" on="0"/>
        <pt x="327" y="838" on="0"/>
        <pt x="310" y="829" on="1"/>
        <pt x="217" y="598" on="1"/>
        <pt x="152" y="598" on="1"/>
        <pt x="140" y="625" on="0"/>
        <pt x="117" y="695" on="0"/>
        <pt x="99" y="768" on="0"/>
        <pt x="88" y="839" on="0"/>
        <pt x="88" y="869" on="1"/>
        <pt x="119" y="890" on="0"/>
        <pt x="211" y="923" on="0"/>
        <pt x="313" y="946" on="0"/>
        <pt x="416" y="958" on="0"/>
        <pt x="460" y="958" on="1"/>
        <pt x="556" y="958" on="0"/>
        <pt x="708" y="919" on="0"/>
        <pt x="812" y="843" on="0"/>
        <pt x="867" y="732" on="0"/>
        <pt x="867" y="661" on="1"/>
        <pt x="868" y="592" on="0"/>
        <pt x="809" y="481" on="0"/>
        <pt x="723" y="400" on="0"/>
        <pt x="627" y="349" on="0"/>
        <pt x="591" y="339" on="1"/>
        <pt x="665" y="329" on="0"/>
        <pt x="791" y="277" on="0"/>
        <pt x="882" y="192" on="0"/>
        <pt x="934" y="74" on="0"/>
        <pt x="934" y="-2" on="1"/>
        <pt x="934" y="-97" on="0"/>
        <pt x="857" y="-244" on="0"/>
        <pt x="721" y="-344" on="0"/>
        <pt x="537" y="-396" on="0"/>
        <pt x="430" y="-396" on="1"/>
        <pt x="316" y="-396" on="0"/>
        <pt x="116" y="-336" on="0"/>
        <pt x="50" y="-284" on="1"/>
        <pt x="100" y="-109" on="1"/>
        <pt x="155" y="-109" on="1"/>
        <pt x="169" y="-122" on="0"/>
        <pt x="200" y="-156" on="0"/>
        <pt x="217" y="-179" on="1"/>
        <pt x="250" y="-226" on="0"/>
        <pt x="277" y="-260" on="1"/>
        <pt x="295" y="-268" on="0"/>
        <pt x="363" y="-275" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            62
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            62 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          16 42 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          63 16 79 16 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          10 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 27 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          52 16 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          66 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ezhcarelcaron" xMin="84" yMin="-396" xMax="968" yMax="1494">
      <component glyphName="ezhcarel" x="34" y="0" flags="0x204"/>
      <component glyphName="caron" x="91" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="52" yMin="0" xMax="784" yMax="1377">
      <contour>
        <pt x="569" y="1377" on="1"/>
        <pt x="647" y="1377" on="0"/>
        <pt x="752" y="1349" on="0"/>
        <pt x="784" y="1337" on="1"/>
        <pt x="781" y="1314" on="0"/>
        <pt x="764" y="1250" on="0"/>
        <pt x="743" y="1183" on="0"/>
        <pt x="720" y="1121" on="0"/>
        <pt x="711" y="1101" on="1"/>
        <pt x="647" y="1101" on="1"/>
        <pt x="578" y="1279" on="1"/>
        <pt x="550" y="1272" on="0"/>
        <pt x="505" y="1249" on="0"/>
        <pt x="474" y="1192" on="0"/>
        <pt x="458" y="1088" on="0"/>
        <pt x="458" y="1000" on="1"/>
        <pt x="458" y="935" on="1"/>
        <pt x="636" y="935" on="1"/>
        <pt x="636" y="817" on="1"/>
        <pt x="458" y="817" on="1"/>
        <pt x="458" y="118" on="1"/>
        <pt x="507" y="113" on="0"/>
        <pt x="585" y="90" on="0"/>
        <pt x="627" y="73" on="1"/>
        <pt x="627" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="73" on="1"/>
        <pt x="99" y="90" on="0"/>
        <pt x="156" y="113" on="0"/>
        <pt x="189" y="118" on="1"/>
        <pt x="189" y="817" on="1"/>
        <pt x="52" y="817" on="1"/>
        <pt x="52" y="891" on="1"/>
        <pt x="84" y="911" on="0"/>
        <pt x="151" y="942" on="0"/>
        <pt x="189" y="952" on="1"/>
        <pt x="189" y="979" on="1"/>
        <pt x="189" y="1096" on="0"/>
        <pt x="250" y="1250" on="0"/>
        <pt x="354" y="1340" on="0"/>
        <pt x="492" y="1377" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 10 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          23 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          32 19 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="facute" xMin="52" yMin="0" xMax="937" yMax="1789">
      <component glyphName="f" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="288" y="38" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="fi" xMin="30" yMin="0" xMax="1111" yMax="1378">
      <contour>
        <pt x="1111" y="0" on="1"/>
        <pt x="611" y="0" on="1"/>
        <pt x="611" y="73" on="1"/>
        <pt x="635" y="86" on="0"/>
        <pt x="693" y="110" on="0"/>
        <pt x="723" y="118" on="1"/>
        <pt x="723" y="817" on="1"/>
        <pt x="424" y="817" on="1"/>
        <pt x="424" y="118" on="1"/>
        <pt x="453" y="113" on="0"/>
        <pt x="517" y="87" on="0"/>
        <pt x="540" y="73" on="1"/>
        <pt x="540" y="0" on="1"/>
        <pt x="37" y="0" on="1"/>
        <pt x="37" y="73" on="1"/>
        <pt x="66" y="90" on="0"/>
        <pt x="126" y="113" on="0"/>
        <pt x="155" y="118" on="1"/>
        <pt x="155" y="817" on="1"/>
        <pt x="30" y="817" on="1"/>
        <pt x="30" y="891" on="1"/>
        <pt x="58" y="909" on="0"/>
        <pt x="133" y="944" on="0"/>
        <pt x="163" y="952" on="1"/>
        <pt x="163" y="988" on="1"/>
        <pt x="163" y="1105" on="0"/>
        <pt x="234" y="1256" on="0"/>
        <pt x="352" y="1344" on="0"/>
        <pt x="507" y="1378" on="0"/>
        <pt x="593" y="1377" on="1"/>
        <pt x="642" y="1377" on="0"/>
        <pt x="763" y="1364" on="0"/>
        <pt x="879" y="1342" on="0"/>
        <pt x="977" y="1314" on="0"/>
        <pt x="1004" y="1299" on="1"/>
        <pt x="997" y="1236" on="0"/>
        <pt x="964" y="1138" on="0"/>
        <pt x="945" y="1101" on="1"/>
        <pt x="798" y="1101" on="1"/>
        <pt x="659" y="1279" on="1"/>
        <pt x="607" y="1280" on="0"/>
        <pt x="520" y="1260" on="0"/>
        <pt x="458" y="1199" on="0"/>
        <pt x="424" y="1088" on="0"/>
        <pt x="424" y="1000" on="1"/>
        <pt x="424" y="935" on="1"/>
        <pt x="563" y="935" on="1"/>
        <pt x="594" y="936" on="0"/>
        <pt x="693" y="940" on="0"/>
        <pt x="799" y="946" on="0"/>
        <pt x="898" y="954" on="0"/>
        <pt x="930" y="958" on="1"/>
        <pt x="993" y="958" on="1"/>
        <pt x="993" y="118" on="1"/>
        <pt x="1031" y="109" on="0"/>
        <pt x="1086" y="88" on="0"/>
        <pt x="1111" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          18 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          38 39 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="54" yMin="-24" xMax="921" yMax="1462">
      <contour>
        <pt x="848" y="1462" on="1"/>
        <pt x="913" y="1462" on="1"/>
        <pt x="914" y="1433" on="0"/>
        <pt x="908" y="1340" on="0"/>
        <pt x="898" y="1243" on="0"/>
        <pt x="883" y="1156" on="0"/>
        <pt x="875" y="1133" on="1"/>
        <pt x="354" y="1133" on="1"/>
        <pt x="319" y="856" on="1"/>
        <pt x="480" y="856" on="1"/>
        <pt x="585" y="856" on="0"/>
        <pt x="749" y="800" on="0"/>
        <pt x="862" y="693" on="0"/>
        <pt x="921" y="539" on="0"/>
        <pt x="921" y="442" on="1"/>
        <pt x="921" y="332" on="0"/>
        <pt x="844" y="159" on="0"/>
        <pt x="708" y="39" on="0"/>
        <pt x="520" y="-24" on="0"/>
        <pt x="409" y="-24" on="1"/>
        <pt x="296" y="-24" on="0"/>
        <pt x="203" y="12" on="1"/>
        <pt x="109" y="48" on="0"/>
        <pt x="54" y="93" on="1"/>
        <pt x="136" y="285" on="1"/>
        <pt x="191" y="285" on="1"/>
        <pt x="205" y="271" on="0"/>
        <pt x="240" y="229" on="0"/>
        <pt x="277" y="182" on="0"/>
        <pt x="313" y="136" on="0"/>
        <pt x="327" y="118" on="1"/>
        <pt x="346" y="111" on="0"/>
        <pt x="383" y="103" on="0"/>
        <pt x="407" y="103" on="1"/>
        <pt x="465" y="103" on="0"/>
        <pt x="559" y="144" on="0"/>
        <pt x="624" y="217" on="0"/>
        <pt x="659" y="319" on="0"/>
        <pt x="659" y="381" on="1"/>
        <pt x="659" y="450" on="0"/>
        <pt x="613" y="551" on="0"/>
        <pt x="531" y="618" on="0"/>
        <pt x="419" y="651" on="0"/>
        <pt x="352" y="651" on="1"/>
        <pt x="184" y="649" on="1"/>
        <pt x="261" y="1356" on="1"/>
        <pt x="757" y="1356" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            45
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            45 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 45 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 33 45
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="fl" xMin="34" yMin="0" xMax="1115" yMax="1377">
      <contour>
        <pt x="728" y="1222" on="1"/>
        <pt x="688" y="1237" on="0"/>
        <pt x="620" y="1260" on="0"/>
        <pt x="585" y="1260" on="1"/>
        <pt x="543" y="1260" on="0"/>
        <pt x="484" y="1234" on="0"/>
        <pt x="446" y="1171" on="0"/>
        <pt x="429" y="1066" on="0"/>
        <pt x="429" y="987" on="1"/>
        <pt x="429" y="935" on="1"/>
        <pt x="627" y="935" on="1"/>
        <pt x="627" y="817" on="1"/>
        <pt x="429" y="817" on="1"/>
        <pt x="429" y="118" on="1"/>
        <pt x="464" y="112" on="0"/>
        <pt x="531" y="83" on="0"/>
        <pt x="550" y="73" on="1"/>
        <pt x="550" y="0" on="1"/>
        <pt x="41" y="0" on="1"/>
        <pt x="41" y="73" on="1"/>
        <pt x="70" y="90" on="0"/>
        <pt x="126" y="113" on="0"/>
        <pt x="159" y="118" on="1"/>
        <pt x="159" y="817" on="1"/>
        <pt x="34" y="817" on="1"/>
        <pt x="34" y="891" on="1"/>
        <pt x="44" y="898" on="0"/>
        <pt x="75" y="916" on="0"/>
        <pt x="110" y="933" on="0"/>
        <pt x="146" y="948" on="0"/>
        <pt x="161" y="952" on="1"/>
        <pt x="161" y="988" on="1"/>
        <pt x="161" y="1105" on="0"/>
        <pt x="208" y="1256" on="0"/>
        <pt x="293" y="1343" on="0"/>
        <pt x="415" y="1377" on="0"/>
        <pt x="490" y="1377" on="1"/>
        <pt x="570" y="1377" on="0"/>
        <pt x="631" y="1358" on="1"/>
        <pt x="663" y="1348" on="0"/>
        <pt x="710" y="1333" on="0"/>
        <pt x="724" y="1327" on="1"/>
        <pt x="743" y="1334" on="0"/>
        <pt x="793" y="1351" on="0"/>
        <pt x="849" y="1365" on="0"/>
        <pt x="906" y="1375" on="0"/>
        <pt x="933" y="1377" on="1"/>
        <pt x="997" y="1377" on="1"/>
        <pt x="997" y="118" on="1"/>
        <pt x="1029" y="110" on="0"/>
        <pt x="1084" y="88" on="0"/>
        <pt x="1115" y="73" on="1"/>
        <pt x="1115" y="0" on="1"/>
        <pt x="623" y="0" on="1"/>
        <pt x="623" y="73" on="1"/>
        <pt x="646" y="88" on="0"/>
        <pt x="702" y="110" on="0"/>
        <pt x="728" y="118" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          38 58 59
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            47 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="florin" xMin="-54" yMin="-410" xMax="1021" yMax="1456">
      <contour>
        <pt x="295" y="846" on="1"/>
        <pt x="160" y="846" on="1"/>
        <pt x="160" y="922" on="1"/>
        <pt x="198" y="943" on="0"/>
        <pt x="286" y="976" on="0"/>
        <pt x="324" y="985" on="1"/>
        <pt x="338" y="1053" on="1"/>
        <pt x="363" y="1174" on="0"/>
        <pt x="446" y="1330" on="0"/>
        <pt x="559" y="1421" on="0"/>
        <pt x="702" y="1456" on="0"/>
        <pt x="786" y="1456" on="1"/>
        <pt x="817" y="1456" on="0"/>
        <pt x="882" y="1451" on="0"/>
        <pt x="943" y="1440" on="0"/>
        <pt x="996" y="1424" on="0"/>
        <pt x="1017" y="1414" on="1"/>
        <pt x="1021" y="1386" on="0"/>
        <pt x="1007" y="1323" on="0"/>
        <pt x="978" y="1264" on="0"/>
        <pt x="937" y="1218" on="0"/>
        <pt x="914" y="1207" on="1"/>
        <pt x="777" y="1354" on="1"/>
        <pt x="748" y="1348" on="0"/>
        <pt x="700" y="1324" on="0"/>
        <pt x="658" y="1264" on="0"/>
        <pt x="618" y="1156" on="0"/>
        <pt x="599" y="1065" on="1"/>
        <pt x="580" y="968" on="1"/>
        <pt x="794" y="968" on="1"/>
        <pt x="796" y="957" on="0"/>
        <pt x="795" y="928" on="0"/>
        <pt x="793" y="909" on="1"/>
        <pt x="788" y="870" on="0"/>
        <pt x="770" y="846" on="1"/>
        <pt x="554" y="846" on="1"/>
        <pt x="446" y="83" on="1"/>
        <pt x="425" y="-54" on="0"/>
        <pt x="364" y="-145" on="1"/>
        <pt x="305" y="-234" on="0"/>
        <pt x="232" y="-291" on="1"/>
        <pt x="158" y="-348" on="0"/>
        <pt x="87" y="-374" on="1"/>
        <pt x="12" y="-401" on="0"/>
        <pt x="-32" y="-410" on="1"/>
        <pt x="-54" y="-349" on="1"/>
        <pt x="-30" y="-337" on="0"/>
        <pt x="40" y="-283" on="0"/>
        <pt x="109" y="-190" on="0"/>
        <pt x="169" y="-51" on="0"/>
        <pt x="184" y="46" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          35 51 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          34 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          21 22 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="17" yMin="0" xMax="1001" yMax="1379">
      <contour>
        <pt x="970" y="0" on="1"/>
        <pt x="372" y="0" on="1"/>
        <pt x="372" y="83" on="1"/>
        <pt x="420" y="100" on="0"/>
        <pt x="508" y="123" on="0"/>
        <pt x="550" y="130" on="1"/>
        <pt x="550" y="349" on="1"/>
        <pt x="17" y="349" on="1"/>
        <pt x="17" y="436" on="1"/>
        <pt x="718" y="1379" on="1"/>
        <pt x="823" y="1379" on="1"/>
        <pt x="823" y="475" on="1"/>
        <pt x="1001" y="475" on="1"/>
        <pt x="1001" y="349" on="1"/>
        <pt x="823" y="349" on="1"/>
        <pt x="823" y="130" on="1"/>
        <pt x="861" y="122" on="0"/>
        <pt x="935" y="99" on="0"/>
        <pt x="970" y="83" on="1"/>
      </contour>
      <contour>
        <pt x="550" y="857" on="1"/>
        <pt x="570" y="992" on="1"/>
        <pt x="564" y="992" on="1"/>
        <pt x="490" y="857" on="1"/>
        <pt x="249" y="525" on="1"/>
        <pt x="172" y="461" on="1"/>
        <pt x="309" y="475" on="1"/>
        <pt x="550" y="475" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          22 27 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          6 0 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 25 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          20 9 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="fourinferior" xMin="14" yMin="-194" xMax="773" yMax="634">
      <contour>
        <pt x="752" y="-194" on="1"/>
        <pt x="280" y="-194" on="1"/>
        <pt x="280" y="-135" on="1"/>
        <pt x="292" y="-128" on="0"/>
        <pt x="327" y="-111" on="0"/>
        <pt x="366" y="-95" on="0"/>
        <pt x="404" y="-82" on="0"/>
        <pt x="421" y="-79" on="1"/>
        <pt x="421" y="26" on="1"/>
        <pt x="14" y="26" on="1"/>
        <pt x="14" y="96" on="1"/>
        <pt x="504" y="634" on="1"/>
        <pt x="639" y="634" on="1"/>
        <pt x="639" y="142" on="1"/>
        <pt x="773" y="142" on="1"/>
        <pt x="773" y="26" on="1"/>
        <pt x="639" y="26" on="1"/>
        <pt x="639" y="-79" on="1"/>
        <pt x="658" y="-85" on="0"/>
        <pt x="719" y="-112" on="0"/>
        <pt x="752" y="-135" on="1"/>
      </contour>
      <contour>
        <pt x="421" y="330" on="1"/>
        <pt x="437" y="425" on="1"/>
        <pt x="431" y="425" on="1"/>
        <pt x="374" y="340" on="1"/>
        <pt x="235" y="183" on="1"/>
        <pt x="165" y="128" on="1"/>
        <pt x="269" y="142" on="1"/>
        <pt x="421" y="142" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          24 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          20 23
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          8 11 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          28 29
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 28 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          23 11 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="fraction" xMin="-441" yMin="-26" xMax="783" yMax="1384">
      <contour>
        <pt x="690" y="1384" on="1"/>
        <pt x="783" y="1303" on="1"/>
        <pt x="-350" y="-26" on="1"/>
        <pt x="-441" y="58" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            2 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="26" yMin="-396" xMax="1012" yMax="1003">
      <contour>
        <pt x="451" y="958" on="1"/>
        <pt x="511" y="958" on="0"/>
        <pt x="604" y="944" on="0"/>
        <pt x="674" y="920" on="0"/>
        <pt x="726" y="888" on="0"/>
        <pt x="746" y="869" on="1"/>
        <pt x="765" y="887" on="0"/>
        <pt x="819" y="927" on="0"/>
        <pt x="878" y="964" on="0"/>
        <pt x="938" y="995" on="0"/>
        <pt x="963" y="1003" on="1"/>
        <pt x="971" y="992" on="0"/>
        <pt x="987" y="956" on="0"/>
        <pt x="1000" y="915" on="0"/>
        <pt x="1010" y="876" on="0"/>
        <pt x="1012" y="863" on="1"/>
        <pt x="987" y="817" on="1"/>
        <pt x="797" y="817" on="1"/>
        <pt x="806" y="804" on="0"/>
        <pt x="828" y="768" on="0"/>
        <pt x="846" y="724" on="0"/>
        <pt x="858" y="675" on="0"/>
        <pt x="858" y="649" on="1"/>
        <pt x="858" y="587" on="0"/>
        <pt x="815" y="477" on="0"/>
        <pt x="721" y="395" on="0"/>
        <pt x="569" y="346" on="0"/>
        <pt x="461" y="346" on="1"/>
        <pt x="431" y="346" on="0"/>
        <pt x="387" y="350" on="0"/>
        <pt x="374" y="352" on="1"/>
        <pt x="368" y="342" on="0"/>
        <pt x="350" y="309" on="0"/>
        <pt x="350" y="294" on="1"/>
        <pt x="350" y="270" on="0"/>
        <pt x="388" y="238" on="0"/>
        <pt x="458" y="213" on="0"/>
        <pt x="555" y="190" on="0"/>
        <pt x="613" y="175" on="1"/>
        <pt x="671" y="161" on="0"/>
        <pt x="788" y="119" on="0"/>
        <pt x="881" y="57" on="0"/>
        <pt x="940" y="-30" on="0"/>
        <pt x="940" y="-88" on="1"/>
        <pt x="940" y="-170" on="0"/>
        <pt x="870" y="-287" on="0"/>
        <pt x="744" y="-361" on="0"/>
        <pt x="570" y="-396" on="0"/>
        <pt x="465" y="-396" on="1"/>
        <pt x="341" y="-396" on="0"/>
        <pt x="173" y="-355" on="0"/>
        <pt x="70" y="-286" on="0"/>
        <pt x="26" y="-198" on="0"/>
        <pt x="26" y="-151" on="1"/>
        <pt x="26" y="-100" on="0"/>
        <pt x="68" y="-24" on="0"/>
        <pt x="139" y="30" on="0"/>
        <pt x="233" y="66" on="0"/>
        <pt x="286" y="78" on="1"/>
        <pt x="259" y="85" on="0"/>
        <pt x="206" y="109" on="0"/>
        <pt x="165" y="141" on="0"/>
        <pt x="139" y="184" on="0"/>
        <pt x="139" y="211" on="1"/>
        <pt x="139" y="235" on="0"/>
        <pt x="166" y="282" on="0"/>
        <pt x="211" y="322" on="0"/>
        <pt x="270" y="354" on="0"/>
        <pt x="302" y="364" on="1"/>
        <pt x="183" y="391" on="0"/>
        <pt x="46" y="537" on="0"/>
        <pt x="46" y="655" on="1"/>
        <pt x="46" y="690" on="0"/>
        <pt x="66" y="754" on="0"/>
        <pt x="99" y="810" on="0"/>
        <pt x="141" y="857" on="0"/>
        <pt x="163" y="874" on="1"/>
        <pt x="190" y="895" on="0"/>
        <pt x="258" y="927" on="0"/>
        <pt x="333" y="948" on="0"/>
        <pt x="412" y="958" on="0"/>
      </contour>
      <contour>
        <pt x="676" y="-143" on="1"/>
        <pt x="676" y="-92" on="0"/>
        <pt x="626" y="-31" on="0"/>
        <pt x="542" y="10" on="0"/>
        <pt x="431" y="38" on="0"/>
        <pt x="370" y="56" on="1"/>
        <pt x="330" y="24" on="0"/>
        <pt x="280" y="-58" on="0"/>
        <pt x="280" y="-112" on="1"/>
        <pt x="280" y="-197" on="0"/>
        <pt x="388" y="-290" on="0"/>
        <pt x="490" y="-290" on="1"/>
        <pt x="538" y="-290" on="0"/>
        <pt x="606" y="-267" on="0"/>
        <pt x="625" y="-252" on="1"/>
        <pt x="651" y="-231" on="0"/>
        <pt x="676" y="-172" on="0"/>
      </contour>
      <contour>
        <pt x="313" y="651" on="1"/>
        <pt x="313" y="602" on="0"/>
        <pt x="330" y="533" on="0"/>
        <pt x="347" y="507" on="1"/>
        <pt x="363" y="482" on="0"/>
        <pt x="413" y="453" on="0"/>
        <pt x="453" y="453" on="1"/>
        <pt x="489" y="453" on="0"/>
        <pt x="538" y="476" on="0"/>
        <pt x="553" y="496" on="1"/>
        <pt x="590" y="547" on="0"/>
        <pt x="590" y="651" on="1"/>
        <pt x="590" y="775" on="0"/>
        <pt x="542" y="820" on="1"/>
        <pt x="526" y="834" on="0"/>
        <pt x="486" y="851" on="0"/>
        <pt x="451" y="851" on="1"/>
        <pt x="418" y="851" on="0"/>
        <pt x="364" y="823" on="0"/>
        <pt x="347" y="798" on="1"/>
        <pt x="330" y="773" on="0"/>
        <pt x="313" y="702" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          92 120 121
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          92
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          92
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          104
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            48
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            48 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 10 121
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          27 0 121
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          80 27 96 27 112 27 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          38 27 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          86 38 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          58 86 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          68
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          92 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          104 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          114 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gbreve" xMin="26" yMin="-396" xMax="1012" yMax="1478">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="115" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          125
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gcircumflex" xMin="26" yMin="-396" xMax="1012" yMax="1487">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="121" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          120
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="gcommaaccent" xMin="26" yMin="-396" xMax="1012" yMax="1506">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="775" y="980" scale="-0.99994" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          131
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="germandbls" xMin="24" yMin="-23" xMax="1115" yMax="1406">
      <contour>
        <pt x="799" y="1105" on="1"/>
        <pt x="799" y="1151" on="0"/>
        <pt x="770" y="1223" on="0"/>
        <pt x="722" y="1273" on="0"/>
        <pt x="656" y="1300" on="0"/>
        <pt x="619" y="1300" on="1"/>
        <pt x="579" y="1300" on="0"/>
        <pt x="507" y="1281" on="0"/>
        <pt x="453" y="1221" on="0"/>
        <pt x="421" y="1109" on="0"/>
        <pt x="421" y="1015" on="1"/>
        <pt x="421" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="68" y="90" on="0"/>
        <pt x="125" y="113" on="0"/>
        <pt x="157" y="118" on="1"/>
        <pt x="157" y="817" on="1"/>
        <pt x="24" y="817" on="1"/>
        <pt x="24" y="891" on="1"/>
        <pt x="57" y="911" on="0"/>
        <pt x="121" y="942" on="0"/>
        <pt x="159" y="952" on="1"/>
        <pt x="159" y="1031" on="0"/>
        <pt x="174" y="1143" on="0"/>
        <pt x="205" y="1225" on="0"/>
        <pt x="253" y="1286" on="0"/>
        <pt x="285" y="1314" on="1"/>
        <pt x="316" y="1341" on="0"/>
        <pt x="393" y="1377" on="0"/>
        <pt x="477" y="1398" on="0"/>
        <pt x="563" y="1406" on="0"/>
        <pt x="605" y="1406" on="1"/>
        <pt x="684" y="1406" on="0"/>
        <pt x="832" y="1380" on="0"/>
        <pt x="949" y="1311" on="0"/>
        <pt x="1028" y="1188" on="0"/>
        <pt x="1039" y="1092" on="1"/>
        <pt x="989" y="1083" on="0"/>
        <pt x="891" y="1052" on="0"/>
        <pt x="813" y="999" on="0"/>
        <pt x="765" y="922" on="0"/>
        <pt x="765" y="867" on="1"/>
        <pt x="765" y="825" on="0"/>
        <pt x="789" y="761" on="0"/>
        <pt x="834" y="704" on="0"/>
        <pt x="901" y="645" on="0"/>
        <pt x="943" y="607" on="1"/>
        <pt x="981" y="573" on="0"/>
        <pt x="1045" y="502" on="0"/>
        <pt x="1090" y="421" on="0"/>
        <pt x="1115" y="327" on="0"/>
        <pt x="1115" y="269" on="1"/>
        <pt x="1115" y="218" on="0"/>
        <pt x="1082" y="114" on="0"/>
        <pt x="1004" y="30" on="0"/>
        <pt x="876" y="-23" on="0"/>
        <pt x="782" y="-23" on="1"/>
        <pt x="691" y="-23" on="0"/>
        <pt x="555" y="5" on="0"/>
        <pt x="501" y="36" on="1"/>
        <pt x="503" y="55" on="0"/>
        <pt x="513" y="104" on="0"/>
        <pt x="527" y="154" on="0"/>
        <pt x="545" y="199" on="0"/>
        <pt x="555" y="213" on="1"/>
        <pt x="619" y="213" on="1"/>
        <pt x="717" y="96" on="1"/>
        <pt x="732" y="89" on="0"/>
        <pt x="754" y="84" on="0"/>
        <pt x="771" y="84" on="1"/>
        <pt x="794" y="84" on="0"/>
        <pt x="831" y="104" on="0"/>
        <pt x="858" y="140" on="0"/>
        <pt x="873" y="189" on="0"/>
        <pt x="873" y="217" on="1"/>
        <pt x="873" y="258" on="0"/>
        <pt x="851" y="329" on="0"/>
        <pt x="809" y="396" on="0"/>
        <pt x="749" y="461" on="0"/>
        <pt x="712" y="497" on="1"/>
        <pt x="674" y="533" on="0"/>
        <pt x="610" y="602" on="0"/>
        <pt x="564" y="678" on="0"/>
        <pt x="539" y="770" on="0"/>
        <pt x="539" y="829" on="1"/>
        <pt x="539" y="893" on="0"/>
        <pt x="593" y="988" on="0"/>
        <pt x="672" y="1054" on="0"/>
        <pt x="762" y="1094" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          66 90 91
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            57
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            57 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 32 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          19 17 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          47 0 57
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          70 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          66 70 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          80 57 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="98" yMin="1098" xMax="546" yMax="1482">
      <contour>
        <pt x="546" y="1140" on="1"/>
        <pt x="459" y="1098" on="1"/>
        <pt x="98" y="1379" on="1"/>
        <pt x="98" y="1435" on="1"/>
        <pt x="110" y="1447" on="0"/>
        <pt x="187" y="1468" on="0"/>
        <pt x="274" y="1480" on="0"/>
        <pt x="352" y="1482" on="0"/>
        <pt x="366" y="1478" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            1
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            1 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="175" yMin="200" xMax="1027" yMax="1142">
      <contour>
        <pt x="1027" y="715" on="1"/>
        <pt x="1027" y="654" on="1"/>
        <pt x="280" y="200" on="1"/>
        <pt x="211" y="325" on="1"/>
        <pt x="624" y="573" on="1"/>
        <pt x="783" y="639" on="1"/>
        <pt x="626" y="699" on="1"/>
        <pt x="175" y="963" on="1"/>
        <pt x="282" y="1142" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          4 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          2 8 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          3 2 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          7 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="greaterequal" xMin="142" yMin="54" xMax="994" yMax="1336">
      <contour>
        <pt x="144" y="188" on="1"/>
        <pt x="889" y="639" on="1"/>
        <pt x="969" y="508" on="1"/>
        <pt x="225" y="54" on="1"/>
      </contour>
      <contour>
        <pt x="994" y="909" on="1"/>
        <pt x="994" y="848" on="1"/>
        <pt x="248" y="393" on="1"/>
        <pt x="179" y="519" on="1"/>
        <pt x="591" y="767" on="1"/>
        <pt x="750" y="833" on="1"/>
        <pt x="593" y="893" on="1"/>
        <pt x="142" y="1156" on="1"/>
        <pt x="250" y="1336" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          3 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          1 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 12 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guillemotleft" xMin="54" yMin="76" xMax="912" yMax="933">
      <contour>
        <pt x="472" y="501" on="1"/>
        <pt x="817" y="931" on="1"/>
        <pt x="900" y="861" on="1"/>
        <pt x="695" y="515" on="1"/>
        <pt x="912" y="149" on="1"/>
        <pt x="830" y="79" on="1"/>
      </contour>
      <contour>
        <pt x="54" y="501" on="1"/>
        <pt x="518" y="933" on="1"/>
        <pt x="594" y="863" on="1"/>
        <pt x="315" y="513" on="1"/>
        <pt x="606" y="148" on="1"/>
        <pt x="531" y="76" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          7 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          11 7 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 7 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          1 7 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          5 7 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guillemotright" xMin="118" yMin="78" xMax="970" yMax="933">
      <contour>
        <pt x="200" y="79" on="1"/>
        <pt x="118" y="149" on="1"/>
        <pt x="329" y="501" on="1"/>
        <pt x="118" y="861" on="1"/>
        <pt x="200" y="931" on="1"/>
        <pt x="552" y="506" on="1"/>
      </contour>
      <contour>
        <pt x="500" y="78" on="1"/>
        <pt x="425" y="149" on="1"/>
        <pt x="709" y="501" on="1"/>
        <pt x="425" y="863" on="1"/>
        <pt x="500" y="933" on="1"/>
        <pt x="970" y="506" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          10 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 10 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 10 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          11 6 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          4 10 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglleft" xMin="84" yMin="85" xMax="562" yMax="933">
      <contour>
        <pt x="84" y="501" on="1"/>
        <pt x="477" y="933" on="1"/>
        <pt x="551" y="861" on="1"/>
        <pt x="355" y="515" on="1"/>
        <pt x="562" y="149" on="1"/>
        <pt x="490" y="85" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 6 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          5 1 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 1 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="guilsinglright" xMin="120" yMin="85" xMax="593" yMax="933">
      <contour>
        <pt x="192" y="85" on="1"/>
        <pt x="120" y="159" on="1"/>
        <pt x="322" y="510" on="1"/>
        <pt x="120" y="872" on="1"/>
        <pt x="192" y="933" on="1"/>
        <pt x="593" y="515" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 6 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 4 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          5 0 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="25" yMin="0" xMax="1119" yMax="1377">
      <contour>
        <pt x="1119" y="0" on="1"/>
        <pt x="633" y="0" on="1"/>
        <pt x="633" y="73" on="1"/>
        <pt x="656" y="86" on="0"/>
        <pt x="704" y="109" on="0"/>
        <pt x="736" y="118" on="1"/>
        <pt x="736" y="496" on="1"/>
        <pt x="736" y="577" on="0"/>
        <pt x="731" y="694" on="0"/>
        <pt x="717" y="733" on="1"/>
        <pt x="706" y="764" on="0"/>
        <pt x="660" y="809" on="0"/>
        <pt x="616" y="809" on="1"/>
        <pt x="580" y="809" on="0"/>
        <pt x="522" y="777" on="0"/>
        <pt x="477" y="727" on="0"/>
        <pt x="444" y="666" on="0"/>
        <pt x="431" y="638" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="461" y="110" on="0"/>
        <pt x="508" y="92" on="0"/>
        <pt x="534" y="73" on="1"/>
        <pt x="534" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="73" y="88" on="0"/>
        <pt x="128" y="110" on="0"/>
        <pt x="161" y="118" on="1"/>
        <pt x="161" y="1222" on="1"/>
        <pt x="25" y="1237" on="1"/>
        <pt x="25" y="1310" on="1"/>
        <pt x="53" y="1322" on="0"/>
        <pt x="139" y="1344" on="0"/>
        <pt x="234" y="1361" on="0"/>
        <pt x="329" y="1374" on="0"/>
        <pt x="367" y="1377" on="1"/>
        <pt x="431" y="1377" on="1"/>
        <pt x="431" y="747" on="1"/>
        <pt x="433" y="747" on="1"/>
        <pt x="448" y="788" on="0"/>
        <pt x="497" y="864" on="0"/>
        <pt x="565" y="923" on="0"/>
        <pt x="654" y="958" on="0"/>
        <pt x="710" y="958" on="1"/>
        <pt x="778" y="958" on="0"/>
        <pt x="888" y="922" on="0"/>
        <pt x="965" y="832" on="0"/>
        <pt x="1006" y="680" on="0"/>
        <pt x="1006" y="564" on="1"/>
        <pt x="1006" y="118" on="1"/>
        <pt x="1038" y="111" on="0"/>
        <pt x="1090" y="92" on="0"/>
        <pt x="1119" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          37 0 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hacute" xMin="25" yMin="0" xMax="1119" yMax="1482">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="547" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="hbar" xMin="14" yMin="0" xMax="1119" yMax="1406">
      <contour>
        <pt x="14" y="1160" on="1"/>
        <pt x="161" y="1160" on="1"/>
        <pt x="161" y="1251" on="1"/>
        <pt x="25" y="1266" on="1"/>
        <pt x="25" y="1339" on="1"/>
        <pt x="53" y="1351" on="0"/>
        <pt x="139" y="1373" on="0"/>
        <pt x="234" y="1390" on="0"/>
        <pt x="329" y="1403" on="0"/>
        <pt x="367" y="1406" on="1"/>
        <pt x="431" y="1406" on="1"/>
        <pt x="431" y="1160" on="1"/>
        <pt x="719" y="1160" on="1"/>
        <pt x="719" y="1046" on="1"/>
        <pt x="431" y="1046" on="1"/>
        <pt x="431" y="747" on="1"/>
        <pt x="433" y="747" on="1"/>
        <pt x="448" y="788" on="0"/>
        <pt x="497" y="864" on="0"/>
        <pt x="565" y="923" on="0"/>
        <pt x="654" y="958" on="0"/>
        <pt x="710" y="958" on="1"/>
        <pt x="778" y="958" on="0"/>
        <pt x="888" y="922" on="0"/>
        <pt x="965" y="832" on="0"/>
        <pt x="1006" y="680" on="0"/>
        <pt x="1006" y="564" on="1"/>
        <pt x="1006" y="118" on="1"/>
        <pt x="1038" y="111" on="0"/>
        <pt x="1090" y="92" on="0"/>
        <pt x="1119" y="73" on="1"/>
        <pt x="1119" y="0" on="1"/>
        <pt x="633" y="0" on="1"/>
        <pt x="633" y="73" on="1"/>
        <pt x="656" y="86" on="0"/>
        <pt x="704" y="109" on="0"/>
        <pt x="736" y="118" on="1"/>
        <pt x="736" y="496" on="1"/>
        <pt x="736" y="577" on="0"/>
        <pt x="731" y="694" on="0"/>
        <pt x="717" y="733" on="1"/>
        <pt x="706" y="764" on="0"/>
        <pt x="660" y="809" on="0"/>
        <pt x="616" y="809" on="1"/>
        <pt x="580" y="809" on="0"/>
        <pt x="522" y="777" on="0"/>
        <pt x="477" y="727" on="0"/>
        <pt x="444" y="666" on="0"/>
        <pt x="431" y="638" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="461" y="110" on="0"/>
        <pt x="508" y="92" on="0"/>
        <pt x="534" y="73" on="1"/>
        <pt x="534" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="73" y="88" on="0"/>
        <pt x="128" y="110" on="0"/>
        <pt x="161" y="118" on="1"/>
        <pt x="161" y="1046" on="1"/>
        <pt x="14" y="1046" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            53
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            53 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          128 21 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 9 values pushed */
          48 21 64 21 80 21 96 21 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          1 9 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 17 values pushed */
          127 4 143 4 159 4 175 4 191 4 207 4 223 4 239 4 8
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          15 31 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          48 43 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hcircumflex" xMin="13" yMin="0" xMax="1119" yMax="1758">
      <component glyphName="h" x="0" y="0" flags="0x204"/>
      <component glyphName="Circumflex" x="-128" y="18" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hdesc" xMin="25" yMin="-277" xMax="1129" yMax="1377">
      <contour>
        <pt x="613" y="73" on="1"/>
        <pt x="637" y="86" on="0"/>
        <pt x="685" y="109" on="0"/>
        <pt x="717" y="118" on="1"/>
        <pt x="717" y="536" on="1"/>
        <pt x="717" y="576" on="0"/>
        <pt x="717" y="638" on="0"/>
        <pt x="714" y="688" on="0"/>
        <pt x="706" y="727" on="0"/>
        <pt x="699" y="745" on="1"/>
        <pt x="682" y="784" on="0"/>
        <pt x="631" y="809" on="0"/>
        <pt x="601" y="809" on="1"/>
        <pt x="570" y="809" on="0"/>
        <pt x="516" y="774" on="0"/>
        <pt x="472" y="725" on="0"/>
        <pt x="440" y="669" on="0"/>
        <pt x="431" y="648" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="461" y="110" on="0"/>
        <pt x="509" y="92" on="0"/>
        <pt x="535" y="73" on="1"/>
        <pt x="535" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="73" y="88" on="0"/>
        <pt x="129" y="110" on="0"/>
        <pt x="162" y="118" on="1"/>
        <pt x="162" y="1222" on="1"/>
        <pt x="25" y="1237" on="1"/>
        <pt x="25" y="1310" on="1"/>
        <pt x="53" y="1322" on="0"/>
        <pt x="139" y="1344" on="0"/>
        <pt x="235" y="1361" on="0"/>
        <pt x="330" y="1374" on="0"/>
        <pt x="368" y="1377" on="1"/>
        <pt x="431" y="1377" on="1"/>
        <pt x="431" y="761" on="1"/>
        <pt x="433" y="761" on="1"/>
        <pt x="442" y="788" on="0"/>
        <pt x="486" y="856" on="0"/>
        <pt x="552" y="916" on="0"/>
        <pt x="640" y="958" on="0"/>
        <pt x="694" y="958" on="1"/>
        <pt x="766" y="958" on="0"/>
        <pt x="876" y="922" on="0"/>
        <pt x="949" y="832" on="0"/>
        <pt x="986" y="680" on="0"/>
        <pt x="986" y="564" on="1"/>
        <pt x="986" y="107" on="1"/>
        <pt x="1129" y="107" on="1"/>
        <pt x="1127" y="61" on="0"/>
        <pt x="1119" y="-35" on="0"/>
        <pt x="1113" y="-86" on="1"/>
        <pt x="1092" y="-277" on="1"/>
        <pt x="1019" y="-277" on="1"/>
        <pt x="918" y="0" on="1"/>
        <pt x="613" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            56
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            56 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          56
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hungarumlaut" xMin="-23" yMin="1098" xMax="706" yMax="1481">
      <contour>
        <pt x="109" y="1477" on="1"/>
        <pt x="120" y="1481" on="0"/>
        <pt x="186" y="1477" on="0"/>
        <pt x="258" y="1466" on="0"/>
        <pt x="318" y="1448" on="0"/>
        <pt x="323" y="1437" on="1"/>
        <pt x="323" y="1390" on="1"/>
        <pt x="57" y="1098" on="1"/>
        <pt x="-23" y="1137" on="1"/>
      </contour>
      <contour>
        <pt x="489" y="1477" on="1"/>
        <pt x="502" y="1481" on="0"/>
        <pt x="564" y="1477" on="0"/>
        <pt x="634" y="1461" on="0"/>
        <pt x="694" y="1439" on="0"/>
        <pt x="706" y="1424" on="1"/>
        <pt x="706" y="1380" on="1"/>
        <pt x="303" y="1098" on="1"/>
        <pt x="231" y="1140" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="67" yMin="459" xMax="614" yMax="634">
      <contour>
        <pt x="67" y="634" on="1"/>
        <pt x="614" y="634" on="1"/>
        <pt x="614" y="459" on="1"/>
        <pt x="67" y="459" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          2 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="38" yMin="0" xMax="541" yMax="1431">
      <contour>
        <pt x="541" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="67" y="88" on="0"/>
        <pt x="119" y="109" on="0"/>
        <pt x="154" y="118" on="1"/>
        <pt x="154" y="803" on="1"/>
        <pt x="38" y="817" on="1"/>
        <pt x="38" y="891" on="1"/>
        <pt x="66" y="902" on="0"/>
        <pt x="148" y="923" on="0"/>
        <pt x="238" y="941" on="0"/>
        <pt x="327" y="954" on="0"/>
        <pt x="360" y="958" on="1"/>
        <pt x="424" y="958" on="1"/>
        <pt x="424" y="118" on="1"/>
        <pt x="462" y="109" on="0"/>
        <pt x="514" y="88" on="0"/>
        <pt x="541" y="73" on="1"/>
      </contour>
      <contour>
        <pt x="120" y="1286" on="1"/>
        <pt x="120" y="1354" on="0"/>
        <pt x="213" y="1431" on="0"/>
        <pt x="286" y="1431" on="1"/>
        <pt x="360" y="1431" on="0"/>
        <pt x="453" y="1354" on="0"/>
        <pt x="453" y="1286" on="1"/>
        <pt x="453" y="1220" on="0"/>
        <pt x="360" y="1142" on="0"/>
        <pt x="286" y="1142" on="1"/>
        <pt x="213" y="1142" on="0"/>
        <pt x="120" y="1220" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          22 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          18 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 8
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="iacute" xMin="38" yMin="0" xMax="552" yMax="1482">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="6" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="icircumflex" xMin="-15" yMin="0" xMax="578" yMax="1487">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-67" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="idieresis" xMin="-58" yMin="0" xMax="624" yMax="1422">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="-58" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="igrave" xMin="-25" yMin="0" xMax="541" yMax="1482">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="-123" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          20
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="imacron" xMin="-29" yMin="0" xMax="541" yMax="1334">
      <component glyphName="dotlessi" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="-257" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="infinity" xMin="80" yMin="259" xMax="1380" yMax="1008">
      <contour>
        <pt x="780" y="769" on="1"/>
        <pt x="798" y="820" on="0"/>
        <pt x="853" y="907" on="0"/>
        <pt x="928" y="971" on="0"/>
        <pt x="1023" y="1008" on="0"/>
        <pt x="1081" y="1008" on="1"/>
        <pt x="1144" y="1008" on="0"/>
        <pt x="1254" y="955" on="0"/>
        <pt x="1334" y="859" on="0"/>
        <pt x="1380" y="724" on="0"/>
        <pt x="1380" y="641" on="1"/>
        <pt x="1380" y="558" on="0"/>
        <pt x="1325" y="418" on="0"/>
        <pt x="1232" y="316" on="0"/>
        <pt x="1108" y="259" on="0"/>
        <pt x="1038" y="259" on="1"/>
        <pt x="974" y="259" on="0"/>
        <pt x="869" y="286" on="0"/>
        <pt x="782" y="344" on="0"/>
        <pt x="707" y="433" on="0"/>
        <pt x="673" y="495" on="1"/>
        <pt x="658" y="444" on="0"/>
        <pt x="600" y="358" on="0"/>
        <pt x="523" y="295" on="0"/>
        <pt x="428" y="259" on="0"/>
        <pt x="375" y="259" on="1"/>
        <pt x="314" y="259" on="0"/>
        <pt x="207" y="308" on="0"/>
        <pt x="127" y="403" on="0"/>
        <pt x="80" y="540" on="0"/>
        <pt x="80" y="628" on="1"/>
        <pt x="80" y="713" on="0"/>
        <pt x="137" y="853" on="0"/>
        <pt x="232" y="953" on="0"/>
        <pt x="354" y="1008" on="0"/>
        <pt x="419" y="1008" on="1"/>
        <pt x="484" y="1008" on="0"/>
        <pt x="588" y="977" on="0"/>
        <pt x="674" y="916" on="0"/>
        <pt x="746" y="827" on="0"/>
      </contour>
      <contour>
        <pt x="827" y="695" on="1"/>
        <pt x="862" y="636" on="0"/>
        <pt x="930" y="552" on="0"/>
        <pt x="999" y="498" on="0"/>
        <pt x="1071" y="472" on="0"/>
        <pt x="1110" y="472" on="1"/>
        <pt x="1141" y="472" on="0"/>
        <pt x="1196" y="493" on="0"/>
        <pt x="1236" y="532" on="0"/>
        <pt x="1260" y="586" on="0"/>
        <pt x="1260" y="620" on="1"/>
        <pt x="1260" y="663" on="0"/>
        <pt x="1230" y="728" on="0"/>
        <pt x="1177" y="772" on="0"/>
        <pt x="1104" y="794" on="0"/>
        <pt x="1062" y="794" on="1"/>
        <pt x="1031" y="794" on="0"/>
        <pt x="964" y="781" on="0"/>
        <pt x="901" y="756" on="0"/>
        <pt x="846" y="719" on="0"/>
      </contour>
      <contour>
        <pt x="627" y="569" on="1"/>
        <pt x="592" y="630" on="0"/>
        <pt x="526" y="716" on="0"/>
        <pt x="461" y="770" on="0"/>
        <pt x="394" y="794" on="0"/>
        <pt x="358" y="794" on="1"/>
        <pt x="327" y="794" on="0"/>
        <pt x="273" y="772" on="0"/>
        <pt x="232" y="733" on="0"/>
        <pt x="209" y="677" on="0"/>
        <pt x="209" y="643" on="1"/>
        <pt x="209" y="562" on="0"/>
        <pt x="316" y="472" on="0"/>
        <pt x="403" y="472" on="1"/>
        <pt x="468" y="472" on="0"/>
        <pt x="586" y="514" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 5 76
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          20 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          45 24
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          55 24
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          65
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          45
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          73
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="integral" xMin="-100" yMin="-298" xMax="661" yMax="1456">
      <contour>
        <pt x="450" y="350" on="1"/>
        <pt x="453" y="322" on="0"/>
        <pt x="460" y="242" on="0"/>
        <pt x="465" y="162" on="0"/>
        <pt x="468" y="94" on="0"/>
        <pt x="468" y="78" on="1"/>
        <pt x="468" y="-25" on="0"/>
        <pt x="400" y="-181" on="0"/>
        <pt x="346" y="-220" on="1"/>
        <pt x="287" y="-264" on="0"/>
        <pt x="147" y="-298" on="0"/>
        <pt x="82" y="-298" on="1"/>
        <pt x="67" y="-298" on="0"/>
        <pt x="20" y="-296" on="0"/>
        <pt x="-32" y="-290" on="0"/>
        <pt x="-82" y="-281" on="0"/>
        <pt x="-100" y="-275" on="1"/>
        <pt x="-98" y="-243" on="0"/>
        <pt x="-87" y="-166" on="0"/>
        <pt x="-73" y="-91" on="0"/>
        <pt x="-57" y="-24" on="0"/>
        <pt x="-50" y="-2" on="1"/>
        <pt x="16" y="-2" on="1"/>
        <pt x="101" y="-186" on="1"/>
        <pt x="135" y="-186" on="0"/>
        <pt x="177" y="-168" on="0"/>
        <pt x="198" y="-123" on="0"/>
        <pt x="204" y="-48" on="0"/>
        <pt x="203" y="8" on="1"/>
        <pt x="203" y="17" on="0"/>
        <pt x="199" y="74" on="0"/>
        <pt x="193" y="145" on="0"/>
        <pt x="185" y="220" on="0"/>
        <pt x="182" y="248" on="1"/>
        <pt x="117" y="812" on="1"/>
        <pt x="112" y="853" on="0"/>
        <pt x="106" y="936" on="0"/>
        <pt x="103" y="1007" on="0"/>
        <pt x="102" y="1060" on="0"/>
        <pt x="102" y="1071" on="1"/>
        <pt x="102" y="1113" on="0"/>
        <pt x="112" y="1196" on="0"/>
        <pt x="138" y="1275" on="0"/>
        <pt x="185" y="1348" on="0"/>
        <pt x="223" y="1378" on="1"/>
        <pt x="284" y="1426" on="0"/>
        <pt x="422" y="1456" on="0"/>
        <pt x="491" y="1456" on="1"/>
        <pt x="505" y="1456" on="0"/>
        <pt x="549" y="1453" on="0"/>
        <pt x="597" y="1447" on="0"/>
        <pt x="644" y="1439" on="0"/>
        <pt x="661" y="1434" on="1"/>
        <pt x="658" y="1401" on="0"/>
        <pt x="646" y="1324" on="0"/>
        <pt x="631" y="1249" on="0"/>
        <pt x="617" y="1182" on="0"/>
        <pt x="611" y="1160" on="1"/>
        <pt x="546" y="1160" on="1"/>
        <pt x="460" y="1344" on="1"/>
        <pt x="433" y="1344" on="0"/>
        <pt x="396" y="1328" on="0"/>
        <pt x="373" y="1290" on="0"/>
        <pt x="362" y="1227" on="0"/>
        <pt x="362" y="1180" on="1"/>
        <pt x="362" y="1163" on="0"/>
        <pt x="365" y="1106" on="0"/>
        <pt x="369" y="1039" on="0"/>
        <pt x="376" y="966" on="0"/>
        <pt x="380" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          47
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          23 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="iogonek" xMin="38" yMin="-423" xMax="541" yMax="1431">
      <contour>
        <pt x="541" y="0" on="1"/>
        <pt x="474" y="0" on="1"/>
        <pt x="414" y="-45" on="0"/>
        <pt x="347" y="-163" on="0"/>
        <pt x="347" y="-223" on="1"/>
        <pt x="347" y="-259" on="0"/>
        <pt x="391" y="-316" on="0"/>
        <pt x="436" y="-316" on="1"/>
        <pt x="479" y="-316" on="0"/>
        <pt x="530" y="-299" on="1"/>
        <pt x="530" y="-385" on="1"/>
        <pt x="517" y="-393" on="0"/>
        <pt x="474" y="-407" on="0"/>
        <pt x="426" y="-417" on="0"/>
        <pt x="380" y="-423" on="0"/>
        <pt x="364" y="-423" on="1"/>
        <pt x="233" y="-423" on="0"/>
        <pt x="173" y="-372" on="1"/>
        <pt x="114" y="-322" on="0"/>
        <pt x="114" y="-250" on="1"/>
        <pt x="114" y="-166" on="0"/>
        <pt x="229" y="-46" on="0"/>
        <pt x="337" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="67" y="88" on="0"/>
        <pt x="119" y="109" on="0"/>
        <pt x="154" y="118" on="1"/>
        <pt x="154" y="803" on="1"/>
        <pt x="38" y="817" on="1"/>
        <pt x="38" y="891" on="1"/>
        <pt x="66" y="902" on="0"/>
        <pt x="148" y="923" on="0"/>
        <pt x="238" y="941" on="0"/>
        <pt x="327" y="954" on="0"/>
        <pt x="360" y="958" on="1"/>
        <pt x="424" y="958" on="1"/>
        <pt x="424" y="118" on="1"/>
        <pt x="462" y="109" on="0"/>
        <pt x="514" y="88" on="0"/>
        <pt x="541" y="73" on="1"/>
      </contour>
      <contour>
        <pt x="120" y="1286" on="1"/>
        <pt x="120" y="1354" on="0"/>
        <pt x="213" y="1431" on="0"/>
        <pt x="286" y="1431" on="1"/>
        <pt x="360" y="1431" on="0"/>
        <pt x="453" y="1354" on="0"/>
        <pt x="453" y="1286" on="1"/>
        <pt x="453" y="1220" on="0"/>
        <pt x="360" y="1142" on="0"/>
        <pt x="286" y="1142" on="1"/>
        <pt x="213" y="1142" on="0"/>
        <pt x="120" y="1220" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          44 53 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            22 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 8
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="82" yMin="-396" xMax="520" yMax="1431">
      <contour>
        <pt x="223" y="803" on="1"/>
        <pt x="100" y="817" on="1"/>
        <pt x="100" y="891" on="1"/>
        <pt x="127" y="904" on="0"/>
        <pt x="211" y="926" on="0"/>
        <pt x="304" y="942" on="0"/>
        <pt x="395" y="954" on="0"/>
        <pt x="429" y="958" on="1"/>
        <pt x="493" y="958" on="1"/>
        <pt x="493" y="80" on="1"/>
        <pt x="493" y="-8" on="0"/>
        <pt x="451" y="-144" on="0"/>
        <pt x="417" y="-195" on="1"/>
        <pt x="383" y="-246" on="0"/>
        <pt x="295" y="-318" on="0"/>
        <pt x="210" y="-365" on="0"/>
        <pt x="138" y="-390" on="0"/>
        <pt x="119" y="-396" on="1"/>
        <pt x="82" y="-341" on="1"/>
        <pt x="96" y="-332" on="0"/>
        <pt x="130" y="-305" on="0"/>
        <pt x="163" y="-264" on="0"/>
        <pt x="192" y="-206" on="0"/>
        <pt x="202" y="-167" on="1"/>
        <pt x="212" y="-126" on="0"/>
        <pt x="223" y="-22" on="0"/>
        <pt x="223" y="44" on="1"/>
      </contour>
      <contour>
        <pt x="187" y="1286" on="1"/>
        <pt x="187" y="1354" on="0"/>
        <pt x="280" y="1431" on="0"/>
        <pt x="353" y="1431" on="1"/>
        <pt x="427" y="1431" on="0"/>
        <pt x="520" y="1354" on="0"/>
        <pt x="520" y="1286" on="1"/>
        <pt x="520" y="1220" on="0"/>
        <pt x="427" y="1142" on="0"/>
        <pt x="353" y="1142" on="1"/>
        <pt x="280" y="1142" on="0"/>
        <pt x="187" y="1220" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          30 39 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 8
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="jcircumflex" xMin="4" yMin="-396" xMax="597" yMax="1487">
      <component glyphName="dotlessj" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="-48" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="30" yMin="0" xMax="1114" yMax="1377">
      <contour>
        <pt x="631" y="935" on="1"/>
        <pt x="1069" y="935" on="1"/>
        <pt x="1069" y="863" on="1"/>
        <pt x="1034" y="848" on="0"/>
        <pt x="971" y="825" on="0"/>
        <pt x="934" y="817" on="1"/>
        <pt x="908" y="785" on="0"/>
        <pt x="841" y="709" on="0"/>
        <pt x="772" y="634" on="0"/>
        <pt x="709" y="568" on="0"/>
        <pt x="687" y="545" on="1"/>
        <pt x="715" y="507" on="0"/>
        <pt x="789" y="405" on="0"/>
        <pt x="875" y="291" on="0"/>
        <pt x="970" y="172" on="0"/>
        <pt x="1019" y="118" on="1"/>
        <pt x="1114" y="73" on="1"/>
        <pt x="1114" y="0" on="1"/>
        <pt x="798" y="0" on="1"/>
        <pt x="747" y="44" on="1"/>
        <pt x="704" y="102" on="0"/>
        <pt x="637" y="204" on="0"/>
        <pt x="581" y="297" on="0"/>
        <pt x="532" y="384" on="0"/>
        <pt x="508" y="428" on="1"/>
        <pt x="442" y="446" on="1"/>
        <pt x="442" y="118" on="1"/>
        <pt x="474" y="112" on="0"/>
        <pt x="526" y="90" on="0"/>
        <pt x="556" y="73" on="1"/>
        <pt x="556" y="0" on="1"/>
        <pt x="49" y="0" on="1"/>
        <pt x="49" y="73" on="1"/>
        <pt x="110" y="103" on="0"/>
        <pt x="172" y="118" on="1"/>
        <pt x="172" y="1222" on="1"/>
        <pt x="30" y="1237" on="1"/>
        <pt x="30" y="1310" on="1"/>
        <pt x="56" y="1322" on="0"/>
        <pt x="146" y="1344" on="0"/>
        <pt x="247" y="1361" on="0"/>
        <pt x="345" y="1374" on="0"/>
        <pt x="378" y="1377" on="1"/>
        <pt x="442" y="1377" on="1"/>
        <pt x="442" y="529" on="1"/>
        <pt x="494" y="529" on="1"/>
        <pt x="521" y="560" on="0"/>
        <pt x="582" y="635" on="0"/>
        <pt x="643" y="712" on="0"/>
        <pt x="697" y="786" on="0"/>
        <pt x="716" y="817" on="1"/>
        <pt x="691" y="825" on="0"/>
        <pt x="651" y="848" on="0"/>
        <pt x="631" y="863" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            42
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            42 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            17
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            17 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 0 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          10 44 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 25 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="kcommaaccent" xMin="30" yMin="-527" xMax="1114" yMax="1377">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="323" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="l" xMin="20" yMin="0" xMax="546" yMax="1377">
      <contour>
        <pt x="546" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="96" y="103" on="0"/>
        <pt x="157" y="118" on="1"/>
        <pt x="157" y="1222" on="1"/>
        <pt x="20" y="1237" on="1"/>
        <pt x="20" y="1310" on="1"/>
        <pt x="45" y="1322" on="0"/>
        <pt x="129" y="1344" on="0"/>
        <pt x="226" y="1362" on="0"/>
        <pt x="324" y="1374" on="0"/>
        <pt x="363" y="1377" on="1"/>
        <pt x="427" y="1377" on="1"/>
        <pt x="427" y="118" on="1"/>
        <pt x="489" y="103" on="0"/>
        <pt x="546" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lacute" xMin="20" yMin="0" xMax="625" yMax="1769">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="-24" y="18" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          24
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lacutecarel" xMin="20" yMin="0" xMax="1002" yMax="1482">
      <component glyphName="l" x="0" y="0" flags="0x4"/>
      <component glyphName="acute" x="456" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="lcaron" xMin="30" yMin="0" xMax="924" yMax="1464">
      <component glyphName="l" x="10" y="0" flags="0x4"/>
      <component glyphName="caron.l" x="140" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="lcommaaccent" xMin="20" yMin="-527" xMax="546" yMax="1377">
      <component glyphName="l" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="8" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="less" xMin="140" yMin="200" xMax="992" yMax="1142">
      <contour>
        <pt x="140" y="628" on="1"/>
        <pt x="140" y="687" on="1"/>
        <pt x="887" y="1142" on="1"/>
        <pt x="956" y="1017" on="1"/>
        <pt x="543" y="769" on="1"/>
        <pt x="384" y="703" on="1"/>
        <pt x="541" y="643" on="1"/>
        <pt x="992" y="377" on="1"/>
        <pt x="885" y="200" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          4 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          8 2 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          3 2 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          7 8 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lessequal" xMin="130" yMin="62" xMax="982" yMax="1336">
      <contour>
        <pt x="215" y="632" on="1"/>
        <pt x="971" y="198" on="1"/>
        <pt x="893" y="62" on="1"/>
        <pt x="138" y="497" on="1"/>
      </contour>
      <contour>
        <pt x="130" y="821" on="1"/>
        <pt x="130" y="881" on="1"/>
        <pt x="875" y="1336" on="1"/>
        <pt x="945" y="1210" on="1"/>
        <pt x="533" y="963" on="1"/>
        <pt x="374" y="896" on="1"/>
        <pt x="531" y="837" on="1"/>
        <pt x="982" y="571" on="1"/>
        <pt x="874" y="393" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 13 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          2 6 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 6 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          12 6 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="logicalnot" xMin="163" yMin="358" xMax="1004" yMax="776">
      <contour>
        <pt x="163" y="776" on="1"/>
        <pt x="1004" y="776" on="1"/>
        <pt x="1004" y="358" on="1"/>
        <pt x="849" y="358" on="1"/>
        <pt x="849" y="602" on="1"/>
        <pt x="163" y="602" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 6 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          5 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="longs" xMin="4" yMin="0" xMax="724" yMax="1406">
      <contour>
        <pt x="509" y="1406" on="1"/>
        <pt x="587" y="1406" on="0"/>
        <pt x="692" y="1378" on="0"/>
        <pt x="724" y="1366" on="1"/>
        <pt x="721" y="1343" on="0"/>
        <pt x="704" y="1279" on="0"/>
        <pt x="683" y="1212" on="0"/>
        <pt x="660" y="1150" on="0"/>
        <pt x="651" y="1130" on="1"/>
        <pt x="587" y="1130" on="1"/>
        <pt x="518" y="1308" on="1"/>
        <pt x="490" y="1301" on="0"/>
        <pt x="445" y="1278" on="0"/>
        <pt x="414" y="1221" on="0"/>
        <pt x="398" y="1117" on="0"/>
        <pt x="398" y="1029" on="1"/>
        <pt x="398" y="118" on="1"/>
        <pt x="440" y="110" on="0"/>
        <pt x="506" y="90" on="0"/>
        <pt x="547" y="73" on="1"/>
        <pt x="547" y="0" on="1"/>
        <pt x="11" y="0" on="1"/>
        <pt x="11" y="73" on="1"/>
        <pt x="40" y="90" on="0"/>
        <pt x="96" y="113" on="0"/>
        <pt x="129" y="118" on="1"/>
        <pt x="129" y="817" on="1"/>
        <pt x="4" y="817" on="1"/>
        <pt x="4" y="891" on="1"/>
        <pt x="14" y="898" on="0"/>
        <pt x="44" y="915" on="0"/>
        <pt x="79" y="932" on="0"/>
        <pt x="116" y="947" on="0"/>
        <pt x="133" y="952" on="1"/>
        <pt x="133" y="1008" on="1"/>
        <pt x="133" y="1125" on="0"/>
        <pt x="193" y="1279" on="0"/>
        <pt x="295" y="1369" on="0"/>
        <pt x="432" y="1406" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            33
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            33 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 10 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lozenge" xMin="54" yMin="-24" xMax="958" yMax="1379">
      <contour>
        <pt x="553" y="-24" on="1"/>
        <pt x="454" y="-24" on="1"/>
        <pt x="54" y="662" on="1"/>
        <pt x="454" y="1379" on="1"/>
        <pt x="553" y="1379" on="1"/>
        <pt x="958" y="672" on="1"/>
      </contour>
      <contour>
        <pt x="570" y="312" on="1"/>
        <pt x="767" y="652" on="1"/>
        <pt x="557" y="1028" on="1"/>
        <pt x="502" y="1160" on="1"/>
        <pt x="498" y="1160" on="1"/>
        <pt x="444" y="1024" on="1"/>
        <pt x="246" y="684" on="1"/>
        <pt x="457" y="308" on="1"/>
        <pt x="514" y="176" on="1"/>
        <pt x="516" y="176" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 3 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          14 3 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="lslash" xMin="20" yMin="0" xMax="557" yMax="1406">
      <contour>
        <pt x="22" y="582" on="1"/>
        <pt x="157" y="663" on="1"/>
        <pt x="157" y="1251" on="1"/>
        <pt x="20" y="1266" on="1"/>
        <pt x="20" y="1339" on="1"/>
        <pt x="45" y="1351" on="0"/>
        <pt x="129" y="1373" on="0"/>
        <pt x="226" y="1391" on="0"/>
        <pt x="324" y="1403" on="0"/>
        <pt x="363" y="1406" on="1"/>
        <pt x="427" y="1406" on="1"/>
        <pt x="427" y="826" on="1"/>
        <pt x="557" y="905" on="1"/>
        <pt x="557" y="757" on="1"/>
        <pt x="427" y="678" on="1"/>
        <pt x="427" y="118" on="1"/>
        <pt x="489" y="103" on="0"/>
        <pt x="546" y="73" on="1"/>
        <pt x="546" y="0" on="1"/>
        <pt x="39" y="0" on="1"/>
        <pt x="39" y="73" on="1"/>
        <pt x="96" y="103" on="0"/>
        <pt x="157" y="118" on="1"/>
        <pt x="157" y="515" on="1"/>
        <pt x="22" y="434" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 18 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          12 18 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 24 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          1 0 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          11 12 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          13 12 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          23 24 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="50" yMin="0" xMax="1686" yMax="958">
      <contour>
        <pt x="1104" y="0" on="1"/>
        <pt x="636" y="0" on="1"/>
        <pt x="636" y="73" on="1"/>
        <pt x="655" y="84" on="0"/>
        <pt x="701" y="109" on="0"/>
        <pt x="729" y="118" on="1"/>
        <pt x="729" y="491" on="1"/>
        <pt x="729" y="576" on="0"/>
        <pt x="718" y="696" on="0"/>
        <pt x="689" y="773" on="0"/>
        <pt x="637" y="809" on="0"/>
        <pt x="597" y="809" on="1"/>
        <pt x="572" y="809" on="0"/>
        <pt x="524" y="785" on="0"/>
        <pt x="482" y="740" on="0"/>
        <pt x="448" y="678" on="0"/>
        <pt x="438" y="641" on="1"/>
        <pt x="438" y="118" on="1"/>
        <pt x="462" y="111" on="0"/>
        <pt x="509" y="88" on="0"/>
        <pt x="532" y="73" on="1"/>
        <pt x="532" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="73" on="1"/>
        <pt x="77" y="86" on="0"/>
        <pt x="134" y="109" on="0"/>
        <pt x="168" y="118" on="1"/>
        <pt x="168" y="803" on="1"/>
        <pt x="50" y="817" on="1"/>
        <pt x="50" y="891" on="1"/>
        <pt x="86" y="906" on="0"/>
        <pt x="172" y="928" on="0"/>
        <pt x="259" y="944" on="0"/>
        <pt x="342" y="955" on="0"/>
        <pt x="375" y="958" on="1"/>
        <pt x="438" y="958" on="1"/>
        <pt x="438" y="747" on="1"/>
        <pt x="440" y="747" on="1"/>
        <pt x="470" y="835" on="0"/>
        <pt x="540" y="896" on="1"/>
        <pt x="611" y="958" on="0"/>
        <pt x="718" y="958" on="1"/>
        <pt x="763" y="958" on="0"/>
        <pt x="849" y="939" on="0"/>
        <pt x="921" y="888" on="0"/>
        <pt x="974" y="799" on="0"/>
        <pt x="985" y="728" on="1"/>
        <pt x="1002" y="779" on="0"/>
        <pt x="1057" y="864" on="0"/>
        <pt x="1131" y="925" on="0"/>
        <pt x="1225" y="958" on="0"/>
        <pt x="1281" y="958" on="1"/>
        <pt x="1350" y="958" on="0"/>
        <pt x="1457" y="922" on="0"/>
        <pt x="1530" y="832" on="0"/>
        <pt x="1568" y="679" on="0"/>
        <pt x="1568" y="561" on="1"/>
        <pt x="1568" y="118" on="1"/>
        <pt x="1630" y="108" on="0"/>
        <pt x="1686" y="73" on="1"/>
        <pt x="1686" y="0" on="1"/>
        <pt x="1204" y="0" on="1"/>
        <pt x="1204" y="73" on="1"/>
        <pt x="1247" y="101" on="0"/>
        <pt x="1299" y="118" on="1"/>
        <pt x="1299" y="524" on="1"/>
        <pt x="1299" y="670" on="0"/>
        <pt x="1271" y="739" on="1"/>
        <pt x="1244" y="809" on="0"/>
        <pt x="1154" y="809" on="1"/>
        <pt x="1093" y="809" on="0"/>
        <pt x="1017" y="707" on="0"/>
        <pt x="999" y="623" on="1"/>
        <pt x="999" y="118" on="1"/>
        <pt x="1030" y="109" on="0"/>
        <pt x="1081" y="86" on="0"/>
        <pt x="1104" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            51
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            51 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            60
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            60 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 0 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          46 0 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          59
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          76
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="macron" xMin="228" yMin="1199" xMax="797" yMax="1334">
      <contour>
        <pt x="228" y="1199" on="1"/>
        <pt x="228" y="1334" on="1"/>
        <pt x="797" y="1334" on="1"/>
        <pt x="797" y="1199" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          32 3 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          64 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          64 3 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          176 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          144 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          2 28
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="macute" xMin="50" yMin="0" xMax="1686" yMax="1482">
      <component glyphName="m" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="769" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          84
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="minus" xMin="148" yMin="589" xMax="1019" yMax="743">
      <contour>
        <pt x="148" y="743" on="1"/>
        <pt x="1019" y="743" on="1"/>
        <pt x="1019" y="589" on="1"/>
        <pt x="148" y="589" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="mu" xMin="31" yMin="-403" xMax="1119" yMax="958">
      <contour>
        <pt x="291" y="25" on="1"/>
        <pt x="382" y="-301" on="1"/>
        <pt x="382" y="-375" on="1"/>
        <pt x="250" y="-403" on="0"/>
        <pt x="143" y="-375" on="1"/>
        <pt x="143" y="803" on="1"/>
        <pt x="31" y="817" on="1"/>
        <pt x="31" y="891" on="1"/>
        <pt x="61" y="903" on="0"/>
        <pt x="149" y="923" on="0"/>
        <pt x="242" y="941" on="0"/>
        <pt x="330" y="954" on="0"/>
        <pt x="360" y="958" on="1"/>
        <pt x="424" y="958" on="1"/>
        <pt x="423" y="816" on="0"/>
        <pt x="412" y="547" on="0"/>
        <pt x="412" y="415" on="1"/>
        <pt x="412" y="338" on="0"/>
        <pt x="425" y="229" on="0"/>
        <pt x="456" y="160" on="0"/>
        <pt x="507" y="127" on="0"/>
        <pt x="544" y="127" on="1"/>
        <pt x="602" y="127" on="0"/>
        <pt x="694" y="226" on="0"/>
        <pt x="726" y="312" on="1"/>
        <pt x="726" y="803" on="1"/>
        <pt x="603" y="817" on="1"/>
        <pt x="603" y="891" on="1"/>
        <pt x="631" y="903" on="0"/>
        <pt x="715" y="923" on="0"/>
        <pt x="808" y="941" on="0"/>
        <pt x="898" y="954" on="0"/>
        <pt x="931" y="958" on="1"/>
        <pt x="995" y="958" on="1"/>
        <pt x="995" y="132" on="1"/>
        <pt x="1119" y="118" on="1"/>
        <pt x="1119" y="52" on="1"/>
        <pt x="1092" y="41" on="0"/>
        <pt x="1013" y="18" on="0"/>
        <pt x="926" y="-1" on="0"/>
        <pt x="841" y="-15" on="0"/>
        <pt x="809" y="-18" on="1"/>
        <pt x="744" y="-18" on="1"/>
        <pt x="731" y="194" on="1"/>
        <pt x="725" y="194" on="1"/>
        <pt x="706" y="145" on="0"/>
        <pt x="660" y="82" on="0"/>
        <pt x="630" y="51" on="1"/>
        <pt x="595" y="16" on="0"/>
        <pt x="505" y="-23" on="0"/>
        <pt x="460" y="-23" on="1"/>
        <pt x="406" y="-23" on="0"/>
        <pt x="324" y="4" on="0"/>
        <pt x="299" y="25" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            50
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            50 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            41
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            41 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            2 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          21 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          35 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          43 41 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="multiply" xMin="218" yMin="298" xMax="948" yMax="1028">
      <contour>
        <pt x="218" y="412" on="1"/>
        <pt x="470" y="667" on="1"/>
        <pt x="222" y="916" on="1"/>
        <pt x="330" y="1024" on="1"/>
        <pt x="579" y="776" on="1"/>
        <pt x="834" y="1028" on="1"/>
        <pt x="942" y="920" on="1"/>
        <pt x="690" y="667" on="1"/>
        <pt x="948" y="408" on="1"/>
        <pt x="838" y="298" on="1"/>
        <pt x="579" y="556" on="1"/>
        <pt x="326" y="304" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          4 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          9 5 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 5 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          4 5 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          10 9 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="50" yMin="0" xMax="1119" yMax="958">
      <contour>
        <pt x="1119" y="0" on="1"/>
        <pt x="634" y="0" on="1"/>
        <pt x="634" y="73" on="1"/>
        <pt x="658" y="86" on="0"/>
        <pt x="704" y="107" on="0"/>
        <pt x="736" y="118" on="1"/>
        <pt x="736" y="567" on="1"/>
        <pt x="736" y="626" on="0"/>
        <pt x="725" y="716" on="0"/>
        <pt x="696" y="778" on="0"/>
        <pt x="646" y="809" on="0"/>
        <pt x="607" y="809" on="1"/>
        <pt x="573" y="809" on="0"/>
        <pt x="519" y="781" on="0"/>
        <pt x="477" y="735" on="0"/>
        <pt x="445" y="672" on="0"/>
        <pt x="434" y="638" on="1"/>
        <pt x="434" y="118" on="1"/>
        <pt x="464" y="110" on="0"/>
        <pt x="510" y="90" on="0"/>
        <pt x="537" y="73" on="1"/>
        <pt x="537" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="73" on="1"/>
        <pt x="74" y="85" on="0"/>
        <pt x="126" y="107" on="0"/>
        <pt x="164" y="118" on="1"/>
        <pt x="164" y="803" on="1"/>
        <pt x="50" y="817" on="1"/>
        <pt x="50" y="891" on="1"/>
        <pt x="75" y="902" on="0"/>
        <pt x="151" y="923" on="0"/>
        <pt x="239" y="941" on="0"/>
        <pt x="330" y="954" on="0"/>
        <pt x="371" y="958" on="1"/>
        <pt x="434" y="958" on="1"/>
        <pt x="434" y="765" on="1"/>
        <pt x="435" y="765" on="1"/>
        <pt x="452" y="803" on="0"/>
        <pt x="491" y="856" on="0"/>
        <pt x="516" y="881" on="1"/>
        <pt x="547" y="912" on="0"/>
        <pt x="645" y="958" on="0"/>
        <pt x="702" y="958" on="1"/>
        <pt x="775" y="958" on="0"/>
        <pt x="888" y="922" on="0"/>
        <pt x="966" y="832" on="0"/>
        <pt x="1006" y="680" on="0"/>
        <pt x="1006" y="564" on="1"/>
        <pt x="1006" y="118" on="1"/>
        <pt x="1043" y="111" on="0"/>
        <pt x="1094" y="89" on="0"/>
        <pt x="1119" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            43
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            43 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          11 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          28 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          36 0 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nacute" xMin="50" yMin="0" xMax="1119" yMax="1482">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="453" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ncaron" xMin="50" yMin="0" xMax="1119" yMax="1494">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="255" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ncommaaccent" xMin="50" yMin="-527" xMax="1119" yMax="958">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="293" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="nine" xMin="50" yMin="-24" xMax="974" yMax="1379">
      <contour>
        <pt x="50" y="923" on="1"/>
        <pt x="50" y="1022" on="0"/>
        <pt x="118" y="1189" on="0"/>
        <pt x="239" y="1310" on="0"/>
        <pt x="409" y="1379" on="0"/>
        <pt x="511" y="1379" on="1"/>
        <pt x="623" y="1379" on="0"/>
        <pt x="796" y="1304" on="0"/>
        <pt x="914" y="1167" on="0"/>
        <pt x="974" y="973" on="0"/>
        <pt x="974" y="854" on="1"/>
        <pt x="974" y="675" on="0"/>
        <pt x="870" y="370" on="0"/>
        <pt x="678" y="139" on="0"/>
        <pt x="407" y="-6" on="0"/>
        <pt x="240" y="-24" on="1"/>
        <pt x="195" y="60" on="1"/>
        <pt x="418" y="119" on="0"/>
        <pt x="537" y="269" on="1"/>
        <pt x="598" y="345" on="0"/>
        <pt x="658" y="530" on="0"/>
        <pt x="674" y="641" on="1"/>
        <pt x="661" y="622" on="0"/>
        <pt x="616" y="582" on="0"/>
        <pt x="554" y="550" on="0"/>
        <pt x="475" y="530" on="0"/>
        <pt x="427" y="530" on="1"/>
        <pt x="344" y="530" on="0"/>
        <pt x="206" y="580" on="0"/>
        <pt x="106" y="678" on="0"/>
        <pt x="50" y="825" on="0"/>
      </contour>
      <contour>
        <pt x="341" y="945" on="1"/>
        <pt x="341" y="889" on="0"/>
        <pt x="361" y="788" on="0"/>
        <pt x="405" y="712" on="0"/>
        <pt x="474" y="667" on="0"/>
        <pt x="524" y="667" on="1"/>
        <pt x="570" y="667" on="0"/>
        <pt x="645" y="711" on="0"/>
        <pt x="679" y="750" on="1"/>
        <pt x="683" y="774" on="0"/>
        <pt x="687" y="848" on="0"/>
        <pt x="687" y="883" on="1"/>
        <pt x="687" y="959" on="0"/>
        <pt x="671" y="1096" on="0"/>
        <pt x="631" y="1199" on="0"/>
        <pt x="562" y="1260" on="0"/>
        <pt x="508" y="1260" on="1"/>
        <pt x="461" y="1260" on="0"/>
        <pt x="397" y="1221" on="0"/>
        <pt x="358" y="1143" on="0"/>
        <pt x="341" y="1024" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 52 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          26 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="nonmarkingreturn"/><!-- contains no outline data -->

    <TTGlyph name="notequal" xMin="125" yMin="-200" xMax="999" yMax="1445">
      <contour>
        <pt x="127" y="909" on="1"/>
        <pt x="591" y="909" on="1"/>
        <pt x="830" y="1445" on="1"/>
        <pt x="946" y="1397" on="1"/>
        <pt x="729" y="909" on="1"/>
        <pt x="999" y="909" on="1"/>
        <pt x="999" y="754" on="1"/>
        <pt x="661" y="754" on="1"/>
        <pt x="584" y="579" on="1"/>
        <pt x="999" y="579" on="1"/>
        <pt x="999" y="425" on="1"/>
        <pt x="517" y="425" on="1"/>
        <pt x="240" y="-200" on="1"/>
        <pt x="125" y="-149" on="1"/>
        <pt x="379" y="425" on="1"/>
        <pt x="127" y="425" on="1"/>
        <pt x="127" y="579" on="1"/>
        <pt x="447" y="579" on="1"/>
        <pt x="524" y="754" on="1"/>
        <pt x="127" y="754" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          8 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 0 31 0 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          207 0 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 0 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          10 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ntilde" xMin="50" yMin="0" xMax="1119" yMax="1406">
      <component glyphName="n" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="233" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          56
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="40" yMin="113" xMax="983" yMax="1243">
      <contour>
        <pt x="575" y="426" on="1"/>
        <pt x="334" y="426" on="1"/>
        <pt x="261" y="113" on="1"/>
        <pt x="124" y="113" on="1"/>
        <pt x="197" y="426" on="1"/>
        <pt x="40" y="426" on="1"/>
        <pt x="77" y="550" on="1"/>
        <pt x="226" y="550" on="1"/>
        <pt x="286" y="806" on="1"/>
        <pt x="137" y="806" on="1"/>
        <pt x="174" y="930" on="1"/>
        <pt x="317" y="930" on="1"/>
        <pt x="393" y="1243" on="1"/>
        <pt x="528" y="1243" on="1"/>
        <pt x="455" y="930" on="1"/>
        <pt x="695" y="930" on="1"/>
        <pt x="770" y="1243" on="1"/>
        <pt x="906" y="1243" on="1"/>
        <pt x="830" y="930" on="1"/>
        <pt x="983" y="930" on="1"/>
        <pt x="941" y="806" on="1"/>
        <pt x="800" y="806" on="1"/>
        <pt x="739" y="550" on="1"/>
        <pt x="887" y="550" on="1"/>
        <pt x="844" y="426" on="1"/>
        <pt x="710" y="426" on="1"/>
        <pt x="637" y="113" on="1"/>
        <pt x="501" y="113" on="1"/>
      </contour>
      <contour>
        <pt x="364" y="550" on="1"/>
        <pt x="604" y="550" on="1"/>
        <pt x="664" y="806" on="1"/>
        <pt x="423" y="806" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          27 32 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 12 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          240 12 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          2 12 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          10 12 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          6 10 2
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="48" yMin="-23" xMax="976" yMax="958">
      <contour>
        <pt x="48" y="468" on="1"/>
        <pt x="48" y="579" on="0"/>
        <pt x="110" y="759" on="0"/>
        <pt x="229" y="888" on="0"/>
        <pt x="402" y="958" on="0"/>
        <pt x="512" y="958" on="1"/>
        <pt x="639" y="958" on="0"/>
        <pt x="815" y="879" on="0"/>
        <pt x="926" y="745" on="0"/>
        <pt x="976" y="567" on="0"/>
        <pt x="976" y="468" on="1"/>
        <pt x="976" y="361" on="0"/>
        <pt x="912" y="181" on="0"/>
        <pt x="792" y="50" on="0"/>
        <pt x="620" y="-23" on="0"/>
        <pt x="512" y="-23" on="1"/>
        <pt x="393" y="-23" on="0"/>
        <pt x="218" y="53" on="0"/>
        <pt x="104" y="185" on="0"/>
        <pt x="48" y="364" on="0"/>
      </contour>
      <contour>
        <pt x="339" y="468" on="1"/>
        <pt x="339" y="390" on="0"/>
        <pt x="351" y="253" on="0"/>
        <pt x="392" y="151" on="0"/>
        <pt x="470" y="92" on="0"/>
        <pt x="535" y="92" on="1"/>
        <pt x="605" y="92" on="0"/>
        <pt x="686" y="272" on="0"/>
        <pt x="686" y="468" on="1"/>
        <pt x="686" y="546" on="0"/>
        <pt x="671" y="683" on="0"/>
        <pt x="630" y="785" on="0"/>
        <pt x="556" y="844" on="0"/>
        <pt x="497" y="844" on="1"/>
        <pt x="413" y="844" on="0"/>
        <pt x="339" y="663" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          25 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oacute" xMin="48" yMin="-23" xMax="976" yMax="1482">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="324" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ocircumflex" xMin="48" yMin="-23" xMax="976" yMax="1487">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="170" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          36
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="odieresis" xMin="48" yMin="-23" xMax="976" yMax="1422">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="171" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oe" xMin="44" yMin="-23" xMax="1437" yMax="958">
      <contour>
        <pt x="1419" y="157" on="1"/>
        <pt x="1400" y="131" on="0"/>
        <pt x="1342" y="68" on="0"/>
        <pt x="1259" y="14" on="0"/>
        <pt x="1146" y="-23" on="0"/>
        <pt x="1072" y="-23" on="1"/>
        <pt x="975" y="-23" on="0"/>
        <pt x="824" y="40" on="0"/>
        <pt x="774" y="102" on="1"/>
        <pt x="750" y="76" on="0"/>
        <pt x="689" y="31" on="0"/>
        <pt x="616" y="-3" on="0"/>
        <pt x="533" y="-23" on="0"/>
        <pt x="488" y="-23" on="1"/>
        <pt x="373" y="-23" on="0"/>
        <pt x="205" y="53" on="0"/>
        <pt x="96" y="185" on="0"/>
        <pt x="44" y="364" on="0"/>
        <pt x="44" y="468" on="1"/>
        <pt x="44" y="579" on="0"/>
        <pt x="106" y="759" on="0"/>
        <pt x="223" y="888" on="0"/>
        <pt x="391" y="958" on="0"/>
        <pt x="498" y="958" on="1"/>
        <pt x="603" y="958" on="0"/>
        <pt x="748" y="886" on="0"/>
        <pt x="784" y="829" on="1"/>
        <pt x="838" y="900" on="0"/>
        <pt x="991" y="958" on="0"/>
        <pt x="1083" y="958" on="1"/>
        <pt x="1263" y="958" on="0"/>
        <pt x="1437" y="779" on="0"/>
        <pt x="1437" y="586" on="1"/>
        <pt x="1437" y="556" on="0"/>
        <pt x="1428" y="480" on="0"/>
        <pt x="1421" y="451" on="1"/>
        <pt x="925" y="451" on="1"/>
        <pt x="926" y="395" on="0"/>
        <pt x="955" y="279" on="0"/>
        <pt x="1016" y="186" on="0"/>
        <pt x="1112" y="127" on="0"/>
        <pt x="1180" y="127" on="1"/>
        <pt x="1240" y="127" on="0"/>
        <pt x="1341" y="161" on="0"/>
        <pt x="1386" y="194" on="1"/>
      </contour>
      <contour>
        <pt x="335" y="468" on="1"/>
        <pt x="335" y="390" on="0"/>
        <pt x="341" y="253" on="0"/>
        <pt x="374" y="151" on="0"/>
        <pt x="446" y="92" on="0"/>
        <pt x="511" y="92" on="1"/>
        <pt x="581" y="92" on="0"/>
        <pt x="652" y="272" on="0"/>
        <pt x="652" y="468" on="1"/>
        <pt x="652" y="546" on="0"/>
        <pt x="648" y="683" on="0"/>
        <pt x="619" y="785" on="0"/>
        <pt x="556" y="844" on="0"/>
        <pt x="497" y="844" on="1"/>
        <pt x="413" y="844" on="0"/>
        <pt x="335" y="663" on="0"/>
      </contour>
      <contour>
        <pt x="1067" y="851" on="1"/>
        <pt x="1029" y="851" on="0"/>
        <pt x="976" y="809" on="0"/>
        <pt x="944" y="730" on="0"/>
        <pt x="930" y="618" on="0"/>
        <pt x="931" y="548" on="1"/>
        <pt x="1170" y="548" on="1"/>
        <pt x="1180" y="611" on="0"/>
        <pt x="1179" y="666" on="1"/>
        <pt x="1178" y="706" on="0"/>
        <pt x="1169" y="774" on="0"/>
        <pt x="1145" y="823" on="0"/>
        <pt x="1102" y="851" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 13 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          26 13 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          66 23 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          66
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          41 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 41 35
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          58 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ogonek" xMin="104" yMin="-438" xMax="540" yMax="39">
      <contour>
        <pt x="540" y="39" on="1"/>
        <pt x="450" y="-6" on="0"/>
        <pt x="344" y="-157" on="0"/>
        <pt x="344" y="-231" on="1"/>
        <pt x="344" y="-268" on="0"/>
        <pt x="391" y="-327" on="0"/>
        <pt x="437" y="-327" on="1"/>
        <pt x="481" y="-327" on="0"/>
        <pt x="534" y="-310" on="1"/>
        <pt x="534" y="-399" on="1"/>
        <pt x="520" y="-407" on="0"/>
        <pt x="476" y="-420" on="0"/>
        <pt x="427" y="-432" on="0"/>
        <pt x="379" y="-438" on="0"/>
        <pt x="361" y="-438" on="1"/>
        <pt x="228" y="-438" on="0"/>
        <pt x="104" y="-333" on="0"/>
        <pt x="104" y="-259" on="1"/>
        <pt x="104" y="-155" on="0"/>
        <pt x="278" y="-11" on="0"/>
        <pt x="441" y="39" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          14 21 22
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          6 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 20 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ograve" xMin="48" yMin="-23" xMax="976" yMax="1482">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="86" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          37
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ohungarumlaut" xMin="48" yMin="-23" xMax="1029" yMax="1481">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="323" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          43
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="omacron" xMin="48" yMin="-23" xMax="976" yMax="1334">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="0" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          36
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="157" yMin="0" xMax="864" yMax="1379">
      <contour>
        <pt x="864" y="0" on="1"/>
        <pt x="194" y="0" on="1"/>
        <pt x="194" y="83" on="1"/>
        <pt x="242" y="105" on="0"/>
        <pt x="341" y="137" on="0"/>
        <pt x="392" y="149" on="1"/>
        <pt x="392" y="1038" on="1"/>
        <pt x="399" y="1153" on="1"/>
        <pt x="345" y="1135" on="0"/>
        <pt x="230" y="1123" on="0"/>
        <pt x="167" y="1125" on="1"/>
        <pt x="157" y="1197" on="1"/>
        <pt x="261" y="1224" on="0"/>
        <pt x="381" y="1270" on="1"/>
        <pt x="442" y="1293" on="0"/>
        <pt x="553" y="1348" on="0"/>
        <pt x="605" y="1379" on="1"/>
        <pt x="671" y="1379" on="1"/>
        <pt x="671" y="149" on="1"/>
        <pt x="719" y="137" on="0"/>
        <pt x="816" y="105" on="0"/>
        <pt x="864" y="83" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          21 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          10 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 10 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          11 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="one.numerator" xMin="55" yMin="549" xMax="549" yMax="1375">
      <component glyphName="oneinferior" x="0" y="743" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="onehalf" xMin="11" yMin="-26" xMax="1521" yMax="1384">
      <component glyphName="oneinferior" x="-44" y="739" flags="0x4"/>
      <component glyphName="fraction" x="573" y="0" flags="0x4"/>
      <component glyphName="twoinferior" x="929" y="192" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            61
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            61 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oneinferior" xMin="55" yMin="-194" xMax="549" yMax="632">
      <contour>
        <pt x="549" y="-194" on="1"/>
        <pt x="68" y="-194" on="1"/>
        <pt x="68" y="-136" on="1"/>
        <pt x="74" y="-132" on="0"/>
        <pt x="108" y="-113" on="0"/>
        <pt x="148" y="-92" on="0"/>
        <pt x="187" y="-74" on="0"/>
        <pt x="199" y="-71" on="1"/>
        <pt x="199" y="355" on="1"/>
        <pt x="206" y="442" on="1"/>
        <pt x="176" y="435" on="0"/>
        <pt x="118" y="427" on="0"/>
        <pt x="85" y="427" on="1"/>
        <pt x="75" y="427" on="0"/>
        <pt x="62" y="428" on="0"/>
        <pt x="55" y="429" on="1"/>
        <pt x="55" y="506" on="1"/>
        <pt x="127" y="518" on="0"/>
        <pt x="270" y="586" on="0"/>
        <pt x="339" y="632" on="1"/>
        <pt x="416" y="632" on="1"/>
        <pt x="416" y="-71" on="1"/>
        <pt x="449" y="-81" on="0"/>
        <pt x="512" y="-113" on="0"/>
        <pt x="549" y="-136" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          19 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          2 23
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 19 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          14 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="onequarter" xMin="31" yMin="-26" xMax="1516" yMax="1384">
      <component glyphName="oneinferior" x="-24" y="739" flags="0x4"/>
      <component glyphName="fourinferior" x="743" y="194" flags="0x4"/>
      <component glyphName="fraction" x="644" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            26
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            26 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="onesuperior" xMin="55" yMin="747" xMax="549" yMax="1573">
      <component glyphName="oneinferior" x="0" y="941" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            19 52
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ordfeminine" xMin="5" yMin="728" xMax="609" yMax="1371">
      <contour>
        <pt x="95" y="1160" on="1"/>
        <pt x="87" y="1171" on="0"/>
        <pt x="71" y="1208" on="0"/>
        <pt x="56" y="1250" on="0"/>
        <pt x="45" y="1291" on="0"/>
        <pt x="43" y="1306" on="1"/>
        <pt x="101" y="1339" on="0"/>
        <pt x="243" y="1371" on="0"/>
        <pt x="320" y="1371" on="1"/>
        <pt x="395" y="1371" on="0"/>
        <pt x="482" y="1342" on="0"/>
        <pt x="527" y="1288" on="0"/>
        <pt x="539" y="1212" on="0"/>
        <pt x="539" y="1165" on="1"/>
        <pt x="539" y="1128" on="0"/>
        <pt x="537" y="1060" on="0"/>
        <pt x="535" y="1018" on="1"/>
        <pt x="532" y="935" on="0"/>
        <pt x="532" y="874" on="1"/>
        <pt x="609" y="854" on="1"/>
        <pt x="609" y="786" on="1"/>
        <pt x="592" y="776" on="0"/>
        <pt x="549" y="758" on="0"/>
        <pt x="505" y="744" on="0"/>
        <pt x="463" y="734" on="0"/>
        <pt x="446" y="732" on="1"/>
        <pt x="396" y="732" on="1"/>
        <pt x="375" y="789" on="0"/>
        <pt x="371" y="854" on="1"/>
        <pt x="364" y="854" on="1"/>
        <pt x="353" y="836" on="0"/>
        <pt x="322" y="793" on="0"/>
        <pt x="278" y="754" on="0"/>
        <pt x="219" y="728" on="0"/>
        <pt x="181" y="728" on="1"/>
        <pt x="101" y="728" on="0"/>
        <pt x="5" y="825" on="0"/>
        <pt x="5" y="913" on="1"/>
        <pt x="5" y="1016" on="0"/>
        <pt x="158" y="1107" on="0"/>
        <pt x="298" y="1107" on="1"/>
        <pt x="311" y="1107" on="0"/>
        <pt x="343" y="1105" on="0"/>
        <pt x="350" y="1105" on="1"/>
        <pt x="351" y="1118" on="0"/>
        <pt x="352" y="1158" on="0"/>
        <pt x="352" y="1168" on="1"/>
        <pt x="352" y="1190" on="0"/>
        <pt x="345" y="1228" on="0"/>
        <pt x="327" y="1257" on="0"/>
        <pt x="298" y="1273" on="0"/>
        <pt x="276" y="1273" on="1"/>
        <pt x="255" y="1273" on="0"/>
        <pt x="220" y="1269" on="0"/>
        <pt x="209" y="1264" on="1"/>
        <pt x="164" y="1160" on="1"/>
      </contour>
      <contour>
        <pt x="257" y="845" on="1"/>
        <pt x="277" y="845" on="0"/>
        <pt x="307" y="862" on="0"/>
        <pt x="330" y="887" on="0"/>
        <pt x="345" y="918" on="0"/>
        <pt x="350" y="933" on="1"/>
        <pt x="350" y="1033" on="1"/>
        <pt x="340" y="1034" on="0"/>
        <pt x="300" y="1036" on="0"/>
        <pt x="283" y="1036" on="1"/>
        <pt x="236" y="1036" on="0"/>
        <pt x="192" y="987" on="0"/>
        <pt x="192" y="940" on="1"/>
        <pt x="192" y="895" on="0"/>
        <pt x="223" y="845" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            8
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            8 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 8 71
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          56 21
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          28 34 8
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          40 8 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          51 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          55 51 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 7 values pushed */
          153 55 169 55 185 55 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          65 27
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ordmasculine" xMin="32" yMin="728" xMax="644" yMax="1370">
      <contour>
        <pt x="32" y="1048" on="1"/>
        <pt x="32" y="1118" on="0"/>
        <pt x="73" y="1237" on="0"/>
        <pt x="151" y="1322" on="0"/>
        <pt x="265" y="1370" on="0"/>
        <pt x="338" y="1370" on="1"/>
        <pt x="483" y="1370" on="0"/>
        <pt x="644" y="1207" on="0"/>
        <pt x="644" y="1048" on="1"/>
        <pt x="644" y="980" on="0"/>
        <pt x="603" y="863" on="0"/>
        <pt x="525" y="777" on="0"/>
        <pt x="411" y="728" on="0"/>
        <pt x="338" y="728" on="1"/>
        <pt x="265" y="728" on="0"/>
        <pt x="151" y="771" on="0"/>
        <pt x="73" y="854" on="0"/>
        <pt x="32" y="973" on="0"/>
      </contour>
      <contour>
        <pt x="244" y="1048" on="1"/>
        <pt x="244" y="938" on="0"/>
        <pt x="287" y="820" on="0"/>
        <pt x="338" y="820" on="1"/>
        <pt x="387" y="820" on="0"/>
        <pt x="433" y="926" on="0"/>
        <pt x="433" y="1048" on="1"/>
        <pt x="433" y="1168" on="0"/>
        <pt x="387" y="1276" on="0"/>
        <pt x="338" y="1276" on="1"/>
        <pt x="286" y="1276" on="0"/>
        <pt x="244" y="1168" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 30 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 5 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          21 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="oslash" xMin="44" yMin="-109" xMax="980" yMax="1029">
      <contour>
        <pt x="44" y="468" on="1"/>
        <pt x="44" y="579" on="0"/>
        <pt x="108" y="759" on="0"/>
        <pt x="228" y="888" on="0"/>
        <pt x="402" y="958" on="0"/>
        <pt x="512" y="958" on="1"/>
        <pt x="590" y="958" on="0"/>
        <pt x="714" y="928" on="0"/>
        <pt x="765" y="900" on="1"/>
        <pt x="855" y="1029" on="1"/>
        <pt x="955" y="958" on="1"/>
        <pt x="860" y="826" on="1"/>
        <pt x="923" y="758" on="0"/>
        <pt x="980" y="573" on="0"/>
        <pt x="980" y="468" on="1"/>
        <pt x="980" y="361" on="0"/>
        <pt x="915" y="181" on="0"/>
        <pt x="793" y="50" on="0"/>
        <pt x="620" y="-23" on="0"/>
        <pt x="512" y="-23" on="1"/>
        <pt x="447" y="-23" on="0"/>
        <pt x="338" y="0" on="0"/>
        <pt x="291" y="21" on="1"/>
        <pt x="202" y="-109" on="1"/>
        <pt x="102" y="-36" on="1"/>
        <pt x="189" y="88" on="1"/>
        <pt x="115" y="155" on="0"/>
        <pt x="44" y="351" on="0"/>
      </contour>
      <contour>
        <pt x="331" y="468" on="1"/>
        <pt x="331" y="376" on="0"/>
        <pt x="345" y="297" on="1"/>
        <pt x="650" y="740" on="1"/>
        <pt x="628" y="788" on="0"/>
        <pt x="554" y="844" on="0"/>
        <pt x="497" y="844" on="1"/>
        <pt x="413" y="844" on="0"/>
        <pt x="331" y="663" on="0"/>
      </contour>
      <contour>
        <pt x="694" y="468" on="1"/>
        <pt x="694" y="499" on="0"/>
        <pt x="690" y="564" on="0"/>
        <pt x="685" y="587" on="1"/>
        <pt x="392" y="161" on="1"/>
        <pt x="415" y="129" on="0"/>
        <pt x="484" y="92" on="0"/>
        <pt x="535" y="92" on="1"/>
        <pt x="570" y="92" on="0"/>
        <pt x="628" y="136" on="0"/>
        <pt x="670" y="228" on="0"/>
        <pt x="694" y="370" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 49 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          34 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="otilde" xMin="48" yMin="-23" xMax="976" yMax="1406">
      <component glyphName="o" x="0" y="0" flags="0x204"/>
      <component glyphName="tilde" x="171" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="50" yMin="-367" xMax="1077" yMax="958">
      <contour>
        <pt x="566" y="-367" on="1"/>
        <pt x="50" y="-367" on="1"/>
        <pt x="50" y="-293" on="1"/>
        <pt x="117" y="-262" on="0"/>
        <pt x="173" y="-249" on="1"/>
        <pt x="173" y="803" on="1"/>
        <pt x="50" y="817" on="1"/>
        <pt x="50" y="891" on="1"/>
        <pt x="80" y="904" on="0"/>
        <pt x="168" y="926" on="0"/>
        <pt x="262" y="942" on="0"/>
        <pt x="349" y="954" on="0"/>
        <pt x="379" y="958" on="1"/>
        <pt x="443" y="958" on="1"/>
        <pt x="443" y="748" on="1"/>
        <pt x="444" y="748" on="1"/>
        <pt x="475" y="837" on="0"/>
        <pt x="544" y="898" on="1"/>
        <pt x="613" y="958" on="0"/>
        <pt x="735" y="958" on="1"/>
        <pt x="817" y="958" on="0"/>
        <pt x="944" y="899" on="0"/>
        <pt x="1031" y="779" on="0"/>
        <pt x="1077" y="598" on="0"/>
        <pt x="1077" y="475" on="1"/>
        <pt x="1077" y="356" on="0"/>
        <pt x="1016" y="171" on="0"/>
        <pt x="899" y="43" on="0"/>
        <pt x="730" y="-23" on="0"/>
        <pt x="621" y="-23" on="1"/>
        <pt x="557" y="-23" on="0"/>
        <pt x="520" y="-14" on="1"/>
        <pt x="502" y="-10" on="0"/>
        <pt x="463" y="4" on="0"/>
        <pt x="443" y="14" on="1"/>
        <pt x="443" y="-249" on="1"/>
        <pt x="472" y="-252" on="0"/>
        <pt x="532" y="-272" on="0"/>
        <pt x="566" y="-293" on="1"/>
      </contour>
      <contour>
        <pt x="623" y="809" on="1"/>
        <pt x="566" y="809" on="0"/>
        <pt x="472" y="721" on="0"/>
        <pt x="443" y="625" on="1"/>
        <pt x="443" y="127" on="1"/>
        <pt x="472" y="105" on="0"/>
        <pt x="540" y="84" on="0"/>
        <pt x="594" y="84" on="1"/>
        <pt x="648" y="84" on="0"/>
        <pt x="721" y="135" on="0"/>
        <pt x="766" y="237" on="0"/>
        <pt x="786" y="388" on="0"/>
        <pt x="786" y="487" on="1"/>
        <pt x="786" y="563" on="0"/>
        <pt x="765" y="679" on="0"/>
        <pt x="745" y="721" on="1"/>
        <pt x="726" y="763" on="0"/>
        <pt x="671" y="809" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          38 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          6 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 29 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          39 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          46 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="paragraph" xMin="140" yMin="-410" xMax="966" yMax="1356">
      <contour>
        <pt x="820" y="183" on="1"/>
        <pt x="820" y="52" on="0"/>
        <pt x="781" y="-116" on="0"/>
        <pt x="705" y="-218" on="0"/>
        <pt x="595" y="-271" on="0"/>
        <pt x="523" y="-287" on="1"/>
        <pt x="484" y="-342" on="0"/>
        <pt x="370" y="-399" on="0"/>
        <pt x="310" y="-410" on="1"/>
        <pt x="279" y="-347" on="1"/>
        <pt x="321" y="-329" on="0"/>
        <pt x="397" y="-277" on="0"/>
        <pt x="452" y="-190" on="0"/>
        <pt x="484" y="-54" on="0"/>
        <pt x="484" y="46" on="1"/>
        <pt x="484" y="600" on="1"/>
        <pt x="422" y="600" on="0"/>
        <pt x="300" y="639" on="0"/>
        <pt x="201" y="726" on="0"/>
        <pt x="140" y="868" on="0"/>
        <pt x="140" y="968" on="1"/>
        <pt x="140" y="1050" on="0"/>
        <pt x="188" y="1191" on="0"/>
        <pt x="282" y="1295" on="0"/>
        <pt x="430" y="1356" on="0"/>
        <pt x="529" y="1356" on="1"/>
        <pt x="966" y="1356" on="1"/>
        <pt x="966" y="1273" on="1"/>
        <pt x="934" y="1257" on="0"/>
        <pt x="864" y="1234" on="0"/>
        <pt x="820" y="1225" on="1"/>
      </contour>
      <contour>
        <pt x="561" y="-215" on="1"/>
        <pt x="641" y="-190" on="0"/>
        <pt x="696" y="9" on="0"/>
        <pt x="696" y="183" on="1"/>
        <pt x="696" y="1236" on="1"/>
        <pt x="611" y="1236" on="1"/>
        <pt x="611" y="46" on="1"/>
        <pt x="611" y="-31" on="0"/>
        <pt x="589" y="-165" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          31 40 41
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 8 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 25 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 5 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="66" yMin="-407" xMax="656" yMax="1360">
      <contour>
        <pt x="593" y="-407" on="1"/>
        <pt x="532" y="-370" on="0"/>
        <pt x="405" y="-279" on="0"/>
        <pt x="288" y="-166" on="0"/>
        <pt x="186" y="-28" on="0"/>
        <pt x="109" y="142" on="0"/>
        <pt x="66" y="347" on="0"/>
        <pt x="66" y="471" on="1"/>
        <pt x="67" y="640" on="0"/>
        <pt x="156" y="909" on="0"/>
        <pt x="304" y="1123" on="0"/>
        <pt x="495" y="1292" on="0"/>
        <pt x="599" y="1360" on="1"/>
        <pt x="656" y="1299" on="1"/>
        <pt x="581" y="1216" on="0"/>
        <pt x="463" y="1047" on="0"/>
        <pt x="380" y="851" on="0"/>
        <pt x="337" y="617" on="0"/>
        <pt x="337" y="471" on="1"/>
        <pt x="337" y="329" on="0"/>
        <pt x="384" y="92" on="0"/>
        <pt x="468" y="-107" on="0"/>
        <pt x="585" y="-272" on="0"/>
        <pt x="656" y="-342" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="26" yMin="-407" xMax="616" yMax="1360">
      <contour>
        <pt x="26" y="-342" on="1"/>
        <pt x="97" y="-272" on="0"/>
        <pt x="214" y="-107" on="0"/>
        <pt x="298" y="92" on="0"/>
        <pt x="345" y="329" on="0"/>
        <pt x="345" y="471" on="1"/>
        <pt x="345" y="617" on="0"/>
        <pt x="302" y="851" on="0"/>
        <pt x="219" y="1047" on="0"/>
        <pt x="101" y="1216" on="0"/>
        <pt x="26" y="1299" on="1"/>
        <pt x="83" y="1360" on="1"/>
        <pt x="152" y="1315" on="0"/>
        <pt x="284" y="1210" on="0"/>
        <pt x="402" y="1087" on="0"/>
        <pt x="502" y="945" on="0"/>
        <pt x="574" y="777" on="0"/>
        <pt x="615" y="583" on="0"/>
        <pt x="616" y="471" on="1"/>
        <pt x="616" y="348" on="0"/>
        <pt x="573" y="142" on="0"/>
        <pt x="496" y="-28" on="0"/>
        <pt x="394" y="-166" on="0"/>
        <pt x="277" y="-279" on="0"/>
        <pt x="150" y="-370" on="0"/>
        <pt x="89" y="-407" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="partialdiff" xMin="52" yMin="-23" xMax="953" yMax="1410">
      <contour>
        <pt x="52" y="346" on="1"/>
        <pt x="52" y="475" on="0"/>
        <pt x="135" y="696" on="0"/>
        <pt x="279" y="855" on="0"/>
        <pt x="469" y="947" on="0"/>
        <pt x="576" y="947" on="1"/>
        <pt x="618" y="947" on="0"/>
        <pt x="692" y="932" on="0"/>
        <pt x="712" y="917" on="1"/>
        <pt x="712" y="975" on="0"/>
        <pt x="690" y="1107" on="0"/>
        <pt x="634" y="1219" on="0"/>
        <pt x="537" y="1293" on="0"/>
        <pt x="462" y="1293" on="1"/>
        <pt x="414" y="1293" on="0"/>
        <pt x="317" y="1261" on="0"/>
        <pt x="275" y="1238" on="1"/>
        <pt x="247" y="1278" on="1"/>
        <pt x="301" y="1330" on="0"/>
        <pt x="464" y="1410" on="0"/>
        <pt x="566" y="1410" on="1"/>
        <pt x="746" y="1410" on="0"/>
        <pt x="953" y="1121" on="0"/>
        <pt x="953" y="814" on="1"/>
        <pt x="953" y="625" on="0"/>
        <pt x="878" y="318" on="0"/>
        <pt x="734" y="97" on="0"/>
        <pt x="526" y="-23" on="0"/>
        <pt x="393" y="-23" on="1"/>
        <pt x="321" y="-23" on="0"/>
        <pt x="196" y="25" on="0"/>
        <pt x="105" y="116" on="0"/>
        <pt x="52" y="255" on="0"/>
      </contour>
      <contour>
        <pt x="586" y="840" on="1"/>
        <pt x="505" y="840" on="0"/>
        <pt x="400" y="735" on="0"/>
        <pt x="338" y="579" on="0"/>
        <pt x="314" y="391" on="0"/>
        <pt x="314" y="309" on="1"/>
        <pt x="314" y="84" on="0"/>
        <pt x="435" y="84" on="1"/>
        <pt x="488" y="84" on="0"/>
        <pt x="584" y="191" on="0"/>
        <pt x="656" y="382" on="0"/>
        <pt x="700" y="647" on="0"/>
        <pt x="704" y="807" on="1"/>
        <pt x="675" y="825" on="0"/>
        <pt x="616" y="840" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 50
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          16 13 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          40 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="197" yMin="-26" xMax="1851" yMax="1384">
      <contour>
        <pt x="1176" y="306" on="1"/>
        <pt x="1176" y="373" on="0"/>
        <pt x="1221" y="492" on="0"/>
        <pt x="1307" y="582" on="0"/>
        <pt x="1432" y="635" on="0"/>
        <pt x="1513" y="635" on="1"/>
        <pt x="1595" y="635" on="0"/>
        <pt x="1722" y="589" on="0"/>
        <pt x="1807" y="503" on="0"/>
        <pt x="1851" y="381" on="0"/>
        <pt x="1851" y="306" on="1"/>
        <pt x="1851" y="238" on="0"/>
        <pt x="1808" y="118" on="0"/>
        <pt x="1722" y="29" on="0"/>
        <pt x="1596" y="-23" on="0"/>
        <pt x="1514" y="-23" on="1"/>
        <pt x="1439" y="-23" on="0"/>
        <pt x="1315" y="17" on="0"/>
        <pt x="1226" y="99" on="0"/>
        <pt x="1176" y="223" on="0"/>
      </contour>
      <contour>
        <pt x="1394" y="306" on="1"/>
        <pt x="1394" y="251" on="0"/>
        <pt x="1407" y="163" on="0"/>
        <pt x="1436" y="102" on="0"/>
        <pt x="1481" y="69" on="0"/>
        <pt x="1513" y="69" on="1"/>
        <pt x="1576" y="69" on="0"/>
        <pt x="1633" y="184" on="0"/>
        <pt x="1633" y="306" on="1"/>
        <pt x="1633" y="427" on="0"/>
        <pt x="1575" y="541" on="0"/>
        <pt x="1513" y="541" on="1"/>
        <pt x="1449" y="541" on="0"/>
        <pt x="1394" y="427" on="0"/>
      </contour>
      <contour>
        <pt x="197" y="1050" on="1"/>
        <pt x="197" y="1117" on="0"/>
        <pt x="242" y="1236" on="0"/>
        <pt x="328" y="1326" on="0"/>
        <pt x="453" y="1379" on="0"/>
        <pt x="534" y="1379" on="1"/>
        <pt x="616" y="1379" on="0"/>
        <pt x="743" y="1333" on="0"/>
        <pt x="828" y="1247" on="0"/>
        <pt x="872" y="1125" on="0"/>
        <pt x="872" y="1050" on="1"/>
        <pt x="872" y="982" on="0"/>
        <pt x="829" y="862" on="0"/>
        <pt x="743" y="773" on="0"/>
        <pt x="617" y="721" on="0"/>
        <pt x="535" y="721" on="1"/>
        <pt x="460" y="721" on="0"/>
        <pt x="336" y="761" on="0"/>
        <pt x="247" y="843" on="0"/>
        <pt x="197" y="967" on="0"/>
      </contour>
      <contour>
        <pt x="415" y="1050" on="1"/>
        <pt x="415" y="995" on="0"/>
        <pt x="428" y="907" on="0"/>
        <pt x="457" y="846" on="0"/>
        <pt x="502" y="813" on="0"/>
        <pt x="534" y="813" on="1"/>
        <pt x="597" y="813" on="0"/>
        <pt x="654" y="928" on="0"/>
        <pt x="654" y="1050" on="1"/>
        <pt x="654" y="1171" on="0"/>
        <pt x="596" y="1285" on="0"/>
        <pt x="534" y="1285" on="1"/>
        <pt x="470" y="1285" on="0"/>
        <pt x="415" y="1171" on="0"/>
      </contour>
      <contour>
        <pt x="1543" y="1384" on="1"/>
        <pt x="1636" y="1303" on="1"/>
        <pt x="503" y="-26" on="1"/>
        <pt x="412" y="58" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 72 73
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          68
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            68
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            68 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            70
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            70 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 39 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          49 39 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          59 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          65 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="92" yMin="-15" xMax="421" yMax="292">
      <contour>
        <pt x="92" y="137" on="1"/>
        <pt x="92" y="207" on="0"/>
        <pt x="180" y="292" on="0"/>
        <pt x="254" y="292" on="1"/>
        <pt x="328" y="292" on="0"/>
        <pt x="421" y="207" on="0"/>
        <pt x="421" y="137" on="1"/>
        <pt x="421" y="68" on="0"/>
        <pt x="328" y="-15" on="0"/>
        <pt x="254" y="-15" on="1"/>
        <pt x="180" y="-15" on="0"/>
        <pt x="92" y="68" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          3 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="periodcentered" xMin="177" yMin="469" xMax="506" yMax="776">
      <component glyphName="period" x="85" y="484" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="perthousand" xMin="20" yMin="-26" xMax="2028" yMax="1384">
      <contour>
        <pt x="20" y="1050" on="1"/>
        <pt x="20" y="1117" on="0"/>
        <pt x="60" y="1236" on="0"/>
        <pt x="141" y="1326" on="0"/>
        <pt x="262" y="1379" on="0"/>
        <pt x="343" y="1379" on="1"/>
        <pt x="425" y="1379" on="0"/>
        <pt x="547" y="1333" on="0"/>
        <pt x="628" y="1247" on="0"/>
        <pt x="667" y="1125" on="0"/>
        <pt x="667" y="1050" on="1"/>
        <pt x="667" y="982" on="0"/>
        <pt x="628" y="862" on="0"/>
        <pt x="548" y="773" on="0"/>
        <pt x="426" y="721" on="0"/>
        <pt x="344" y="721" on="1"/>
        <pt x="269" y="721" on="0"/>
        <pt x="149" y="761" on="0"/>
        <pt x="65" y="843" on="0"/>
        <pt x="20" y="967" on="0"/>
      </contour>
      <contour>
        <pt x="234" y="1050" on="1"/>
        <pt x="234" y="995" on="0"/>
        <pt x="246" y="907" on="0"/>
        <pt x="271" y="846" on="0"/>
        <pt x="313" y="813" on="0"/>
        <pt x="343" y="813" on="1"/>
        <pt x="402" y="813" on="0"/>
        <pt x="453" y="928" on="0"/>
        <pt x="453" y="1050" on="1"/>
        <pt x="453" y="1171" on="0"/>
        <pt x="402" y="1285" on="0"/>
        <pt x="343" y="1285" on="1"/>
        <pt x="283" y="1285" on="0"/>
        <pt x="234" y="1171" on="0"/>
      </contour>
      <contour>
        <pt x="669" y="306" on="1"/>
        <pt x="669" y="373" on="0"/>
        <pt x="709" y="492" on="0"/>
        <pt x="790" y="582" on="0"/>
        <pt x="911" y="635" on="0"/>
        <pt x="992" y="635" on="1"/>
        <pt x="1074" y="635" on="0"/>
        <pt x="1196" y="589" on="0"/>
        <pt x="1276" y="503" on="0"/>
        <pt x="1315" y="381" on="0"/>
        <pt x="1315" y="306" on="1"/>
        <pt x="1315" y="238" on="0"/>
        <pt x="1276" y="118" on="0"/>
        <pt x="1197" y="29" on="0"/>
        <pt x="1075" y="-23" on="0"/>
        <pt x="993" y="-23" on="1"/>
        <pt x="918" y="-23" on="0"/>
        <pt x="798" y="17" on="0"/>
        <pt x="714" y="99" on="0"/>
        <pt x="669" y="223" on="0"/>
      </contour>
      <contour>
        <pt x="883" y="306" on="1"/>
        <pt x="883" y="251" on="0"/>
        <pt x="894" y="163" on="0"/>
        <pt x="920" y="102" on="0"/>
        <pt x="962" y="69" on="0"/>
        <pt x="992" y="69" on="1"/>
        <pt x="1051" y="69" on="0"/>
        <pt x="1102" y="184" on="0"/>
        <pt x="1102" y="306" on="1"/>
        <pt x="1102" y="427" on="0"/>
        <pt x="1051" y="541" on="0"/>
        <pt x="992" y="541" on="1"/>
        <pt x="932" y="541" on="0"/>
        <pt x="883" y="427" on="0"/>
      </contour>
      <contour>
        <pt x="1382" y="306" on="1"/>
        <pt x="1382" y="373" on="0"/>
        <pt x="1422" y="492" on="0"/>
        <pt x="1503" y="582" on="0"/>
        <pt x="1624" y="635" on="0"/>
        <pt x="1705" y="635" on="1"/>
        <pt x="1787" y="635" on="0"/>
        <pt x="1909" y="589" on="0"/>
        <pt x="1989" y="503" on="0"/>
        <pt x="2028" y="381" on="0"/>
        <pt x="2028" y="306" on="1"/>
        <pt x="2028" y="238" on="0"/>
        <pt x="1989" y="118" on="0"/>
        <pt x="1910" y="29" on="0"/>
        <pt x="1788" y="-23" on="0"/>
        <pt x="1706" y="-23" on="1"/>
        <pt x="1631" y="-23" on="0"/>
        <pt x="1511" y="17" on="0"/>
        <pt x="1427" y="99" on="0"/>
        <pt x="1382" y="223" on="0"/>
      </contour>
      <contour>
        <pt x="1596" y="306" on="1"/>
        <pt x="1596" y="251" on="0"/>
        <pt x="1607" y="163" on="0"/>
        <pt x="1633" y="102" on="0"/>
        <pt x="1675" y="69" on="0"/>
        <pt x="1705" y="69" on="1"/>
        <pt x="1765" y="69" on="0"/>
        <pt x="1815" y="184" on="0"/>
        <pt x="1815" y="306" on="1"/>
        <pt x="1815" y="427" on="0"/>
        <pt x="1764" y="541" on="0"/>
        <pt x="1705" y="541" on="1"/>
        <pt x="1645" y="541" on="0"/>
        <pt x="1596" y="427" on="0"/>
      </contour>
      <contour>
        <pt x="1190" y="1384" on="1"/>
        <pt x="1283" y="1303" on="1"/>
        <pt x="150" y="-26" on="1"/>
        <pt x="59" y="58" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            102
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            102 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            49
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            49 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            83
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            83 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            104
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            104 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 5 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          31 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          39 5 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          49
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          59 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          65 20
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          73
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          59
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          93
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          65
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          99
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="pi" xMin="16" yMin="-16" xMax="1104" yMax="983">
      <contour>
        <pt x="1035" y="120" on="1"/>
        <pt x="1035" y="54" on="1"/>
        <pt x="1008" y="43" on="0"/>
        <pt x="930" y="20" on="0"/>
        <pt x="838" y="0" on="0"/>
        <pt x="741" y="-14" on="0"/>
        <pt x="695" y="-16" on="1"/>
        <pt x="630" y="-16" on="1"/>
        <pt x="630" y="767" on="1"/>
        <pt x="388" y="767" on="1"/>
        <pt x="388" y="537" on="1"/>
        <pt x="388" y="358" on="0"/>
        <pt x="348" y="87" on="0"/>
        <pt x="313" y="0" on="1"/>
        <pt x="301" y="-6" on="0"/>
        <pt x="258" y="-11" on="0"/>
        <pt x="205" y="-12" on="0"/>
        <pt x="150" y="-9" on="0"/>
        <pt x="106" y="-5" on="0"/>
        <pt x="77" y="-1" on="0"/>
        <pt x="77" y="0" on="1"/>
        <pt x="66" y="16" on="1"/>
        <pt x="93" y="55" on="0"/>
        <pt x="144" y="164" on="0"/>
        <pt x="189" y="291" on="0"/>
        <pt x="225" y="430" on="0"/>
        <pt x="251" y="571" on="0"/>
        <pt x="265" y="707" on="0"/>
        <pt x="264" y="767" on="1"/>
        <pt x="232" y="767" on="1"/>
        <pt x="180" y="767" on="0"/>
        <pt x="100" y="713" on="0"/>
        <pt x="56" y="657" on="1"/>
        <pt x="16" y="671" on="1"/>
        <pt x="26" y="738" on="0"/>
        <pt x="61" y="843" on="0"/>
        <pt x="126" y="913" on="0"/>
        <pt x="226" y="949" on="0"/>
        <pt x="300" y="947" on="1"/>
        <pt x="321" y="947" on="0"/>
        <pt x="442" y="943" on="0"/>
        <pt x="521" y="941" on="1"/>
        <pt x="602" y="939" on="0"/>
        <pt x="750" y="935" on="0"/>
        <pt x="828" y="935" on="1"/>
        <pt x="888" y="935" on="0"/>
        <pt x="964" y="938" on="0"/>
        <pt x="1015" y="948" on="0"/>
        <pt x="1051" y="967" on="0"/>
        <pt x="1070" y="983" on="1"/>
        <pt x="1104" y="967" on="1"/>
        <pt x="1100" y="873" on="0"/>
        <pt x="1014" y="767" on="0"/>
        <pt x="933" y="767" on="1"/>
        <pt x="912" y="767" on="1"/>
        <pt x="912" y="134" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          0 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          8 18
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="148" yMin="198" xMax="1019" yMax="1123">
      <contour>
        <pt x="148" y="743" on="1"/>
        <pt x="507" y="743" on="1"/>
        <pt x="507" y="1123" on="1"/>
        <pt x="661" y="1123" on="1"/>
        <pt x="661" y="743" on="1"/>
        <pt x="1019" y="743" on="1"/>
        <pt x="1019" y="589" on="1"/>
        <pt x="661" y="589" on="1"/>
        <pt x="661" y="198" on="1"/>
        <pt x="507" y="198" on="1"/>
        <pt x="507" y="589" on="1"/>
        <pt x="148" y="589" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 12 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="plusminus" xMin="127" yMin="318" xMax="997" yMax="1356">
      <contour>
        <pt x="127" y="976" on="1"/>
        <pt x="485" y="976" on="1"/>
        <pt x="485" y="1356" on="1"/>
        <pt x="639" y="1356" on="1"/>
        <pt x="639" y="976" on="1"/>
        <pt x="997" y="976" on="1"/>
        <pt x="997" y="821" on="1"/>
        <pt x="639" y="821" on="1"/>
        <pt x="639" y="565" on="1"/>
        <pt x="485" y="565" on="1"/>
        <pt x="485" y="821" on="1"/>
        <pt x="127" y="821" on="1"/>
      </contour>
      <contour>
        <pt x="127" y="473" on="1"/>
        <pt x="997" y="473" on="1"/>
        <pt x="997" y="318" on="1"/>
        <pt x="127" y="318" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          1 16 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            2 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 2 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          14 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="product" xMin="90" yMin="-388" xMax="1597" yMax="1356">
      <contour>
        <pt x="671" y="-388" on="1"/>
        <pt x="90" y="-388" on="1"/>
        <pt x="90" y="-314" on="1"/>
        <pt x="120" y="-298" on="0"/>
        <pt x="197" y="-266" on="0"/>
        <pt x="249" y="-257" on="1"/>
        <pt x="249" y="1225" on="1"/>
        <pt x="211" y="1234" on="0"/>
        <pt x="127" y="1260" on="0"/>
        <pt x="90" y="1282" on="1"/>
        <pt x="90" y="1356" on="1"/>
        <pt x="1597" y="1356" on="1"/>
        <pt x="1597" y="1282" on="1"/>
        <pt x="1560" y="1259" on="0"/>
        <pt x="1479" y="1234" on="0"/>
        <pt x="1438" y="1225" on="1"/>
        <pt x="1438" y="-257" on="1"/>
        <pt x="1510" y="-266" on="0"/>
        <pt x="1597" y="-314" on="1"/>
        <pt x="1597" y="-388" on="1"/>
        <pt x="1016" y="-388" on="1"/>
        <pt x="1016" y="-314" on="1"/>
        <pt x="1035" y="-298" on="0"/>
        <pt x="1098" y="-269" on="0"/>
        <pt x="1148" y="-257" on="1"/>
        <pt x="1148" y="1229" on="1"/>
        <pt x="540" y="1229" on="1"/>
        <pt x="540" y="-257" on="1"/>
        <pt x="578" y="-268" on="0"/>
        <pt x="641" y="-294" on="0"/>
        <pt x="671" y="-314" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 31 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            19 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="74" yMin="-367" xMax="1099" yMax="952">
      <contour>
        <pt x="699" y="166" on="1"/>
        <pt x="685" y="129" on="0"/>
        <pt x="639" y="61" on="0"/>
        <pt x="573" y="8" on="0"/>
        <pt x="486" y="-23" on="0"/>
        <pt x="432" y="-23" on="1"/>
        <pt x="261" y="-23" on="0"/>
        <pt x="74" y="210" on="0"/>
        <pt x="74" y="443" on="1"/>
        <pt x="74" y="699" on="0"/>
        <pt x="345" y="952" on="0"/>
        <pt x="597" y="952" on="1"/>
        <pt x="650" y="952" on="0"/>
        <pt x="766" y="940" on="0"/>
        <pt x="871" y="923" on="0"/>
        <pt x="954" y="903" on="0"/>
        <pt x="975" y="895" on="1"/>
        <pt x="975" y="-249" on="1"/>
        <pt x="1037" y="-260" on="0"/>
        <pt x="1099" y="-293" on="1"/>
        <pt x="1099" y="-367" on="1"/>
        <pt x="583" y="-367" on="1"/>
        <pt x="583" y="-293" on="1"/>
        <pt x="642" y="-262" on="0"/>
        <pt x="707" y="-249" on="1"/>
        <pt x="707" y="166" on="1"/>
      </contour>
      <contour>
        <pt x="526" y="127" on="1"/>
        <pt x="561" y="127" on="0"/>
        <pt x="618" y="154" on="0"/>
        <pt x="663" y="202" on="0"/>
        <pt x="696" y="268" on="0"/>
        <pt x="707" y="307" on="1"/>
        <pt x="707" y="819" on="1"/>
        <pt x="691" y="824" on="0"/>
        <pt x="664" y="834" on="0"/>
        <pt x="636" y="841" on="0"/>
        <pt x="604" y="846" on="0"/>
        <pt x="583" y="846" on="1"/>
        <pt x="529" y="846" on="0"/>
        <pt x="443" y="795" on="0"/>
        <pt x="420" y="751" on="1"/>
        <pt x="397" y="708" on="0"/>
        <pt x="365" y="570" on="0"/>
        <pt x="365" y="466" on="1"/>
        <pt x="365" y="384" on="0"/>
        <pt x="384" y="264" on="0"/>
        <pt x="401" y="219" on="1"/>
        <pt x="418" y="174" on="0"/>
        <pt x="483" y="127" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          26 49 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="122" yMin="-15" xMax="904" yMax="1379">
      <contour>
        <pt x="274" y="970" on="1"/>
        <pt x="209" y="970" on="1"/>
        <pt x="198" y="997" on="0"/>
        <pt x="171" y="1071" on="0"/>
        <pt x="146" y="1155" on="0"/>
        <pt x="126" y="1242" on="0"/>
        <pt x="122" y="1280" on="1"/>
        <pt x="195" y="1325" on="0"/>
        <pt x="289" y="1352" on="1"/>
        <pt x="383" y="1379" on="0"/>
        <pt x="529" y="1379" on="1"/>
        <pt x="615" y="1379" on="0"/>
        <pt x="754" y="1331" on="0"/>
        <pt x="851" y="1247" on="0"/>
        <pt x="904" y="1131" on="0"/>
        <pt x="904" y="1063" on="1"/>
        <pt x="904" y="997" on="0"/>
        <pt x="865" y="896" on="0"/>
        <pt x="804" y="814" on="0"/>
        <pt x="725" y="748" on="0"/>
        <pt x="684" y="717" on="1"/>
        <pt x="627" y="678" on="0"/>
        <pt x="578" y="632" on="1"/>
        <pt x="554" y="609" on="0"/>
        <pt x="511" y="560" on="0"/>
        <pt x="480" y="502" on="0"/>
        <pt x="462" y="434" on="0"/>
        <pt x="462" y="393" on="1"/>
        <pt x="399" y="393" on="1"/>
        <pt x="379" y="459" on="0"/>
        <pt x="377" y="565" on="0"/>
        <pt x="401" y="653" on="0"/>
        <pt x="446" y="726" on="0"/>
        <pt x="498" y="793" on="0"/>
        <pt x="552" y="857" on="0"/>
        <pt x="597" y="928" on="0"/>
        <pt x="625" y="1008" on="0"/>
        <pt x="625" y="1057" on="1"/>
        <pt x="625" y="1095" on="0"/>
        <pt x="607" y="1166" on="0"/>
        <pt x="567" y="1220" on="0"/>
        <pt x="503" y="1253" on="0"/>
        <pt x="457" y="1253" on="1"/>
        <pt x="415" y="1253" on="0"/>
        <pt x="354" y="1238" on="0"/>
        <pt x="339" y="1225" on="1"/>
      </contour>
      <contour>
        <pt x="288" y="137" on="1"/>
        <pt x="288" y="207" on="0"/>
        <pt x="376" y="292" on="0"/>
        <pt x="451" y="292" on="1"/>
        <pt x="488" y="292" on="0"/>
        <pt x="549" y="270" on="0"/>
        <pt x="593" y="229" on="0"/>
        <pt x="617" y="172" on="0"/>
        <pt x="617" y="137" on="1"/>
        <pt x="617" y="102" on="0"/>
        <pt x="593" y="46" on="0"/>
        <pt x="549" y="7" on="0"/>
        <pt x="488" y="-15" on="0"/>
        <pt x="451" y="-15" on="1"/>
        <pt x="376" y="-15" on="0"/>
        <pt x="288" y="68" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            59
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            59 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          59
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 19
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          27 10 49
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          0 42 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="questiondown" xMin="121" yMin="-404" xMax="903" yMax="989">
      <component glyphName="question" x="1025" y="975" scale="-0.99994" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="195" yMin="914" xMax="942" yMax="1456">
      <component glyphName="quotesingle" x="493" y="0" flags="0x4"/>
      <component glyphName="quotesingle" x="75" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblbase" xMin="140" yMin="-288" xMax="885" yMax="264">
      <component glyphName="quotesinglbase" x="372" y="0" flags="0x4"/>
      <component glyphName="quotesinglbase" x="-24" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblleft" xMin="142" yMin="926" xMax="884" yMax="1456">
      <contour>
        <pt x="882" y="1367" on="1"/>
        <pt x="807" y="1347" on="0"/>
        <pt x="727" y="1273" on="0"/>
        <pt x="731" y="1220" on="1"/>
        <pt x="757" y="1189" on="0"/>
        <pt x="831" y="1153" on="0"/>
        <pt x="875" y="1139" on="1"/>
        <pt x="884" y="1104" on="0"/>
        <pt x="870" y="1033" on="0"/>
        <pt x="831" y="972" on="0"/>
        <pt x="779" y="930" on="0"/>
        <pt x="752" y="926" on="1"/>
        <pt x="711" y="928" on="0"/>
        <pt x="635" y="957" on="0"/>
        <pt x="576" y="1011" on="0"/>
        <pt x="539" y="1086" on="0"/>
        <pt x="539" y="1135" on="1"/>
        <pt x="539" y="1193" on="0"/>
        <pt x="586" y="1299" on="0"/>
        <pt x="669" y="1384" on="0"/>
        <pt x="785" y="1445" on="0"/>
        <pt x="855" y="1456" on="1"/>
      </contour>
      <contour>
        <pt x="485" y="1367" on="1"/>
        <pt x="410" y="1347" on="0"/>
        <pt x="330" y="1273" on="0"/>
        <pt x="334" y="1220" on="1"/>
        <pt x="360" y="1189" on="0"/>
        <pt x="434" y="1153" on="0"/>
        <pt x="478" y="1139" on="1"/>
        <pt x="487" y="1104" on="0"/>
        <pt x="473" y="1033" on="0"/>
        <pt x="434" y="972" on="0"/>
        <pt x="382" y="930" on="0"/>
        <pt x="355" y="926" on="1"/>
        <pt x="314" y="928" on="0"/>
        <pt x="238" y="957" on="0"/>
        <pt x="179" y="1011" on="0"/>
        <pt x="142" y="1086" on="0"/>
        <pt x="142" y="1135" on="1"/>
        <pt x="142" y="1193" on="0"/>
        <pt x="189" y="1299" on="0"/>
        <pt x="272" y="1384" on="0"/>
        <pt x="388" y="1445" on="0"/>
        <pt x="458" y="1456" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedblleftsmall" xMin="146" yMin="563" xMax="888" yMax="1093">
      <component glyphName="quoteleft" x="374" y="-363" flags="0x4"/>
      <component glyphName="quoteleft" x="-23" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblright" xMin="138" yMin="926" xMax="880" yMax="1456">
      <contour>
        <pt x="140" y="1015" on="1"/>
        <pt x="216" y="1034" on="0"/>
        <pt x="295" y="1110" on="0"/>
        <pt x="291" y="1162" on="1"/>
        <pt x="266" y="1193" on="0"/>
        <pt x="191" y="1229" on="0"/>
        <pt x="148" y="1243" on="1"/>
        <pt x="138" y="1278" on="0"/>
        <pt x="152" y="1349" on="0"/>
        <pt x="191" y="1410" on="0"/>
        <pt x="243" y="1452" on="0"/>
        <pt x="270" y="1456" on="1"/>
        <pt x="310" y="1454" on="0"/>
        <pt x="388" y="1425" on="0"/>
        <pt x="446" y="1371" on="0"/>
        <pt x="483" y="1295" on="0"/>
        <pt x="483" y="1247" on="1"/>
        <pt x="483" y="1189" on="0"/>
        <pt x="437" y="1083" on="0"/>
        <pt x="354" y="998" on="0"/>
        <pt x="237" y="937" on="0"/>
        <pt x="168" y="926" on="1"/>
      </contour>
      <contour>
        <pt x="537" y="1015" on="1"/>
        <pt x="613" y="1034" on="0"/>
        <pt x="692" y="1110" on="0"/>
        <pt x="688" y="1162" on="1"/>
        <pt x="663" y="1193" on="0"/>
        <pt x="588" y="1229" on="0"/>
        <pt x="545" y="1243" on="1"/>
        <pt x="535" y="1278" on="0"/>
        <pt x="549" y="1349" on="0"/>
        <pt x="588" y="1410" on="0"/>
        <pt x="640" y="1452" on="0"/>
        <pt x="667" y="1456" on="1"/>
        <pt x="707" y="1454" on="0"/>
        <pt x="785" y="1425" on="0"/>
        <pt x="843" y="1371" on="0"/>
        <pt x="880" y="1295" on="0"/>
        <pt x="880" y="1247" on="1"/>
        <pt x="880" y="1189" on="0"/>
        <pt x="834" y="1083" on="0"/>
        <pt x="751" y="998" on="0"/>
        <pt x="634" y="937" on="0"/>
        <pt x="565" y="926" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          43
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedblrightsmall" xMin="142" yMin="563" xMax="884" yMax="1093">
      <component glyphName="quoteright" x="374" y="-363" flags="0x4"/>
      <component glyphName="quoteright" x="-23" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotedblsmall" xMin="130" yMin="551" xMax="877" yMax="1093">
      <component glyphName="quotesingle" x="428" y="-363" flags="0x4"/>
      <component glyphName="quotesingle" x="10" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quoteleft" xMin="169" yMin="926" xMax="514" yMax="1456">
      <contour>
        <pt x="512" y="1367" on="1"/>
        <pt x="437" y="1347" on="0"/>
        <pt x="357" y="1273" on="0"/>
        <pt x="361" y="1220" on="1"/>
        <pt x="387" y="1189" on="0"/>
        <pt x="461" y="1153" on="0"/>
        <pt x="505" y="1139" on="1"/>
        <pt x="514" y="1104" on="0"/>
        <pt x="500" y="1033" on="0"/>
        <pt x="461" y="972" on="0"/>
        <pt x="409" y="930" on="0"/>
        <pt x="382" y="926" on="1"/>
        <pt x="341" y="928" on="0"/>
        <pt x="265" y="957" on="0"/>
        <pt x="206" y="1011" on="0"/>
        <pt x="169" y="1086" on="0"/>
        <pt x="169" y="1135" on="1"/>
        <pt x="169" y="1193" on="0"/>
        <pt x="216" y="1299" on="0"/>
        <pt x="299" y="1384" on="0"/>
        <pt x="415" y="1445" on="0"/>
        <pt x="485" y="1456" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoteleftsmall" xMin="146" yMin="563" xMax="491" yMax="1093">
      <component glyphName="quoteleft" x="-23" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quoteright" xMin="165" yMin="926" xMax="510" yMax="1456">
      <contour>
        <pt x="167" y="1015" on="1"/>
        <pt x="243" y="1034" on="0"/>
        <pt x="322" y="1110" on="0"/>
        <pt x="318" y="1162" on="1"/>
        <pt x="293" y="1193" on="0"/>
        <pt x="218" y="1229" on="0"/>
        <pt x="175" y="1243" on="1"/>
        <pt x="165" y="1278" on="0"/>
        <pt x="179" y="1349" on="0"/>
        <pt x="218" y="1410" on="0"/>
        <pt x="270" y="1452" on="0"/>
        <pt x="297" y="1456" on="1"/>
        <pt x="337" y="1454" on="0"/>
        <pt x="415" y="1425" on="0"/>
        <pt x="473" y="1371" on="0"/>
        <pt x="510" y="1295" on="0"/>
        <pt x="510" y="1247" on="1"/>
        <pt x="510" y="1189" on="0"/>
        <pt x="464" y="1083" on="0"/>
        <pt x="381" y="998" on="0"/>
        <pt x="264" y="937" on="0"/>
        <pt x="195" y="926" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quoterightsmall" xMin="142" yMin="563" xMax="487" yMax="1093">
      <component glyphName="quoteright" x="-23" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="quotesinglbase" xMin="164" yMin="-288" xMax="513" yMax="264">
      <contour>
        <pt x="164" y="-200" on="1"/>
        <pt x="239" y="-180" on="0"/>
        <pt x="324" y="-83" on="0"/>
        <pt x="321" y="-31" on="1"/>
        <pt x="295" y="0" on="0"/>
        <pt x="220" y="37" on="0"/>
        <pt x="177" y="50" on="1"/>
        <pt x="168" y="85" on="0"/>
        <pt x="181" y="157" on="0"/>
        <pt x="220" y="217" on="0"/>
        <pt x="272" y="259" on="0"/>
        <pt x="299" y="264" on="1"/>
        <pt x="338" y="261" on="0"/>
        <pt x="415" y="233" on="0"/>
        <pt x="476" y="180" on="0"/>
        <pt x="513" y="100" on="0"/>
        <pt x="513" y="46" on="1"/>
        <pt x="513" y="-6" on="0"/>
        <pt x="465" y="-114" on="0"/>
        <pt x="382" y="-207" on="0"/>
        <pt x="267" y="-275" on="0"/>
        <pt x="199" y="-288" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="120" yMin="914" xMax="449" yMax="1456">
      <contour>
        <pt x="120" y="1381" on="1"/>
        <pt x="133" y="1414" on="0"/>
        <pt x="226" y="1456" on="0"/>
        <pt x="285" y="1456" on="1"/>
        <pt x="338" y="1456" on="0"/>
        <pt x="438" y="1417" on="0"/>
        <pt x="449" y="1381" on="1"/>
        <pt x="333" y="914" on="1"/>
        <pt x="236" y="914" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          7 3 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotesinglesmall" xMin="130" yMin="551" xMax="459" yMax="1093">
      <component glyphName="quotesingle" x="10" y="-363" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="r" xMin="80" yMin="0" xMax="855" yMax="958">
      <contour>
        <pt x="599" y="720" on="1"/>
        <pt x="560" y="709" on="0"/>
        <pt x="492" y="641" on="0"/>
        <pt x="472" y="596" on="1"/>
        <pt x="472" y="118" on="1"/>
        <pt x="510" y="114" on="0"/>
        <pt x="585" y="93" on="0"/>
        <pt x="622" y="73" on="1"/>
        <pt x="622" y="0" on="1"/>
        <pt x="80" y="0" on="1"/>
        <pt x="80" y="73" on="1"/>
        <pt x="114" y="92" on="0"/>
        <pt x="174" y="110" on="0"/>
        <pt x="203" y="118" on="1"/>
        <pt x="203" y="803" on="1"/>
        <pt x="80" y="817" on="1"/>
        <pt x="80" y="891" on="1"/>
        <pt x="110" y="904" on="0"/>
        <pt x="198" y="926" on="0"/>
        <pt x="292" y="942" on="0"/>
        <pt x="380" y="954" on="0"/>
        <pt x="409" y="958" on="1"/>
        <pt x="472" y="958" on="1"/>
        <pt x="472" y="709" on="1"/>
        <pt x="480" y="709" on="1"/>
        <pt x="497" y="748" on="0"/>
        <pt x="554" y="833" on="0"/>
        <pt x="593" y="871" on="1"/>
        <pt x="631" y="908" on="0"/>
        <pt x="728" y="953" on="0"/>
        <pt x="777" y="958" on="1"/>
        <pt x="786" y="946" on="0"/>
        <pt x="806" y="908" on="0"/>
        <pt x="816" y="891" on="1"/>
        <pt x="827" y="868" on="0"/>
        <pt x="847" y="816" on="0"/>
        <pt x="855" y="793" on="1"/>
        <pt x="855" y="720" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            21 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            8
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            8 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          7 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          15 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 9
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="racute" xMin="80" yMin="0" xMax="905" yMax="1482">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="359" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="radical" xMin="2" yMin="-24" xMax="1458" yMax="1716">
      <contour>
        <pt x="546" y="443" on="1"/>
        <pt x="558" y="408" on="0"/>
        <pt x="572" y="334" on="0"/>
        <pt x="579" y="296" on="1"/>
        <pt x="588" y="339" on="0"/>
        <pt x="605" y="414" on="0"/>
        <pt x="615" y="447" on="1"/>
        <pt x="1005" y="1716" on="1"/>
        <pt x="1458" y="1716" on="1"/>
        <pt x="1458" y="1590" on="1"/>
        <pt x="1090" y="1590" on="1"/>
        <pt x="579" y="-24" on="1"/>
        <pt x="474" y="-24" on="1"/>
        <pt x="129" y="846" on="1"/>
        <pt x="113" y="850" on="0"/>
        <pt x="76" y="863" on="0"/>
        <pt x="41" y="879" on="0"/>
        <pt x="11" y="895" on="0"/>
        <pt x="2" y="902" on="1"/>
        <pt x="2" y="968" on="1"/>
        <pt x="369" y="968" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          3 11 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          19 7 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          18 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="rcaron" xMin="80" yMin="0" xMax="855" yMax="1494">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="154" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="rcommaaccent" xMin="80" yMin="-527" xMax="855" yMax="958">
      <component glyphName="r" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="109" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="registered" xMin="219" yMin="331" xMax="1311" yMax="1416">
      <contour>
        <pt x="219" y="874" on="1"/>
        <pt x="219" y="1001" on="0"/>
        <pt x="309" y="1203" on="0"/>
        <pt x="459" y="1342" on="0"/>
        <pt x="657" y="1416" on="0"/>
        <pt x="765" y="1416" on="1"/>
        <pt x="876" y="1416" on="0"/>
        <pt x="1076" y="1342" on="0"/>
        <pt x="1224" y="1203" on="0"/>
        <pt x="1311" y="1001" on="0"/>
        <pt x="1311" y="874" on="1"/>
        <pt x="1311" y="745" on="0"/>
        <pt x="1222" y="544" on="0"/>
        <pt x="1071" y="405" on="0"/>
        <pt x="874" y="331" on="0"/>
        <pt x="765" y="331" on="1"/>
        <pt x="655" y="331" on="0"/>
        <pt x="455" y="405" on="0"/>
        <pt x="306" y="544" on="0"/>
        <pt x="219" y="745" on="0"/>
      </contour>
      <contour>
        <pt x="339" y="874" on="1"/>
        <pt x="339" y="773" on="0"/>
        <pt x="407" y="612" on="0"/>
        <pt x="523" y="497" on="0"/>
        <pt x="678" y="438" on="0"/>
        <pt x="765" y="438" on="1"/>
        <pt x="856" y="438" on="0"/>
        <pt x="1013" y="497" on="0"/>
        <pt x="1128" y="610" on="0"/>
        <pt x="1191" y="771" on="0"/>
        <pt x="1191" y="874" on="1"/>
        <pt x="1191" y="974" on="0"/>
        <pt x="1124" y="1135" on="0"/>
        <pt x="1008" y="1247" on="0"/>
        <pt x="852" y="1309" on="0"/>
        <pt x="765" y="1309" on="1"/>
        <pt x="673" y="1309" on="0"/>
        <pt x="518" y="1247" on="0"/>
        <pt x="403" y="1135" on="0"/>
        <pt x="339" y="974" on="0"/>
      </contour>
      <contour>
        <pt x="705" y="680" on="1"/>
        <pt x="730" y="678" on="0"/>
        <pt x="758" y="669" on="0"/>
        <pt x="771" y="662" on="1"/>
        <pt x="771" y="599" on="1"/>
        <pt x="504" y="599" on="1"/>
        <pt x="504" y="662" on="1"/>
        <pt x="537" y="674" on="0"/>
        <pt x="572" y="680" on="1"/>
        <pt x="572" y="1096" on="1"/>
        <pt x="551" y="1098" on="0"/>
        <pt x="520" y="1107" on="0"/>
        <pt x="504" y="1118" on="1"/>
        <pt x="504" y="1177" on="1"/>
        <pt x="605" y="1177" on="1"/>
        <pt x="640" y="1177" on="0"/>
        <pt x="736" y="1185" on="0"/>
        <pt x="767" y="1185" on="1"/>
        <pt x="871" y="1185" on="0"/>
        <pt x="1004" y="1110" on="0"/>
        <pt x="1004" y="1022" on="1"/>
        <pt x="1004" y="963" on="0"/>
        <pt x="930" y="887" on="0"/>
        <pt x="876" y="870" on="1"/>
        <pt x="893" y="841" on="0"/>
        <pt x="922" y="794" on="0"/>
        <pt x="954" y="750" on="0"/>
        <pt x="994" y="704" on="0"/>
        <pt x="1021" y="680" on="1"/>
        <pt x="1065" y="656" on="1"/>
        <pt x="1065" y="599" on="1"/>
        <pt x="941" y="599" on="1"/>
        <pt x="887" y="619" on="1"/>
        <pt x="839" y="678" on="0"/>
        <pt x="790" y="794" on="0"/>
        <pt x="769" y="850" on="1"/>
        <pt x="705" y="850" on="1"/>
      </contour>
      <contour>
        <pt x="758" y="1105" on="1"/>
        <pt x="736" y="1105" on="0"/>
        <pt x="717" y="1104" on="0"/>
        <pt x="705" y="1100" on="1"/>
        <pt x="705" y="924" on="1"/>
        <pt x="762" y="924" on="1"/>
        <pt x="808" y="924" on="0"/>
        <pt x="858" y="970" on="0"/>
        <pt x="856" y="1022" on="1"/>
        <pt x="854" y="1067" on="0"/>
        <pt x="802" y="1105" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 88 89
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          82
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          15 5 88
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          25 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          35 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          15 44 31 44 47 44 63 44 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          43
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          57 5 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          57
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          64 57 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          77
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          57
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          81 57 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          81
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          75
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          43
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ring" xMin="118" yMin="1101" xMax="564" yMax="1480">
      <contour>
        <pt x="118" y="1285" on="1"/>
        <pt x="118" y="1365" on="0"/>
        <pt x="236" y="1480" on="0"/>
        <pt x="347" y="1480" on="1"/>
        <pt x="449" y="1480" on="0"/>
        <pt x="564" y="1376" on="0"/>
        <pt x="564" y="1291" on="1"/>
        <pt x="564" y="1210" on="0"/>
        <pt x="444" y="1101" on="0"/>
        <pt x="344" y="1101" on="1"/>
        <pt x="233" y="1101" on="0"/>
        <pt x="118" y="1204" on="0"/>
      </contour>
      <contour>
        <pt x="263" y="1289" on="1"/>
        <pt x="263" y="1245" on="0"/>
        <pt x="306" y="1197" on="0"/>
        <pt x="339" y="1197" on="1"/>
        <pt x="418" y="1197" on="0"/>
        <pt x="418" y="1283" on="1"/>
        <pt x="418" y="1335" on="0"/>
        <pt x="374" y="1384" on="0"/>
        <pt x="341" y="1384" on="1"/>
        <pt x="263" y="1384" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          20 22 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 42
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          159 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 11 values pushed */
          15 3 31 3 47 3 63 3 79 3 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          15 17
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 17
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="42" yMin="-23" xMax="767" yMax="958">
      <contour>
        <pt x="516" y="204" on="1"/>
        <pt x="516" y="240" on="0"/>
        <pt x="479" y="297" on="0"/>
        <pt x="417" y="347" on="0"/>
        <pt x="335" y="391" on="0"/>
        <pt x="291" y="413" on="1"/>
        <pt x="247" y="435" on="0"/>
        <pt x="170" y="486" on="0"/>
        <pt x="114" y="554" on="0"/>
        <pt x="81" y="642" on="0"/>
        <pt x="81" y="701" on="1"/>
        <pt x="81" y="757" on="0"/>
        <pt x="126" y="852" on="0"/>
        <pt x="209" y="920" on="0"/>
        <pt x="328" y="958" on="0"/>
        <pt x="402" y="958" on="1"/>
        <pt x="502" y="958" on="0"/>
        <pt x="659" y="930" on="0"/>
        <pt x="725" y="902" on="1"/>
        <pt x="717" y="842" on="0"/>
        <pt x="695" y="773" on="1"/>
        <pt x="684" y="739" on="0"/>
        <pt x="668" y="678" on="0"/>
        <pt x="657" y="650" on="1"/>
        <pt x="594" y="650" on="1"/>
        <pt x="509" y="840" on="1"/>
        <pt x="498" y="843" on="0"/>
        <pt x="483" y="847" on="0"/>
        <pt x="468" y="850" on="0"/>
        <pt x="449" y="851" on="0"/>
        <pt x="434" y="851" on="1"/>
        <pt x="406" y="851" on="0"/>
        <pt x="367" y="833" on="0"/>
        <pt x="342" y="803" on="0"/>
        <pt x="331" y="765" on="0"/>
        <pt x="331" y="745" on="1"/>
        <pt x="331" y="710" on="0"/>
        <pt x="368" y="655" on="0"/>
        <pt x="428" y="608" on="0"/>
        <pt x="505" y="565" on="0"/>
        <pt x="546" y="543" on="1"/>
        <pt x="588" y="520" on="0"/>
        <pt x="667" y="468" on="0"/>
        <pt x="729" y="402" on="0"/>
        <pt x="767" y="314" on="0"/>
        <pt x="767" y="255" on="1"/>
        <pt x="767" y="190" on="0"/>
        <pt x="709" y="81" on="0"/>
        <pt x="658" y="43" on="1"/>
        <pt x="630" y="22" on="0"/>
        <pt x="560" y="-4" on="0"/>
        <pt x="486" y="-18" on="0"/>
        <pt x="411" y="-23" on="0"/>
        <pt x="378" y="-23" on="1"/>
        <pt x="333" y="-23" on="0"/>
        <pt x="241" y="-18" on="0"/>
        <pt x="193" y="-8" on="1"/>
        <pt x="146" y="1" on="0"/>
        <pt x="77" y="25" on="0"/>
        <pt x="42" y="42" on="1"/>
        <pt x="44" y="76" on="0"/>
        <pt x="62" y="144" on="0"/>
        <pt x="75" y="179" on="1"/>
        <pt x="88" y="214" on="0"/>
        <pt x="114" y="276" on="0"/>
        <pt x="130" y="303" on="1"/>
        <pt x="193" y="303" on="1"/>
        <pt x="285" y="99" on="1"/>
        <pt x="305" y="91" on="0"/>
        <pt x="352" y="84" on="0"/>
        <pt x="374" y="84" on="1"/>
        <pt x="397" y="84" on="0"/>
        <pt x="451" y="92" on="0"/>
        <pt x="473" y="108" on="1"/>
        <pt x="496" y="124" on="0"/>
        <pt x="516" y="176" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            53
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            53 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 15 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          5 40 53
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 40 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 7 values pushed */
          9 24 25 24 41 24 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          53
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          70 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          66 5 70
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="sacute" xMin="42" yMin="-23" xMax="767" yMax="1482">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="211" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scaron" xMin="42" yMin="-23" xMax="767" yMax="1494">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="72" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          80
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scedilla" xMin="42" yMin="-480" xMax="767" yMax="958">
      <contour>
        <pt x="516" y="204" on="1"/>
        <pt x="516" y="240" on="0"/>
        <pt x="479" y="297" on="0"/>
        <pt x="417" y="347" on="0"/>
        <pt x="335" y="391" on="0"/>
        <pt x="291" y="413" on="1"/>
        <pt x="247" y="435" on="0"/>
        <pt x="170" y="486" on="0"/>
        <pt x="114" y="554" on="0"/>
        <pt x="81" y="642" on="0"/>
        <pt x="81" y="701" on="1"/>
        <pt x="81" y="757" on="0"/>
        <pt x="126" y="852" on="0"/>
        <pt x="209" y="920" on="0"/>
        <pt x="328" y="958" on="0"/>
        <pt x="402" y="958" on="1"/>
        <pt x="502" y="958" on="0"/>
        <pt x="659" y="930" on="0"/>
        <pt x="725" y="902" on="1"/>
        <pt x="717" y="842" on="0"/>
        <pt x="695" y="773" on="1"/>
        <pt x="684" y="739" on="0"/>
        <pt x="668" y="678" on="0"/>
        <pt x="657" y="650" on="1"/>
        <pt x="594" y="650" on="1"/>
        <pt x="509" y="840" on="1"/>
        <pt x="498" y="843" on="0"/>
        <pt x="483" y="847" on="0"/>
        <pt x="468" y="850" on="0"/>
        <pt x="449" y="851" on="0"/>
        <pt x="434" y="851" on="1"/>
        <pt x="406" y="851" on="0"/>
        <pt x="367" y="833" on="0"/>
        <pt x="342" y="803" on="0"/>
        <pt x="331" y="765" on="0"/>
        <pt x="331" y="745" on="1"/>
        <pt x="331" y="710" on="0"/>
        <pt x="368" y="655" on="0"/>
        <pt x="428" y="608" on="0"/>
        <pt x="505" y="565" on="0"/>
        <pt x="546" y="543" on="1"/>
        <pt x="588" y="520" on="0"/>
        <pt x="667" y="468" on="0"/>
        <pt x="729" y="402" on="0"/>
        <pt x="767" y="314" on="0"/>
        <pt x="767" y="255" on="1"/>
        <pt x="767" y="190" on="0"/>
        <pt x="709" y="81" on="0"/>
        <pt x="658" y="43" on="1"/>
        <pt x="633" y="24" on="0"/>
        <pt x="571" y="0" on="0"/>
        <pt x="505" y="-15" on="0"/>
        <pt x="438" y="-21" on="0"/>
        <pt x="407" y="-22" on="1"/>
        <pt x="367" y="-127" on="1"/>
        <pt x="481" y="-132" on="0"/>
        <pt x="598" y="-201" on="0"/>
        <pt x="600" y="-270" on="1"/>
        <pt x="600" y="-324" on="0"/>
        <pt x="535" y="-403" on="0"/>
        <pt x="432" y="-455" on="0"/>
        <pt x="301" y="-480" on="0"/>
        <pt x="235" y="-480" on="1"/>
        <pt x="235" y="-408" on="1"/>
        <pt x="367" y="-387" on="0"/>
        <pt x="367" y="-301" on="1"/>
        <pt x="365" y="-259" on="0"/>
        <pt x="296" y="-221" on="0"/>
        <pt x="230" y="-213" on="1"/>
        <pt x="298" y="-21" on="1"/>
        <pt x="272" y="-19" on="0"/>
        <pt x="219" y="-13" on="0"/>
        <pt x="193" y="-8" on="1"/>
        <pt x="146" y="1" on="0"/>
        <pt x="77" y="25" on="0"/>
        <pt x="42" y="42" on="1"/>
        <pt x="44" y="76" on="0"/>
        <pt x="62" y="144" on="0"/>
        <pt x="75" y="179" on="1"/>
        <pt x="88" y="214" on="0"/>
        <pt x="114" y="276" on="0"/>
        <pt x="130" y="303" on="1"/>
        <pt x="193" y="303" on="1"/>
        <pt x="285" y="99" on="1"/>
        <pt x="305" y="91" on="0"/>
        <pt x="352" y="84" on="0"/>
        <pt x="374" y="84" on="1"/>
        <pt x="397" y="84" on="0"/>
        <pt x="451" y="92" on="0"/>
        <pt x="473" y="108" on="1"/>
        <pt x="496" y="124" on="0"/>
        <pt x="516" y="176" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          87 92 93
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          62
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            69
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            69 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 15 69
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          5 40 69
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          24 40 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          69
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          54 69 62
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          62
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          63
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          54
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          68 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          69
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          86 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          82 5 86
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scircumflex" xMin="42" yMin="-23" xMax="767" yMax="1487">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="74" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          76
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="scommaaccent" xMin="42" yMin="-527" xMax="767" yMax="958">
      <component glyphName="s" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="106" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="section" xMin="68" yMin="-159" xMax="955" yMax="1379">
      <contour>
        <pt x="617" y="76" on="1"/>
        <pt x="617" y="128" on="0"/>
        <pt x="536" y="198" on="0"/>
        <pt x="414" y="250" on="0"/>
        <pt x="271" y="304" on="0"/>
        <pt x="149" y="379" on="0"/>
        <pt x="68" y="490" on="0"/>
        <pt x="68" y="577" on="1"/>
        <pt x="68" y="674" on="0"/>
        <pt x="216" y="809" on="0"/>
        <pt x="329" y="854" on="1"/>
        <pt x="288" y="876" on="0"/>
        <pt x="218" y="926" on="0"/>
        <pt x="166" y="990" on="0"/>
        <pt x="135" y="1071" on="0"/>
        <pt x="135" y="1123" on="1"/>
        <pt x="135" y="1240" on="0"/>
        <pt x="334" y="1379" on="0"/>
        <pt x="497" y="1379" on="1"/>
        <pt x="602" y="1379" on="0"/>
        <pt x="770" y="1347" on="0"/>
        <pt x="840" y="1327" on="1"/>
        <pt x="833" y="1264" on="0"/>
        <pt x="805" y="1162" on="0"/>
        <pt x="783" y="1104" on="1"/>
        <pt x="718" y="1104" on="1"/>
        <pt x="617" y="1253" on="1"/>
        <pt x="594" y="1262" on="0"/>
        <pt x="554" y="1268" on="0"/>
        <pt x="522" y="1268" on="1"/>
        <pt x="456" y="1268" on="0"/>
        <pt x="395" y="1201" on="0"/>
        <pt x="395" y="1158" on="1"/>
        <pt x="395" y="1105" on="0"/>
        <pt x="478" y="1034" on="0"/>
        <pt x="602" y="974" on="0"/>
        <pt x="747" y="914" on="0"/>
        <pt x="871" y="835" on="0"/>
        <pt x="955" y="724" on="0"/>
        <pt x="955" y="645" on="1"/>
        <pt x="955" y="595" on="0"/>
        <pt x="909" y="510" on="0"/>
        <pt x="840" y="438" on="0"/>
        <pt x="751" y="381" on="0"/>
        <pt x="708" y="360" on="1"/>
        <pt x="778" y="322" on="0"/>
        <pt x="877" y="217" on="0"/>
        <pt x="877" y="131" on="1"/>
        <pt x="877" y="-4" on="0"/>
        <pt x="663" y="-159" on="0"/>
        <pt x="469" y="-159" on="1"/>
        <pt x="375" y="-159" on="0"/>
        <pt x="188" y="-120" on="0"/>
        <pt x="116" y="-85" on="1"/>
        <pt x="120" y="-15" on="0"/>
        <pt x="158" y="79" on="0"/>
        <pt x="192" y="135" on="1"/>
        <pt x="257" y="135" on="1"/>
        <pt x="371" y="-27" on="1"/>
        <pt x="393" y="-43" on="0"/>
        <pt x="435" y="-48" on="0"/>
        <pt x="458" y="-48" on="1"/>
        <pt x="521" y="-48" on="0"/>
        <pt x="617" y="17" on="0"/>
      </contour>
      <contour>
        <pt x="695" y="582" on="1"/>
        <pt x="695" y="626" on="0"/>
        <pt x="650" y="691" on="0"/>
        <pt x="578" y="741" on="0"/>
        <pt x="484" y="782" on="0"/>
        <pt x="434" y="804" on="1"/>
        <pt x="391" y="773" on="0"/>
        <pt x="327" y="684" on="0"/>
        <pt x="327" y="635" on="1"/>
        <pt x="327" y="593" on="0"/>
        <pt x="373" y="529" on="0"/>
        <pt x="449" y="478" on="0"/>
        <pt x="545" y="438" on="0"/>
        <pt x="596" y="416" on="1"/>
        <pt x="635" y="449" on="0"/>
        <pt x="695" y="540" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          29 80 81
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          44 50 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          2 44 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          10 18 50
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          35 10 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 35 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          61 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          57 2 61
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          69 10 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          77 44 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="158" yMin="-339" xMax="520" yMax="985">
      <component glyphName="period" x="84" y="693" flags="0x4"/>
      <component glyphName="comma" x="94" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="seven" xMin="70" yMin="0" xMax="976" yMax="1356">
      <contour>
        <pt x="194" y="931" on="1"/>
        <pt x="127" y="931" on="1"/>
        <pt x="118" y="973" on="0"/>
        <pt x="98" y="1089" on="0"/>
        <pt x="81" y="1210" on="0"/>
        <pt x="70" y="1321" on="0"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="976" y="1356" on="1"/>
        <pt x="976" y="1264" on="1"/>
        <pt x="923" y="1183" on="0"/>
        <pt x="836" y="1032" on="0"/>
        <pt x="763" y="885" on="0"/>
        <pt x="703" y="741" on="0"/>
        <pt x="679" y="668" on="1"/>
        <pt x="630" y="522" on="0"/>
        <pt x="598" y="360" on="1"/>
        <pt x="582" y="279" on="0"/>
        <pt x="555" y="100" on="0"/>
        <pt x="543" y="0" on="1"/>
        <pt x="268" y="0" on="1"/>
        <pt x="303" y="141" on="0"/>
        <pt x="393" y="407" on="0"/>
        <pt x="449" y="535" on="1"/>
        <pt x="505" y="663" on="0"/>
        <pt x="635" y="917" on="0"/>
        <pt x="710" y="1046" on="1"/>
        <pt x="782" y="1139" on="1"/>
        <pt x="685" y="1129" on="1"/>
        <pt x="268" y="1129" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          18 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 28 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          8 28 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="50" yMin="-24" xMax="974" yMax="1390">
      <contour>
        <pt x="974" y="421" on="1"/>
        <pt x="974" y="320" on="0"/>
        <pt x="905" y="155" on="0"/>
        <pt x="783" y="39" on="0"/>
        <pt x="617" y="-24" on="0"/>
        <pt x="520" y="-24" on="1"/>
        <pt x="400" y="-24" on="0"/>
        <pt x="223" y="52" on="0"/>
        <pt x="107" y="188" on="0"/>
        <pt x="50" y="374" on="0"/>
        <pt x="50" y="484" on="1"/>
        <pt x="50" y="665" on="0"/>
        <pt x="171" y="969" on="0"/>
        <pt x="381" y="1201" on="0"/>
        <pt x="665" y="1356" on="0"/>
        <pt x="827" y="1390" on="1"/>
        <pt x="855" y="1307" on="1"/>
        <pt x="751" y="1275" on="0"/>
        <pt x="578" y="1161" on="0"/>
        <pt x="449" y="1002" on="0"/>
        <pt x="368" y="798" on="0"/>
        <pt x="356" y="676" on="1"/>
        <pt x="369" y="698" on="0"/>
        <pt x="411" y="748" on="0"/>
        <pt x="474" y="788" on="0"/>
        <pt x="561" y="815" on="0"/>
        <pt x="619" y="815" on="1"/>
        <pt x="698" y="815" on="0"/>
        <pt x="829" y="766" on="0"/>
        <pt x="922" y="668" on="0"/>
        <pt x="974" y="520" on="0"/>
      </contour>
      <contour>
        <pt x="684" y="393" on="1"/>
        <pt x="684" y="536" on="0"/>
        <pt x="609" y="680" on="0"/>
        <pt x="513" y="680" on="1"/>
        <pt x="484" y="680" on="0"/>
        <pt x="434" y="658" on="0"/>
        <pt x="393" y="625" on="0"/>
        <pt x="362" y="585" on="0"/>
        <pt x="352" y="567" on="1"/>
        <pt x="346" y="540" on="0"/>
        <pt x="341" y="469" on="0"/>
        <pt x="341" y="436" on="1"/>
        <pt x="341" y="371" on="0"/>
        <pt x="357" y="248" on="0"/>
        <pt x="399" y="153" on="0"/>
        <pt x="471" y="95" on="0"/>
        <pt x="527" y="95" on="1"/>
        <pt x="573" y="95" on="0"/>
        <pt x="633" y="143" on="0"/>
        <pt x="669" y="225" on="0"/>
        <pt x="684" y="333" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            15 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          26 15 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          34 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          47 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="-110" yMin="-261" xMax="678" yMax="1386">
      <contour>
        <pt x="561" y="1386" on="1"/>
        <pt x="678" y="1344" on="1"/>
        <pt x="6" y="-261" on="1"/>
        <pt x="-110" y="-218" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="sterling" xMin="44" yMin="0" xMax="976" yMax="1379">
      <contour>
        <pt x="44" y="726" on="1"/>
        <pt x="194" y="726" on="1"/>
        <pt x="148" y="796" on="0"/>
        <pt x="92" y="945" on="0"/>
        <pt x="92" y="1034" on="1"/>
        <pt x="92" y="1115" on="0"/>
        <pt x="158" y="1244" on="0"/>
        <pt x="275" y="1332" on="0"/>
        <pt x="437" y="1379" on="0"/>
        <pt x="532" y="1379" on="1"/>
        <pt x="591" y="1379" on="0"/>
        <pt x="714" y="1367" on="0"/>
        <pt x="825" y="1346" on="0"/>
        <pt x="917" y="1319" on="0"/>
        <pt x="944" y="1305" on="1"/>
        <pt x="943" y="1274" on="0"/>
        <pt x="930" y="1182" on="0"/>
        <pt x="911" y="1083" on="0"/>
        <pt x="889" y="990" on="0"/>
        <pt x="879" y="957" on="1"/>
        <pt x="813" y="957" on="1"/>
        <pt x="735" y="1222" on="1"/>
        <pt x="700" y="1236" on="0"/>
        <pt x="616" y="1253" on="0"/>
        <pt x="565" y="1253" on="1"/>
        <pt x="524" y="1253" on="0"/>
        <pt x="457" y="1228" on="0"/>
        <pt x="408" y="1180" on="0"/>
        <pt x="381" y="1112" on="0"/>
        <pt x="381" y="1069" on="1"/>
        <pt x="381" y="1024" on="0"/>
        <pt x="402" y="938" on="0"/>
        <pt x="435" y="853" on="0"/>
        <pt x="475" y="769" on="0"/>
        <pt x="493" y="726" on="1"/>
        <pt x="735" y="726" on="1"/>
        <pt x="735" y="608" on="1"/>
        <pt x="526" y="608" on="1"/>
        <pt x="527" y="558" on="0"/>
        <pt x="515" y="468" on="0"/>
        <pt x="485" y="384" on="0"/>
        <pt x="435" y="307" on="0"/>
        <pt x="399" y="271" on="1"/>
        <pt x="334" y="225" on="1"/>
        <pt x="334" y="217" on="1"/>
        <pt x="434" y="229" on="1"/>
        <pt x="776" y="229" on="1"/>
        <pt x="871" y="445" on="1"/>
        <pt x="937" y="445" on="1"/>
        <pt x="941" y="416" on="0"/>
        <pt x="950" y="340" on="0"/>
        <pt x="959" y="256" on="0"/>
        <pt x="966" y="170" on="0"/>
        <pt x="972" y="91" on="0"/>
        <pt x="976" y="23" on="0"/>
        <pt x="976" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="105" on="1"/>
        <pt x="119" y="137" on="0"/>
        <pt x="213" y="206" on="0"/>
        <pt x="271" y="292" on="0"/>
        <pt x="296" y="400" on="0"/>
        <pt x="296" y="471" on="1"/>
        <pt x="296" y="510" on="0"/>
        <pt x="275" y="583" on="0"/>
        <pt x="263" y="608" on="1"/>
        <pt x="44" y="608" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          24 67 68
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          34 9 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 24 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          45 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          47 45 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          65
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="summation" xMin="95" yMin="-390" xMax="1345" yMax="1356">
      <contour>
        <pt x="1248" y="96" on="1"/>
        <pt x="1314" y="96" on="1"/>
        <pt x="1320" y="58" on="0"/>
        <pt x="1329" y="-76" on="0"/>
        <pt x="1337" y="-218" on="0"/>
        <pt x="1343" y="-351" on="0"/>
        <pt x="1345" y="-390" on="1"/>
        <pt x="102" y="-390" on="1"/>
        <pt x="102" y="-194" on="1"/>
        <pt x="679" y="486" on="1"/>
        <pt x="95" y="1207" on="1"/>
        <pt x="95" y="1356" on="1"/>
        <pt x="1278" y="1356" on="1"/>
        <pt x="1278" y="1317" on="0"/>
        <pt x="1273" y="1214" on="0"/>
        <pt x="1265" y="1104" on="0"/>
        <pt x="1255" y="998" on="0"/>
        <pt x="1249" y="959" on="1"/>
        <pt x="1183" y="959" on="1"/>
        <pt x="1055" y="1229" on="1"/>
        <pt x="416" y="1229" on="1"/>
        <pt x="925" y="581" on="1"/>
        <pt x="304" y="-144" on="1"/>
        <pt x="1112" y="-144" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 24 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          22
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 22 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          8 22 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          21 11 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          9 21 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 11 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          18 19 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="t" xMin="14" yMin="-23" xMax="670" yMax="1173">
      <contour>
        <pt x="14" y="891" on="1"/>
        <pt x="76" y="933" on="0"/>
        <pt x="153" y="953" on="1"/>
        <pt x="153" y="1105" on="1"/>
        <pt x="169" y="1117" on="0"/>
        <pt x="228" y="1138" on="1"/>
        <pt x="257" y="1149" on="0"/>
        <pt x="323" y="1166" on="0"/>
        <pt x="360" y="1173" on="1"/>
        <pt x="423" y="1173" on="1"/>
        <pt x="423" y="935" on="1"/>
        <pt x="626" y="935" on="1"/>
        <pt x="626" y="817" on="1"/>
        <pt x="423" y="817" on="1"/>
        <pt x="423" y="333" on="1"/>
        <pt x="423" y="275" on="0"/>
        <pt x="432" y="195" on="0"/>
        <pt x="446" y="172" on="1"/>
        <pt x="460" y="149" on="0"/>
        <pt x="511" y="127" on="0"/>
        <pt x="539" y="127" on="1"/>
        <pt x="564" y="127" on="0"/>
        <pt x="630" y="138" on="0"/>
        <pt x="658" y="152" on="1"/>
        <pt x="670" y="90" on="1"/>
        <pt x="655" y="75" on="0"/>
        <pt x="607" y="36" on="0"/>
        <pt x="541" y="1" on="0"/>
        <pt x="457" y="-23" on="0"/>
        <pt x="405" y="-23" on="1"/>
        <pt x="286" y="-23" on="0"/>
        <pt x="153" y="105" on="0"/>
        <pt x="153" y="246" on="1"/>
        <pt x="153" y="817" on="1"/>
        <pt x="14" y="817" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 35 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          0 33 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="tacute" xMin="14" yMin="-23" xMax="1007" yMax="1482">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="461" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="tcaron" xMin="40" yMin="-23" xMax="938" yMax="1492">
      <component glyphName="t" x="26" y="0" flags="0x4"/>
      <component glyphName="caron.l" x="154" y="28" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="tcedilla" xMin="14" yMin="-480" xMax="670" yMax="1173">
      <contour>
        <pt x="14" y="891" on="1"/>
        <pt x="76" y="933" on="0"/>
        <pt x="153" y="953" on="1"/>
        <pt x="153" y="1105" on="1"/>
        <pt x="169" y="1117" on="0"/>
        <pt x="228" y="1138" on="1"/>
        <pt x="257" y="1149" on="0"/>
        <pt x="323" y="1166" on="0"/>
        <pt x="360" y="1173" on="1"/>
        <pt x="423" y="1173" on="1"/>
        <pt x="423" y="935" on="1"/>
        <pt x="626" y="935" on="1"/>
        <pt x="626" y="817" on="1"/>
        <pt x="423" y="817" on="1"/>
        <pt x="423" y="333" on="1"/>
        <pt x="423" y="275" on="0"/>
        <pt x="432" y="195" on="0"/>
        <pt x="446" y="172" on="1"/>
        <pt x="460" y="149" on="0"/>
        <pt x="511" y="127" on="0"/>
        <pt x="539" y="127" on="1"/>
        <pt x="564" y="127" on="0"/>
        <pt x="630" y="138" on="0"/>
        <pt x="658" y="152" on="1"/>
        <pt x="670" y="90" on="1"/>
        <pt x="656" y="76" on="0"/>
        <pt x="612" y="40" on="0"/>
        <pt x="553" y="7" on="0"/>
        <pt x="477" y="-19" on="0"/>
        <pt x="431" y="-22" on="1"/>
        <pt x="394" y="-127" on="1"/>
        <pt x="506" y="-132" on="0"/>
        <pt x="624" y="-201" on="0"/>
        <pt x="625" y="-270" on="1"/>
        <pt x="625" y="-324" on="0"/>
        <pt x="561" y="-403" on="0"/>
        <pt x="457" y="-455" on="0"/>
        <pt x="327" y="-480" on="0"/>
        <pt x="260" y="-480" on="1"/>
        <pt x="260" y="-408" on="1"/>
        <pt x="392" y="-387" on="0"/>
        <pt x="392" y="-301" on="1"/>
        <pt x="390" y="-259" on="0"/>
        <pt x="321" y="-221" on="0"/>
        <pt x="255" y="-213" on="1"/>
        <pt x="324" y="-14" on="1"/>
        <pt x="242" y="4" on="0"/>
        <pt x="153" y="130" on="0"/>
        <pt x="153" y="246" on="1"/>
        <pt x="153" y="817" on="1"/>
        <pt x="14" y="817" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          37 51 52
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            29 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 6
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 29 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[11100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 31
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="tcommaaccent" xMin="14" yMin="-527" xMax="670" yMax="1173">
      <component glyphName="t" x="0" y="0" flags="0x204"/>
      <component glyphName="commaaccent" x="102" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="thorn" xMin="31" yMin="-367" xMax="1077" yMax="1377">
      <contour>
        <pt x="173" y="1222" on="1"/>
        <pt x="31" y="1237" on="1"/>
        <pt x="31" y="1310" on="1"/>
        <pt x="55" y="1322" on="0"/>
        <pt x="141" y="1344" on="0"/>
        <pt x="240" y="1361" on="0"/>
        <pt x="340" y="1374" on="0"/>
        <pt x="379" y="1377" on="1"/>
        <pt x="443" y="1377" on="1"/>
        <pt x="443" y="748" on="1"/>
        <pt x="445" y="748" on="1"/>
        <pt x="483" y="853" on="0"/>
        <pt x="622" y="958" on="0"/>
        <pt x="731" y="958" on="1"/>
        <pt x="813" y="958" on="0"/>
        <pt x="942" y="901" on="0"/>
        <pt x="1030" y="783" on="0"/>
        <pt x="1077" y="603" on="0"/>
        <pt x="1077" y="480" on="1"/>
        <pt x="1077" y="361" on="0"/>
        <pt x="1017" y="174" on="0"/>
        <pt x="902" y="45" on="0"/>
        <pt x="732" y="-23" on="0"/>
        <pt x="621" y="-23" on="1"/>
        <pt x="571" y="-23" on="0"/>
        <pt x="484" y="-6" on="0"/>
        <pt x="443" y="14" on="1"/>
        <pt x="443" y="-249" on="1"/>
        <pt x="474" y="-252" on="0"/>
        <pt x="532" y="-272" on="0"/>
        <pt x="566" y="-293" on="1"/>
        <pt x="566" y="-367" on="1"/>
        <pt x="50" y="-367" on="1"/>
        <pt x="50" y="-293" on="1"/>
        <pt x="117" y="-262" on="0"/>
        <pt x="173" y="-249" on="1"/>
      </contour>
      <contour>
        <pt x="626" y="809" on="1"/>
        <pt x="562" y="809" on="0"/>
        <pt x="474" y="719" on="0"/>
        <pt x="443" y="625" on="1"/>
        <pt x="443" y="127" on="1"/>
        <pt x="471" y="110" on="0"/>
        <pt x="540" y="84" on="0"/>
        <pt x="594" y="84" on="1"/>
        <pt x="648" y="84" on="0"/>
        <pt x="721" y="136" on="0"/>
        <pt x="766" y="238" on="0"/>
        <pt x="786" y="390" on="0"/>
        <pt x="786" y="489" on="1"/>
        <pt x="786" y="518" on="0"/>
        <pt x="782" y="588" on="0"/>
        <pt x="769" y="659" on="0"/>
        <pt x="747" y="726" on="0"/>
        <pt x="711" y="778" on="0"/>
        <pt x="661" y="809" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            7 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            31 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          1 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          9 23 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          30 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="63" yMin="-24" xMax="964" yMax="1356">
      <contour>
        <pt x="454" y="103" on="1"/>
        <pt x="499" y="103" on="0"/>
        <pt x="585" y="144" on="0"/>
        <pt x="651" y="217" on="0"/>
        <pt x="692" y="317" on="0"/>
        <pt x="692" y="375" on="1"/>
        <pt x="692" y="441" on="0"/>
        <pt x="648" y="537" on="0"/>
        <pt x="576" y="598" on="0"/>
        <pt x="484" y="628" on="0"/>
        <pt x="437" y="628" on="1"/>
        <pt x="324" y="628" on="1"/>
        <pt x="324" y="704" on="1"/>
        <pt x="607" y="1085" on="1"/>
        <pt x="671" y="1153" on="1"/>
        <pt x="671" y="1160" on="1"/>
        <pt x="566" y="1148" on="1"/>
        <pt x="284" y="1148" on="1"/>
        <pt x="208" y="951" on="1"/>
        <pt x="143" y="951" on="1"/>
        <pt x="133" y="993" on="0"/>
        <pt x="112" y="1103" on="0"/>
        <pt x="95" y="1216" on="0"/>
        <pt x="84" y="1320" on="0"/>
        <pt x="84" y="1356" on="1"/>
        <pt x="919" y="1356" on="1"/>
        <pt x="919" y="1260" on="1"/>
        <pt x="594" y="852" on="1"/>
        <pt x="511" y="767" on="1"/>
        <pt x="511" y="763" on="1"/>
        <pt x="576" y="776" on="1"/>
        <pt x="668" y="773" on="0"/>
        <pt x="812" y="713" on="0"/>
        <pt x="912" y="611" on="0"/>
        <pt x="964" y="473" on="0"/>
        <pt x="964" y="393" on="1"/>
        <pt x="964" y="296" on="0"/>
        <pt x="881" y="142" on="0"/>
        <pt x="740" y="34" on="0"/>
        <pt x="555" y="-24" on="0"/>
        <pt x="452" y="-24" on="1"/>
        <pt x="393" y="-24" on="0"/>
        <pt x="278" y="-6" on="0"/>
        <pt x="176" y="26" on="0"/>
        <pt x="91" y="69" on="0"/>
        <pt x="63" y="93" on="1"/>
        <pt x="134" y="294" on="1"/>
        <pt x="191" y="294" on="1"/>
        <pt x="203" y="281" on="0"/>
        <pt x="243" y="236" on="0"/>
        <pt x="287" y="185" on="0"/>
        <pt x="331" y="136" on="0"/>
        <pt x="346" y="118" on="1"/>
        <pt x="365" y="114" on="0"/>
        <pt x="412" y="103" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            24
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            24 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            40
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            40 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 24 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          10 12
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 30 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 24
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          18 17 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          26 17 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          46 0 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="threeinferior" xMin="13" yMin="-212" xMax="602" yMax="615">
      <contour>
        <pt x="261" y="-96" on="1"/>
        <pt x="285" y="-96" on="0"/>
        <pt x="329" y="-77" on="0"/>
        <pt x="361" y="-41" on="0"/>
        <pt x="380" y="9" on="0"/>
        <pt x="380" y="41" on="1"/>
        <pt x="380" y="71" on="0"/>
        <pt x="366" y="119" on="0"/>
        <pt x="333" y="152" on="0"/>
        <pt x="278" y="170" on="0"/>
        <pt x="236" y="170" on="1"/>
        <pt x="190" y="170" on="1"/>
        <pt x="190" y="237" on="1"/>
        <pt x="332" y="404" on="1"/>
        <pt x="414" y="485" on="1"/>
        <pt x="414" y="489" on="1"/>
        <pt x="294" y="481" on="1"/>
        <pt x="206" y="481" on="1"/>
        <pt x="139" y="320" on="1"/>
        <pt x="79" y="320" on="1"/>
        <pt x="71" y="351" on="0"/>
        <pt x="57" y="435" on="0"/>
        <pt x="44" y="521" on="0"/>
        <pt x="35" y="595" on="0"/>
        <pt x="34" y="615" on="1"/>
        <pt x="581" y="615" on="1"/>
        <pt x="581" y="527" on="1"/>
        <pt x="410" y="333" on="1"/>
        <pt x="343" y="272" on="1"/>
        <pt x="343" y="270" on="1"/>
        <pt x="362" y="270" on="1"/>
        <pt x="408" y="270" on="0"/>
        <pt x="494" y="244" on="0"/>
        <pt x="561" y="190" on="0"/>
        <pt x="602" y="108" on="0"/>
        <pt x="602" y="52" on="1"/>
        <pt x="602" y="8" on="0"/>
        <pt x="573" y="-86" on="0"/>
        <pt x="499" y="-163" on="0"/>
        <pt x="373" y="-212" on="0"/>
        <pt x="276" y="-212" on="1"/>
        <pt x="236" y="-212" on="0"/>
        <pt x="156" y="-197" on="0"/>
        <pt x="85" y="-174" on="0"/>
        <pt x="29" y="-146" on="0"/>
        <pt x="13" y="-133" on="1"/>
        <pt x="60" y="72" on="1"/>
        <pt x="112" y="72" on="1"/>
        <pt x="120" y="61" on="0"/>
        <pt x="142" y="23" on="0"/>
        <pt x="165" y="-22" on="0"/>
        <pt x="187" y="-68" on="0"/>
        <pt x="196" y="-87" on="1"/>
        <pt x="208" y="-91" on="0"/>
        <pt x="237" y="-96" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          16 55 56
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          0 29
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          30 24 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          10 30 40
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          12 30 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 21
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          18 30 17
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          26 17 24
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          47 0 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="threequarters" xMin="20" yMin="-26" xMax="1506" yMax="1384">
      <component glyphName="threeinferior" x="7" y="739" flags="0x4"/>
      <component glyphName="fourinferior" x="733" y="194" flags="0x4"/>
      <component glyphName="fraction" x="655" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            25 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="threesuperior" xMin="13" yMin="729" xMax="602" yMax="1556">
      <component glyphName="threeinferior" x="0" y="941" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            25 52
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="tilde" xMin="27" yMin="1166" xMax="655" yMax="1406">
      <contour>
        <pt x="655" y="1292" on="1"/>
        <pt x="598" y="1225" on="0"/>
        <pt x="474" y="1166" on="0"/>
        <pt x="429" y="1166" on="1"/>
        <pt x="394" y="1166" on="0"/>
        <pt x="332" y="1187" on="0"/>
        <pt x="274" y="1210" on="0"/>
        <pt x="219" y="1232" on="0"/>
        <pt x="189" y="1232" on="1"/>
        <pt x="164" y="1232" on="0"/>
        <pt x="112" y="1214" on="0"/>
        <pt x="80" y="1193" on="1"/>
        <pt x="27" y="1275" on="1"/>
        <pt x="98" y="1347" on="0"/>
        <pt x="228" y="1406" on="0"/>
        <pt x="272" y="1406" on="1"/>
        <pt x="307" y="1406" on="0"/>
        <pt x="367" y="1386" on="0"/>
        <pt x="422" y="1364" on="0"/>
        <pt x="478" y="1344" on="0"/>
        <pt x="507" y="1344" on="1"/>
        <pt x="532" y="1344" on="0"/>
        <pt x="583" y="1354" on="0"/>
        <pt x="613" y="1373" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          3
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          240 3 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          96 3 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          64 3 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          79 15 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          NPUSHW[ ]	/* 9 values pushed */
          15 15 31 15 47 15 63 15 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          191 15 207 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          224 15 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 3 values pushed */
          23 15 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 25 values pushed */
          79 23 95 23 111 23 127 23 143 23 159 23 175 23 191 23 207 23 223 23 239 23 255 23 12
          DELTAP2[ ]	/* DeltaExceptionP2 */
          NPUSHW[ ]	/* 13 values pushed */
          15 23 31 23 47 23 63 23 79 23 95 23 6
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          0 23 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          8 15 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          11 3 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          240 11 1
          DELTAP2[ ]	/* DeltaExceptionP2 */
          NPUSHW[ ]	/* 13 values pushed */
          0 11 16 11 32 11 48 11 64 11 80 11 6
          DELTAP3[ ]	/* DeltaExceptionP3 */
          PUSHB[ ]	/* 3 values pushed */
          12 11 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          20 3 15
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="trademark" xMin="35" yMin="630" xMax="2042" yMax="1356">
      <contour>
        <pt x="672" y="630" on="1"/>
        <pt x="211" y="630" on="1"/>
        <pt x="211" y="701" on="1"/>
        <pt x="235" y="713" on="0"/>
        <pt x="296" y="730" on="0"/>
        <pt x="322" y="736" on="1"/>
        <pt x="322" y="1257" on="1"/>
        <pt x="223" y="1257" on="1"/>
        <pt x="166" y="1038" on="1"/>
        <pt x="85" y="1038" on="1"/>
        <pt x="76" y="1069" on="0"/>
        <pt x="58" y="1156" on="0"/>
        <pt x="44" y="1245" on="0"/>
        <pt x="35" y="1329" on="0"/>
        <pt x="35" y="1356" on="1"/>
        <pt x="852" y="1356" on="1"/>
        <pt x="852" y="1329" on="0"/>
        <pt x="843" y="1247" on="0"/>
        <pt x="829" y="1156" on="0"/>
        <pt x="811" y="1069" on="0"/>
        <pt x="800" y="1038" on="1"/>
        <pt x="721" y="1038" on="1"/>
        <pt x="662" y="1257" on="1"/>
        <pt x="564" y="1257" on="1"/>
        <pt x="564" y="736" on="1"/>
        <pt x="599" y="726" on="0"/>
        <pt x="658" y="711" on="0"/>
        <pt x="672" y="701" on="1"/>
      </contour>
      <contour>
        <pt x="1187" y="630" on="1"/>
        <pt x="866" y="630" on="1"/>
        <pt x="866" y="701" on="1"/>
        <pt x="891" y="713" on="0"/>
        <pt x="941" y="730" on="0"/>
        <pt x="965" y="736" on="1"/>
        <pt x="1000" y="1234" on="1"/>
        <pt x="968" y="1245" on="0"/>
        <pt x="930" y="1270" on="0"/>
        <pt x="911" y="1284" on="1"/>
        <pt x="911" y="1356" on="1"/>
        <pt x="1310" y="1356" on="1"/>
        <pt x="1417" y="1022" on="1"/>
        <pt x="1447" y="913" on="1"/>
        <pt x="1451" y="913" on="1"/>
        <pt x="1482" y="1024" on="1"/>
        <pt x="1600" y="1356" on="1"/>
        <pt x="2012" y="1356" on="1"/>
        <pt x="2012" y="1284" on="1"/>
        <pt x="1992" y="1273" on="0"/>
        <pt x="1946" y="1253" on="0"/>
        <pt x="1913" y="1249" on="1"/>
        <pt x="1942" y="736" on="1"/>
        <pt x="1997" y="726" on="0"/>
        <pt x="2042" y="701" on="1"/>
        <pt x="2042" y="630" on="1"/>
        <pt x="1617" y="630" on="1"/>
        <pt x="1617" y="701" on="1"/>
        <pt x="1633" y="709" on="0"/>
        <pt x="1676" y="726" on="0"/>
        <pt x="1708" y="736" on="1"/>
        <pt x="1678" y="1208" on="1"/>
        <pt x="1665" y="1208" on="1"/>
        <pt x="1464" y="630" on="1"/>
        <pt x="1340" y="630" on="1"/>
        <pt x="1133" y="1208" on="1"/>
        <pt x="1120" y="1208" on="1"/>
        <pt x="1098" y="736" on="1"/>
        <pt x="1151" y="719" on="0"/>
        <pt x="1187" y="701" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          34 68 69
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            44 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 44 68
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 7
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          8 6 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          44
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          41 55 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          59 44 28
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          59
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="50" yMin="0" xMax="937" yMax="1379">
      <contour>
        <pt x="240" y="926" on="1"/>
        <pt x="174" y="926" on="1"/>
        <pt x="162" y="954" on="0"/>
        <pt x="132" y="1033" on="0"/>
        <pt x="102" y="1117" on="0"/>
        <pt x="75" y="1201" on="0"/>
        <pt x="67" y="1236" on="1"/>
        <pt x="133" y="1293" on="0"/>
        <pt x="240" y="1336" on="1"/>
        <pt x="345" y="1379" on="0"/>
        <pt x="497" y="1379" on="1"/>
        <pt x="604" y="1379" on="0"/>
        <pt x="759" y="1324" on="0"/>
        <pt x="860" y="1228" on="0"/>
        <pt x="909" y="1099" on="0"/>
        <pt x="909" y="1026" on="1"/>
        <pt x="909" y="909" on="0"/>
        <pt x="855" y="803" on="1"/>
        <pt x="829" y="749" on="0"/>
        <pt x="762" y="651" on="0"/>
        <pt x="722" y="605" on="1"/>
        <pt x="642" y="513" on="0"/>
        <pt x="551" y="434" on="1"/>
        <pt x="505" y="395" on="0"/>
        <pt x="423" y="324" on="0"/>
        <pt x="386" y="292" on="1"/>
        <pt x="286" y="225" on="1"/>
        <pt x="286" y="217" on="1"/>
        <pt x="404" y="229" on="1"/>
        <pt x="737" y="229" on="1"/>
        <pt x="832" y="445" on="1"/>
        <pt x="898" y="445" on="1"/>
        <pt x="904" y="399" on="0"/>
        <pt x="918" y="275" on="0"/>
        <pt x="929" y="149" on="0"/>
        <pt x="937" y="35" on="0"/>
        <pt x="937" y="0" on="1"/>
        <pt x="50" y="0" on="1"/>
        <pt x="50" y="124" on="1"/>
        <pt x="100" y="168" on="0"/>
        <pt x="227" y="287" on="0"/>
        <pt x="360" y="428" on="0"/>
        <pt x="488" y="586" on="0"/>
        <pt x="587" y="752" on="0"/>
        <pt x="648" y="921" on="0"/>
        <pt x="648" y="1003" on="1"/>
        <pt x="648" y="1110" on="0"/>
        <pt x="591" y="1176" on="1"/>
        <pt x="534" y="1243" on="0"/>
        <pt x="429" y="1243" on="1"/>
        <pt x="397" y="1243" on="0"/>
        <pt x="344" y="1236" on="0"/>
        <pt x="312" y="1225" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 49 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          28 11
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          30 28 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          38 28 36
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="twoinferior" xMin="5" yMin="-193" xMax="592" yMax="633">
      <contour>
        <pt x="126" y="268" on="1"/>
        <pt x="74" y="268" on="1"/>
        <pt x="64" y="295" on="0"/>
        <pt x="41" y="374" on="0"/>
        <pt x="21" y="456" on="0"/>
        <pt x="6" y="527" on="0"/>
        <pt x="5" y="547" on="1"/>
        <pt x="36" y="565" on="0"/>
        <pt x="102" y="596" on="0"/>
        <pt x="177" y="619" on="0"/>
        <pt x="264" y="633" on="0"/>
        <pt x="318" y="633" on="1"/>
        <pt x="370" y="633" on="0"/>
        <pt x="466" y="610" on="0"/>
        <pt x="541" y="557" on="0"/>
        <pt x="586" y="471" on="0"/>
        <pt x="586" y="408" on="1"/>
        <pt x="586" y="343" on="0"/>
        <pt x="530" y="221" on="0"/>
        <pt x="429" y="107" on="0"/>
        <pt x="288" y="5" on="0"/>
        <pt x="204" y="-39" on="1"/>
        <pt x="204" y="-50" on="1"/>
        <pt x="263" y="-37" on="1"/>
        <pt x="430" y="-37" on="1"/>
        <pt x="515" y="93" on="1"/>
        <pt x="576" y="93" on="1"/>
        <pt x="580" y="61" on="0"/>
        <pt x="586" y="-23" on="0"/>
        <pt x="591" y="-105" on="0"/>
        <pt x="592" y="-175" on="0"/>
        <pt x="592" y="-193" on="1"/>
        <pt x="15" y="-193" on="1"/>
        <pt x="15" y="-95" on="1"/>
        <pt x="92" y="-47" on="0"/>
        <pt x="219" y="64" on="0"/>
        <pt x="311" y="183" on="0"/>
        <pt x="361" y="306" on="0"/>
        <pt x="361" y="366" on="1"/>
        <pt x="361" y="424" on="0"/>
        <pt x="309" y="488" on="0"/>
        <pt x="260" y="488" on="1"/>
        <pt x="235" y="488" on="0"/>
        <pt x="197" y="479" on="0"/>
        <pt x="183" y="471" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          41 45 46
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          41 21
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          0 41 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 22
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          25 24 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          33 24 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="twosuperior" xMin="5" yMin="748" xMax="592" yMax="1574">
      <component glyphName="twoinferior" x="0" y="941" flags="0x204"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            11 52
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="37" yMin="-23" xMax="1117" yMax="958">
      <contour>
        <pt x="150" y="351" on="1"/>
        <pt x="150" y="411" on="0"/>
        <pt x="154" y="539" on="0"/>
        <pt x="156" y="590" on="1"/>
        <pt x="159" y="641" on="0"/>
        <pt x="161" y="746" on="0"/>
        <pt x="161" y="803" on="1"/>
        <pt x="37" y="817" on="1"/>
        <pt x="37" y="891" on="1"/>
        <pt x="67" y="902" on="0"/>
        <pt x="154" y="923" on="0"/>
        <pt x="247" y="941" on="0"/>
        <pt x="336" y="955" on="0"/>
        <pt x="367" y="958" on="1"/>
        <pt x="431" y="958" on="1"/>
        <pt x="429" y="816" on="0"/>
        <pt x="419" y="547" on="0"/>
        <pt x="419" y="415" on="1"/>
        <pt x="419" y="384" on="0"/>
        <pt x="421" y="318" on="0"/>
        <pt x="426" y="257" on="0"/>
        <pt x="435" y="205" on="0"/>
        <pt x="443" y="188" on="1"/>
        <pt x="459" y="154" on="0"/>
        <pt x="507" y="127" on="0"/>
        <pt x="539" y="127" on="1"/>
        <pt x="595" y="127" on="0"/>
        <pt x="690" y="220" on="0"/>
        <pt x="725" y="312" on="1"/>
        <pt x="725" y="803" on="1"/>
        <pt x="604" y="817" on="1"/>
        <pt x="604" y="891" on="1"/>
        <pt x="632" y="903" on="0"/>
        <pt x="716" y="923" on="0"/>
        <pt x="807" y="941" on="0"/>
        <pt x="897" y="954" on="0"/>
        <pt x="931" y="958" on="1"/>
        <pt x="995" y="958" on="1"/>
        <pt x="995" y="132" on="1"/>
        <pt x="1117" y="118" on="1"/>
        <pt x="1117" y="52" on="1"/>
        <pt x="1091" y="41" on="0"/>
        <pt x="1013" y="18" on="0"/>
        <pt x="927" y="-1" on="0"/>
        <pt x="842" y="-15" on="0"/>
        <pt x="809" y="-18" on="1"/>
        <pt x="746" y="-18" on="1"/>
        <pt x="734" y="204" on="1"/>
        <pt x="727" y="204" on="1"/>
        <pt x="712" y="161" on="0"/>
        <pt x="666" y="80" on="0"/>
        <pt x="596" y="16" on="0"/>
        <pt x="500" y="-23" on="0"/>
        <pt x="436" y="-23" on="1"/>
        <pt x="368" y="-23" on="0"/>
        <pt x="262" y="9" on="0"/>
        <pt x="189" y="93" on="0"/>
        <pt x="150" y="238" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            53
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            53 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            46
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            46 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          53
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          39 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uacute" xMin="37" yMin="-23" xMax="1117" yMax="1482">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="358" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ubreve" xMin="37" yMin="-23" xMax="1117" yMax="1478">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="breve" x="235" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          63
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ucircumflex" xMin="37" yMin="-23" xMax="1117" yMax="1487">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="circumflex" x="241" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="udieresis" xMin="37" yMin="-23" xMax="1117" yMax="1422">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="218" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ugrave" xMin="37" yMin="-23" xMax="1117" yMax="1482">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="grave" x="157" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          59
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uhungarumlaut" xMin="37" yMin="-23" xMax="1117" yMax="1481">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="hungarumlaut" x="327" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="umacron" xMin="37" yMin="-23" xMax="1117" yMax="1334">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="macron" x="56" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="-19" yMin="-379" xMax="1042" yMax="-225">
      <contour>
        <pt x="-19" y="-225" on="1"/>
        <pt x="1042" y="-225" on="1"/>
        <pt x="1042" y="-379" on="1"/>
        <pt x="-19" y="-379" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 4 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            2 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          1 25
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01F4" xMin="130" yMin="-24" xMax="1507" yMax="1751">
      <component glyphName="G" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="567" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          76
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni01F5" xMin="26" yMin="-396" xMax="1012" yMax="1482">
      <component glyphName="g" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="281" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          127
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni03BC" xMin="31" yMin="-403" xMax="1119" yMax="958">
      <component glyphName="mu" x="0" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni048A" xMin="70" yMin="-290" xMax="1573" yMax="1737">
      <contour>
        <pt x="652" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="107" y="93" on="0"/>
        <pt x="188" y="124" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="190" y="1236" on="0"/>
        <pt x="105" y="1260" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="652" y="1356" on="1"/>
        <pt x="652" y="1282" on="1"/>
        <pt x="624" y="1264" on="0"/>
        <pt x="550" y="1234" on="0"/>
        <pt x="507" y="1225" on="1"/>
        <pt x="507" y="490" on="1"/>
        <pt x="488" y="339" on="1"/>
        <pt x="583" y="497" on="1"/>
        <pt x="1071" y="1179" on="1"/>
        <pt x="1071" y="1225" on="1"/>
        <pt x="980" y="1247" on="0"/>
        <pt x="918" y="1282" on="1"/>
        <pt x="918" y="1356" on="1"/>
        <pt x="1500" y="1356" on="1"/>
        <pt x="1500" y="1282" on="1"/>
        <pt x="1468" y="1260" on="0"/>
        <pt x="1385" y="1236" on="0"/>
        <pt x="1342" y="1225" on="1"/>
        <pt x="1342" y="126" on="1"/>
        <pt x="1554" y="126" on="1"/>
        <pt x="1573" y="100" on="1"/>
        <pt x="1565" y="64" on="0"/>
        <pt x="1521" y="-39" on="0"/>
        <pt x="1457" y="-149" on="0"/>
        <pt x="1380" y="-253" on="0"/>
        <pt x="1341" y="-290" on="1"/>
        <pt x="1236" y="-290" on="1"/>
        <pt x="1302" y="0" on="1"/>
        <pt x="918" y="0" on="1"/>
        <pt x="918" y="74" on="1"/>
        <pt x="945" y="87" on="0"/>
        <pt x="1021" y="120" on="0"/>
        <pt x="1063" y="130" on="1"/>
        <pt x="1063" y="863" on="1"/>
        <pt x="1082" y="1017" on="1"/>
        <pt x="995" y="863" on="1"/>
        <pt x="500" y="172" on="1"/>
        <pt x="500" y="130" on="1"/>
        <pt x="544" y="120" on="0"/>
        <pt x="622" y="89" on="0"/>
        <pt x="652" y="74" on="1"/>
      </contour>
      <contour>
        <pt x="786" y="1435" on="1"/>
        <pt x="698" y="1435" on="0"/>
        <pt x="552" y="1468" on="0"/>
        <pt x="447" y="1532" on="0"/>
        <pt x="391" y="1628" on="0"/>
        <pt x="391" y="1691" on="1"/>
        <pt x="426" y="1716" on="0"/>
        <pt x="542" y="1731" on="0"/>
        <pt x="589" y="1733" on="1"/>
        <pt x="654" y="1698" on="1"/>
        <pt x="654" y="1547" on="1"/>
        <pt x="681" y="1534" on="0"/>
        <pt x="753" y="1524" on="0"/>
        <pt x="788" y="1524" on="1"/>
        <pt x="815" y="1524" on="0"/>
        <pt x="894" y="1532" on="0"/>
        <pt x="922" y="1541" on="1"/>
        <pt x="922" y="1698" on="1"/>
        <pt x="988" y="1733" on="1"/>
        <pt x="1025" y="1737" on="0"/>
        <pt x="1134" y="1716" on="0"/>
        <pt x="1177" y="1691" on="1"/>
        <pt x="1177" y="1567" on="0"/>
        <pt x="968" y="1435" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            38 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          17 2 23
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          45 25 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 9 values pushed */
          15 52 31 52 47 52 63 52 4
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 60 31 60 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          65 16
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          60
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          70
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni048B" xMin="44" yMin="-277" xMax="1175" yMax="1328">
      <contour>
        <pt x="44" y="935" on="1"/>
        <pt x="538" y="935" on="1"/>
        <pt x="538" y="863" on="1"/>
        <pt x="518" y="851" on="0"/>
        <pt x="463" y="829" on="0"/>
        <pt x="425" y="817" on="1"/>
        <pt x="425" y="430" on="1"/>
        <pt x="405" y="257" on="1"/>
        <pt x="415" y="257" on="1"/>
        <pt x="488" y="396" on="1"/>
        <pt x="774" y="935" on="1"/>
        <pt x="1123" y="935" on="1"/>
        <pt x="1123" y="863" on="1"/>
        <pt x="1093" y="846" on="0"/>
        <pt x="1036" y="823" on="0"/>
        <pt x="1004" y="817" on="1"/>
        <pt x="1004" y="107" on="1"/>
        <pt x="1164" y="107" on="1"/>
        <pt x="1175" y="88" on="1"/>
        <pt x="1167" y="58" on="0"/>
        <pt x="1135" y="-12" on="0"/>
        <pt x="1093" y="-84" on="0"/>
        <pt x="1045" y="-154" on="0"/>
        <pt x="998" y="-215" on="0"/>
        <pt x="956" y="-263" on="0"/>
        <pt x="941" y="-277" on="1"/>
        <pt x="849" y="-277" on="1"/>
        <pt x="907" y="0" on="1"/>
        <pt x="629" y="0" on="1"/>
        <pt x="629" y="73" on="1"/>
        <pt x="681" y="103" on="0"/>
        <pt x="742" y="118" on="1"/>
        <pt x="742" y="515" on="1"/>
        <pt x="761" y="663" on="1"/>
        <pt x="752" y="663" on="1"/>
        <pt x="680" y="523" on="1"/>
        <pt x="398" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="76" y="88" on="0"/>
        <pt x="133" y="109" on="0"/>
        <pt x="165" y="118" on="1"/>
        <pt x="165" y="817" on="1"/>
        <pt x="128" y="823" on="0"/>
        <pt x="70" y="846" on="0"/>
        <pt x="44" y="863" on="1"/>
      </contour>
      <contour>
        <pt x="594" y="1031" on="1"/>
        <pt x="407" y="1031" on="0"/>
        <pt x="324" y="1098" on="1"/>
        <pt x="240" y="1165" on="0"/>
        <pt x="240" y="1278" on="1"/>
        <pt x="255" y="1288" on="0"/>
        <pt x="302" y="1304" on="0"/>
        <pt x="353" y="1317" on="0"/>
        <pt x="403" y="1326" on="0"/>
        <pt x="421" y="1328" on="1"/>
        <pt x="485" y="1303" on="1"/>
        <pt x="485" y="1137" on="1"/>
        <pt x="533" y="1117" on="0"/>
        <pt x="596" y="1117" on="1"/>
        <pt x="614" y="1117" on="0"/>
        <pt x="680" y="1124" on="0"/>
        <pt x="707" y="1132" on="1"/>
        <pt x="707" y="1303" on="1"/>
        <pt x="769" y="1328" on="1"/>
        <pt x="788" y="1326" on="0"/>
        <pt x="839" y="1316" on="0"/>
        <pt x="890" y="1303" on="0"/>
        <pt x="932" y="1286" on="0"/>
        <pt x="943" y="1278" on="1"/>
        <pt x="943" y="1222" on="0"/>
        <pt x="901" y="1131" on="0"/>
        <pt x="815" y="1066" on="0"/>
        <pt x="684" y="1031" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          46 74 75
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          8 38 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          12 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          33 12 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 46 31 46 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 55 31 55 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni048C" xMin="20" yMin="-6" xMax="1288" yMax="1356">
      <contour>
        <pt x="20" y="1094" on="1"/>
        <pt x="259" y="1094" on="1"/>
        <pt x="259" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="135" y="1260" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
        <pt x="728" y="1356" on="1"/>
        <pt x="728" y="1282" on="1"/>
        <pt x="695" y="1262" on="0"/>
        <pt x="598" y="1234" on="0"/>
        <pt x="549" y="1225" on="1"/>
        <pt x="549" y="1094" on="1"/>
        <pt x="925" y="1094" on="1"/>
        <pt x="925" y="970" on="1"/>
        <pt x="549" y="970" on="1"/>
        <pt x="549" y="811" on="1"/>
        <pt x="591" y="819" on="0"/>
        <pt x="679" y="825" on="0"/>
        <pt x="730" y="825" on="1"/>
        <pt x="836" y="825" on="0"/>
        <pt x="1028" y="792" on="0"/>
        <pt x="1104" y="749" on="1"/>
        <pt x="1189" y="701" on="0"/>
        <pt x="1288" y="541" on="0"/>
        <pt x="1288" y="426" on="1"/>
        <pt x="1288" y="312" on="0"/>
        <pt x="1193" y="148" on="0"/>
        <pt x="1028" y="43" on="0"/>
        <pt x="802" y="-6" on="0"/>
        <pt x="672" y="-6" on="1"/>
        <pt x="663" y="-6" on="0"/>
        <pt x="597" y="-4" on="0"/>
        <pt x="514" y="-2" on="0"/>
        <pt x="428" y="0" on="0"/>
        <pt x="398" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
        <pt x="100" y="74" on="1"/>
        <pt x="135" y="93" on="0"/>
        <pt x="217" y="124" on="0"/>
        <pt x="259" y="130" on="1"/>
        <pt x="259" y="970" on="1"/>
        <pt x="20" y="970" on="1"/>
      </contour>
      <contour>
        <pt x="658" y="699" on="1"/>
        <pt x="589" y="699" on="0"/>
        <pt x="549" y="687" on="1"/>
        <pt x="549" y="128" on="1"/>
        <pt x="575" y="123" on="0"/>
        <pt x="631" y="120" on="0"/>
        <pt x="662" y="120" on="1"/>
        <pt x="725" y="120" on="0"/>
        <pt x="837" y="149" on="0"/>
        <pt x="921" y="218" on="0"/>
        <pt x="970" y="332" on="0"/>
        <pt x="970" y="416" on="1"/>
        <pt x="970" y="486" on="0"/>
        <pt x="928" y="601" on="0"/>
        <pt x="890" y="637" on="1"/>
        <pt x="867" y="658" on="0"/>
        <pt x="812" y="683" on="0"/>
        <pt x="752" y="695" on="0"/>
        <pt x="688" y="699" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          19 62 63
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            6 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          19 6 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          32 19 1
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 3 values pushed */
          12 6 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          5 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          43 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni048D" xMin="20" yMin="-8" xMax="1041" yMax="1377">
      <contour>
        <pt x="20" y="926" on="1"/>
        <pt x="194" y="926" on="1"/>
        <pt x="194" y="1222" on="1"/>
        <pt x="52" y="1237" on="1"/>
        <pt x="52" y="1310" on="1"/>
        <pt x="78" y="1322" on="0"/>
        <pt x="168" y="1344" on="0"/>
        <pt x="268" y="1361" on="0"/>
        <pt x="366" y="1374" on="0"/>
        <pt x="400" y="1377" on="1"/>
        <pt x="463" y="1377" on="1"/>
        <pt x="463" y="926" on="1"/>
        <pt x="734" y="926" on="1"/>
        <pt x="734" y="812" on="1"/>
        <pt x="463" y="812" on="1"/>
        <pt x="463" y="562" on="1"/>
        <pt x="495" y="567" on="0"/>
        <pt x="591" y="579" on="0"/>
        <pt x="666" y="579" on="1"/>
        <pt x="702" y="579" on="0"/>
        <pt x="778" y="571" on="0"/>
        <pt x="848" y="554" on="0"/>
        <pt x="909" y="528" on="0"/>
        <pt x="932" y="510" on="1"/>
        <pt x="978" y="475" on="0"/>
        <pt x="1041" y="368" on="0"/>
        <pt x="1041" y="298" on="1"/>
        <pt x="1041" y="219" on="0"/>
        <pt x="978" y="101" on="0"/>
        <pt x="917" y="62" on="1"/>
        <pt x="890" y="45" on="0"/>
        <pt x="832" y="19" on="0"/>
        <pt x="761" y="1" on="0"/>
        <pt x="670" y="-8" on="0"/>
        <pt x="610" y="-8" on="1"/>
        <pt x="585" y="-8" on="0"/>
        <pt x="491" y="-6" on="0"/>
        <pt x="385" y="-3" on="0"/>
        <pt x="280" y="0" on="0"/>
        <pt x="244" y="0" on="1"/>
        <pt x="71" y="0" on="1"/>
        <pt x="71" y="73" on="1"/>
        <pt x="101" y="90" on="0"/>
        <pt x="162" y="109" on="0"/>
        <pt x="194" y="118" on="1"/>
        <pt x="194" y="812" on="1"/>
        <pt x="20" y="812" on="1"/>
      </contour>
      <contour>
        <pt x="463" y="107" on="1"/>
        <pt x="503" y="99" on="0"/>
        <pt x="546" y="99" on="1"/>
        <pt x="643" y="99" on="0"/>
        <pt x="747" y="191" on="0"/>
        <pt x="747" y="299" on="1"/>
        <pt x="747" y="350" on="0"/>
        <pt x="712" y="414" on="0"/>
        <pt x="686" y="435" on="1"/>
        <pt x="675" y="444" on="0"/>
        <pt x="645" y="457" on="0"/>
        <pt x="610" y="466" on="0"/>
        <pt x="576" y="471" on="0"/>
        <pt x="561" y="471" on="1"/>
        <pt x="539" y="471" on="0"/>
        <pt x="486" y="468" on="0"/>
        <pt x="463" y="462" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            11
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            11 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          3 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          11
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 32
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          18 11 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          41 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          49 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          60 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni04CF" xMin="32" yMin="0" xMax="537" yMax="1356">
      <contour>
        <pt x="537" y="0" on="1"/>
        <pt x="32" y="0" on="1"/>
        <pt x="32" y="73" on="1"/>
        <pt x="55" y="86" on="0"/>
        <pt x="122" y="109" on="0"/>
        <pt x="153" y="118" on="1"/>
        <pt x="153" y="1238" on="1"/>
        <pt x="118" y="1246" on="0"/>
        <pt x="53" y="1267" on="0"/>
        <pt x="32" y="1282" on="1"/>
        <pt x="32" y="1356" on="1"/>
        <pt x="537" y="1356" on="1"/>
        <pt x="537" y="1282" on="1"/>
        <pt x="513" y="1267" on="0"/>
        <pt x="461" y="1247" on="0"/>
        <pt x="423" y="1238" on="1"/>
        <pt x="423" y="118" on="1"/>
        <pt x="454" y="109" on="0"/>
        <pt x="505" y="88" on="0"/>
        <pt x="537" y="73" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          5 20 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          2
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni04F6" xMin="100" yMin="-316" xMax="1223" yMax="1356">
      <contour>
        <pt x="100" y="74" on="1"/>
        <pt x="143" y="95" on="0"/>
        <pt x="221" y="123" on="0"/>
        <pt x="258" y="130" on="1"/>
        <pt x="258" y="1225" on="1"/>
        <pt x="220" y="1234" on="0"/>
        <pt x="136" y="1260" on="0"/>
        <pt x="100" y="1282" on="1"/>
        <pt x="100" y="1356" on="1"/>
        <pt x="1223" y="1356" on="1"/>
        <pt x="1223" y="1261" on="0"/>
        <pt x="1205" y="1047" on="0"/>
        <pt x="1188" y="949" on="1"/>
        <pt x="1108" y="949" on="1"/>
        <pt x="978" y="1229" on="1"/>
        <pt x="549" y="1229" on="1"/>
        <pt x="549" y="128" on="1"/>
        <pt x="562" y="126" on="0"/>
        <pt x="591" y="126" on="0"/>
        <pt x="607" y="126" on="1"/>
        <pt x="762" y="126" on="1"/>
        <pt x="760" y="76" on="0"/>
        <pt x="752" y="-43" on="0"/>
        <pt x="738" y="-163" on="0"/>
        <pt x="721" y="-274" on="0"/>
        <pt x="710" y="-316" on="1"/>
        <pt x="634" y="-316" on="1"/>
        <pt x="530" y="0" on="1"/>
        <pt x="100" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          25 29 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          25
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            8
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            8 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          0 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          14 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          13 14 27
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni04F7" xMin="44" yMin="-277" xMax="876" yMax="935">
      <contour>
        <pt x="876" y="935" on="1"/>
        <pt x="874" y="900" on="0"/>
        <pt x="864" y="806" on="0"/>
        <pt x="850" y="706" on="0"/>
        <pt x="833" y="609" on="0"/>
        <pt x="824" y="571" on="1"/>
        <pt x="748" y="571" on="1"/>
        <pt x="664" y="829" on="1"/>
        <pt x="437" y="829" on="1"/>
        <pt x="437" y="107" on="1"/>
        <pt x="645" y="107" on="1"/>
        <pt x="643" y="61" on="0"/>
        <pt x="635" y="-35" on="0"/>
        <pt x="628" y="-86" on="1"/>
        <pt x="622" y="-138" on="0"/>
        <pt x="612" y="-232" on="0"/>
        <pt x="608" y="-277" on="1"/>
        <pt x="534" y="-277" on="1"/>
        <pt x="433" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="76" y="92" on="0"/>
        <pt x="136" y="110" on="0"/>
        <pt x="168" y="118" on="1"/>
        <pt x="168" y="819" on="1"/>
        <pt x="101" y="831" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          17 28 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          6 7 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0512" xMin="66" yMin="-408" xMax="1446" yMax="1356">
      <contour>
        <pt x="997" y="1229" on="1"/>
        <pt x="632" y="1229" on="1"/>
        <pt x="626" y="935" on="0"/>
        <pt x="584" y="542" on="0"/>
        <pt x="521" y="287" on="0"/>
        <pt x="446" y="137" on="0"/>
        <pt x="405" y="83" on="1"/>
        <pt x="368" y="33" on="0"/>
        <pt x="256" y="-24" on="0"/>
        <pt x="204" y="-24" on="1"/>
        <pt x="178" y="-13" on="0"/>
        <pt x="132" y="46" on="0"/>
        <pt x="93" y="124" on="0"/>
        <pt x="68" y="209" on="0"/>
        <pt x="66" y="246" on="1"/>
        <pt x="118" y="320" on="1"/>
        <pt x="349" y="264" on="1"/>
        <pt x="374" y="318" on="0"/>
        <pt x="423" y="471" on="0"/>
        <pt x="462" y="695" on="0"/>
        <pt x="484" y="1001" on="0"/>
        <pt x="484" y="1207" on="1"/>
        <pt x="425" y="1216" on="0"/>
        <pt x="318" y="1259" on="0"/>
        <pt x="279" y="1282" on="1"/>
        <pt x="279" y="1356" on="1"/>
        <pt x="1446" y="1356" on="1"/>
        <pt x="1446" y="1282" on="1"/>
        <pt x="1417" y="1264" on="0"/>
        <pt x="1333" y="1234" on="0"/>
        <pt x="1287" y="1225" on="1"/>
        <pt x="1287" y="2" on="1"/>
        <pt x="1287" y="-130" on="0"/>
        <pt x="1227" y="-292" on="0"/>
        <pt x="1106" y="-379" on="0"/>
        <pt x="927" y="-408" on="0"/>
        <pt x="807" y="-408" on="1"/>
        <pt x="795" y="-322" on="1"/>
        <pt x="849" y="-310" on="0"/>
        <pt x="925" y="-271" on="0"/>
        <pt x="973" y="-200" on="0"/>
        <pt x="997" y="-87" on="0"/>
        <pt x="997" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          37 43 44
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 9 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 15 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          36
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0513" xMin="21" yMin="-396" xMax="1101" yMax="935">
      <contour>
        <pt x="708" y="829" on="1"/>
        <pt x="468" y="829" on="1"/>
        <pt x="466" y="730" on="0"/>
        <pt x="447" y="514" on="0"/>
        <pt x="408" y="309" on="0"/>
        <pt x="347" y="127" on="0"/>
        <pt x="300" y="64" on="1"/>
        <pt x="263" y="11" on="0"/>
        <pt x="173" y="-34" on="0"/>
        <pt x="137" y="-26" on="1"/>
        <pt x="113" y="-13" on="0"/>
        <pt x="72" y="44" on="0"/>
        <pt x="42" y="109" on="0"/>
        <pt x="24" y="172" on="0"/>
        <pt x="21" y="194" on="1"/>
        <pt x="65" y="259" on="1"/>
        <pt x="240" y="211" on="1"/>
        <pt x="265" y="255" on="0"/>
        <pt x="298" y="382" on="0"/>
        <pt x="321" y="533" on="0"/>
        <pt x="333" y="707" on="0"/>
        <pt x="333" y="798" on="1"/>
        <pt x="296" y="810" on="0"/>
        <pt x="228" y="844" on="0"/>
        <pt x="201" y="863" on="1"/>
        <pt x="201" y="935" on="1"/>
        <pt x="1101" y="935" on="1"/>
        <pt x="1101" y="863" on="1"/>
        <pt x="1041" y="829" on="0"/>
        <pt x="978" y="817" on="1"/>
        <pt x="978" y="0" on="1"/>
        <pt x="978" y="-116" on="0"/>
        <pt x="924" y="-270" on="0"/>
        <pt x="816" y="-359" on="0"/>
        <pt x="654" y="-396" on="0"/>
        <pt x="542" y="-396" on="1"/>
        <pt x="532" y="-311" on="1"/>
        <pt x="583" y="-298" on="0"/>
        <pt x="652" y="-257" on="0"/>
        <pt x="692" y="-184" on="0"/>
        <pt x="708" y="-76" on="0"/>
        <pt x="708" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          36 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            9 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            35
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            35 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          0 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          15 9 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 3 values pushed */
          16 15 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          36 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni051C" xMin="24" yMin="-24" xMax="2025" yMax="1356">
      <component glyphName="W" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni051D" xMin="4" yMin="-23" xMax="1457" yMax="935">
      <component glyphName="w" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni0524" xMin="70" yMin="-316" xMax="1569" yMax="1356">
      <contour>
        <pt x="924" y="74" on="1"/>
        <pt x="944" y="89" on="0"/>
        <pt x="1006" y="118" on="0"/>
        <pt x="1056" y="130" on="1"/>
        <pt x="1056" y="1229" on="1"/>
        <pt x="519" y="1229" on="1"/>
        <pt x="519" y="130" on="1"/>
        <pt x="558" y="120" on="0"/>
        <pt x="620" y="93" on="0"/>
        <pt x="650" y="74" on="1"/>
        <pt x="650" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="99" y="89" on="0"/>
        <pt x="177" y="122" on="0"/>
        <pt x="229" y="130" on="1"/>
        <pt x="229" y="1225" on="1"/>
        <pt x="190" y="1234" on="0"/>
        <pt x="107" y="1260" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="1505" y="1356" on="1"/>
        <pt x="1505" y="1282" on="1"/>
        <pt x="1469" y="1259" on="0"/>
        <pt x="1387" y="1234" on="0"/>
        <pt x="1346" y="1225" on="1"/>
        <pt x="1346" y="126" on="1"/>
        <pt x="1569" y="126" on="1"/>
        <pt x="1567" y="76" on="0"/>
        <pt x="1558" y="-43" on="0"/>
        <pt x="1545" y="-163" on="0"/>
        <pt x="1528" y="-273" on="0"/>
        <pt x="1517" y="-316" on="1"/>
        <pt x="1441" y="-316" on="1"/>
        <pt x="1336" y="0" on="1"/>
        <pt x="924" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          0 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0525" xMin="44" yMin="-277" xMax="1173" yMax="935">
      <contour>
        <pt x="634" y="73" on="1"/>
        <pt x="652" y="86" on="0"/>
        <pt x="696" y="109" on="0"/>
        <pt x="736" y="118" on="1"/>
        <pt x="736" y="829" on="1"/>
        <pt x="431" y="829" on="1"/>
        <pt x="431" y="118" on="1"/>
        <pt x="469" y="107" on="0"/>
        <pt x="514" y="84" on="0"/>
        <pt x="535" y="73" on="1"/>
        <pt x="535" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="80" y="93" on="0"/>
        <pt x="135" y="114" on="0"/>
        <pt x="163" y="118" on="1"/>
        <pt x="163" y="817" on="1"/>
        <pt x="124" y="827" on="0"/>
        <pt x="65" y="849" on="0"/>
        <pt x="44" y="863" on="1"/>
        <pt x="44" y="935" on="1"/>
        <pt x="1124" y="935" on="1"/>
        <pt x="1124" y="863" on="1"/>
        <pt x="1099" y="848" on="0"/>
        <pt x="1048" y="823" on="0"/>
        <pt x="1006" y="817" on="1"/>
        <pt x="1006" y="107" on="1"/>
        <pt x="1173" y="107" on="1"/>
        <pt x="1171" y="62" on="0"/>
        <pt x="1164" y="-37" on="0"/>
        <pt x="1154" y="-136" on="0"/>
        <pt x="1142" y="-233" on="0"/>
        <pt x="1136" y="-277" on="1"/>
        <pt x="1063" y="-277" on="1"/>
        <pt x="962" y="0" on="1"/>
        <pt x="634" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 36 37
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            34
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            34 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          9 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          9
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          22 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          26 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0526" xMin="70" yMin="-316" xMax="1463" yMax="1356">
      <contour>
        <pt x="832" y="74" on="1"/>
        <pt x="853" y="89" on="0"/>
        <pt x="913" y="120" on="0"/>
        <pt x="950" y="130" on="1"/>
        <pt x="950" y="442" on="1"/>
        <pt x="950" y="508" on="0"/>
        <pt x="926" y="608" on="0"/>
        <pt x="900" y="643" on="1"/>
        <pt x="871" y="681" on="0"/>
        <pt x="781" y="719" on="0"/>
        <pt x="715" y="719" on="1"/>
        <pt x="652" y="719" on="0"/>
        <pt x="534" y="680" on="0"/>
        <pt x="488" y="652" on="1"/>
        <pt x="488" y="130" on="1"/>
        <pt x="519" y="120" on="0"/>
        <pt x="581" y="89" on="0"/>
        <pt x="608" y="74" on="1"/>
        <pt x="608" y="0" on="1"/>
        <pt x="70" y="0" on="1"/>
        <pt x="70" y="74" on="1"/>
        <pt x="95" y="89" on="0"/>
        <pt x="161" y="120" on="0"/>
        <pt x="197" y="130" on="1"/>
        <pt x="197" y="1225" on="1"/>
        <pt x="159" y="1234" on="0"/>
        <pt x="93" y="1266" on="0"/>
        <pt x="70" y="1282" on="1"/>
        <pt x="70" y="1356" on="1"/>
        <pt x="666" y="1356" on="1"/>
        <pt x="666" y="1282" on="1"/>
        <pt x="621" y="1260" on="0"/>
        <pt x="533" y="1229" on="0"/>
        <pt x="488" y="1225" on="1"/>
        <pt x="488" y="769" on="1"/>
        <pt x="572" y="816" on="0"/>
        <pt x="763" y="854" on="0"/>
        <pt x="863" y="854" on="1"/>
        <pt x="946" y="854" on="0"/>
        <pt x="1089" y="818" on="0"/>
        <pt x="1141" y="770" on="1"/>
        <pt x="1187" y="728" on="0"/>
        <pt x="1240" y="594" on="0"/>
        <pt x="1240" y="492" on="1"/>
        <pt x="1240" y="126" on="1"/>
        <pt x="1463" y="126" on="1"/>
        <pt x="1460" y="76" on="0"/>
        <pt x="1452" y="-43" on="0"/>
        <pt x="1440" y="-163" on="0"/>
        <pt x="1423" y="-274" on="0"/>
        <pt x="1410" y="-316" on="1"/>
        <pt x="1336" y="-316" on="1"/>
        <pt x="1231" y="0" on="1"/>
        <pt x="832" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          50
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            28
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            28 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            52
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            52 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          18
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          17 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          37 28 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          37
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          10 13
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          28
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          52
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          44 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni0527" xMin="25" yMin="-277" xMax="1129" yMax="1377">
      <component glyphName="hdesc" x="0" y="0" flags="0x204"/>
    </TTGlyph>

    <TTGlyph name="uni1E30" xMin="70" yMin="0" xMax="1543" yMax="1751">
      <component glyphName="K" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="581" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E31" xMin="30" yMin="0" xMax="1114" yMax="1482">
      <component glyphName="k" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="547" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni1E54" xMin="65" yMin="0" xMax="1201" yMax="1751">
      <component glyphName="P" x="0" y="0" flags="0x204"/>
      <component glyphName="Acute" x="336" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          62
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni1E55" xMin="50" yMin="-367" xMax="1077" yMax="1482">
      <component glyphName="p" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="467" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni2011" xMin="122" yMin="459" xMax="669" yMax="634">
      <component glyphName="hyphen" x="55" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni20B4" xMin="85" yMin="-24" xMax="1032" yMax="1379">
      <contour>
        <pt x="85" y="745" on="1"/>
        <pt x="85" y="872" on="1"/>
        <pt x="601" y="872" on="1"/>
        <pt x="656" y="924" on="0"/>
        <pt x="734" y="1048" on="0"/>
        <pt x="734" y="1114" on="1"/>
        <pt x="734" y="1155" on="0"/>
        <pt x="703" y="1208" on="0"/>
        <pt x="649" y="1240" on="0"/>
        <pt x="577" y="1253" on="0"/>
        <pt x="536" y="1253" on="1"/>
        <pt x="488" y="1253" on="0"/>
        <pt x="403" y="1225" on="0"/>
        <pt x="379" y="1212" on="1"/>
        <pt x="298" y="976" on="1"/>
        <pt x="217" y="976" on="1"/>
        <pt x="209" y="1005" on="0"/>
        <pt x="194" y="1081" on="0"/>
        <pt x="180" y="1166" on="0"/>
        <pt x="170" y="1255" on="0"/>
        <pt x="168" y="1294" on="1"/>
        <pt x="250" y="1332" on="0"/>
        <pt x="447" y="1379" on="0"/>
        <pt x="560" y="1379" on="1"/>
        <pt x="656" y="1379" on="0"/>
        <pt x="817" y="1347" on="0"/>
        <pt x="933" y="1278" on="0"/>
        <pt x="999" y="1166" on="0"/>
        <pt x="999" y="1085" on="1"/>
        <pt x="999" y="1040" on="0"/>
        <pt x="952" y="922" on="0"/>
        <pt x="910" y="872" on="1"/>
        <pt x="1032" y="872" on="1"/>
        <pt x="1032" y="745" on="1"/>
      </contour>
      <contour>
        <pt x="1032" y="623" on="1"/>
        <pt x="1032" y="497" on="1"/>
        <pt x="525" y="497" on="1"/>
        <pt x="468" y="449" on="0"/>
        <pt x="403" y="323" on="0"/>
        <pt x="403" y="264" on="1"/>
        <pt x="403" y="170" on="0"/>
        <pt x="511" y="103" on="0"/>
        <pt x="614" y="103" on="1"/>
        <pt x="678" y="103" on="0"/>
        <pt x="769" y="142" on="0"/>
        <pt x="790" y="161" on="1"/>
        <pt x="869" y="405" on="1"/>
        <pt x="947" y="405" on="1"/>
        <pt x="967" y="337" on="0"/>
        <pt x="993" y="170" on="0"/>
        <pt x="999" y="81" on="1"/>
        <pt x="978" y="66" on="0"/>
        <pt x="891" y="29" on="0"/>
        <pt x="780" y="-2" on="0"/>
        <pt x="658" y="-24" on="0"/>
        <pt x="601" y="-24" on="1"/>
        <pt x="350" y="-24" on="0"/>
        <pt x="126" y="130" on="0"/>
        <pt x="126" y="283" on="1"/>
        <pt x="126" y="339" on="0"/>
        <pt x="168" y="453" on="0"/>
        <pt x="205" y="497" on="1"/>
        <pt x="85" y="497" on="1"/>
        <pt x="85" y="623" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          23 64 65
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            23
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            23 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            55
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            55 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          1 23 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          1
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          15 1 31 1 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          23
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          10 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          14 10 1
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          63 1 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          63
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 7 values pushed */
          0 63 16 63 32 63 3
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          35 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          46 35 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          35
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni20BD" xMin="60" yMin="0" xMax="1053" yMax="1371">
      <contour>
        <pt x="64" y="660" on="1"/>
        <pt x="209" y="660" on="1"/>
        <pt x="209" y="1225" on="1"/>
        <pt x="164" y="1234" on="0"/>
        <pt x="93" y="1262" on="0"/>
        <pt x="60" y="1282" on="1"/>
        <pt x="60" y="1356" on="1"/>
        <pt x="283" y="1356" on="1"/>
        <pt x="361" y="1356" on="0"/>
        <pt x="529" y="1371" on="0"/>
        <pt x="593" y="1371" on="1"/>
        <pt x="695" y="1371" on="0"/>
        <pt x="840" y="1332" on="0"/>
        <pt x="975" y="1238" on="0"/>
        <pt x="1053" y="1080" on="0"/>
        <pt x="1053" y="961" on="1"/>
        <pt x="1053" y="851" on="0"/>
        <pt x="977" y="690" on="0"/>
        <pt x="840" y="585" on="0"/>
        <pt x="687" y="534" on="0"/>
        <pt x="576" y="534" on="1"/>
        <pt x="488" y="534" on="1"/>
        <pt x="488" y="412" on="1"/>
        <pt x="802" y="412" on="1"/>
        <pt x="802" y="287" on="1"/>
        <pt x="488" y="287" on="1"/>
        <pt x="488" y="130" on="1"/>
        <pt x="540" y="122" on="0"/>
        <pt x="642" y="93" on="0"/>
        <pt x="684" y="74" on="1"/>
        <pt x="684" y="0" on="1"/>
        <pt x="60" y="0" on="1"/>
        <pt x="60" y="74" on="1"/>
        <pt x="97" y="95" on="0"/>
        <pt x="170" y="122" on="0"/>
        <pt x="209" y="130" on="1"/>
        <pt x="209" y="287" on="1"/>
        <pt x="64" y="287" on="1"/>
        <pt x="64" y="412" on="1"/>
        <pt x="209" y="412" on="1"/>
        <pt x="209" y="534" on="1"/>
        <pt x="64" y="534" on="1"/>
      </contour>
      <contour>
        <pt x="561" y="1245" on="1"/>
        <pt x="538" y="1245" on="0"/>
        <pt x="505" y="1240" on="0"/>
        <pt x="488" y="1234" on="1"/>
        <pt x="488" y="660" on="1"/>
        <pt x="543" y="660" on="1"/>
        <pt x="660" y="660" on="0"/>
        <pt x="768" y="806" on="0"/>
        <pt x="768" y="951" on="1"/>
        <pt x="768" y="1102" on="0"/>
        <pt x="672" y="1245" on="0"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            10 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            30
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            30 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          46 10 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          46
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 11 values pushed */
          15 46 31 46 47 46 63 46 79 46 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          5 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          46
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          20 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          22 46 30
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          0 22 16 22 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          24 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          29 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          36
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          42 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uni2126" xMin="63" yMin="0" xMax="1511" yMax="1379">
      <component glyphName="Omega" x="-33" y="0" flags="0x4"/>
    </TTGlyph>

    <TTGlyph name="uni2206" xMin="24" yMin="0" xMax="1228" yMax="1356">
      <contour>
        <pt x="24" y="0" on="1"/>
        <pt x="24" y="87" on="1"/>
        <pt x="591" y="1356" on="1"/>
        <pt x="672" y="1356" on="1"/>
        <pt x="1228" y="87" on="1"/>
        <pt x="1228" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="566" y="982" on="1"/>
        <pt x="196" y="146" on="1"/>
        <pt x="909" y="146" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          2 9 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            2
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            2 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          7 12
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          1 7 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          4 5 7
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          6 2 5
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uniFEFF"/><!-- contains no outline data -->

    <TTGlyph name="uogonek" xMin="37" yMin="-423" xMax="1117" yMax="958">
      <contour>
        <pt x="150" y="351" on="1"/>
        <pt x="150" y="411" on="0"/>
        <pt x="154" y="539" on="0"/>
        <pt x="156" y="590" on="1"/>
        <pt x="159" y="641" on="0"/>
        <pt x="161" y="746" on="0"/>
        <pt x="161" y="803" on="1"/>
        <pt x="37" y="817" on="1"/>
        <pt x="37" y="891" on="1"/>
        <pt x="67" y="902" on="0"/>
        <pt x="154" y="923" on="0"/>
        <pt x="247" y="941" on="0"/>
        <pt x="336" y="955" on="0"/>
        <pt x="367" y="958" on="1"/>
        <pt x="431" y="958" on="1"/>
        <pt x="429" y="816" on="0"/>
        <pt x="419" y="547" on="0"/>
        <pt x="419" y="415" on="1"/>
        <pt x="419" y="384" on="0"/>
        <pt x="421" y="318" on="0"/>
        <pt x="426" y="257" on="0"/>
        <pt x="435" y="205" on="0"/>
        <pt x="443" y="188" on="1"/>
        <pt x="459" y="154" on="0"/>
        <pt x="507" y="127" on="0"/>
        <pt x="539" y="127" on="1"/>
        <pt x="595" y="127" on="0"/>
        <pt x="690" y="220" on="0"/>
        <pt x="725" y="312" on="1"/>
        <pt x="725" y="803" on="1"/>
        <pt x="604" y="817" on="1"/>
        <pt x="604" y="891" on="1"/>
        <pt x="632" y="903" on="0"/>
        <pt x="716" y="923" on="0"/>
        <pt x="807" y="941" on="0"/>
        <pt x="897" y="954" on="0"/>
        <pt x="931" y="958" on="1"/>
        <pt x="995" y="958" on="1"/>
        <pt x="995" y="132" on="1"/>
        <pt x="1117" y="118" on="1"/>
        <pt x="1117" y="52" on="1"/>
        <pt x="1077" y="36" on="0"/>
        <pt x="1020" y="21" on="1"/>
        <pt x="946" y="-23" on="0"/>
        <pt x="905" y="-90" on="1"/>
        <pt x="883" y="-124" on="0"/>
        <pt x="863" y="-190" on="0"/>
        <pt x="863" y="-223" on="1"/>
        <pt x="863" y="-259" on="0"/>
        <pt x="908" y="-316" on="0"/>
        <pt x="953" y="-316" on="1"/>
        <pt x="993" y="-316" on="0"/>
        <pt x="1046" y="-299" on="1"/>
        <pt x="1046" y="-385" on="1"/>
        <pt x="1033" y="-393" on="0"/>
        <pt x="991" y="-407" on="0"/>
        <pt x="943" y="-417" on="0"/>
        <pt x="896" y="-423" on="0"/>
        <pt x="879" y="-423" on="1"/>
        <pt x="751" y="-423" on="0"/>
        <pt x="691" y="-372" on="1"/>
        <pt x="631" y="-323" on="0"/>
        <pt x="631" y="-250" on="1"/>
        <pt x="631" y="-212" on="0"/>
        <pt x="660" y="-147" on="0"/>
        <pt x="711" y="-90" on="0"/>
        <pt x="779" y="-39" on="0"/>
        <pt x="818" y="-16" on="1"/>
        <pt x="794" y="-18" on="1"/>
        <pt x="746" y="-18" on="1"/>
        <pt x="734" y="204" on="1"/>
        <pt x="727" y="204" on="1"/>
        <pt x="712" y="161" on="0"/>
        <pt x="666" y="80" on="0"/>
        <pt x="596" y="16" on="0"/>
        <pt x="500" y="-23" on="0"/>
        <pt x="436" y="-23" on="1"/>
        <pt x="368" y="-23" on="0"/>
        <pt x="262" y="9" on="0"/>
        <pt x="189" y="93" on="0"/>
        <pt x="150" y="238" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          26 81 82
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          58
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            76
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            76 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            68
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            68 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          7 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          76
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          25 3
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          68
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          39 27
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          50 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          70 68 13
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="uring" xMin="37" yMin="-23" xMax="1117" yMax="1480">
      <component glyphName="u" x="0" y="0" flags="0x204"/>
      <component glyphName="ring" x="207" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="4" yMin="-23" xMax="1009" yMax="935">
      <contour>
        <pt x="453" y="-23" on="1"/>
        <pt x="102" y="817" on="1"/>
        <pt x="76" y="827" on="0"/>
        <pt x="27" y="849" on="0"/>
        <pt x="4" y="863" on="1"/>
        <pt x="4" y="935" on="1"/>
        <pt x="496" y="935" on="1"/>
        <pt x="496" y="865" on="1"/>
        <pt x="471" y="851" on="0"/>
        <pt x="420" y="827" on="0"/>
        <pt x="388" y="817" on="1"/>
        <pt x="545" y="360" on="1"/>
        <pt x="573" y="235" on="1"/>
        <pt x="577" y="235" on="1"/>
        <pt x="602" y="359" on="1"/>
        <pt x="761" y="817" on="1"/>
        <pt x="702" y="833" on="0"/>
        <pt x="659" y="863" on="1"/>
        <pt x="659" y="935" on="1"/>
        <pt x="1009" y="935" on="1"/>
        <pt x="1009" y="863" on="1"/>
        <pt x="991" y="849" on="0"/>
        <pt x="946" y="827" on="0"/>
        <pt x="913" y="817" on="1"/>
        <pt x="591" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          11 25 26
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            18
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            18 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 0 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          24 0 18
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="vacute" xMin="4" yMin="-23" xMax="1009" yMax="1482">
      <component glyphName="v" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="396" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          5
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="4" yMin="-23" xMax="1457" yMax="935">
      <contour>
        <pt x="384" y="-23" on="1"/>
        <pt x="102" y="817" on="1"/>
        <pt x="75" y="827" on="0"/>
        <pt x="25" y="848" on="0"/>
        <pt x="4" y="863" on="1"/>
        <pt x="4" y="935" on="1"/>
        <pt x="476" y="935" on="1"/>
        <pt x="476" y="865" on="1"/>
        <pt x="450" y="849" on="0"/>
        <pt x="398" y="825" on="0"/>
        <pt x="370" y="817" on="1"/>
        <pt x="490" y="394" on="1"/>
        <pt x="514" y="269" on="1"/>
        <pt x="517" y="269" on="1"/>
        <pt x="551" y="399" on="1"/>
        <pt x="741" y="924" on="1"/>
        <pt x="832" y="935" on="1"/>
        <pt x="1016" y="398" on="1"/>
        <pt x="1056" y="269" on="1"/>
        <pt x="1060" y="269" on="1"/>
        <pt x="1088" y="396" on="1"/>
        <pt x="1208" y="817" on="1"/>
        <pt x="1189" y="821" on="0"/>
        <pt x="1134" y="844" on="0"/>
        <pt x="1106" y="863" on="1"/>
        <pt x="1106" y="935" on="1"/>
        <pt x="1457" y="935" on="1"/>
        <pt x="1457" y="863" on="1"/>
        <pt x="1437" y="849" on="0"/>
        <pt x="1394" y="827" on="0"/>
        <pt x="1360" y="817" on="1"/>
        <pt x="1113" y="0" on="1"/>
        <pt x="936" y="-23" on="1"/>
        <pt x="792" y="410" on="1"/>
        <pt x="756" y="555" on="1"/>
        <pt x="750" y="555" on="1"/>
        <pt x="705" y="410" on="1"/>
        <pt x="558" y="0" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          35 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            5
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            5 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            32 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          4 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          7 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          18 16 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          24
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          37 0 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          31
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          34 16 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="13" yMin="0" xMax="1010" yMax="935">
      <contour>
        <pt x="614" y="529" on="1"/>
        <pt x="919" y="118" on="1"/>
        <pt x="966" y="103" on="0"/>
        <pt x="1010" y="73" on="1"/>
        <pt x="1010" y="0" on="1"/>
        <pt x="534" y="0" on="1"/>
        <pt x="534" y="71" on="1"/>
        <pt x="575" y="101" on="0"/>
        <pt x="619" y="118" on="1"/>
        <pt x="455" y="367" on="1"/>
        <pt x="283" y="118" on="1"/>
        <pt x="310" y="109" on="0"/>
        <pt x="349" y="86" on="0"/>
        <pt x="368" y="73" on="1"/>
        <pt x="368" y="0" on="1"/>
        <pt x="13" y="0" on="1"/>
        <pt x="13" y="73" on="1"/>
        <pt x="36" y="87" on="0"/>
        <pt x="83" y="110" on="0"/>
        <pt x="111" y="118" on="1"/>
        <pt x="385" y="456" on="1"/>
        <pt x="110" y="817" on="1"/>
        <pt x="83" y="827" on="0"/>
        <pt x="42" y="848" on="0"/>
        <pt x="26" y="863" on="1"/>
        <pt x="26" y="935" on="1"/>
        <pt x="495" y="935" on="1"/>
        <pt x="495" y="865" on="1"/>
        <pt x="481" y="851" on="0"/>
        <pt x="436" y="825" on="0"/>
        <pt x="411" y="817" on="1"/>
        <pt x="552" y="613" on="1"/>
        <pt x="705" y="817" on="1"/>
        <pt x="673" y="827" on="0"/>
        <pt x="636" y="849" on="0"/>
        <pt x="621" y="863" on="1"/>
        <pt x="621" y="935" on="1"/>
        <pt x="967" y="935" on="1"/>
        <pt x="967" y="863" on="1"/>
        <pt x="948" y="849" on="0"/>
        <pt x="903" y="827" on="0"/>
        <pt x="869" y="817" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          9 42 43
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            25 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            36
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            36 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            14
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            14 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          31 4 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          9 4 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          0 31 9
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          13 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          16 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          20 9 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          24 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          27 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          24
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="15" yMin="-402" xMax="1016" yMax="935">
      <contour>
        <pt x="114" y="817" on="1"/>
        <pt x="86" y="825" on="0"/>
        <pt x="40" y="848" on="0"/>
        <pt x="15" y="863" on="1"/>
        <pt x="15" y="935" on="1"/>
        <pt x="508" y="935" on="1"/>
        <pt x="508" y="865" on="1"/>
        <pt x="467" y="838" on="0"/>
        <pt x="400" y="817" on="1"/>
        <pt x="562" y="388" on="1"/>
        <pt x="595" y="278" on="1"/>
        <pt x="598" y="278" on="1"/>
        <pt x="625" y="390" on="1"/>
        <pt x="762" y="817" on="1"/>
        <pt x="707" y="829" on="0"/>
        <pt x="661" y="863" on="1"/>
        <pt x="661" y="935" on="1"/>
        <pt x="1016" y="935" on="1"/>
        <pt x="1016" y="863" on="1"/>
        <pt x="996" y="849" on="0"/>
        <pt x="948" y="827" on="0"/>
        <pt x="914" y="817" on="1"/>
        <pt x="621" y="0" on="1"/>
        <pt x="575" y="-120" on="0"/>
        <pt x="486" y="-272" on="0"/>
        <pt x="399" y="-360" on="0"/>
        <pt x="310" y="-397" on="0"/>
        <pt x="264" y="-402" on="1"/>
        <pt x="251" y="-389" on="0"/>
        <pt x="221" y="-340" on="0"/>
        <pt x="196" y="-280" on="0"/>
        <pt x="178" y="-217" on="0"/>
        <pt x="176" y="-191" on="1"/>
        <pt x="202" y="-146" on="1"/>
        <pt x="426" y="-146" on="1"/>
        <pt x="434" y="-133" on="0"/>
        <pt x="448" y="-105" on="0"/>
        <pt x="454" y="-90" on="1"/>
        <pt x="461" y="-75" on="0"/>
        <pt x="479" y="-27" on="0"/>
        <pt x="487" y="3" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          40 41 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            4 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            16
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            16 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            27
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            27 40
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          3 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 5
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          10 41 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          15
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          27
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 10
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          40 41 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="yacute" xMin="15" yMin="-402" xMax="1016" yMax="1482">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="349" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="ydieresis" xMin="15" yMin="-402" xMax="1016" yMax="1422">
      <component glyphName="y" x="0" y="0" flags="0x204"/>
      <component glyphName="dieresis" x="215" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          4
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          53
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="yen" xMin="-110" yMin="0" xMax="1142" yMax="1356">
      <contour>
        <pt x="716" y="1356" on="1"/>
        <pt x="1142" y="1356" on="1"/>
        <pt x="1142" y="1282" on="1"/>
        <pt x="1127" y="1274" on="0"/>
        <pt x="1091" y="1257" on="0"/>
        <pt x="1054" y="1242" on="0"/>
        <pt x="1020" y="1229" on="0"/>
        <pt x="1008" y="1225" on="1"/>
        <pt x="724" y="662" on="1"/>
        <pt x="940" y="662" on="1"/>
        <pt x="940" y="536" on="1"/>
        <pt x="676" y="536" on="1"/>
        <pt x="676" y="426" on="1"/>
        <pt x="940" y="426" on="1"/>
        <pt x="940" y="300" on="1"/>
        <pt x="676" y="300" on="1"/>
        <pt x="676" y="130" on="1"/>
        <pt x="713" y="126" on="0"/>
        <pt x="789" y="93" on="0"/>
        <pt x="822" y="74" on="1"/>
        <pt x="822" y="0" on="1"/>
        <pt x="226" y="0" on="1"/>
        <pt x="226" y="74" on="1"/>
        <pt x="259" y="91" on="0"/>
        <pt x="339" y="122" on="0"/>
        <pt x="384" y="130" on="1"/>
        <pt x="384" y="300" on="1"/>
        <pt x="118" y="300" on="1"/>
        <pt x="118" y="426" on="1"/>
        <pt x="384" y="426" on="1"/>
        <pt x="384" y="536" on="1"/>
        <pt x="118" y="536" on="1"/>
        <pt x="118" y="662" on="1"/>
        <pt x="331" y="662" on="1"/>
        <pt x="35" y="1225" on="1"/>
        <pt x="20" y="1229" on="0"/>
        <pt x="-20" y="1244" on="0"/>
        <pt x="-61" y="1260" on="0"/>
        <pt x="-98" y="1276" on="0"/>
        <pt x="-110" y="1282" on="1"/>
        <pt x="-110" y="1356" on="1"/>
        <pt x="487" y="1356" on="1"/>
        <pt x="487" y="1282" on="1"/>
        <pt x="457" y="1266" on="0"/>
        <pt x="379" y="1236" on="0"/>
        <pt x="344" y="1225" on="1"/>
        <pt x="603" y="700" on="1"/>
        <pt x="852" y="1225" on="1"/>
        <pt x="833" y="1231" on="0"/>
        <pt x="794" y="1246" on="0"/>
        <pt x="757" y="1261" on="0"/>
        <pt x="726" y="1276" on="0"/>
        <pt x="716" y="1282" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          46 53 54
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            0 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            20
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            20 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          2 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 0 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          8
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 11 values pushed */
          15 8 31 8 47 8 63 8 79 8 5
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 5 values pushed */
          15 8 31 8 2
          DELTAP2[ ]	/* DeltaExceptionP2 */
          PUSHB[ ]	/* 2 values pushed */
          10 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          12 8 20
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 5 values pushed */
          0 12 16 12 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 2 values pushed */
          14 1
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          20
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          19 4
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 5 values pushed */
          6 19 22 19 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHB[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          8
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          39
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          40
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          46 20 0
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          2
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          52
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="44" yMin="0" xMax="869" yMax="935">
      <contour>
        <pt x="819" y="346" on="1"/>
        <pt x="838" y="270" on="0"/>
        <pt x="869" y="82" on="0"/>
        <pt x="865" y="0" on="1"/>
        <pt x="44" y="0" on="1"/>
        <pt x="44" y="73" on="1"/>
        <pt x="556" y="829" on="1"/>
        <pt x="262" y="829" on="1"/>
        <pt x="180" y="609" on="1"/>
        <pt x="118" y="609" on="1"/>
        <pt x="96" y="689" on="0"/>
        <pt x="70" y="867" on="0"/>
        <pt x="70" y="935" on="1"/>
        <pt x="852" y="935" on="1"/>
        <pt x="852" y="863" on="1"/>
        <pt x="344" y="107" on="1"/>
        <pt x="653" y="107" on="1"/>
        <pt x="754" y="346" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          6 18 19
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            12
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            12 46
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          15 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          5 15 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          12
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          6 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 3 values pushed */
          8 6 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          14 6 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          17 15 12
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zacute" xMin="44" yMin="0" xMax="869" yMax="1482">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="acute" x="277" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zcaron" xMin="44" yMin="0" xMax="869" yMax="1494">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="caron" x="107" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zdotaccent" xMin="44" yMin="0" xMax="869" yMax="1431">
      <component glyphName="z" x="0" y="0" flags="0x204"/>
      <component glyphName="dotaccent" x="157" y="0" flags="0x4"/>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="65" yMin="-24" xMax="959" yMax="1379">
      <contour>
        <pt x="65" y="678" on="1"/>
        <pt x="65" y="1025" on="0"/>
        <pt x="294" y="1379" on="0"/>
        <pt x="512" y="1379" on="1"/>
        <pt x="606" y="1379" on="0"/>
        <pt x="746" y="1324" on="0"/>
        <pt x="846" y="1227" on="0"/>
        <pt x="909" y="1094" on="0"/>
        <pt x="945" y="938" on="0"/>
        <pt x="959" y="766" on="0"/>
        <pt x="959" y="678" on="1"/>
        <pt x="959" y="331" on="0"/>
        <pt x="735" y="-24" on="0"/>
        <pt x="500" y="-24" on="1"/>
        <pt x="382" y="-24" on="0"/>
        <pt x="217" y="71" on="0"/>
        <pt x="113" y="252" on="0"/>
        <pt x="65" y="513" on="0"/>
      </contour>
      <contour>
        <pt x="355" y="678" on="1"/>
        <pt x="355" y="539" on="0"/>
        <pt x="362" y="318" on="0"/>
        <pt x="392" y="165" on="0"/>
        <pt x="450" y="83" on="0"/>
        <pt x="501" y="83" on="1"/>
        <pt x="553" y="83" on="0"/>
        <pt x="619" y="149" on="0"/>
        <pt x="656" y="292" on="0"/>
        <pt x="669" y="518" on="0"/>
        <pt x="669" y="678" on="1"/>
        <pt x="669" y="817" on="0"/>
        <pt x="663" y="1038" on="0"/>
        <pt x="632" y="1191" on="0"/>
        <pt x="569" y="1273" on="0"/>
        <pt x="512" y="1273" on="1"/>
        <pt x="461" y="1273" on="0"/>
        <pt x="400" y="1207" on="0"/>
        <pt x="366" y="1063" on="0"/>
        <pt x="355" y="837" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 3 values pushed */
          3 38 39
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            3 48
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          0
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            13 38
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          23 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 2 values pushed */
          33 2
          PUSHB[ ]	/* 1 value pushed */
          10
          CALL[ ]	/* CallFunction */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            MDRP[11000]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MIRP[10100]	/* MoveIndirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

  </glyf>

  <kern>
    <version value="0"/>
    <kernsubtable coverage="1" format="0">
      <pair l="A" r="T" v="-152"/>
      <pair l="A" r="V" v="-264"/>
      <pair l="A" r="W" v="-227"/>
      <pair l="A" r="Y" v="-188"/>
      <pair l="A" r="quoteright" v="-152"/>
      <pair l="A" r="space" v="-113"/>
      <pair l="A" r="v" v="-152"/>
      <pair l="A" r="w" v="-152"/>
      <pair l="A" r="y" v="-152"/>
      <pair l="Ezhcarelcaron" r="afii10021" v="-125"/>
      <pair l="Ezhcarelcaron" r="afii10024" v="-27"/>
      <pair l="Ezhcarelcaron" r="afii10029" v="-90"/>
      <pair l="Ezhcarelcaron" r="afii10037" v="-51"/>
      <pair l="Ezhcarelcaron" r="afii10041" v="-78"/>
      <pair l="Ezhcarelcaron" r="afii10049" v="-78"/>
      <pair l="Ezhcarelcaron" r="afii10069" v="-51"/>
      <pair l="Ezhcarelcaron" r="afii10077" v="-27"/>
      <pair l="Ezhcarelcaron" r="cyrEldesc" v="-90"/>
      <pair l="F" r="A" v="-152"/>
      <pair l="F" r="comma" v="-188"/>
      <pair l="F" r="period" v="-188"/>
      <pair l="F" r="space" v="-76"/>
      <pair l="L" r="T" v="-188"/>
      <pair l="L" r="V" v="-188"/>
      <pair l="L" r="W" v="-188"/>
      <pair l="L" r="Y" v="-188"/>
      <pair l="L" r="quoteright" v="-188"/>
      <pair l="L" r="space" v="-113"/>
      <pair l="L" r="y" v="-113"/>
      <pair l="P" r="A" v="-152"/>
      <pair l="P" r="comma" v="-188"/>
      <pair l="P" r="period" v="-188"/>
      <pair l="P" r="space" v="-113"/>
      <pair l="R" r="T" v="-72"/>
      <pair l="R" r="V" v="-72"/>
      <pair l="R" r="W" v="-72"/>
      <pair l="R" r="Y" v="-72"/>
      <pair l="R" r="y" v="-72"/>
      <pair l="T" r="A" v="-152"/>
      <pair l="T" r="O" v="-37"/>
      <pair l="T" r="a" v="-188"/>
      <pair l="T" r="c" v="-188"/>
      <pair l="T" r="colon" v="-152"/>
      <pair l="T" r="comma" v="-152"/>
      <pair l="T" r="e" v="-188"/>
      <pair l="T" r="hyphen" v="-188"/>
      <pair l="T" r="i" v="-37"/>
      <pair l="T" r="o" v="-188"/>
      <pair l="T" r="period" v="-152"/>
      <pair l="T" r="r" v="-152"/>
      <pair l="T" r="s" v="-188"/>
      <pair l="T" r="semicolon" v="-152"/>
      <pair l="T" r="space" v="-37"/>
      <pair l="T" r="u" v="-188"/>
      <pair l="T" r="w" v="-152"/>
      <pair l="T" r="y" v="-152"/>
      <pair l="V" r="A" v="-264"/>
      <pair l="V" r="O" v="-41"/>
      <pair l="V" r="a" v="-188"/>
      <pair l="V" r="colon" v="-188"/>
      <pair l="V" r="comma" v="-264"/>
      <pair l="V" r="e" v="-188"/>
      <pair l="V" r="hyphen" v="-152"/>
      <pair l="V" r="i" v="-76"/>
      <pair l="V" r="o" v="-188"/>
      <pair l="V" r="period" v="-264"/>
      <pair l="V" r="r" v="-152"/>
      <pair l="V" r="semicolon" v="-188"/>
      <pair l="V" r="space" v="-37"/>
      <pair l="V" r="u" v="-188"/>
      <pair l="V" r="y" v="-188"/>
      <pair l="W" r="A" v="-227"/>
      <pair l="W" r="a" v="-113"/>
      <pair l="W" r="colon" v="-113"/>
      <pair l="W" r="comma" v="-188"/>
      <pair l="W" r="e" v="-113"/>
      <pair l="W" r="hyphen" v="-76"/>
      <pair l="W" r="i" v="-37"/>
      <pair l="W" r="o" v="-113"/>
      <pair l="W" r="period" v="-188"/>
      <pair l="W" r="r" v="-37"/>
      <pair l="W" r="semicolon" v="-113"/>
      <pair l="W" r="space" v="-37"/>
      <pair l="W" r="u" v="-37"/>
      <pair l="W" r="y" v="-76"/>
      <pair l="Y" r="A" v="-188"/>
      <pair l="Y" r="a" v="-227"/>
      <pair l="Y" r="colon" v="-188"/>
      <pair l="Y" r="comma" v="-188"/>
      <pair l="Y" r="e" v="-227"/>
      <pair l="Y" r="hyphen" v="-188"/>
      <pair l="Y" r="i" v="-76"/>
      <pair l="Y" r="o" v="-227"/>
      <pair l="Y" r="p" v="-188"/>
      <pair l="Y" r="period" v="-188"/>
      <pair l="Y" r="q" v="-227"/>
      <pair l="Y" r="semicolon" v="-188"/>
      <pair l="Y" r="space" v="-76"/>
      <pair l="Y" r="u" v="-188"/>
      <pair l="Y" r="v" v="-227"/>
      <pair l="afii10017" r="Ezhcarelcaron" v="-51"/>
      <pair l="afii10017" r="afii10025" v="-51"/>
      <pair l="afii10017" r="afii10032" v="-102"/>
      <pair l="afii10017" r="afii10033" v="-51"/>
      <pair l="afii10017" r="afii10035" v="-102"/>
      <pair l="afii10017" r="afii10036" v="-180"/>
      <pair l="afii10017" r="afii10037" v="-180"/>
      <pair l="afii10017" r="afii10038" v="-129"/>
      <pair l="afii10017" r="afii10041" v="-311"/>
      <pair l="afii10017" r="afii10047" v="-51"/>
      <pair l="afii10017" r="afii10065" v="-27"/>
      <pair l="afii10017" r="afii10066" v="-104"/>
      <pair l="afii10017" r="afii10070" v="-51"/>
      <pair l="afii10017" r="afii10080" v="-104"/>
      <pair l="afii10017" r="afii10083" v="-51"/>
      <pair l="afii10017" r="afii10084" v="-102"/>
      <pair l="afii10017" r="afii10085" v="-102"/>
      <pair l="afii10017" r="afii10086" v="-78"/>
      <pair l="afii10017" r="cyrEcyrbreve" v="-51"/>
      <pair l="afii10017" r="cyrEmacron" v="-51"/>
      <pair l="afii10017" r="cyrObarcyrbreve" v="-102"/>
      <pair l="afii10017" r="cyrObardieresiscyrbreve" v="-102"/>
      <pair l="afii10017" r="cyrOcyrbreve" v="-102"/>
      <pair l="afii10017" r="cyrOdotaccent" v="-102"/>
      <pair l="afii10017" r="cyrOmacron" v="-102"/>
      <pair l="afii10017" r="cyrZecaron" v="-51"/>
      <pair l="afii10017" r="quoteright" v="-180"/>
      <pair l="afii10018" r="afii10017" v="-27"/>
      <pair l="afii10018" r="afii10021" v="-78"/>
      <pair l="afii10018" r="afii10024" v="-51"/>
      <pair l="afii10018" r="afii10029" v="-51"/>
      <pair l="afii10018" r="afii10032" v="-14"/>
      <pair l="afii10018" r="afii10035" v="-14"/>
      <pair l="afii10018" r="afii10036" v="-27"/>
      <pair l="afii10018" r="afii10037" v="-72"/>
      <pair l="afii10018" r="afii10038" v="-31"/>
      <pair l="afii10018" r="afii10039" v="-51"/>
      <pair l="afii10018" r="afii10041" v="-102"/>
      <pair l="afii10018" r="afii10044" v="-78"/>
      <pair l="afii10018" r="afii10049" v="-68"/>
      <pair l="afii10018" r="afii10069" v="-51"/>
      <pair l="afii10018" r="afii10077" v="-27"/>
      <pair l="afii10018" r="afii10085" v="-51"/>
      <pair l="afii10018" r="cyrAmacron" v="-27"/>
      <pair l="afii10018" r="cyrEldesc" v="-51"/>
      <pair l="afii10018" r="cyrObarcyrbreve" v="-14"/>
      <pair l="afii10018" r="cyrObardieresiscyrbreve" v="-14"/>
      <pair l="afii10018" r="cyrOcyrbreve" v="-14"/>
      <pair l="afii10018" r="cyrOdotaccent" v="-14"/>
      <pair l="afii10018" r="cyrOmacron" v="-14"/>
      <pair l="afii10019" r="afii10017" v="-129"/>
      <pair l="afii10019" r="afii10021" v="-78"/>
      <pair l="afii10019" r="afii10024" v="-51"/>
      <pair l="afii10019" r="afii10029" v="-78"/>
      <pair l="afii10019" r="afii10036" v="-27"/>
      <pair l="afii10019" r="afii10037" v="-166"/>
      <pair l="afii10019" r="afii10039" v="-51"/>
      <pair l="afii10019" r="afii10041" v="-102"/>
      <pair l="afii10019" r="afii10044" v="-109"/>
      <pair l="afii10019" r="afii10049" v="-102"/>
      <pair l="afii10019" r="afii10069" v="-51"/>
      <pair l="afii10019" r="afii10085" v="-27"/>
      <pair l="afii10019" r="afii10087" v="-27"/>
      <pair l="afii10019" r="afii10089" v="-51"/>
      <pair l="afii10019" r="cyrAmacron" v="-129"/>
      <pair l="afii10019" r="cyrEldesc" v="-78"/>
      <pair l="afii10020" r="Ezhcarelcaron" v="51"/>
      <pair l="afii10020" r="afii10017" v="-223"/>
      <pair l="afii10020" r="afii10021" v="-180"/>
      <pair l="afii10020" r="afii10025" v="51"/>
      <pair l="afii10020" r="afii10029" v="-309"/>
      <pair l="afii10020" r="afii10030" v="-27"/>
      <pair l="afii10020" r="afii10032" v="-51"/>
      <pair l="afii10020" r="afii10035" v="-27"/>
      <pair l="afii10020" r="afii10049" v="-154"/>
      <pair l="afii10020" r="afii10065" v="-180"/>
      <pair l="afii10020" r="afii10067" v="-78"/>
      <pair l="afii10020" r="afii10069" v="-154"/>
      <pair l="afii10020" r="afii10070" v="-156"/>
      <pair l="afii10020" r="afii10074" v="-78"/>
      <pair l="afii10020" r="afii10077" v="-231"/>
      <pair l="afii10020" r="afii10078" v="-78"/>
      <pair l="afii10020" r="afii10079" v="-78"/>
      <pair l="afii10020" r="afii10080" v="-180"/>
      <pair l="afii10020" r="afii10082" v="-129"/>
      <pair l="afii10020" r="afii10085" v="-78"/>
      <pair l="afii10020" r="afii10093" v="-129"/>
      <pair l="afii10020" r="afii10094" v="-129"/>
      <pair l="afii10020" r="afii10096" v="-102"/>
      <pair l="afii10020" r="afii10097" v="-154"/>
      <pair l="afii10020" r="comma" v="-231"/>
      <pair l="afii10020" r="cyrAmacron" v="-223"/>
      <pair l="afii10020" r="cyrEldesc" v="-309"/>
      <pair l="afii10020" r="cyrObarcyrbreve" v="-51"/>
      <pair l="afii10020" r="cyrObardieresiscyrbreve" v="-51"/>
      <pair l="afii10020" r="cyrOcyrbreve" v="-51"/>
      <pair l="afii10020" r="cyrOdotaccent" v="-51"/>
      <pair l="afii10020" r="cyrOmacron" v="-51"/>
      <pair l="afii10020" r="cyrZecaron" v="51"/>
      <pair l="afii10020" r="emdash" v="-51"/>
      <pair l="afii10020" r="guillemotleft" v="-129"/>
      <pair l="afii10020" r="guillemotright" v="-51"/>
      <pair l="afii10020" r="period" v="-231"/>
      <pair l="afii10021" r="Ezhcarelcaron" v="51"/>
      <pair l="afii10021" r="afii10025" v="51"/>
      <pair l="afii10021" r="afii10037" v="25"/>
      <pair l="afii10021" r="afii10038" v="-27"/>
      <pair l="afii10021" r="afii10047" v="51"/>
      <pair l="afii10021" r="afii10070" v="25"/>
      <pair l="afii10021" r="afii10073" v="51"/>
      <pair l="afii10021" r="cyrEcyrbreve" v="51"/>
      <pair l="afii10021" r="cyrEmacron" v="51"/>
      <pair l="afii10021" r="cyrZecaron" v="51"/>
      <pair l="afii10022" r="Ezhcarelcaron" v="25"/>
      <pair l="afii10022" r="afii10025" v="25"/>
      <pair l="afii10022" r="afii10029" v="-27"/>
      <pair l="afii10022" r="cyrEldesc" v="-27"/>
      <pair l="afii10022" r="cyrZecaron" v="25"/>
      <pair l="afii10024" r="Ezhcarelcaron" v="-51"/>
      <pair l="afii10024" r="afii10025" v="-51"/>
      <pair l="afii10024" r="afii10032" v="-51"/>
      <pair l="afii10024" r="afii10035" v="-51"/>
      <pair l="afii10024" r="afii10036" v="-35"/>
      <pair l="afii10024" r="afii10037" v="-29"/>
      <pair l="afii10024" r="afii10044" v="-20"/>
      <pair l="afii10024" r="afii10065" v="-51"/>
      <pair l="afii10024" r="afii10066" v="-102"/>
      <pair l="afii10024" r="afii10070" v="-104"/>
      <pair l="afii10024" r="afii10080" v="-154"/>
      <pair l="afii10024" r="afii10085" v="-156"/>
      <pair l="afii10024" r="cyrObarcyrbreve" v="-51"/>
      <pair l="afii10024" r="cyrObardieresiscyrbreve" v="-51"/>
      <pair l="afii10024" r="cyrOcyrbreve" v="-51"/>
      <pair l="afii10024" r="cyrOdotaccent" v="-51"/>
      <pair l="afii10024" r="cyrOmacron" v="-51"/>
      <pair l="afii10024" r="cyrZecaron" v="-51"/>
      <pair l="afii10025" r="afii10021" v="-125"/>
      <pair l="afii10025" r="afii10024" v="-27"/>
      <pair l="afii10025" r="afii10029" v="-90"/>
      <pair l="afii10025" r="afii10037" v="-51"/>
      <pair l="afii10025" r="afii10041" v="-78"/>
      <pair l="afii10025" r="afii10049" v="-78"/>
      <pair l="afii10025" r="afii10069" v="-51"/>
      <pair l="afii10025" r="afii10077" v="-27"/>
      <pair l="afii10025" r="cyrEldesc" v="-90"/>
      <pair l="afii10028" r="afii10032" v="-51"/>
      <pair l="afii10028" r="afii10035" v="-51"/>
      <pair l="afii10028" r="afii10037" v="-41"/>
      <pair l="afii10028" r="afii10038" v="-152"/>
      <pair l="afii10028" r="afii10041" v="-27"/>
      <pair l="afii10028" r="afii10047" v="25"/>
      <pair l="afii10028" r="afii10065" v="-27"/>
      <pair l="afii10028" r="afii10070" v="-78"/>
      <pair l="afii10028" r="afii10073" v="-27"/>
      <pair l="afii10028" r="afii10080" v="-102"/>
      <pair l="afii10028" r="afii10083" v="-51"/>
      <pair l="afii10028" r="afii10084" v="-51"/>
      <pair l="afii10028" r="afii10085" v="-51"/>
      <pair l="afii10028" r="afii10095" v="-27"/>
      <pair l="afii10028" r="cyrEcyrbreve" v="25"/>
      <pair l="afii10028" r="cyrEmacron" v="25"/>
      <pair l="afii10028" r="cyrObarcyrbreve" v="-51"/>
      <pair l="afii10028" r="cyrObardieresiscyrbreve" v="-51"/>
      <pair l="afii10028" r="cyrOcyrbreve" v="-51"/>
      <pair l="afii10028" r="cyrOdotaccent" v="-51"/>
      <pair l="afii10028" r="cyrOmacron" v="-51"/>
      <pair l="afii10029" r="afii10038" v="-27"/>
      <pair l="afii10029" r="afii10066" v="-27"/>
      <pair l="afii10029" r="afii10070" v="-14"/>
      <pair l="afii10029" r="afii10080" v="-51"/>
      <pair l="afii10029" r="afii10085" v="-51"/>
      <pair l="afii10030" r="afii10038" v="-27"/>
      <pair l="afii10030" r="afii10070" v="-27"/>
      <pair l="afii10030" r="afii10080" v="-27"/>
      <pair l="afii10030" r="afii10085" v="-27"/>
      <pair l="afii10030" r="afii10089" v="-78"/>
      <pair l="afii10030" r="afii10095" v="25"/>
      <pair l="afii10032" r="afii10017" v="-102"/>
      <pair l="afii10032" r="afii10021" v="-102"/>
      <pair l="afii10032" r="afii10024" v="-51"/>
      <pair l="afii10032" r="afii10029" v="-102"/>
      <pair l="afii10032" r="afii10035" v="25"/>
      <pair l="afii10032" r="afii10037" v="-115"/>
      <pair l="afii10032" r="afii10038" v="25"/>
      <pair l="afii10032" r="afii10039" v="-160"/>
      <pair l="afii10032" r="afii10041" v="-51"/>
      <pair l="afii10032" r="afii10049" v="-102"/>
      <pair l="afii10032" r="afii10069" v="-27"/>
      <pair l="afii10032" r="afii10072" v="25"/>
      <pair l="afii10032" r="cyrAmacron" v="-102"/>
      <pair l="afii10032" r="cyrEldesc" v="-102"/>
      <pair l="afii10034" r="Ezhcarelcaron" v="25"/>
      <pair l="afii10034" r="afii10017" v="-262"/>
      <pair l="afii10034" r="afii10021" v="-219"/>
      <pair l="afii10034" r="afii10024" v="-72"/>
      <pair l="afii10034" r="afii10025" v="25"/>
      <pair l="afii10034" r="afii10029" v="-307"/>
      <pair l="afii10034" r="afii10030" v="-39"/>
      <pair l="afii10034" r="afii10032" v="-12"/>
      <pair l="afii10034" r="afii10035" v="25"/>
      <pair l="afii10034" r="afii10036" v="25"/>
      <pair l="afii10034" r="afii10037" v="-51"/>
      <pair l="afii10034" r="afii10038" v="-35"/>
      <pair l="afii10034" r="afii10039" v="-109"/>
      <pair l="afii10034" r="afii10049" v="-102"/>
      <pair l="afii10034" r="afii10069" v="-78"/>
      <pair l="afii10034" r="afii10070" v="-27"/>
      <pair l="afii10034" r="afii10080" v="-51"/>
      <pair l="afii10034" r="afii10095" v="51"/>
      <pair l="afii10034" r="afii10097" v="-53"/>
      <pair l="afii10034" r="colon" v="76"/>
      <pair l="afii10034" r="comma" v="-256"/>
      <pair l="afii10034" r="cyrAmacron" v="-262"/>
      <pair l="afii10034" r="cyrEldesc" v="-307"/>
      <pair l="afii10034" r="cyrObarcyrbreve" v="-12"/>
      <pair l="afii10034" r="cyrObardieresiscyrbreve" v="-12"/>
      <pair l="afii10034" r="cyrOcyrbreve" v="-12"/>
      <pair l="afii10034" r="cyrOdotaccent" v="-12"/>
      <pair l="afii10034" r="cyrOmacron" v="-12"/>
      <pair l="afii10034" r="cyrZecaron" v="25"/>
      <pair l="afii10034" r="guillemotright" v="51"/>
      <pair l="afii10034" r="period" v="-256"/>
      <pair l="afii10034" r="semicolon" v="76"/>
      <pair l="afii10035" r="afii10017" v="-102"/>
      <pair l="afii10035" r="afii10021" v="-102"/>
      <pair l="afii10035" r="afii10029" v="-51"/>
      <pair l="afii10035" r="afii10037" v="-27"/>
      <pair l="afii10035" r="afii10039" v="-53"/>
      <pair l="afii10035" r="afii10041" v="-51"/>
      <pair l="afii10035" r="afii10044" v="-27"/>
      <pair l="afii10035" r="afii10066" v="25"/>
      <pair l="afii10035" r="afii10070" v="25"/>
      <pair l="afii10035" r="afii10083" v="25"/>
      <pair l="afii10035" r="afii10084" v="-27"/>
      <pair l="afii10035" r="afii10085" v="-51"/>
      <pair l="afii10035" r="afii10089" v="-27"/>
      <pair l="afii10035" r="afii10095" v="25"/>
      <pair l="afii10035" r="cyrAmacron" v="-102"/>
      <pair l="afii10035" r="cyrEldesc" v="-51"/>
      <pair l="afii10036" r="afii10017" v="-102"/>
      <pair l="afii10036" r="afii10021" v="-129"/>
      <pair l="afii10036" r="afii10029" v="-102"/>
      <pair l="afii10036" r="afii10030" v="-27"/>
      <pair l="afii10036" r="afii10032" v="-27"/>
      <pair l="afii10036" r="afii10038" v="-45"/>
      <pair l="afii10036" r="afii10049" v="-78"/>
      <pair l="afii10036" r="afii10065" v="-51"/>
      <pair l="afii10036" r="afii10067" v="-102"/>
      <pair l="afii10036" r="afii10070" v="-78"/>
      <pair l="afii10036" r="afii10074" v="-51"/>
      <pair l="afii10036" r="afii10076" v="-51"/>
      <pair l="afii10036" r="afii10077" v="-102"/>
      <pair l="afii10036" r="afii10078" v="-51"/>
      <pair l="afii10036" r="afii10080" v="-92"/>
      <pair l="afii10036" r="afii10081" v="-78"/>
      <pair l="afii10036" r="afii10082" v="-78"/>
      <pair l="afii10036" r="afii10083" v="-78"/>
      <pair l="afii10036" r="afii10085" v="-102"/>
      <pair l="afii10036" r="afii10087" v="-102"/>
      <pair l="afii10036" r="afii10091" v="-78"/>
      <pair l="afii10036" r="afii10093" v="-102"/>
      <pair l="afii10036" r="afii10094" v="-129"/>
      <pair l="afii10036" r="afii10096" v="-102"/>
      <pair l="afii10036" r="afii10097" v="-78"/>
      <pair l="afii10036" r="comma" v="-205"/>
      <pair l="afii10036" r="cyrAmacron" v="-102"/>
      <pair l="afii10036" r="cyrEldesc" v="-102"/>
      <pair l="afii10036" r="cyrObarcyrbreve" v="-27"/>
      <pair l="afii10036" r="cyrObardieresiscyrbreve" v="-27"/>
      <pair l="afii10036" r="cyrOcyrbreve" v="-27"/>
      <pair l="afii10036" r="cyrOdotaccent" v="-27"/>
      <pair l="afii10036" r="cyrOmacron" v="-27"/>
      <pair l="afii10036" r="guillemotleft" v="-102"/>
      <pair l="afii10036" r="guillemotright" v="-53"/>
      <pair l="afii10036" r="period" v="-205"/>
      <pair l="afii10037" r="Ezhcarelcaron" v="-27"/>
      <pair l="afii10037" r="afii10017" v="-391"/>
      <pair l="afii10037" r="afii10021" v="-207"/>
      <pair l="afii10037" r="afii10025" v="-27"/>
      <pair l="afii10037" r="afii10029" v="-270"/>
      <pair l="afii10037" r="afii10032" v="-102"/>
      <pair l="afii10037" r="afii10038" v="-152"/>
      <pair l="afii10037" r="afii10047" v="-27"/>
      <pair l="afii10037" r="afii10049" v="-180"/>
      <pair l="afii10037" r="afii10066" v="-78"/>
      <pair l="afii10037" r="afii10067" v="-168"/>
      <pair l="afii10037" r="afii10068" v="-168"/>
      <pair l="afii10037" r="afii10069" v="-197"/>
      <pair l="afii10037" r="afii10070" v="-221"/>
      <pair l="afii10037" r="afii10072" v="-129"/>
      <pair l="afii10037" r="afii10073" v="-168"/>
      <pair l="afii10037" r="afii10074" v="-168"/>
      <pair l="afii10037" r="afii10075" v="-78"/>
      <pair l="afii10037" r="afii10076" v="-168"/>
      <pair l="afii10037" r="afii10077" v="-231"/>
      <pair l="afii10037" r="afii10078" v="-168"/>
      <pair l="afii10037" r="afii10079" v="-168"/>
      <pair l="afii10037" r="afii10080" v="-221"/>
      <pair l="afii10037" r="afii10081" v="-168"/>
      <pair l="afii10037" r="afii10082" v="-168"/>
      <pair l="afii10037" r="afii10083" v="-221"/>
      <pair l="afii10037" r="afii10087" v="-168"/>
      <pair l="afii10037" r="afii10088" v="-168"/>
      <pair l="afii10037" r="afii10090" v="-168"/>
      <pair l="afii10037" r="afii10091" v="-168"/>
      <pair l="afii10037" r="afii10096" v="-168"/>
      <pair l="afii10037" r="afii10097" v="-197"/>
      <pair l="afii10037" r="colon" v="-78"/>
      <pair l="afii10037" r="comma" v="-334"/>
      <pair l="afii10037" r="cyrAmacron" v="-391"/>
      <pair l="afii10037" r="cyrEcyrbreve" v="-27"/>
      <pair l="afii10037" r="cyrEldesc" v="-270"/>
      <pair l="afii10037" r="cyrEmacron" v="-27"/>
      <pair l="afii10037" r="cyrObarcyrbreve" v="-102"/>
      <pair l="afii10037" r="cyrObardieresiscyrbreve" v="-102"/>
      <pair l="afii10037" r="cyrOcyrbreve" v="-102"/>
      <pair l="afii10037" r="cyrOdotaccent" v="-102"/>
      <pair l="afii10037" r="cyrOmacron" v="-102"/>
      <pair l="afii10037" r="cyrZecaron" v="-27"/>
      <pair l="afii10037" r="emdash" v="-51"/>
      <pair l="afii10037" r="guillemotleft" v="-180"/>
      <pair l="afii10037" r="guillemotright" v="-129"/>
      <pair l="afii10037" r="period" v="-334"/>
      <pair l="afii10037" r="semicolon" v="-78"/>
      <pair l="afii10038" r="afii10017" v="-129"/>
      <pair l="afii10038" r="afii10021" v="-180"/>
      <pair l="afii10038" r="afii10029" v="-154"/>
      <pair l="afii10038" r="afii10032" v="25"/>
      <pair l="afii10038" r="afii10036" v="-51"/>
      <pair l="afii10038" r="afii10037" v="-156"/>
      <pair l="afii10038" r="afii10041" v="-129"/>
      <pair l="afii10038" r="afii10049" v="-102"/>
      <pair l="afii10038" r="afii10077" v="-102"/>
      <pair l="afii10038" r="cyrAmacron" v="-129"/>
      <pair l="afii10038" r="cyrEldesc" v="-154"/>
      <pair l="afii10038" r="cyrObarcyrbreve" v="25"/>
      <pair l="afii10038" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="afii10038" r="cyrOcyrbreve" v="25"/>
      <pair l="afii10038" r="cyrOdotaccent" v="25"/>
      <pair l="afii10038" r="cyrOmacron" v="25"/>
      <pair l="afii10039" r="Ezhcarelcaron" v="-51"/>
      <pair l="afii10039" r="afii10025" v="-51"/>
      <pair l="afii10039" r="afii10032" v="-104"/>
      <pair l="afii10039" r="afii10035" v="-78"/>
      <pair l="afii10039" r="afii10038" v="-143"/>
      <pair l="afii10039" r="afii10047" v="-27"/>
      <pair l="afii10039" r="afii10080" v="-63"/>
      <pair l="afii10039" r="afii10085" v="-78"/>
      <pair l="afii10039" r="cyrEcyrbreve" v="-27"/>
      <pair l="afii10039" r="cyrEmacron" v="-27"/>
      <pair l="afii10039" r="cyrObarcyrbreve" v="-104"/>
      <pair l="afii10039" r="cyrObardieresiscyrbreve" v="-104"/>
      <pair l="afii10039" r="cyrOcyrbreve" v="-104"/>
      <pair l="afii10039" r="cyrOdotaccent" v="-104"/>
      <pair l="afii10039" r="cyrOmacron" v="-104"/>
      <pair l="afii10039" r="cyrZecaron" v="-51"/>
      <pair l="afii10040" r="afii10032" v="-27"/>
      <pair l="afii10040" r="cyrObarcyrbreve" v="-27"/>
      <pair l="afii10040" r="cyrObardieresiscyrbreve" v="-27"/>
      <pair l="afii10040" r="cyrOcyrbreve" v="-27"/>
      <pair l="afii10040" r="cyrOdotaccent" v="-27"/>
      <pair l="afii10040" r="cyrOmacron" v="-27"/>
      <pair l="afii10043" r="afii10085" v="25"/>
      <pair l="afii10044" r="afii10049" v="-123"/>
      <pair l="afii10044" r="quoteright" v="-129"/>
      <pair l="afii10046" r="Ezhcarelcaron" v="-78"/>
      <pair l="afii10046" r="afii10017" v="-88"/>
      <pair l="afii10046" r="afii10021" v="-150"/>
      <pair l="afii10046" r="afii10024" v="-129"/>
      <pair l="afii10046" r="afii10025" v="-78"/>
      <pair l="afii10046" r="afii10029" v="-82"/>
      <pair l="afii10046" r="afii10030" v="-82"/>
      <pair l="afii10046" r="afii10032" v="-51"/>
      <pair l="afii10046" r="afii10035" v="-51"/>
      <pair l="afii10046" r="afii10036" v="-154"/>
      <pair l="afii10046" r="afii10039" v="-147"/>
      <pair l="afii10046" r="afii10041" v="-229"/>
      <pair l="afii10046" r="afii10047" v="-27"/>
      <pair l="afii10046" r="afii10049" v="-109"/>
      <pair l="afii10046" r="cyrAmacron" v="-88"/>
      <pair l="afii10046" r="cyrEcyrbreve" v="-27"/>
      <pair l="afii10046" r="cyrEldesc" v="-82"/>
      <pair l="afii10046" r="cyrEmacron" v="-27"/>
      <pair l="afii10046" r="cyrObarcyrbreve" v="-51"/>
      <pair l="afii10046" r="cyrObardieresiscyrbreve" v="-51"/>
      <pair l="afii10046" r="cyrOcyrbreve" v="-51"/>
      <pair l="afii10046" r="cyrOdotaccent" v="-51"/>
      <pair l="afii10046" r="cyrOmacron" v="-51"/>
      <pair l="afii10046" r="cyrZecaron" v="-78"/>
      <pair l="afii10046" r="quoteright" v="-129"/>
      <pair l="afii10047" r="Ezhcarelcaron" v="25"/>
      <pair l="afii10047" r="afii10021" v="-172"/>
      <pair l="afii10047" r="afii10024" v="-51"/>
      <pair l="afii10047" r="afii10025" v="25"/>
      <pair l="afii10047" r="afii10029" v="-129"/>
      <pair l="afii10047" r="afii10032" v="25"/>
      <pair l="afii10047" r="afii10038" v="10"/>
      <pair l="afii10047" r="afii10039" v="-104"/>
      <pair l="afii10047" r="afii10049" v="-150"/>
      <pair l="afii10047" r="afii10069" v="-51"/>
      <pair l="afii10047" r="afii10077" v="-27"/>
      <pair l="afii10047" r="cyrEldesc" v="-129"/>
      <pair l="afii10047" r="cyrObarcyrbreve" v="25"/>
      <pair l="afii10047" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="afii10047" r="cyrOcyrbreve" v="25"/>
      <pair l="afii10047" r="cyrOdotaccent" v="25"/>
      <pair l="afii10047" r="cyrOmacron" v="25"/>
      <pair l="afii10047" r="cyrZecaron" v="25"/>
      <pair l="afii10048" r="afii10017" v="-78"/>
      <pair l="afii10048" r="afii10021" v="-154"/>
      <pair l="afii10048" r="afii10024" v="-143"/>
      <pair l="afii10048" r="afii10029" v="-102"/>
      <pair l="afii10048" r="afii10032" v="25"/>
      <pair l="afii10048" r="afii10036" v="-51"/>
      <pair l="afii10048" r="afii10039" v="-186"/>
      <pair l="afii10048" r="afii10041" v="-78"/>
      <pair l="afii10048" r="afii10069" v="-51"/>
      <pair l="afii10048" r="afii10072" v="25"/>
      <pair l="afii10048" r="afii10077" v="-27"/>
      <pair l="afii10048" r="cyrAmacron" v="-78"/>
      <pair l="afii10048" r="cyrEldesc" v="-102"/>
      <pair l="afii10048" r="cyrObarcyrbreve" v="25"/>
      <pair l="afii10048" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="afii10048" r="cyrOcyrbreve" v="25"/>
      <pair l="afii10048" r="cyrOdotaccent" v="25"/>
      <pair l="afii10048" r="cyrOmacron" v="25"/>
      <pair l="afii10050" r="colon" v="-51"/>
      <pair l="afii10050" r="comma" v="-203"/>
      <pair l="afii10050" r="emdash" v="-51"/>
      <pair l="afii10050" r="guillemotleft" v="-180"/>
      <pair l="afii10050" r="guillemotright" v="-78"/>
      <pair l="afii10050" r="period" v="-203"/>
      <pair l="afii10050" r="semicolon" v="-51"/>
      <pair l="afii10052" r="comma" v="-283"/>
      <pair l="afii10052" r="emdash" v="-51"/>
      <pair l="afii10052" r="guillemotleft" v="-129"/>
      <pair l="afii10052" r="guillemotright" v="-51"/>
      <pair l="afii10052" r="period" v="-283"/>
      <pair l="afii10058" r="quoteright" v="-102"/>
      <pair l="afii10059" r="quoteright" v="-102"/>
      <pair l="afii10065" r="afii10077" v="18"/>
      <pair l="afii10065" r="afii10081" v="-27"/>
      <pair l="afii10065" r="afii10084" v="-53"/>
      <pair l="afii10065" r="afii10085" v="-104"/>
      <pair l="afii10065" r="afii10089" v="-82"/>
      <pair l="afii10066" r="afii10069" v="-51"/>
      <pair l="afii10066" r="afii10070" v="-27"/>
      <pair l="afii10066" r="afii10072" v="-51"/>
      <pair l="afii10066" r="afii10077" v="-51"/>
      <pair l="afii10066" r="afii10078" v="-41"/>
      <pair l="afii10066" r="afii10080" v="-27"/>
      <pair l="afii10066" r="afii10085" v="-78"/>
      <pair l="afii10066" r="afii10087" v="-78"/>
      <pair l="afii10066" r="afii10089" v="-78"/>
      <pair l="afii10066" r="afii10092" v="-51"/>
      <pair l="afii10066" r="afii10097" v="-51"/>
      <pair l="afii10067" r="afii10066" v="-27"/>
      <pair l="afii10067" r="afii10069" v="-51"/>
      <pair l="afii10067" r="afii10072" v="-59"/>
      <pair l="afii10067" r="afii10077" v="-27"/>
      <pair l="afii10067" r="afii10078" v="-35"/>
      <pair l="afii10067" r="afii10080" v="-14"/>
      <pair l="afii10067" r="afii10083" v="25"/>
      <pair l="afii10067" r="afii10084" v="-51"/>
      <pair l="afii10067" r="afii10085" v="-70"/>
      <pair l="afii10067" r="afii10086" v="-12"/>
      <pair l="afii10067" r="afii10089" v="-78"/>
      <pair l="afii10067" r="afii10092" v="-51"/>
      <pair l="afii10067" r="afii10097" v="-27"/>
      <pair l="afii10068" r="afii10069" v="-102"/>
      <pair l="afii10068" r="afii10070" v="-27"/>
      <pair l="afii10068" r="afii10077" v="-104"/>
      <pair l="afii10068" r="afii10078" v="-27"/>
      <pair l="afii10068" r="afii10080" v="-51"/>
      <pair l="afii10068" r="afii10097" v="-51"/>
      <pair l="afii10068" r="comma" v="-231"/>
      <pair l="afii10068" r="period" v="-231"/>
      <pair l="afii10069" r="afii10073" v="25"/>
      <pair l="afii10069" r="afii10095" v="51"/>
      <pair l="afii10070" r="afii10069" v="-27"/>
      <pair l="afii10070" r="afii10083" v="25"/>
      <pair l="afii10070" r="afii10085" v="-51"/>
      <pair l="afii10070" r="afii10086" v="25"/>
      <pair l="afii10070" r="afii10087" v="-41"/>
      <pair l="afii10070" r="afii10089" v="-51"/>
      <pair l="afii10072" r="afii10066" v="-27"/>
      <pair l="afii10072" r="afii10070" v="-27"/>
      <pair l="afii10072" r="afii10073" v="25"/>
      <pair l="afii10072" r="afii10080" v="-51"/>
      <pair l="afii10072" r="afii10083" v="-37"/>
      <pair l="afii10072" r="afii10089" v="-51"/>
      <pair l="afii10072" r="afii10092" v="-27"/>
      <pair l="afii10073" r="afii10069" v="-37"/>
      <pair l="afii10073" r="afii10072" v="-37"/>
      <pair l="afii10073" r="afii10073" v="25"/>
      <pair l="afii10073" r="afii10078" v="-29"/>
      <pair l="afii10073" r="afii10080" v="-12"/>
      <pair l="afii10073" r="afii10085" v="-43"/>
      <pair l="afii10073" r="afii10086" v="-14"/>
      <pair l="afii10073" r="afii10089" v="-41"/>
      <pair l="afii10073" r="afii10092" v="-35"/>
      <pair l="afii10076" r="afii10065" v="-31"/>
      <pair l="afii10076" r="afii10066" v="-51"/>
      <pair l="afii10076" r="afii10070" v="-51"/>
      <pair l="afii10076" r="afii10073" v="-27"/>
      <pair l="afii10076" r="afii10080" v="-27"/>
      <pair l="afii10076" r="afii10083" v="-51"/>
      <pair l="afii10076" r="afii10085" v="-29"/>
      <pair l="afii10076" r="afii10086" v="-51"/>
      <pair l="afii10076" r="afii10089" v="-80"/>
      <pair l="afii10076" r="afii10095" v="-27"/>
      <pair l="afii10076" r="guillemotleft" v="-53"/>
      <pair l="afii10078" r="afii10065" v="-14"/>
      <pair l="afii10078" r="afii10080" v="-27"/>
      <pair l="afii10078" r="afii10095" v="25"/>
      <pair l="afii10080" r="afii10067" v="-51"/>
      <pair l="afii10080" r="afii10069" v="-59"/>
      <pair l="afii10080" r="afii10072" v="-51"/>
      <pair l="afii10080" r="afii10077" v="-27"/>
      <pair l="afii10080" r="afii10078" v="-39"/>
      <pair l="afii10080" r="afii10084" v="-27"/>
      <pair l="afii10080" r="afii10085" v="-78"/>
      <pair l="afii10080" r="afii10087" v="-51"/>
      <pair l="afii10080" r="afii10089" v="-53"/>
      <pair l="afii10080" r="afii10095" v="25"/>
      <pair l="afii10080" r="afii10097" v="-39"/>
      <pair l="afii10082" r="afii10069" v="-27"/>
      <pair l="afii10082" r="afii10073" v="25"/>
      <pair l="afii10082" r="afii10077" v="-51"/>
      <pair l="afii10082" r="afii10078" v="-31"/>
      <pair l="afii10082" r="afii10084" v="-27"/>
      <pair l="afii10082" r="afii10085" v="-27"/>
      <pair l="afii10082" r="afii10089" v="-51"/>
      <pair l="afii10083" r="afii10065" v="25"/>
      <pair l="afii10083" r="afii10066" v="25"/>
      <pair l="afii10083" r="afii10070" v="25"/>
      <pair l="afii10083" r="afii10073" v="51"/>
      <pair l="afii10083" r="afii10085" v="-27"/>
      <pair l="afii10083" r="afii10086" v="-27"/>
      <pair l="afii10083" r="afii10087" v="-27"/>
      <pair l="afii10083" r="afii10089" v="-41"/>
      <pair l="afii10083" r="afii10095" v="25"/>
      <pair l="afii10084" r="afii10065" v="25"/>
      <pair l="afii10084" r="afii10069" v="-27"/>
      <pair l="afii10084" r="afii10072" v="25"/>
      <pair l="afii10084" r="afii10073" v="25"/>
      <pair l="afii10084" r="afii10077" v="-51"/>
      <pair l="afii10084" r="afii10080" v="-27"/>
      <pair l="afii10084" r="afii10082" v="25"/>
      <pair l="afii10084" r="afii10083" v="25"/>
      <pair l="afii10084" r="afii10085" v="-27"/>
      <pair l="afii10084" r="afii10095" v="51"/>
      <pair l="afii10084" r="afii10097" v="-27"/>
      <pair l="afii10084" r="comma" v="-154"/>
      <pair l="afii10084" r="period" v="-154"/>
      <pair l="afii10085" r="afii10065" v="-27"/>
      <pair l="afii10085" r="afii10066" v="-27"/>
      <pair l="afii10085" r="afii10069" v="-129"/>
      <pair l="afii10085" r="afii10070" v="-63"/>
      <pair l="afii10085" r="afii10072" v="-27"/>
      <pair l="afii10085" r="afii10077" v="-51"/>
      <pair l="afii10085" r="afii10078" v="-27"/>
      <pair l="afii10085" r="afii10080" v="-51"/>
      <pair l="afii10085" r="afii10083" v="-63"/>
      <pair l="afii10085" r="afii10086" v="-51"/>
      <pair l="afii10085" r="afii10097" v="-51"/>
      <pair l="afii10085" r="colon" v="-27"/>
      <pair l="afii10085" r="comma" v="-205"/>
      <pair l="afii10085" r="guillemotright" v="51"/>
      <pair l="afii10085" r="period" v="-205"/>
      <pair l="afii10085" r="semicolon" v="-27"/>
      <pair l="afii10086" r="afii10069" v="-51"/>
      <pair l="afii10086" r="afii10077" v="-51"/>
      <pair l="afii10086" r="afii10085" v="-51"/>
      <pair l="afii10086" r="afii10089" v="-55"/>
      <pair l="afii10086" r="afii10097" v="-27"/>
      <pair l="afii10087" r="afii10065" v="-27"/>
      <pair l="afii10087" r="afii10066" v="-78"/>
      <pair l="afii10087" r="afii10070" v="-51"/>
      <pair l="afii10087" r="afii10073" v="-27"/>
      <pair l="afii10087" r="afii10080" v="-78"/>
      <pair l="afii10087" r="afii10083" v="-59"/>
      <pair l="afii10087" r="afii10084" v="-51"/>
      <pair l="afii10087" r="afii10085" v="-78"/>
      <pair l="afii10087" r="afii10086" v="-78"/>
      <pair l="afii10087" r="afii10089" v="-102"/>
      <pair l="afii10087" r="afii10092" v="-78"/>
      <pair l="afii10087" r="afii10095" v="-27"/>
      <pair l="afii10088" r="afii10073" v="25"/>
      <pair l="afii10094" r="afii10084" v="-78"/>
      <pair l="afii10094" r="afii10089" v="-156"/>
      <pair l="afii10095" r="afii10069" v="-106"/>
      <pair l="afii10095" r="afii10072" v="-115"/>
      <pair l="afii10095" r="afii10077" v="-37"/>
      <pair l="afii10095" r="afii10078" v="-18"/>
      <pair l="afii10095" r="afii10086" v="-12"/>
      <pair l="afii10095" r="afii10087" v="-80"/>
      <pair l="afii10095" r="afii10097" v="-27"/>
      <pair l="afii10096" r="afii10069" v="-117"/>
      <pair l="afii10096" r="afii10072" v="-51"/>
      <pair l="afii10096" r="afii10077" v="-51"/>
      <pair l="afii10096" r="afii10078" v="-27"/>
      <pair l="afii10096" r="afii10080" v="25"/>
      <pair l="afii10096" r="afii10084" v="-27"/>
      <pair l="afii10096" r="afii10086" v="-12"/>
      <pair l="afii10096" r="afii10087" v="-80"/>
      <pair l="afii10096" r="afii10089" v="-78"/>
      <pair l="afii10110" r="comma" v="-205"/>
      <pair l="afii10110" r="guillemotright" v="25"/>
      <pair l="afii10110" r="period" v="-205"/>
      <pair l="cyrAmacron" r="Ezhcarelcaron" v="-51"/>
      <pair l="cyrAmacron" r="afii10025" v="-51"/>
      <pair l="cyrAmacron" r="afii10032" v="-102"/>
      <pair l="cyrAmacron" r="afii10033" v="-51"/>
      <pair l="cyrAmacron" r="afii10035" v="-102"/>
      <pair l="cyrAmacron" r="afii10036" v="-180"/>
      <pair l="cyrAmacron" r="afii10037" v="-180"/>
      <pair l="cyrAmacron" r="afii10038" v="-129"/>
      <pair l="cyrAmacron" r="afii10041" v="-311"/>
      <pair l="cyrAmacron" r="afii10047" v="-51"/>
      <pair l="cyrAmacron" r="afii10065" v="-27"/>
      <pair l="cyrAmacron" r="afii10066" v="-104"/>
      <pair l="cyrAmacron" r="afii10070" v="-51"/>
      <pair l="cyrAmacron" r="afii10080" v="-104"/>
      <pair l="cyrAmacron" r="afii10083" v="-51"/>
      <pair l="cyrAmacron" r="afii10084" v="-102"/>
      <pair l="cyrAmacron" r="afii10085" v="-102"/>
      <pair l="cyrAmacron" r="afii10086" v="-78"/>
      <pair l="cyrAmacron" r="cyrEcyrbreve" v="-51"/>
      <pair l="cyrAmacron" r="cyrEmacron" v="-51"/>
      <pair l="cyrAmacron" r="cyrObarcyrbreve" v="-102"/>
      <pair l="cyrAmacron" r="cyrObardieresiscyrbreve" v="-102"/>
      <pair l="cyrAmacron" r="cyrOcyrbreve" v="-102"/>
      <pair l="cyrAmacron" r="cyrOdotaccent" v="-102"/>
      <pair l="cyrAmacron" r="cyrOmacron" v="-102"/>
      <pair l="cyrAmacron" r="cyrZecaron" v="-51"/>
      <pair l="cyrAmacron" r="quoteright" v="-180"/>
      <pair l="cyrEcyrbreve" r="Ezhcarelcaron" v="25"/>
      <pair l="cyrEcyrbreve" r="afii10021" v="-172"/>
      <pair l="cyrEcyrbreve" r="afii10024" v="-51"/>
      <pair l="cyrEcyrbreve" r="afii10025" v="25"/>
      <pair l="cyrEcyrbreve" r="afii10029" v="-129"/>
      <pair l="cyrEcyrbreve" r="afii10032" v="25"/>
      <pair l="cyrEcyrbreve" r="afii10038" v="10"/>
      <pair l="cyrEcyrbreve" r="afii10039" v="-104"/>
      <pair l="cyrEcyrbreve" r="afii10049" v="-150"/>
      <pair l="cyrEcyrbreve" r="afii10069" v="-51"/>
      <pair l="cyrEcyrbreve" r="afii10077" v="-27"/>
      <pair l="cyrEcyrbreve" r="cyrEldesc" v="-129"/>
      <pair l="cyrEcyrbreve" r="cyrObarcyrbreve" v="25"/>
      <pair l="cyrEcyrbreve" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="cyrEcyrbreve" r="cyrOcyrbreve" v="25"/>
      <pair l="cyrEcyrbreve" r="cyrOdotaccent" v="25"/>
      <pair l="cyrEcyrbreve" r="cyrOmacron" v="25"/>
      <pair l="cyrEcyrbreve" r="cyrZecaron" v="25"/>
      <pair l="cyrEldesc" r="afii10038" v="-27"/>
      <pair l="cyrEldesc" r="afii10066" v="-27"/>
      <pair l="cyrEldesc" r="afii10070" v="-14"/>
      <pair l="cyrEldesc" r="afii10080" v="-51"/>
      <pair l="cyrEldesc" r="afii10085" v="-51"/>
      <pair l="cyrEmacron" r="Ezhcarelcaron" v="25"/>
      <pair l="cyrEmacron" r="afii10021" v="-172"/>
      <pair l="cyrEmacron" r="afii10024" v="-51"/>
      <pair l="cyrEmacron" r="afii10025" v="25"/>
      <pair l="cyrEmacron" r="afii10029" v="-129"/>
      <pair l="cyrEmacron" r="afii10032" v="25"/>
      <pair l="cyrEmacron" r="afii10038" v="10"/>
      <pair l="cyrEmacron" r="afii10039" v="-104"/>
      <pair l="cyrEmacron" r="afii10049" v="-150"/>
      <pair l="cyrEmacron" r="afii10069" v="-51"/>
      <pair l="cyrEmacron" r="afii10077" v="-27"/>
      <pair l="cyrEmacron" r="cyrEldesc" v="-129"/>
      <pair l="cyrEmacron" r="cyrObarcyrbreve" v="25"/>
      <pair l="cyrEmacron" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="cyrEmacron" r="cyrOcyrbreve" v="25"/>
      <pair l="cyrEmacron" r="cyrOdotaccent" v="25"/>
      <pair l="cyrEmacron" r="cyrOmacron" v="25"/>
      <pair l="cyrEmacron" r="cyrZecaron" v="25"/>
      <pair l="cyrIedieresiscyrbreve" r="Ezhcarelcaron" v="25"/>
      <pair l="cyrIedieresiscyrbreve" r="afii10025" v="25"/>
      <pair l="cyrIedieresiscyrbreve" r="afii10029" v="-27"/>
      <pair l="cyrIedieresiscyrbreve" r="cyrEldesc" v="-27"/>
      <pair l="cyrIedieresiscyrbreve" r="cyrZecaron" v="25"/>
      <pair l="cyrIedieresismacron" r="Ezhcarelcaron" v="25"/>
      <pair l="cyrIedieresismacron" r="afii10025" v="25"/>
      <pair l="cyrIedieresismacron" r="afii10029" v="-27"/>
      <pair l="cyrIedieresismacron" r="cyrEldesc" v="-27"/>
      <pair l="cyrIedieresismacron" r="cyrZecaron" v="25"/>
      <pair l="cyrIemacron" r="Ezhcarelcaron" v="25"/>
      <pair l="cyrIemacron" r="afii10025" v="25"/>
      <pair l="cyrIemacron" r="afii10029" v="-27"/>
      <pair l="cyrIemacron" r="cyrEldesc" v="-27"/>
      <pair l="cyrIemacron" r="cyrZecaron" v="25"/>
      <pair l="cyrObarcyrbreve" r="afii10017" v="-102"/>
      <pair l="cyrObarcyrbreve" r="afii10021" v="-102"/>
      <pair l="cyrObarcyrbreve" r="afii10024" v="-51"/>
      <pair l="cyrObarcyrbreve" r="afii10029" v="-102"/>
      <pair l="cyrObarcyrbreve" r="afii10035" v="25"/>
      <pair l="cyrObarcyrbreve" r="afii10037" v="-115"/>
      <pair l="cyrObarcyrbreve" r="afii10038" v="25"/>
      <pair l="cyrObarcyrbreve" r="afii10039" v="-160"/>
      <pair l="cyrObarcyrbreve" r="afii10041" v="-51"/>
      <pair l="cyrObarcyrbreve" r="afii10049" v="-102"/>
      <pair l="cyrObarcyrbreve" r="afii10069" v="-27"/>
      <pair l="cyrObarcyrbreve" r="afii10072" v="25"/>
      <pair l="cyrObarcyrbreve" r="cyrAmacron" v="-102"/>
      <pair l="cyrObarcyrbreve" r="cyrEldesc" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10017" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10021" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10024" v="-51"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10029" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10035" v="25"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10037" v="-115"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10038" v="25"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10039" v="-160"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10041" v="-51"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10049" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10069" v="-27"/>
      <pair l="cyrObardieresiscyrbreve" r="afii10072" v="25"/>
      <pair l="cyrObardieresiscyrbreve" r="cyrAmacron" v="-102"/>
      <pair l="cyrObardieresiscyrbreve" r="cyrEldesc" v="-102"/>
      <pair l="cyrOcyrbreve" r="afii10017" v="-102"/>
      <pair l="cyrOcyrbreve" r="afii10021" v="-102"/>
      <pair l="cyrOcyrbreve" r="afii10024" v="-51"/>
      <pair l="cyrOcyrbreve" r="afii10029" v="-102"/>
      <pair l="cyrOcyrbreve" r="afii10035" v="25"/>
      <pair l="cyrOcyrbreve" r="afii10037" v="-115"/>
      <pair l="cyrOcyrbreve" r="afii10038" v="25"/>
      <pair l="cyrOcyrbreve" r="afii10039" v="-160"/>
      <pair l="cyrOcyrbreve" r="afii10041" v="-51"/>
      <pair l="cyrOcyrbreve" r="afii10049" v="-102"/>
      <pair l="cyrOcyrbreve" r="afii10069" v="-27"/>
      <pair l="cyrOcyrbreve" r="afii10072" v="25"/>
      <pair l="cyrOcyrbreve" r="cyrAmacron" v="-102"/>
      <pair l="cyrOcyrbreve" r="cyrEldesc" v="-102"/>
      <pair l="cyrOdotaccent" r="afii10017" v="-102"/>
      <pair l="cyrOdotaccent" r="afii10021" v="-102"/>
      <pair l="cyrOdotaccent" r="afii10024" v="-51"/>
      <pair l="cyrOdotaccent" r="afii10029" v="-102"/>
      <pair l="cyrOdotaccent" r="afii10035" v="25"/>
      <pair l="cyrOdotaccent" r="afii10037" v="-115"/>
      <pair l="cyrOdotaccent" r="afii10038" v="25"/>
      <pair l="cyrOdotaccent" r="afii10039" v="-160"/>
      <pair l="cyrOdotaccent" r="afii10041" v="-51"/>
      <pair l="cyrOdotaccent" r="afii10049" v="-102"/>
      <pair l="cyrOdotaccent" r="afii10069" v="-27"/>
      <pair l="cyrOdotaccent" r="afii10072" v="25"/>
      <pair l="cyrOdotaccent" r="cyrAmacron" v="-102"/>
      <pair l="cyrOdotaccent" r="cyrEldesc" v="-102"/>
      <pair l="cyrOmacron" r="afii10017" v="-102"/>
      <pair l="cyrOmacron" r="afii10021" v="-102"/>
      <pair l="cyrOmacron" r="afii10024" v="-51"/>
      <pair l="cyrOmacron" r="afii10029" v="-102"/>
      <pair l="cyrOmacron" r="afii10035" v="25"/>
      <pair l="cyrOmacron" r="afii10037" v="-115"/>
      <pair l="cyrOmacron" r="afii10038" v="25"/>
      <pair l="cyrOmacron" r="afii10039" v="-160"/>
      <pair l="cyrOmacron" r="afii10041" v="-51"/>
      <pair l="cyrOmacron" r="afii10049" v="-102"/>
      <pair l="cyrOmacron" r="afii10069" v="-27"/>
      <pair l="cyrOmacron" r="afii10072" v="25"/>
      <pair l="cyrOmacron" r="cyrAmacron" v="-102"/>
      <pair l="cyrOmacron" r="cyrEldesc" v="-102"/>
      <pair l="cyrYucyrbreve" r="afii10017" v="-78"/>
      <pair l="cyrYucyrbreve" r="afii10021" v="-154"/>
      <pair l="cyrYucyrbreve" r="afii10024" v="-143"/>
      <pair l="cyrYucyrbreve" r="afii10029" v="-102"/>
      <pair l="cyrYucyrbreve" r="afii10032" v="25"/>
      <pair l="cyrYucyrbreve" r="afii10036" v="-51"/>
      <pair l="cyrYucyrbreve" r="afii10039" v="-186"/>
      <pair l="cyrYucyrbreve" r="afii10041" v="-78"/>
      <pair l="cyrYucyrbreve" r="afii10069" v="-51"/>
      <pair l="cyrYucyrbreve" r="afii10072" v="25"/>
      <pair l="cyrYucyrbreve" r="afii10077" v="-27"/>
      <pair l="cyrYucyrbreve" r="cyrAmacron" v="-78"/>
      <pair l="cyrYucyrbreve" r="cyrEldesc" v="-102"/>
      <pair l="cyrYucyrbreve" r="cyrObarcyrbreve" v="25"/>
      <pair l="cyrYucyrbreve" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="cyrYucyrbreve" r="cyrOcyrbreve" v="25"/>
      <pair l="cyrYucyrbreve" r="cyrOdotaccent" v="25"/>
      <pair l="cyrYucyrbreve" r="cyrOmacron" v="25"/>
      <pair l="cyrYumacron" r="afii10017" v="-78"/>
      <pair l="cyrYumacron" r="afii10021" v="-154"/>
      <pair l="cyrYumacron" r="afii10024" v="-143"/>
      <pair l="cyrYumacron" r="afii10029" v="-102"/>
      <pair l="cyrYumacron" r="afii10032" v="25"/>
      <pair l="cyrYumacron" r="afii10036" v="-51"/>
      <pair l="cyrYumacron" r="afii10039" v="-186"/>
      <pair l="cyrYumacron" r="afii10041" v="-78"/>
      <pair l="cyrYumacron" r="afii10069" v="-51"/>
      <pair l="cyrYumacron" r="afii10072" v="25"/>
      <pair l="cyrYumacron" r="afii10077" v="-27"/>
      <pair l="cyrYumacron" r="cyrAmacron" v="-78"/>
      <pair l="cyrYumacron" r="cyrEldesc" v="-102"/>
      <pair l="cyrYumacron" r="cyrObarcyrbreve" v="25"/>
      <pair l="cyrYumacron" r="cyrObardieresiscyrbreve" v="25"/>
      <pair l="cyrYumacron" r="cyrOcyrbreve" v="25"/>
      <pair l="cyrYumacron" r="cyrOdotaccent" v="25"/>
      <pair l="cyrYumacron" r="cyrOmacron" v="25"/>
      <pair l="cyrZecaron" r="afii10021" v="-125"/>
      <pair l="cyrZecaron" r="afii10024" v="-27"/>
      <pair l="cyrZecaron" r="afii10029" v="-90"/>
      <pair l="cyrZecaron" r="afii10037" v="-51"/>
      <pair l="cyrZecaron" r="afii10041" v="-78"/>
      <pair l="cyrZecaron" r="afii10049" v="-78"/>
      <pair l="cyrZecaron" r="afii10069" v="-51"/>
      <pair l="cyrZecaron" r="afii10077" v="-27"/>
      <pair l="cyrZecaron" r="cyrEldesc" v="-90"/>
      <pair l="f" r="quoteright" v="113"/>
      <pair l="one" r="one" v="-113"/>
      <pair l="quotedblbase" r="afii10036" v="-205"/>
      <pair l="quotedblbase" r="afii10041" v="-385"/>
      <pair l="quotedblbase" r="afii10044" v="-205"/>
      <pair l="quotedblbase" r="afii10051" v="-205"/>
      <pair l="quotedblbase" r="afii10060" v="-205"/>
      <pair l="quoteleft" r="quoteleft" v="-152"/>
      <pair l="quoteright" r="quoteright" v="-152"/>
      <pair l="quoteright" r="s" v="-76"/>
      <pair l="quoteright" r="space" v="-152"/>
      <pair l="quotesinglbase" r="afii10036" v="-205"/>
      <pair l="quotesinglbase" r="afii10041" v="-385"/>
      <pair l="quotesinglbase" r="afii10044" v="-205"/>
      <pair l="quotesinglbase" r="afii10051" v="-205"/>
      <pair l="quotesinglbase" r="afii10060" v="-205"/>
      <pair l="r" r="c" v="-37"/>
      <pair l="r" r="comma" v="-188"/>
      <pair l="r" r="e" v="-37"/>
      <pair l="r" r="hyphen" v="-76"/>
      <pair l="r" r="o" v="-37"/>
      <pair l="r" r="period" v="-188"/>
      <pair l="r" r="q" v="-37"/>
      <pair l="r" r="quoteright" v="37"/>
      <pair l="r" r="space" v="-37"/>
      <pair l="space" r="A" v="-113"/>
      <pair l="space" r="T" v="-37"/>
      <pair l="space" r="V" v="-37"/>
      <pair l="space" r="W" v="-37"/>
      <pair l="space" r="Y" v="-76"/>
      <pair l="space" r="uni2206" v="-113"/>
      <pair l="uni2206" r="space" v="-113"/>
      <pair l="v" r="comma" v="-113"/>
      <pair l="v" r="period" v="-113"/>
      <pair l="w" r="comma" v="-113"/>
      <pair l="w" r="period" v="-113"/>
      <pair l="y" r="comma" v="-113"/>
      <pair l="y" r="period" v="-113"/>
    </kernsubtable>
  </kern>

  <name>
    <namerecord nameID="0" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright © 2016 JSC ´RPA RusBITechª. All rights reserved.
    </namerecord>
    <namerecord nameID="1" platformID="1" platEncID="0" langID="0x0" unicode="True">
      PT Astra Serif
    </namerecord>
    <namerecord nameID="2" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Bold
    </namerecord>
    <namerecord nameID="3" platformID="1" platEncID="0" langID="0x0" unicode="True">
      ParaTypeLtd: PT Astra Serif Bold: 2016
    </namerecord>
    <namerecord nameID="4" platformID="1" platEncID="0" langID="0x0" unicode="True">
      PT Astra Serif Bold
    </namerecord>
    <namerecord nameID="5" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Version 1.001
    </namerecord>
    <namerecord nameID="6" platformID="1" platEncID="0" langID="0x0" unicode="True">
      PTAstraSerif-Bold
    </namerecord>
    <namerecord nameID="8" platformID="1" platEncID="0" langID="0x0" unicode="True">
      ParaType Ltd
    </namerecord>
    <namerecord nameID="9" platformID="1" platEncID="0" langID="0x0" unicode="True">
      A.Korolkova, I. Chaeva
    </namerecord>
    <namerecord nameID="10" platformID="1" platEncID="0" langID="0x0" unicode="True">
      PT Astra Serif is a universal type family designed for use together with PT Astra Sans.&#13;
PT Astra Serif coordinates with PT Astra Sans on metrics, proportions, weights and design.&#13;
It consists of 4 styles: regular and bold weights with corresponding italics form a standard computer font family.&#13;
PT Astra font families are targeted to developing all types of documents.&#13;
The fonts were developed and released by ParaType Ltd. in 2016 by the order of JSC ´RPA RusBITechª.
    </namerecord>
    <namerecord nameID="11" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://www.paratype.com
    </namerecord>
    <namerecord nameID="12" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://www.paratype.com/help/designers/
    </namerecord>
    <namerecord nameID="13" platformID="1" platEncID="0" langID="0x0" unicode="True">
      Copyright © 2016, ´RPA RusBITechª, (www.rusbitech.ru), with Reserved Font Name PT Astra Serif.&#13;
This Font Software is licensed under the SIL Open Font License, Version 1.1.&#13;
This license is available with a FAQ at: http://astralinux.ru/ofl.html
    </namerecord>
    <namerecord nameID="14" platformID="1" platEncID="0" langID="0x0" unicode="True">
      http://scripts.sil.org/OFL
    </namerecord>
    <namerecord nameID="18" platformID="1" platEncID="0" langID="0x0" unicode="True">
      PT Astra Serif Bold
    </namerecord>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright © 2016 JSC «RPA RusBITech». All rights reserved.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      PT Astra Serif
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Bold
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      ParaTypeLtd: PT Astra Serif Bold: 2016
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      PT Astra Serif Bold
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.001
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      PTAstraSerif-Bold
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x409">
      ParaType Ltd
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x409">
      A.Korolkova, I. Chaeva
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x409">
      PT Astra Serif is a universal type family designed for use together with PT Astra Sans.&#13;
PT Astra Serif coordinates with PT Astra Sans on metrics, proportions, weights and design.&#13;
It consists of 4 styles: regular and bold weights with corresponding italics form a standard computer font family.&#13;
PT Astra font families are targeted to developing all types of documents.&#13;
The fonts were developed and released by ParaType Ltd. in 2016 by the order of JSC «RPA RusBITech».
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x409">
      http://www.paratype.com
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x409">
      http://www.paratype.com/help/designers/
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      Copyright © 2016, «RPA RusBITech», (www.rusbitech.ru), with Reserved Font Name PT Astra Serif.&#13;
This Font Software is licensed under the SIL Open Font License, Version 1.1.&#13;
This license is available with a FAQ at: http://astralinux.ru/ofl.html
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      http://scripts.sil.org/OFL
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-223"/>
    <underlineThickness value="195"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
      <psName name=".null"/>
      <psName name="macron"/>
      <psName name="periodcentered"/>
      <psName name="Amacron"/>
      <psName name="amacron"/>
      <psName name="Abreve"/>
      <psName name="abreve"/>
      <psName name="Aogonek"/>
      <psName name="aogonek"/>
      <psName name="Ccircumflex"/>
      <psName name="ccircumflex"/>
      <psName name="Dcaron"/>
      <psName name="dcaron"/>
      <psName name="Dcroat"/>
      <psName name="dcroat"/>
      <psName name="Emacron"/>
      <psName name="emacron"/>
      <psName name="Edotaccent"/>
      <psName name="edotaccent"/>
      <psName name="Eogonek"/>
      <psName name="eogonek"/>
      <psName name="Ecaron"/>
      <psName name="ecaron"/>
      <psName name="Gcircumflex"/>
      <psName name="gcircumflex"/>
      <psName name="Gcommaaccent"/>
      <psName name="gcommaaccent"/>
      <psName name="Hcircumflex"/>
      <psName name="hcircumflex"/>
      <psName name="Hbar"/>
      <psName name="hbar"/>
      <psName name="Imacron"/>
      <psName name="imacron"/>
      <psName name="Iogonek"/>
      <psName name="iogonek"/>
      <psName name="Idotaccent"/>
      <psName name="Jcircumflex"/>
      <psName name="jcircumflex"/>
      <psName name="Kcommaaccent"/>
      <psName name="kcommaaccent"/>
      <psName name="Lacute"/>
      <psName name="lacute"/>
      <psName name="Lcommaaccent"/>
      <psName name="lcommaaccent"/>
      <psName name="Lcaron"/>
      <psName name="lcaron"/>
      <psName name="Nacute"/>
      <psName name="nacute"/>
      <psName name="Ncommaaccent"/>
      <psName name="ncommaaccent"/>
      <psName name="Ncaron"/>
      <psName name="ncaron"/>
      <psName name="Omacron"/>
      <psName name="omacron"/>
      <psName name="Ohungarumlaut"/>
      <psName name="ohungarumlaut"/>
      <psName name="Racute"/>
      <psName name="racute"/>
      <psName name="Rcommaaccent"/>
      <psName name="rcommaaccent"/>
      <psName name="Rcaron"/>
      <psName name="rcaron"/>
      <psName name="Sacute"/>
      <psName name="sacute"/>
      <psName name="Scircumflex"/>
      <psName name="scircumflex"/>
      <psName name="Tcedilla"/>
      <psName name="tcedilla"/>
      <psName name="Tcaron"/>
      <psName name="tcaron"/>
      <psName name="Umacron"/>
      <psName name="umacron"/>
      <psName name="Ubreve"/>
      <psName name="ubreve"/>
      <psName name="Uring"/>
      <psName name="uring"/>
      <psName name="Uhungarumlaut"/>
      <psName name="uhungarumlaut"/>
      <psName name="Uogonek"/>
      <psName name="uogonek"/>
      <psName name="Zacute"/>
      <psName name="zacute"/>
      <psName name="Zdotaccent"/>
      <psName name="zdotaccent"/>
      <psName name="longs"/>
      <psName name="uni01F4"/>
      <psName name="uni01F5"/>
      <psName name="Scommaaccent"/>
      <psName name="scommaaccent"/>
      <psName name="Tcommaaccent"/>
      <psName name="tcommaaccent"/>
      <psName name="dotlessj"/>
      <psName name="afii57929"/>
      <psName name="acutecomb"/>
      <psName name="uni2206"/>
      <psName name="uni03BC"/>
      <psName name="afii10023"/>
      <psName name="afii10051"/>
      <psName name="afii10052"/>
      <psName name="afii10053"/>
      <psName name="afii10054"/>
      <psName name="afii10055"/>
      <psName name="afii10056"/>
      <psName name="afii10057"/>
      <psName name="afii10058"/>
      <psName name="afii10059"/>
      <psName name="afii10060"/>
      <psName name="afii10061"/>
      <psName name="afii10062"/>
      <psName name="afii10145"/>
      <psName name="afii10017"/>
      <psName name="afii10018"/>
      <psName name="afii10019"/>
      <psName name="afii10020"/>
      <psName name="afii10021"/>
      <psName name="afii10022"/>
      <psName name="afii10024"/>
      <psName name="afii10025"/>
      <psName name="afii10026"/>
      <psName name="afii10027"/>
      <psName name="afii10028"/>
      <psName name="afii10029"/>
      <psName name="afii10030"/>
      <psName name="afii10031"/>
      <psName name="afii10032"/>
      <psName name="afii10033"/>
      <psName name="afii10034"/>
      <psName name="afii10035"/>
      <psName name="afii10036"/>
      <psName name="afii10037"/>
      <psName name="afii10038"/>
      <psName name="afii10039"/>
      <psName name="afii10040"/>
      <psName name="afii10041"/>
      <psName name="afii10042"/>
      <psName name="afii10043"/>
      <psName name="afii10044"/>
      <psName name="afii10045"/>
      <psName name="afii10046"/>
      <psName name="afii10047"/>
      <psName name="afii10048"/>
      <psName name="afii10049"/>
      <psName name="afii10065"/>
      <psName name="afii10066"/>
      <psName name="afii10067"/>
      <psName name="afii10068"/>
      <psName name="afii10069"/>
      <psName name="afii10070"/>
      <psName name="afii10072"/>
      <psName name="afii10073"/>
      <psName name="afii10074"/>
      <psName name="afii10075"/>
      <psName name="afii10076"/>
      <psName name="afii10077"/>
      <psName name="afii10078"/>
      <psName name="afii10079"/>
      <psName name="afii10080"/>
      <psName name="afii10081"/>
      <psName name="afii10082"/>
      <psName name="afii10083"/>
      <psName name="afii10084"/>
      <psName name="afii10085"/>
      <psName name="afii10086"/>
      <psName name="afii10087"/>
      <psName name="afii10088"/>
      <psName name="afii10089"/>
      <psName name="afii10090"/>
      <psName name="afii10091"/>
      <psName name="afii10092"/>
      <psName name="afii10093"/>
      <psName name="afii10094"/>
      <psName name="afii10095"/>
      <psName name="afii10096"/>
      <psName name="afii10097"/>
      <psName name="afii10071"/>
      <psName name="afii10099"/>
      <psName name="afii10100"/>
      <psName name="afii10101"/>
      <psName name="afii10102"/>
      <psName name="afii10103"/>
      <psName name="afii10104"/>
      <psName name="afii10105"/>
      <psName name="afii10106"/>
      <psName name="afii10107"/>
      <psName name="afii10108"/>
      <psName name="afii10109"/>
      <psName name="afii10110"/>
      <psName name="afii10193"/>
      <psName name="afii10146"/>
      <psName name="afii10194"/>
      <psName name="afii10147"/>
      <psName name="afii10195"/>
      <psName name="afii10148"/>
      <psName name="afii10196"/>
      <psName name="uni048A"/>
      <psName name="uni048B"/>
      <psName name="uni048C"/>
      <psName name="uni048D"/>
      <psName name="cyrErcrossed"/>
      <psName name="cyrercrossed"/>
      <psName name="afii10050"/>
      <psName name="afii10098"/>
      <psName name="cyrGebar"/>
      <psName name="cyrgebar"/>
      <psName name="cyrGehook"/>
      <psName name="cyrgehook"/>
      <psName name="cyrZhedesc"/>
      <psName name="cyrzhedesc"/>
      <psName name="cyrZetail"/>
      <psName name="cyrzetail"/>
      <psName name="cyrKadesc"/>
      <psName name="cyrkadesc"/>
      <psName name="cyrKavertbar"/>
      <psName name="cyrkavertbar"/>
      <psName name="cyrKabar"/>
      <psName name="cyrkabar"/>
      <psName name="cyrKaback"/>
      <psName name="cyrkaback"/>
      <psName name="cyrEndesc"/>
      <psName name="cyrendesc"/>
      <psName name="cyrEnGe"/>
      <psName name="cyrenge"/>
      <psName name="cyrPehook"/>
      <psName name="cyrpehook"/>
      <psName name="cyrOhook"/>
      <psName name="cyrohook"/>
      <psName name="cyrEstail"/>
      <psName name="cyrestail"/>
      <psName name="cyrTedesc"/>
      <psName name="cyrtedesc"/>
      <psName name="cyrstraightU"/>
      <psName name="cyrstraightu"/>
      <psName name="cyrstraightUbar"/>
      <psName name="cyrstraightubar"/>
      <psName name="cyrHadesc"/>
      <psName name="cyrhadesc"/>
      <psName name="cyrTeTse"/>
      <psName name="cyrtetse"/>
      <psName name="cyrChedesc"/>
      <psName name="cyrchedesc"/>
      <psName name="cyrChevertbar"/>
      <psName name="cyrchevertbar"/>
      <psName name="cyrH"/>
      <psName name="cyrh"/>
      <psName name="cyrIehook"/>
      <psName name="cyriehook"/>
      <psName name="cyrIehookogonek"/>
      <psName name="cyriehookogonek"/>
      <psName name="cyrI"/>
      <psName name="cyrKahook"/>
      <psName name="cyrkahook"/>
      <psName name="cyrEltail"/>
      <psName name="cyreltail"/>
      <psName name="cyrEnhook"/>
      <psName name="cyrenhook"/>
      <psName name="cyrEntail"/>
      <psName name="cyrentail"/>
      <psName name="cyrChedescleft"/>
      <psName name="cyrchedescleft"/>
      <psName name="cyrEmtail"/>
      <psName name="cyremtail"/>
      <psName name="uni04CF"/>
      <psName name="cyrAcyrbreve"/>
      <psName name="cyracyrbreve"/>
      <psName name="cyrAdieresis"/>
      <psName name="cyradieresis"/>
      <psName name="cyrAE"/>
      <psName name="cyrae"/>
      <psName name="cyrIecyrbreve"/>
      <psName name="cyriecyrbreve"/>
      <psName name="cyrinvE"/>
      <psName name="cyrinve"/>
      <psName name="cyrinvEdieresis"/>
      <psName name="cyrinvedieresis"/>
      <psName name="cyrZhedieresis"/>
      <psName name="cyrzhedieresis"/>
      <psName name="cyrZedieresis"/>
      <psName name="cyrzedieresis"/>
      <psName name="cyrDze"/>
      <psName name="cyrdze"/>
      <psName name="cyrImacron"/>
      <psName name="cyrimacron"/>
      <psName name="cyrIdieresis"/>
      <psName name="cyridieresis"/>
      <psName name="cyrOdieresis"/>
      <psName name="cyrodieresis"/>
      <psName name="cyrObar"/>
      <psName name="cyrobar"/>
      <psName name="cyrObardieresis"/>
      <psName name="cyrobardieresis"/>
      <psName name="cyrEdieresis"/>
      <psName name="cyredieresis"/>
      <psName name="cyrUmacron"/>
      <psName name="cyrumacron"/>
      <psName name="cyrUdieresis"/>
      <psName name="cyrudieresis"/>
      <psName name="cyrUdblacute"/>
      <psName name="cyrudblacute"/>
      <psName name="cyrChedieresis"/>
      <psName name="cyrchedieresis"/>
      <psName name="uni04F6"/>
      <psName name="uni04F7"/>
      <psName name="cyrYerudieresis"/>
      <psName name="cyryerudieresis"/>
      <psName name="cyrHahook"/>
      <psName name="cyrhahook"/>
      <psName name="cyrEpsilon"/>
      <psName name="cyrepsilon"/>
      <psName name="uni0512"/>
      <psName name="uni0513"/>
      <psName name="uni051C"/>
      <psName name="uni051D"/>
      <psName name="uni0524"/>
      <psName name="uni0525"/>
      <psName name="uni0526"/>
      <psName name="uni0527"/>
      <psName name="cyrEldesc"/>
      <psName name="cyreldesc"/>
      <psName name="uni1E30"/>
      <psName name="uni1E31"/>
      <psName name="Macute"/>
      <psName name="macute"/>
      <psName name="uni1E54"/>
      <psName name="uni1E55"/>
      <psName name="Germandbls"/>
      <psName name="uni2011"/>
      <psName name="oneinferior"/>
      <psName name="twoinferior"/>
      <psName name="threeinferior"/>
      <psName name="fourinferior"/>
      <psName name="Euro"/>
      <psName name="uni20B4"/>
      <psName name="uni20BD"/>
      <psName name="afii61289"/>
      <psName name="afii61352"/>
      <psName name="uni2126"/>
      <psName name="estimated"/>
      <psName name="Delta"/>
      <psName name="division"/>
      <psName name="Hdesc"/>
      <psName name="hdesc"/>
      <psName name="Accent"/>
      <psName name="Breve"/>
      <psName name="Cedilla"/>
      <psName name="Circumflex"/>
      <psName name="Commaaccent"/>
      <psName name="Apostrophe"/>
      <psName name="Dotaccent"/>
      <psName name="Ring"/>
      <psName name="Tilde"/>
      <psName name="Ogonek"/>
      <psName name="Bacute"/>
      <psName name="bacute"/>
      <psName name="Facute"/>
      <psName name="facute"/>
      <psName name="cyrHcrossed"/>
      <psName name="cyrhcrossed"/>
      <psName name="cyrChehook"/>
      <psName name="cyrchehook"/>
      <psName name="cyrUacute"/>
      <psName name="cyruacute"/>
      <psName name="cyrEdotaccent"/>
      <psName name="cyredotaccent"/>
      <psName name="cyrZetail.alt"/>
      <psName name="cyrzetail.alt"/>
      <psName name="cyrEstail.alt02"/>
      <psName name="cyrestail.alt02"/>
      <psName name="cyrAmacron"/>
      <psName name="cyramacron"/>
      <psName name="cyrIemacron"/>
      <psName name="cyriemacron"/>
      <psName name="cyrIedieresismacron"/>
      <psName name="cyriedieresismacron"/>
      <psName name="cyrIedieresiscyrbreve"/>
      <psName name="cyriedieresiscyrbreve"/>
      <psName name="cyrZecaron"/>
      <psName name="cyrzecaron"/>
      <psName name="cyrOmacron"/>
      <psName name="cyromacron"/>
      <psName name="cyrOcyrbreve"/>
      <psName name="cyrocyrbreve"/>
      <psName name="cyrObarcyrbreve"/>
      <psName name="cyrobarcyrbreve"/>
      <psName name="cyrObardieresiscyrbreve"/>
      <psName name="cyrobardieresiscyrbreve"/>
      <psName name="cyrYerumacron"/>
      <psName name="cyryerumacron"/>
      <psName name="cyrEmacron"/>
      <psName name="cyremacron"/>
      <psName name="cyrEcyrbreve"/>
      <psName name="cyrecyrbreve"/>
      <psName name="afii10053dieresis"/>
      <psName name="afii10101dieresis"/>
      <psName name="cyrYamacron"/>
      <psName name="cyryamacron"/>
      <psName name="cyrYacyrbreve"/>
      <psName name="cyryacyrbreve"/>
      <psName name="cyrYumacron"/>
      <psName name="cyryumacron"/>
      <psName name="cyrYucyrbreve"/>
      <psName name="cyryucyrbreve"/>
      <psName name="afii10027hook"/>
      <psName name="afii10075hook"/>
      <psName name="cyrOdotaccent"/>
      <psName name="cyrodotaccent"/>
      <psName name="cyrYerucyrbreve"/>
      <psName name="cyryerucyrbreve"/>
      <psName name="cyrEpsilondieresis"/>
      <psName name="cyrepsilondieresis"/>
      <psName name="afii10055.alt"/>
      <psName name="afii10103.alt"/>
      <psName name="cyrGebar.alt"/>
      <psName name="cyrgebar.alt"/>
      <psName name="cyrEstail.alt"/>
      <psName name="cyrestail.alt"/>
      <psName name="Dacute"/>
      <psName name="dacute"/>
      <psName name="Hacute"/>
      <psName name="hacute"/>
      <psName name="Lacutecarel"/>
      <psName name="lacutecarel"/>
      <psName name="Tacute"/>
      <psName name="tacute"/>
      <psName name="Vacute"/>
      <psName name="vacute"/>
      <psName name="Ezhcarel"/>
      <psName name="ezhcarel"/>
      <psName name="Ezhcarelcaron"/>
      <psName name="ezhcarelcaron"/>
      <psName name="quoteleftsmall"/>
      <psName name="quoterightsmall"/>
      <psName name="quotedblleftsmall"/>
      <psName name="quotedblrightsmall"/>
      <psName name="quotesinglesmall"/>
      <psName name="quotedblsmall"/>
      <psName name="one.numerator"/>
      <psName name="commaaccent"/>
      <psName name="Acute"/>
      <psName name="Caron"/>
      <psName name="Dieresis"/>
      <psName name="Grave"/>
      <psName name="Hungarumlaut"/>
      <psName name="Macron"/>
      <psName name="cyrBreve"/>
      <psName name="cyrbreve"/>
      <psName name="uniFEFF"/>
      <psName name="DieresisCyrBreve"/>
      <psName name="caron.l"/>
      <psName name="caron.L"/>
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="8" rangeGaspBehavior="2"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <GPOS>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=3 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="0"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="1">
        <ScriptTag value="cyrl"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="1"/>
          </DefaultLangSys>
          <!-- LangSysCount=2 -->
          <LangSysRecord index="0">
            <LangSysTag value="BSH "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="2"/>
            </LangSys>
          </LangSysRecord>
          <LangSysRecord index="1">
            <LangSysTag value="CHU "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="3"/>
            </LangSys>
          </LangSysRecord>
        </Script>
      </ScriptRecord>
      <ScriptRecord index="2">
        <ScriptTag value="latn"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="4"/>
          </DefaultLangSys>
          <!-- LangSysCount=4 -->
          <LangSysRecord index="0">
            <LangSysTag value="AZE "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="5"/>
            </LangSys>
          </LangSysRecord>
          <LangSysRecord index="1">
            <LangSysTag value="MOL "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="6"/>
            </LangSys>
          </LangSysRecord>
          <LangSysRecord index="2">
            <LangSysTag value="ROM "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="7"/>
            </LangSys>
          </LangSysRecord>
          <LangSysRecord index="3">
            <LangSysTag value="TRK "/>
            <LangSys>
              <ReqFeatureIndex value="65535"/>
              <!-- FeatureCount=1 -->
              <FeatureIndex index="0" value="8"/>
            </LangSys>
          </LangSysRecord>
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=9 -->
      <FeatureRecord index="0">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="1">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="2">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="3">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="4">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="5">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="6">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="7">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="8">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=1 -->
      <Lookup index="0">
        <LookupType value="2"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <PairPos index="0" Format="1">
          <Coverage Format="1">
            <Glyph value="space"/>
            <Glyph value="one"/>
            <Glyph value="A"/>
            <Glyph value="F"/>
            <Glyph value="L"/>
            <Glyph value="P"/>
            <Glyph value="R"/>
            <Glyph value="T"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="Y"/>
            <Glyph value="f"/>
            <Glyph value="r"/>
            <Glyph value="v"/>
            <Glyph value="w"/>
            <Glyph value="y"/>
            <Glyph value="uni2206"/>
            <Glyph value="afii10052"/>
            <Glyph value="afii10058"/>
            <Glyph value="afii10059"/>
            <Glyph value="afii10017"/>
            <Glyph value="afii10018"/>
            <Glyph value="afii10019"/>
            <Glyph value="afii10020"/>
            <Glyph value="afii10021"/>
            <Glyph value="afii10022"/>
            <Glyph value="afii10024"/>
            <Glyph value="afii10025"/>
            <Glyph value="afii10028"/>
            <Glyph value="afii10029"/>
            <Glyph value="afii10030"/>
            <Glyph value="afii10032"/>
            <Glyph value="afii10034"/>
            <Glyph value="afii10035"/>
            <Glyph value="afii10036"/>
            <Glyph value="afii10037"/>
            <Glyph value="afii10038"/>
            <Glyph value="afii10039"/>
            <Glyph value="afii10040"/>
            <Glyph value="afii10043"/>
            <Glyph value="afii10044"/>
            <Glyph value="afii10046"/>
            <Glyph value="afii10047"/>
            <Glyph value="afii10048"/>
            <Glyph value="afii10065"/>
            <Glyph value="afii10066"/>
            <Glyph value="afii10067"/>
            <Glyph value="afii10068"/>
            <Glyph value="afii10069"/>
            <Glyph value="afii10070"/>
            <Glyph value="afii10072"/>
            <Glyph value="afii10073"/>
            <Glyph value="afii10076"/>
            <Glyph value="afii10078"/>
            <Glyph value="afii10080"/>
            <Glyph value="afii10082"/>
            <Glyph value="afii10083"/>
            <Glyph value="afii10084"/>
            <Glyph value="afii10085"/>
            <Glyph value="afii10086"/>
            <Glyph value="afii10087"/>
            <Glyph value="afii10088"/>
            <Glyph value="afii10094"/>
            <Glyph value="afii10095"/>
            <Glyph value="afii10096"/>
            <Glyph value="afii10110"/>
            <Glyph value="afii10050"/>
            <Glyph value="cyrEldesc"/>
            <Glyph value="quoteleft"/>
            <Glyph value="quoteright"/>
            <Glyph value="quotesinglbase"/>
            <Glyph value="quotedblbase"/>
            <Glyph value="cyrAmacron"/>
            <Glyph value="cyrIemacron"/>
            <Glyph value="cyrIedieresismacron"/>
            <Glyph value="cyrIedieresiscyrbreve"/>
            <Glyph value="cyrZecaron"/>
            <Glyph value="cyrOmacron"/>
            <Glyph value="cyrOcyrbreve"/>
            <Glyph value="cyrObarcyrbreve"/>
            <Glyph value="cyrObardieresiscyrbreve"/>
            <Glyph value="cyrEmacron"/>
            <Glyph value="cyrEcyrbreve"/>
            <Glyph value="cyrYumacron"/>
            <Glyph value="cyrYucyrbreve"/>
            <Glyph value="cyrOdotaccent"/>
            <Glyph value="Ezhcarelcaron"/>
          </Coverage>
          <ValueFormat1 value="4"/>
          <ValueFormat2 value="0"/>
          <!-- PairSetCount=87 -->
          <PairSet index="0">
            <!-- PairValueCount=6 -->
            <PairValueRecord index="0">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="T"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="V"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="W"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Y"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="uni2206"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="1">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="one"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="2">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="T"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="V"/>
              <Value1 XAdvance="-264"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="W"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Y"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="v"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="w"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="3">
            <!-- PairValueCount=4 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="4">
            <!-- PairValueCount=7 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="T"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="V"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="W"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Y"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="5">
            <!-- PairValueCount=4 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="6">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="T"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="V"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="W"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="Y"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="7">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="hyphen"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="O"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="a"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="c"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="e"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="i"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="o"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="r"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="s"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="u"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="w"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="8">
            <!-- PairValueCount=15 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-264"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="hyphen"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-264"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-264"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="O"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="a"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="e"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="i"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="o"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="r"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="u"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="9">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="hyphen"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="a"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="e"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="i"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="o"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="r"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="u"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="y"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="10">
            <!-- PairValueCount=15 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="hyphen"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="A"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="a"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="e"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="i"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="o"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="p"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="q"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="u"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="v"/>
              <Value1 XAdvance="-227"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="11">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="12">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="hyphen"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-188"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="c"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="e"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="o"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="q"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="37"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="13">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="14">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="15">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="16">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-113"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="17">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-283"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-283"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="emdash"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="18">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="19">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="20">
            <!-- PairValueCount=27 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10033"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-311"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="21">
            <!-- PairValueCount=23 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-31"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-68"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="22">
            <!-- PairValueCount=16 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-166"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-109"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="23">
            <!-- PairValueCount=37 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-223"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-309"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10030"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10067"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-156"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10074"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="afii10079"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="afii10082"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="afii10093"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="afii10094"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="afii10096"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="27">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-309"/>
            </PairValueRecord>
            <PairValueRecord index="28">
              <SecondGlyph value="emdash"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="29">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-223"/>
            </PairValueRecord>
            <PairValueRecord index="30">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="31">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="32">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="33">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="34">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="35">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="36">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="24">
            <!-- PairValueCount=10 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="25">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="26">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-35"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-29"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-20"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-156"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="27">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-125"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="28">
            <!-- PairValueCount=21 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="29">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="30">
            <!-- PairValueCount=6 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="31">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="32">
            <!-- PairValueCount=32 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-256"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-256"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="76"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="76"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-262"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-219"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-72"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-307"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10030"/>
              <Value1 XAdvance="-39"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-35"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-109"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-307"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-262"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="27">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="28">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="29">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="30">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="31">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="33">
            <!-- PairValueCount=16 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="34">
            <!-- PairValueCount=36 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10030"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-45"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10067"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10074"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10076"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-92"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="afii10081"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="afii10082"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="afii10091"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="afii10093"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="afii10094"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="27">
              <SecondGlyph value="afii10096"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="28">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="29">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="30">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="31">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="32">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="33">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="34">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="35">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="35">
            <!-- PairValueCount=49 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-334"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-334"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-391"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-207"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-270"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10067"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10068"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-197"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-221"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="afii10074"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="afii10075"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="afii10076"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="afii10079"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="27">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-221"/>
            </PairValueRecord>
            <PairValueRecord index="28">
              <SecondGlyph value="afii10081"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="29">
              <SecondGlyph value="afii10082"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="30">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-221"/>
            </PairValueRecord>
            <PairValueRecord index="31">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="32">
              <SecondGlyph value="afii10088"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="33">
              <SecondGlyph value="afii10090"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="34">
              <SecondGlyph value="afii10091"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="35">
              <SecondGlyph value="afii10096"/>
              <Value1 XAdvance="-168"/>
            </PairValueRecord>
            <PairValueRecord index="36">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-197"/>
            </PairValueRecord>
            <PairValueRecord index="37">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-270"/>
            </PairValueRecord>
            <PairValueRecord index="38">
              <SecondGlyph value="emdash"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="39">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-391"/>
            </PairValueRecord>
            <PairValueRecord index="40">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="41">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="42">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="43">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="44">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="45">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="46">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="47">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="48">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="36">
            <!-- PairValueCount=16 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-156"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="37">
            <!-- PairValueCount=16 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-143"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-63"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="38">
            <!-- PairValueCount=6 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="39">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="40">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-123"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="41">
            <!-- PairValueCount=25 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-88"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-150"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-82"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10030"/>
              <Value1 XAdvance="-82"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-147"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-229"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-109"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-82"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-88"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="42">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-172"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="10"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-150"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="43">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-143"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-186"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="44">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="18"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10081"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-82"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="45">
            <!-- PairValueCount=11 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10092"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="46">
            <!-- PairValueCount=13 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-59"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-35"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-70"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10092"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="47">
            <!-- PairValueCount=8 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-231"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="48">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="49">
            <!-- PairValueCount=6 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="50">
            <!-- PairValueCount=7 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10092"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="51">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-29"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-43"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10092"/>
              <Value1 XAdvance="-35"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="52">
            <!-- PairValueCount=11 -->
            <PairValueRecord index="0">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-31"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-29"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-80"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="53">
            <!-- PairValueCount=3 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="54">
            <!-- PairValueCount=11 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10067"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-59"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-39"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-53"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-39"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="55">
            <!-- PairValueCount=7 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-31"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="56">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-41"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="57">
            <!-- PairValueCount=13 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10082"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="58">
            <!-- PairValueCount=16 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="51"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-63"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-63"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="59">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-55"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="60">
            <!-- PairValueCount=12 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-59"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10092"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10095"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="61">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10073"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="62">
            <!-- PairValueCount=2 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-156"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="63">
            <!-- PairValueCount=7 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-106"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-37"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-18"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-80"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10097"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="64">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-117"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10078"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-12"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10087"/>
              <Value1 XAdvance="-80"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10089"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="65">
            <!-- PairValueCount=3 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="66">
            <!-- PairValueCount=7 -->
            <PairValueRecord index="0">
              <SecondGlyph value="comma"/>
              <Value1 XAdvance="-203"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="period"/>
              <Value1 XAdvance="-203"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="colon"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="semicolon"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="guillemotleft"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="guillemotright"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="emdash"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="67">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-14"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="68">
            <!-- PairValueCount=1 -->
            <PairValueRecord index="0">
              <SecondGlyph value="quoteleft"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="69">
            <!-- PairValueCount=3 -->
            <PairValueRecord index="0">
              <SecondGlyph value="space"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="s"/>
              <Value1 XAdvance="-76"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-152"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="70">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10051"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10060"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-385"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="71">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10051"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10060"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-385"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10044"/>
              <Value1 XAdvance="-205"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="72">
            <!-- PairValueCount=27 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10033"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-311"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10047"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10065"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10066"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10070"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="afii10080"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="afii10083"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="afii10084"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="afii10085"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="afii10086"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="quoteright"/>
              <Value1 XAdvance="-180"/>
            </PairValueRecord>
            <PairValueRecord index="18">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="19">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="20">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="21">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="22">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="23">
              <SecondGlyph value="cyrEmacron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="24">
              <SecondGlyph value="cyrEcyrbreve"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="25">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="26">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="73">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="74">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="75">
            <!-- PairValueCount=5 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="76">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-125"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="77">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="78">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="79">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="80">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="81">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-172"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="10"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-150"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="82">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-172"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10025"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="10"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-104"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-150"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-129"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrZecaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="Ezhcarelcaron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="83">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-143"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-186"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="84">
            <!-- PairValueCount=18 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-154"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-143"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10032"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10036"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-186"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrOmacron"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="14">
              <SecondGlyph value="cyrOcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="15">
              <SecondGlyph value="cyrObarcyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="16">
              <SecondGlyph value="cyrObardieresiscyrbreve"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="17">
              <SecondGlyph value="cyrOdotaccent"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="85">
            <!-- PairValueCount=14 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10017"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10035"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-115"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10038"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10039"/>
              <Value1 XAdvance="-160"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="9">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="10">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="11">
              <SecondGlyph value="afii10072"/>
              <Value1 XAdvance="25"/>
            </PairValueRecord>
            <PairValueRecord index="12">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
            <PairValueRecord index="13">
              <SecondGlyph value="cyrAmacron"/>
              <Value1 XAdvance="-102"/>
            </PairValueRecord>
          </PairSet>
          <PairSet index="86">
            <!-- PairValueCount=9 -->
            <PairValueRecord index="0">
              <SecondGlyph value="afii10021"/>
              <Value1 XAdvance="-125"/>
            </PairValueRecord>
            <PairValueRecord index="1">
              <SecondGlyph value="afii10024"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="2">
              <SecondGlyph value="afii10029"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
            <PairValueRecord index="3">
              <SecondGlyph value="afii10037"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="4">
              <SecondGlyph value="afii10041"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="5">
              <SecondGlyph value="afii10049"/>
              <Value1 XAdvance="-78"/>
            </PairValueRecord>
            <PairValueRecord index="6">
              <SecondGlyph value="afii10069"/>
              <Value1 XAdvance="-51"/>
            </PairValueRecord>
            <PairValueRecord index="7">
              <SecondGlyph value="afii10077"/>
              <Value1 XAdvance="-27"/>
            </PairValueRecord>
            <PairValueRecord index="8">
              <SecondGlyph value="cyrEldesc"/>
              <Value1 XAdvance="-90"/>
            </PairValueRecord>
          </PairSet>
        </PairPos>
      </Lookup>
    </LookupList>
  </GPOS>

</ttFont>
